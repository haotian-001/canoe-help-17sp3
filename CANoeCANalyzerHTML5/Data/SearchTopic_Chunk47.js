define({"3129":{y:0,u:"../Content/Topics/CAPLFunctions/Media/Properties/CAPLfunctionPalette.htm",l:-1,t:"Palette",i:3.21571136471415E-05,a:"CAPL Functions  »  Media API  »  Properties  » Palette Palette   Property Palette Description Contains the palette entries for a video media type. Use this attribute for palettized video formats, such as RGB 8. Data Type dword Remarks The property data is an array of PaletteEntry unions. ..."},"3130":{y:0,u:"../Content/Topics/CANoeCANalyzer/Car2x/protocols/ASN1.htm",l:-1,t:"Protocol Description Language ASN.1 (Car2x)",i:0.000201844475440419,a:"Protocol Overview  » Protocol Description Language ASN.1 Protocol Description Language ASN.1   Protocol Information »ASN.1  is a standardized description language to define the fields of a protocol and the data description of Car2x application messages. The definition is done in an ASN.1 module. ..."},"3131":{y:0,u:"../Content/Topics/CAPLFunctions/SignalAccess/CAPLfunctionGetSignalDescriptionForValue.htm",l:-1,t:"getSignalDescriptionForValue",i:3.85310487122572E-05,a:"CAPL Functions  »  Signal Access  » getSignalDescriptionForValue getSignalDescriptionForValue   Function Syntax long getSignalDescriptionForValue(Signal  signal, int64 rawValue, char buffer[], long bufferSize); // form 1 long getSignalDescriptionForValue(char signalNamel[], int64 rawValue, char ..."},"3132":{y:0,u:"../Content/Topics/CAPLFunctions/SmartCharging/Functions/CAPLfunctionSCCCreatePreChargeResIso.htm",l:-1,t:"SCC_CreatePreChargeRes_ISO",i:6.24395493115898E-05,a:"CAPL Functions  »  Smart Charging  »  SCC Modeling Libraries (Simulation Setup)  »  V2G Test Functions  »  Shared Functions  » SCC_CreatePreChargeRes_ISO SCC_CreatePreChargeRes_ISO   Function Syntax long SCC_CreatePreChargeRes_ISO ( byte \nSessionID[], char ResponseCode[], long \nNotificationMaxDelay, ..."},"3133":{y:0,u:"../Content/Topics/CAPLFunctions/SmartCharging/Callbacks/CAPLfunctionSCCSessionSetupRes.htm",l:-1,t:"SCC_SessionSetupRes",i:6.24395493115898E-05,a:"CAPL Functions  »  Smart Charging  »  SCC Modeling Libraries (Simulation Setup)  »  EV Callback Functions  » SCC_SessionSetupRes SCC_SessionSetupRes   Function Syntax void SCC_SessionSetupRes ( byte SessionID[], \n\nlong ResponseCode, char EVSEID[] ) Description  The callback is called as soon as a ..."},"3134":{y:0,u:"../Content/Topics/CANoeCANalyzer/J1939/blocks/j1939filter/j1939filterPG/j1939FilterPG.htm",l:-1,t:"PG-Filter (J1939)",i:9.14106453081282E-05,a:"J1939  »  J1939 Filter  » PG-Filter PG-Filter   On this page you can  define  filter for Parameter Group numbers (PGNs) and for PGN ranges. You can select PGNs from the database or define them freely. You can set further restriction for the filters by using  additional settings . On the following ..."},"3135":{y:0,u:"../Content/Topics/CANoeCANalyzer/Windows/Write/WriteWindowToolbar.htm",l:-1,t:"Write Window: Toolbar",i:0.000152414616602629,a:"Write Window  » Toolbar Write Window: Toolbar   The toolbar provides the following symbols for controlling the  Write Window : The functions are as follows: Context Menu   •   Keyboard Operations"},"3136":{y:0,u:"../Content/Topics/CAPLFunctions/CommunicationObjects/Methods/CAPLfunctionGetConsumer.htm",l:-1,t:"GetConsumer",i:0.000176047192605756,a:"CAPL Functions  »  Communication Objects  » GetConsumer GetConsumer   Method  Syntax COParticipant  consumedServiceRef ::GetConsumer(); COParticipant  consumedEventRef ::GetConsumer(); COParticipant  consumedFieldRef ::GetConsumer(); COParticipant  consumedMethodRef ::GetConsumer(); COParticipant  ..."},"3137":{y:0,u:"../Content/Topics/CANoeCANalyzer/SmartCharging/SCProcedures/SCConfigurationChargePointSCCNodes.htm",l:-1,t:"Configuration of Charge Point SCC Nodes (Smart Charging)",i:9.63306001179048E-05,a:"SmartCharging  »  Procedures  » Configuration of Charge Point SCC Nodes Configuration of Charge Point SCC Nodes   General information An SCC entity is simulated by assigning one of the modeling libraries to a network node of an Ethernet network. The node then reacts automatically to incoming SCC ..."},"3138":{y:0,u:"../Content/Topics/COMInterface/Objects/COMObjectBasicModule.htm",l:-1,t:"BasicModule (COM Object)",i:3.93757532323208E-05,a:" CANoe  »  COM Interface  »  Objects  » BasicModule BasicModule Application  »  Configuration  »  VTSystem  »  AvailableModules  »  BasicModules  » BasicModule Description The BasicModule object represents a basic VT System module available in CANoe. Properties Methods — Events — Example ..."},"3139":{y:0,u:"../Content/Topics/COMInterface/Objects/Deprecated/COMObjectMcDatabaseSignals.htm",l:-1,t:"McDatabaseSignals (COM Object)",i:3.14939511561583E-05,a:" CANoe  »  COM Interface  »  Objects  » McDatabaseSignals McDatabaseSignals Application  »  Configuration  »  GeneralSetup  »  CCPSetup  »  McECUs  »  McECU  » McDatabaseSignals Application  »  Configuration  »  GeneralSetup  »  XCPSetup  »  McECUs  »  McECU  » McDatabaseSignals Description The ..."},"3140":{y:0,u:"../Content/Topics/COMInterface/Objects/COMObjectWrite.htm",l:-1,t:"Write (COM Object)",i:0.000165274020160079,a:" CANoe  »  COM Interface  »  Objects  » Write Write Application  »  UI  » Write Description The Write object represents the  Write Window  in CANoe; it is part of the user interface. Properties Methods Events — Example Example —  EnableOutputFile method Sample 1 The following examples activate ..."},"3141":{y:0,u:"../Content/Topics/Shared/CAPL/General/ResolveAmbiguitiesIdentifier.htm",l:-1,t:"Resolution of Ambiguous Identifiers for Calling Event Procedures",i:3.36017389305868E-05,a:" CANoe  » Resolution of Ambiguous Identifiers for Calling Event Procedures CAPL Introduction  » Resolution of Ambiguous Identifiers for Calling Event Procedures Resolution of Ambiguous Identifiers for Calling Event Procedures   On this page we consider the resolution of bus events for calling event ..."},"3142":{y:0,u:"../Content/Topics/CAPLFunctions/CAN/Functions/CAPLfunctionStandardFrameRate.htm",l:-1,t:"StandardFrameRate",i:5.61471378251733E-05,a:"CAPL Functions  »  CAN  » StandardFrameRate StandardFrameRate   Function Syntax long StandardFrameRate () Method  Syntax CANx.StandardFrameRate Description Returns the current rate of standard CAN messages on channel x. Valid x \n values: 1…32 Parameters — Return Values Current rate of standard CAN ..."},"3143":{y:0,u:"../Content/Topics/CANoeCANalyzer/General/CANwinNETDiagnostics.htm",l:-1,t:".NET Programming: Diagnostics",i:6.43331873340394E-05,a:".NET Programming  » Diagnostics .NET Programming: Diagnostics   In order to support ECU diagnostics in various applications, the .Net library Vector.Diagnostics was introduced. Since it is part of CANoe, CANape and Indigo, you can  exchange diagnostic procedures between these applications easily. ..."},"3144":{y:0,u:"../Content/Topics/CANoeCANalyzer/Windows/Write/WriteWindowNotifications/47CAN.htm",l:-1,t:"CAN",i:4.08057550655717E-05,a:" CANoe  »  Write Window   »  Notifications  » CAN CAN    "},"3145":{y:0,u:"../Content/Topics/COMInterface/Objects/COMObjectLoggingFilter.htm",l:-1,t:"LoggingFilter (COM Object)",i:5.06719702315482E-05,a:" CANoe  »  COM Interface  »  Objects  » LoggingFilter LoggingFilter Application  »  Configuration  »  MeasurementSetup  »  LoggingCollection  »  Logging  » LoggingFilter Application  »  Configuration  »  StandaloneMode  »  StandaloneLogging  » LoggingFilter Description The LoggingFilter object ..."},"3146":{y:0,u:"../Content/Topics/CAPLFunctions/IP/AUTOSARethIL/Functions/CAPLfunctionAREthReleaseMessage.htm",l:-1,t:"AREthReleaseMessage",i:2.55489577378294E-05,a:"CAPL Functions  »  Ethernet  »  AUTOSAR Eth IL  » AREthReleaseMessage AREthReleaseMessage   Function Syntax long AREthReleaseMessage( dword messageHandle ); Description This function is used to delete a message that was created with  AREthCreateMessage , for example. Parameters Return Values Example ..."},"3147":{y:0,u:"../Content/Topics/CAPLFunctions/Test/Functions/CAPLfunctionChkStartLinWakeupReqLengthViolation.htm",l:-1,t:"ChkStart_LINWakeupReqLengthViolation",i:9.30397501627429E-05,a:"CAPL Functions  »  Test Service Library  »  Checks  » ChkStart_LINWakeupReqLengthViolation ChkStart_LINWakeupReqLengthViolation   Function Syntax dword ChkStart_LINWakeupReqLengthViolation (duration MinLength, duration MaxLength); dword ChkStart_LINWakeupReqLengthViolation (duration MinLength, ..."},"3148":{y:0,u:"../Content/Topics/CLibraryAPI/Functions/CAPLfunctioncclAbstractFieldProviderGetID.htm",l:-1,t:"cclAbstractFieldProviderGetID",i:3.86360090043396E-05,a:" CANoe  »  C Library API  »  Functions  » cclAbstractFieldProviderGetID cclAbstractFieldProviderGetID   Function Syntax cclFieldProviderID cclAbstractFieldProviderGetID(const char* path); Description Returns an abstract binding specific service field provider ID, which can be used for field ..."},"3149":{y:0,u:"../Content/Topics/CAPLFunctions/Scope/Classes/CAPLfunctionsScopeEvent.htm",l:-1,t:"Class: ScopeEvent",i:0.000245282457973154,a:"CAPL Functions  »  Scope  » Class: ScopeEvent Class: ScopeEvent   Methods — Attributes enum ScopeEventType testGetWaitScopeEventData   •   testWaitForScopeEvent"},"3150":{y:0,u:"../Content/Topics/CANoeCANalyzer/Interfaces/MATLAB/CANoeIOLibrary/MATLABioLib.htm",l:-1,t:"CANoe I/O Library (MATLAB Integration)",i:0.000402432748488441,a:"MATLAB Integration Package  » CANoe I/O Library CANoe I/O Library   The CANoe I/O library is a collection of S-Functions blocks. The library provides the following features: Data I/O Trigger sources Event sinks Model execution control CANoe simulation control Calibration using the XCP Protocol ..."},"3151":{y:0,u:"../Content/Topics/CAPLFunctions/ISO11783/ISONodeLayer/Functions/CAPLfunctionIso11783PDDgetlasterrortext.htm",l:-1,t:"Iso11783PDDGetLastErrorText",i:4.89887579938959E-05,a:"CAPL Functions  »  ISO11783  »  ISO11783 Node Layer  » Iso11783PDDGetLastErrorText Iso11783PDDGetLastErrorText   Function Syntax long Iso11783PDDGetLastErrorText( dword bufferSize, \n char buffer[] ); Description This function returns as a string the error description of the function \n of this node ..."},"3152":{y:0,u:"../Content/Topics/CAPLFunctions/ISO11783/ISOInteractionLayer/Functions/CAPLfunctionIso11783ILOPLoad.htm",l:-1,t:"Iso11783IL_OPLoad",i:5.02044532116258E-05,a:"CAPL Functions  »  ISO11783   »  ISO11783 Interaction Layer   » Iso11783IL_OPLoad Iso11783IL_OPLoad   Function Syntax long Iso11783IL_OPLoad( char filename[] ); // form 1 long Iso11783IL_OPLoad( char filename[], char version[] ); // form 2 long Iso11783IL_OPLoad( dbNode implement, char filename[], ..."},"3153":{y:0,u:"../Content/Topics/CAPLFunctions/CAN/Functions/CAPLfunctionStandardRemoteFrameRate.htm",l:-1,t:"StandardRemoteFrameRate",i:5.25169945089089E-05,a:"CAPL Functions  »  CAN  » StandardRemoteFrameRate StandardRemoteFrameRate   Function Syntax long StandardRemoteFrameRate () Method  Syntax CANx.StandardRemoteFrameRate Description Returns the current rate of standard remote CAN frames of channel x. Valid x \n values: 1…32 Parameters — Return Values ..."},"3154":{y:0,u:"../Content/Topics/CAPLFunctions/Diagnostics/Functions/CAPLfunctionDoIPSetVehicleAdapter.htm",l:-1,t:"DoIP_SetVehicleAdapter",i:7.97061794461897E-05,a:"CAPL Functions  »  Diagnostics  » DoIP_SetVehicleAdapter DoIP_SetVehicleAdapter   Function Syntax void DoIP_SetVehicleAdapter( char adapter[]) Description Sets the network interface to be used by the DoIP layer. This function must be called in  on preStart . Parameters Return Values — Example ..."},"3155":{y:0,u:"../Content/Topics/CAPLFunctions/Other/Functions/CAPLfunctionInterfaceStatus.htm",l:-1,t:"InterfaceStatus",i:1.96035070035483E-05,a:"CAPL Functions  »  General  »  Function Overview  » InterfaceStatus InterfaceStatus   Function Syntax void InterfaceStatus(long time, long channel, long status); Description The callback can be inserted in the sections callback function or function. The callback occurs when the status of the ..."},"3156":{y:0,u:"../Content/Topics/CAPLFunctions/ISO11783/ISOInteractionLayerVT/Functions/CAPLfunctionIso11783VTILDeleteAllStoredVersions.htm",l:-1,t:"VTIL_DeleteAllStoredVersions",i:5.57719992083912E-05,a:"CAPL Functions  »  ISO11783  »  Virtual Terminal Interaction Layer (VT IL)   » VTIL_DeleteAllStoredVersions VTIL_DeleteAllStoredVersions   Function Syntax long VTIL_DeleteAllStoredVersions( ); // form 1 long VTIL_DeleteAllStoredVersions(dbNode vt); // form 2 Description Deletes all object pool ..."},"3157":{y:0,u:"../Content/Topics/CAPLFunctions/Car2x/Functions/CAPLfunctionC2xReleasePacket.htm",l:-1,t:"C2xReleasePacket",i:4.92165753588107E-05,a:"CAPL Functions  »  Car2x  » C2xReleasePacket C2xReleasePacket   Function Syntax long C2xReleasePacket( long packet ); Description This function deletes a packet created with  C2xInitPacket . The handle can not be used any longer. Parameters Return Values Example Availability"},"3158":{y:0,u:"../Content/Topics/SampConf/J1587/CANoe/MoreExamples/ParameterMonitorCN.htm",l:-1,t:"Parameter Monitor",i:4.74344525105666E-05,a:"Sample Configurations  »  J1587  » Parameter Monitor Parameter Monitor   This example demonstrates the Parameter Monitor to display and symbolically interpret J1587 parameter and signal values. Desktops This configuration contains the following desktops: Setup The Simulation Setup contains three ..."},"3159":{y:0,u:"../Content/Topics/CAPLFunctions/FlexRay/Functions/CAPLfunctionMessageTimeNS.htm",l:-1,t:"MessageTimeNS (FR)",i:5.39737793360948E-05,a:"CAPL Functions  »  FlexRay  » MessageTimeNS (FR) MessageTimeNS (FR)   Function Syntax float ns = MessageTimeNS( this ); Description This function returns the receive time of the frame or slot in nanoseconds. Parameters Return Values Receive time in nanoseconds since start of message. Example ..."},"3160":{y:0,u:"../Content/Topics/CANoeCANalyzer/Windows/Data/DataWindowKeyboardOperation.htm",l:-1,t:"Keyboard Operation (Data Window)",i:7.54821940210499E-05,a:" CANoe  » … »  Data Window  » Keyboard Operation Keyboard Operation   Copying, cutting and pasting  of symbols  can also be performed with the help of the following Windows-conformant keyboard operations: \u003cCtrl\u003e+\u003cC\u003e for copying, \u003cCtrl\u003e+\u003cX\u003e for cutting, \u003cCtrl\u003e+\u003cV\u003e for pasting. Keyboard operations in ..."},"3161":{y:0,u:"../Content/Topics/CANoeCANalyzer/General/cmn_canoptions.htm",l:-1,t:"Card Options",i:5.72052670308427E-05,a:" CANoe  » Card Options Card Options   It may be necessary to input various options depending on the existing hardware and driver equipment. The last two menu commands of the board context menu are intended for this  purpose. When they are activated the user is presented with dialog windows for ..."},"3162":{y:0,u:"../Content/Topics/CAPLFunctions/J1939/GBT27930InteractionLayer/Functions/CAPLfunctionGBT27930ILResetAllBlockedRxMessages.htm",l:-1,t:"GBT27930IL_ResetAllBlockedRxMessages",i:2.09495897350384E-05,a:"CAPL Functions  »  J1939  »  GB/T 27930 IL  » GBT27930IL_ResetAllBlockedRxMessages GBT27930IL_ResetAllBlockedRxMessages   Function Syntax long GBT27930IL_ResetAllBlockedRxMessages( ); // form 1 long GBT27930IL_ResetAllBlockedRxMessages(dbNode node); // form 2 Description Resets the changes of all  ..."},"3163":{y:0,u:"../Content/Topics/CAPLFunctions/MOST/Functions/CAPLfunctionMOSTParamGetData.htm",l:-1,t:"mostParamGetData",i:0.000109687691514174,a:"CAPL Functions  »  MOST  » mostParamGetData mostParamGetData   Function Syntax long mostParamGetData(mostAmsMessage msg, char paramAdr[], byte buffer[], long buffersize); // form 1 long \n mostParamGetData(mostAmsMessage msg, char paramAdr[], long arrayIndex, byte buffer[], long buffersize); // form ..."},"3164":{y:0,u:"../Content/Topics/CAPLFunctions/Other/Functions/CAPLfunctionIsRunningInStandaloneMode.htm",l:-1,t:"IsRunningInStandaloneMode",i:1.96035070035483E-05,a:"CAPL Functions  »  General  »  Function Overview  » IsRunningInStandaloneMode IsRunningInStandaloneMode   Function Syntax dword IsRunningInStandaloneMode(); Description This function is used to get the information whether the CAPL code is executed in standalone mode. Parameters — Return Values ..."},"3165":{y:0,u:"../Content/Topics/CAPLFunctions/ISO11783/ISOInteractionLayerFS/Functions/CAPLfunctionIso11783FSILResetBlockedTxTpDt.htm",l:-1,t:"FSIL_ResetBlockedTxTpDt",i:7.69929046312068E-05,a:"CAPL Functions  »  ISO11783  »  File Server Interaction Layer (FS IL)  » FSIL_ResetBlockedTxTpDt FSIL_ResetBlockedTxTpDt   Function Syntax long FSIL_ResetBlockedTxTpDt( ); //Form 1 long FSIL_ResetBlockedTxTpDt( dbNode node); //Form 2 Description Resets all DT messages that where blocked with  ..."},"3166":{y:0,u:"../Content/Topics/CAPLFunctions/Test/Functions/CAPLfunctionTestGetWaitPDUsTPIPv6SrcAddr.htm",l:-1,t:"TestGetWaitPDUsTPIPv6SrcAddr",i:0.000115508452534403,a:"CAPL Functions  »  Test Feature Set  » TestGetWaitPDUsTPIPv6SrcAddr TestGetWaitPDUsTPIPv6SrcAddr   Function Syntax long TestGetWaitPDUsTPIPv6SrcAddr(byte IPv6SourceAddress[]); //form 1 long TestGetWaitPDUsTPIPv6SrcAddr(dword explicitJoinIndex, byte IPv6SourceAddress[]); //form 2 Description If a PDU ..."},"3167":{y:0,u:"../Content/Topics/CAPLFunctions/IP/Functions/CAPLfunctionethGetEthernetPort.htm",l:-1,t:"ethGetEthernetPort",i:2.1003717686362E-05,a:"CAPL Functions  »  Ethernet  »  Function Overview  » ethGetEthernetPort ethGetEthernetPort   Function Syntax ethernetPort ethGetEthernetPort(long Channel); Description Gets the Ethernet port for the current simulation node. The channel needs to be specified and can be used for gateway nodes to ..."},"3168":{y:0,u:"../Content/Topics/CAPLFunctions/Test/Functions/CAPLfunctionChkCreateInconsistentTxDLC.htm",l:-1,t:"ChkCreate_InconsistentTxDLC, ChkStart_InconsistentTxDLC",i:5.3667693925905E-05,a:"CAPL Functions  »  Test Service Library  »  Checks  » ChkCreate_InconsistentTxDLC, ChkStart_InconsistentTxDLC ChkCreate_InconsistentTxDLC, ChkStart_InconsistentTxDLC   Function Syntax dword ChkCreate_InconsistentTxDLC(Node aNode, char [] aCallback); dword ChkStart_InconsistentTxDLC(Node aNode, char ..."},"3169":{y:0,u:"../Content/Topics/CANoeCANalyzer/Windows/Trace/TraceWindowFilterISO11783.htm",l:-1,t:"Filter Condition | ISO11783",i:0.000104738410765864,a:" CANoe  » … »  Trace Window  »  Filters  »  Analysis Filters / Sequence Filters  » ISO11783 Filter Condition | ISO11783 Context Menu Path : Add Condition|Ethernet Filter.../ISO11783 Independent of the address the following PGNs are filtered, in the header of the PGN as well as in the data page of an ..."},"3170":{y:0,u:"../Content/Topics/vCDL/Language/vCDLReferences.htm",l:-1,t:"References (vCDL 1.4)",i:6.0198183147334E-05,a:" CANoe  »  vCDL  »  vCDL 1.4  »  Language  » References References   References allow to specify (directed) associations between declarations. The reference consists of an optional list of namespaces separated by :: (same as C++) and the name of the referenced declaration. If a sub-element of a ..."},"3171":{y:0,u:"../Content/Topics/CAPLFunctions/Car2x/Functions/CAPLfunctionC2xResetScenario.htm",l:-1,t:"C2xResetScenario",i:4.83323854682765E-05,a:"CAPL Functions  »  Car2x  » C2xResetScenario C2xResetScenario   Function Syntax long C2xResetScenario() Description If the current scenario is running, it must be stopped via  C2xStopScenario()  function call or by stopping scenario in Scenario Manager window before calling C2xLoadScenario function. ..."},"3172":{y:0,u:"../Content/Topics/CAPLFunctions/CommunicationObjects/Methods/CAPLfunctionGetSender.htm",l:-1,t:"GetSender",i:7.18957921997453E-05,a:"CAPL Functions  »  Communication Objects  » GetSender GetSender   Method  Syntax COParticipant  txSignalRef ::GetSender(); COParticipant  rxSignalRef ::GetSender(); COParticipant  txPDURef ::GetSender(); COParticipant  rxPDURef ::GetSender(); Description Returns the sender participant selected for ..."},"3173":{y:0,u:"../Content/Topics/CAPLFunctions/CANopen/CANopenBasic/Functions/CAPLfunctionsCANopenUploadGetData.htm",l:-1,t:"CANopenUploadGetData",i:5.65358836676032E-05,a:"CAPL Functions  »  CANopen  »  Basic Functions  » CANopenUploadGetData CANopenUploadGetData   Function Syntax void CANopenUploadGetData( char[] buffer, dword bufferSize, dword errCode[] ); //form 1 void CANopenUploadGetData( byte[] buffer, dword bufferSize, dword errCode[] ); //form 2 Description ..."},"3174":{y:0,u:"../Content/Topics/CAPLFunctions/LIN/Functions/CAPLfunctionLINSendHeaderError.htm",l:-1,t:"linSendHeaderError",i:3.89520431734087E-05,a:"CAPL Functions  »  LIN  » linSendHeaderError linSendHeaderError   Function Syntax dword linSendHeaderError(byte syncByte, byte idWithParity, byte StopAfterError); Description This function sends a header with the current sync break, sync delimiter and interbyte space settings and the specified sync ..."},"3175":{y:0,u:"../Content/Topics/CAPLFunctions/TCPIPAPI/EventProcedures/CAPLfunctionTCPIPOnUdpReceiveFrom.htm",l:-1,t:"OnUdpReceiveFrom",i:7.66831029794585E-05,a:"CAPL Functions  »  TCP/IP API  » OnUdpReceiveFrom OnUdpReceiveFrom   Function Syntax void OnUdpReceiveFrom( dword socket, long result, dword address, dword port, char buffer[], dword size); // form 1 void OnUdpReceiveFrom( dword socket, long result, dword address, dword port, byte buffer[], dword ..."},"3176":{y:0,u:"../Content/Topics/vCDL/Language/vCDLSignalGroups.htm",l:-1,t:"Signal Groups (vCDL)",i:5.08577602721154E-05,a:" CANoe  »  vCDL  »  vCDL 1.4  »  Language  » Signal Groups Signal Groups   A Signal Group is a named group of signals defined within a PDU Type which allows to attach e.g. E2E configuration settings to that specific group of signals. A signal group definition is nested in a PDU Type definition by ..."},"3177":{y:0,u:"../Content/Topics/CAPLFunctions/Test/Functions/CAPLfunctionTestSetMsgEvent.htm",l:-1,t:"TestSetMsgEvent",i:0.000345112662952825,a:"CAPL Functions  »  Test Feature Set  » TestSetMsgEvent TestSetMsgEvent   Function Syntax long TestSetMsgEvent (dbMsg aMessage); long TestSetMsgEvent (dword aMessageId); long TestSetMsgEvent (char aMessageName[]); Description Sends the transferred message directly to the bus if the network is active. ..."},"3178":{y:0,u:"../Content/Topics/CANoeCANalyzer/Car2x/asn1/asnPhysicalValuesInTraceWnd.htm",l:-1,t:"Show Physical Values with ASN.1 in Trace Window (Car2x, ASN.1)",i:0.000100062329491498,a:"Car2x  »  Procedures  » Show physical values with ASN.1 in Trace Window Show Physical Values with ASN.1 in Trace Window   The  ASN.1  standard does not allow to describe the physical interpretation of raw values that are transmitted as INTEGER. therefore the  ASN.1 Import Wizard  supports the ..."},"3179":{y:0,u:"../Content/Topics/CAPLFunctions/Other/Functions/CAPLfunctionFilePutString.htm",l:-1,t:"filePutString",i:3.60574464297289E-05,a:"CAPL Functions  »  General  »  Function Overview  » filePutString filePutString   Function Syntax long filePutString (char buff[], long buffsize, dword fileHandle); Method  Syntax (Dynamic) long File::PutString(char buff[], long buffsize); Description This function writes a string in the specified ..."},"3180":{y:0,u:"../Content/Topics/CANoeCANalyzer/J1939/j1939IL/j1939ILUsage.htm",l:-1,t:"Setup a Node",i:5.18640008994333E-05,a:"J1939  »  J1939 Interaction Layer  » Setup a Node Setup a Node   This section shows the steps, which are necessary to use the  J1939 Interaction Layer  with a node in the Simulation Setup. The J1939 IL is implemented as node layer and extends the features of a node. There a more  CAPL functions  ..."},"3181":{y:0,u:"../Content/Topics/CAPLFunctions/Other/Functions/CAPLfunctionGetUserFilePath.htm",l:-1,t:"getUserFilePath",i:0.000113161810169119,a:"CAPL Functions  »  General  »  Function Overview  » getUserFilePath getUserFilePath   Function Syntax long getUserFilePath(char fileName[], char absPath[], long absPathLen); Description Gets the absolute path of a  user file . In case of execution in a distributed environment the absolute user file ..."},"3182":{y:0,u:"../Content/Topics/SampConf/Ethernet/CANoe/PacketBuilder/PacketBuilderCN.htm",l:-1,t:"Packet Builder (Ethernet)",i:7.98246441541502E-05,a:"Sample Configurations  »  Ethernet  » Packet Builder (Ethernet) Packet Builder (Ethernet)   The block is inserted in the Simulation Setup of your CANoe and allows you to configure Ethernet packets and send them. EthernetSystemDemo   •   EthernetStress   •   Chat"},"3183":{y:0,u:"../Content/Topics/CANoeCANalyzer/Debugger/DebuggerVariablesWindow.htm",l:-1,t:"Debugger: Variables",i:7.58900989728252E-05,a:"Debugger  » Variables Debugger: Variables   The Variables area lists all variables contained in the program in a tabular form. In doing so, variables that are valid at the current breakpoint are black, and all others are grayed. Examples of grayed variables are local variables that can be used only ..."},"3184":{y:0,u:"../Content/Topics/CAPLFunctions/Test/Functions/CAPLfunctionTestWaitForScopeAnalyseBitSegments.htm",l:-1,t:"testWaitForScopeAnalyseBitSegments",i:0.000145393446719421,a:"CAPL Functions  »  Scope  » testWaitForScopeAnalyseBitSegments testWaitForScopeAnalyseBitSegments   Function Syntax long testWaitForScopeAnalyseBitSegments(message aMessage, ScopeAnalyseBitSegment bitSegments[], dword noOfSegments, dword referenceVoltagePoint, dword flags, dword msgFieldStart, dword ..."},"3185":{y:0,u:"../Content/Topics/COMInterface/Objects/COMObjectConnectedModule.htm",l:-1,t:"ConnectedModule (COM Object)",i:6.4388641421087E-05,a:" CANoe  »  COM Interface  »  Objects  » ConnectedModule ConnectedModule Application  »  Configuration  »  VTSystem  »  ConnectedModules  » ConnectedModule Description The ConnectedModule object represents a VT System module that is currently connected. Properties Methods — Events — Example Example — ..."},"3186":{y:0,u:"../Content/Topics/CANoeCANalyzer/Diagnostics/BasicDiagnostics/BasicDiagnosticsEditor.htm",l:-1,t:"Basic Diagnostic Editor",i:0.000219526847086786,a:"Diagnostics with CANoe  »  Functional Overview  »  Configuration - Off-Board  » Basic Diagnostic Editor Basic Diagnostic Editor Ribbon :  Diagnostics \u0026 XCP Tab | Basic Diagnostic Basic Diagnostics"},"3187":{y:0,u:"../Content/Topics/CAPLFunctions/IP/SOMEIPIL/Functions/CAPLfunctionOnSomeIpMethodResponse.htm",l:-1,t:"\u003cOnSomeIpMethodResponse\u003e",i:6.87856418415292E-05,a:"CAPL Functions  »  Ethernet  »  SOME/IP IL  » \u003cOnSomeIpMethodResponse\u003e \u003cOnSomeIpMethodResponse\u003e   Function Syntax void \u003cOnSomeIpMethodResponse\u003e(dword methodCallHandle, dword messageResponseHandle ); Description A callback function with this signature must be passed to the CAPL function  ..."},"3188":{y:0,u:"../Content/Topics/CAPLFunctions/Diagnostics/EventProcedures/CAPLfunctionOndiagRequestSent.htm",l:-1,t:"on diagRequestSent",i:9.73642829655673E-05,a:"CAPL Functions  »  Diagnostics  » on diagRequestSent on diagRequestSent   Function Syntax on diagRequestSent Description The procedure is sub-divided into the following events; the first matching event procedure (top-down) is called: Example Example 2 For event handlers, it is also possible to ..."},"3189":{y:0,u:"../Content/Topics/CAPLFunctions/Scope/Functions/CAPLfunctionScopeActivateTrigger.htm",l:-1,t:"scopeActivateTrigger",i:5.93075961833991E-05,a:"CAPL Functions  »  Scope  » scopeActivateTrigger scopeActivateTrigger   Function Syntax long scopeActivateTrigger (); Description Performs Activate Trigger action for  Scope window . This action is equivalent to activating the trigger via the GUI. The completion of this action is reported with an ..."},"3190":{y:0,u:"../Content/Topics/CANoeCANalyzer/FlexRay/FRHowTo/FRHowToHandleOverloadSituations.htm",l:-1,t:"How to handle overload situations? (FlexRay)",i:2.90030814975418E-05,a:"FlexRay »  How to...  » How to handle overload situations? How to handle overload situations?   Overload situations occur, when during measurement some display windows of CANoe are temporarily deactivated at [Stop (measurement)] the information: \"Some events may have been lost during measurement\" is ..."},"3191":{y:0,u:"../Content/Topics/CANoeCANalyzer/Test/TestSequenceInteraction.htm",l:-1,t:"Test Sequence Interaction",i:5.04421390638533E-05,a:"Test »  Test Sequence  » Test Sequence Interaction Test Sequence Interaction   A tester can interact with the test sequence in several ways:  "},"3192":{y:0,u:"../Content/Topics/CANoeCANalyzer/AFDX/windows/afdxIG/afdxIGSendMessages.htm",l:-1,t:"Send AFDX Messages",i:0.000122186407664519,a:"AFDX Interactive Generator  » Send AFDX Messages Send AFDX Messages   The AFDX Interactive Generator can send  messages  that are described in the database. All relevant  database attributes  must be available. Inconsistent messages cannot be added to the Message List. In this case, a related error ..."},"3193":{y:0,u:"../Content/Topics/CAPLFunctions/IP/AVBIL/Functions/CAPLfunctionAvbGetLastError.htm",l:-1,t:"AvbGetLastError",i:9.17867016812718E-05,a:"CAPL Functions  »  Ethernet  »  AVB IL  » AvbGetLastError AvbGetLastError   Function Syntax dword AvbGetLastError( ); Description This function can be used to check whether the last called function of AVB IL has been successfully executed. The call of this function does not reset the saved error. In ..."},"3194":{y:0,u:"../Content/Topics/CAPLFunctions/Diagnostics/Functions/CAPLfunctionDoIPTCPSend.htm",l:-1,t:"DoIP_TCPSend",i:0.000127054596231533,a:"CAPL Functions  »  Diagnostics  » DoIP_TCPSend DoIP_TCPSend   Function Syntax long DoIP_TCPSend(dword payloadType, byte payload[], dword payloadLen); long DoIP_TCPSend(dword protocolID, dword payloadType, byte payload[], dword payloadLen); Description Sends a DoIP PDU with valid layout on the open ..."},});