define({"8090":{y:0,u:"../Content/Topics/CAPLFunctions/TLSAPI/Functions/CAPLfunctiontlsClose.htm",l:-1,t:"tlsClose",i:3.46201202762629E-05,a:"CAPL Functions  »  TLS API  » tlsClose tlsClose   Function Syntax long tlsClose(dword socket, dword closeUnderlyingSocket); Description Closes the given TLS connection. This sends a TLS alert message to the peer node. The underlaying socket will be closed automatically if the parameter ..."},"8091":{y:0,u:"../Content/Topics/CAPLFunctions/A429/Functions/CAPLfunctionA429CheckParity.htm",l:-1,t:"a429CheckParity",i:3.8105639091395E-05,a:"CAPL Functions  »  A429  » a429CheckParity a429CheckParity   Function Syntax dword a429CheckParity( a429word myA429word, int parity_value ); Description Checks the parity over 32 bits of the specified ARINC word. Parameters Return Values Example — Availability"},"8092":{y:0,u:"../Content/Topics/CAPLFunctions/Test/Functions/CAPLfunctionTestFunctionTitle.htm",l:-1,t:"TestFunctionTitle",i:7.55219094866171E-05,a:"CAPL Functions  »  Test Feature Set  » TestFunctionTitle TestFunctionTitle   Function Syntax TestFunctionTitle (char title[]); Description The title of a test function is acquired automatically from the test function name in the CAPL program. It can also be set explicitly with the help of this ..."},"8093":{y:0,u:"../Content/Topics/CANoeCANalyzer/Test/TestModules/NET/NETTestModuleCallCAPLTestCaseFunction.htm",l:-1,t:"Call CAPL Test Case / CAPL Test Function (.NET Test Module)",i:7.12545584693528E-05,a:"Test Feature Set  » .NET » CAPL Test Cases / CAPL Test Functions Call CAPL Test Case / CAPL Test Function   You can assign CAPL files to the  .NET test module  as libraries in the  Test module configuration dialog . All CAPL test functions and test cases can be called from within the .NET test ..."},"8094":{y:0,u:"../Content/Topics/CAPLFunctions/ISO11783/ISOInteractionLayerVT/Functions/CAPLfunctionIso11783VTILResetAllBlockedRxMessages.htm",l:-1,t:"VTIL_ResetAllBlockedRxMessages",i:6.74381181544166E-05,a:"CAPL Functions  »  ISO11783   »  Virtual Terminal Interaction Layer (VT IL)   » VTIL_ResetAllBlockedRxMessages VTIL_ResetAllBlockedRxMessages   Function Syntax long VTIL_ResetAllBlockedRxMessages( ); // form 1 long VTIL_ResetAllBlockedRxMessages(dbNode node); // form 2 Description Resets the changes ..."},"8095":{y:0,u:"../Content/Topics/CAPLFunctions/ISO11783/ISONodeLayer/Functions/CAPLfunctionIso11783OPLoad.htm",l:-1,t:"Iso11783OPLoad",i:4.89887579938959E-05,a:"CAPL Functions  »  ISO11783  »  ISO11783 Node Layer  » Iso11783OPLoad Iso11783OPLoad   Function Syntax long Iso11783OPLoad( dword ecuHandle, char filename[] ); long Iso11783OPLoad( dword ecuHandle, char filename[], char version[] ); Description The function loads an object pool file (*.iop). All ..."},"8096":{y:0,u:"../Content/Topics/CAPLFunctions/VTSystem/Functions/CAPLfunctionVTSSetLoadControlTimeout.htm",l:-1,t:"SetLoadControlTimeout",i:9.40670991143319E-05,a:"CAPL Functions  »  VT System  » SetLoadControlTimeout SetLoadControlTimeout   Method  Syntax long SysVarNamespace.SetLoadControlTimeout (double Timeout); Description When signals with brief interruptions are created (especially PWM signals), it is possible to set a hold time (a control timeout) so ..."},"8097":{y:0,u:"../Content/Topics/CAPLFunctions/ISO11783/ISOInteractionLayer/Functions/CAPLfunctionIso11783ILOPGetNumericValue.htm",l:-1,t:"Iso11783IL_OPGetNumericValue",i:4.56103363849188E-05,a:"CAPL Functions  »  ISO11783   »  ISO11783 Interaction Layer   » Iso11783IL_OPGetNumericValue Iso11783IL_OPGetNumericValue   Function Syntax long Iso11783IL_OPGetNumericValue( dword objectID, long\u0026 value ); // form 1 long Iso11783IL_OPGetNumericValue( dbNode implement, dword objectID, long\u0026 value ); ..."},"8098":{y:0,u:"../Content/Topics/CAPLFunctions/ADFX/Functions/CAPLfunctionAfdxInitPacket.htm",l:-1,t:"AfdxInitPacket",i:0.000347093448415917,a:"CAPL Functions  »  AFDX  » AfdxInitPacket AfdxInitPacket   Function Syntax long AfdxInitPacket( long msgID, char msgName[], long initSignals ); // form 1 long AfdxInitPacket( long srcIP, long dstIP, long srcUdpPort, long dstUdpPort, long virtualLinkId, long payloadSize ); // form 2 long ..."},"8099":{y:0,u:"../Content/Topics/CAPLFunctions/VTSystem/Functions/CAPLfunctionVTSSetImpedanceMode.htm",l:-1,t:"SetImpedanceMode",i:6.55493842916141E-05,a:"CAPL Functions  »  VT System  » SetImpedanceMode SetImpedanceMode   Method  Syntax Long SysVarNamespace.SetImpedanceMode (eVTSImpedanceMode Mode); Description Switches for VT1004A/VT1104 between the mode with high impedance (default state) and low impedance. The behavior of a channel in mode with ..."},"8100":{y:0,u:"../Content/Topics/CAPLFunctions/LIN/Functions/CAPLfunctionLINSetSchedulerJitter.htm",l:-1,t:"linSetSchedulerJitter",i:3.89520431734087E-05,a:"CAPL Functions  »  LIN  » linSetSchedulerJitter linSetSchedulerJitter   Function Syntax long linSetSchedulerJitter (long mode); // form 1 long linSetSchedulerJitter (long mode, long jitterInMicSecs); // form 2 Description Sets/resets the jitter mode and the jitter of the LIN hardware scheduler. \n ..."},"8101":{y:0,u:"../Content/Topics/CAPLFunctions/SmartCharging/Callbacks/CAPLfunctionSCCTLSHandshakeInd.htm",l:-1,t:"SCC_TLSHandshakeInd",i:6.24395493115898E-05,a:"CAPL Functions  »  Smart Charging  »  SCC Modeling Libraries (Simulation Setup)  »  Shared Callback Functions  » SCC_TLSHandshakeInd SCC_TLSHandshakeInd   Function Syntax void SCC_TLSHandshakeInd( long Status, long IsServer) Description The callback is called when a TLS handshake has been attempted ..."},"8102":{y:0,u:"../Content/Topics/CAPLFunctions/ISO11783/ISOInteractionLayer/Functions/CAPLfunctionIso11783ILSetNodeProperty.htm",l:-1,t:"Iso11783IL_SetNodeProperty",i:0.000104874842270716,a:"CAPL Functions  »  ISO11783  »  ISO11783 Interaction Layer   » Iso11783IL_SetNodeProperty Iso11783IL_SetNodeProperty   Function Syntax long Iso11783IL_SetNodeProperty( char propertyName[], long propertyValue); // form 1 long Iso11783IL_SetNodeProperty( dbNode node, char propertyName[], long ..."},"8103":{y:0,u:"../Content/Topics/CANoeCANalyzer/VisualSequencer/VSCommands/VSCommandSendCANRawFrame.htm",l:-1,t:"Send CAN Raw Frame (Visual Sequencer Command)",i:4.77805380912207E-05,a:"Visual Sequencer  »  Commands  » Send CAN Raw Frame Send CAN Raw Frame   Description Transmits a CAN frame that has been parameterized without database support. Objects Operators Operands Example Example 2: No operator The following example sets the length to 1 and the first data byte to 50 for ..."},"8104":{y:0,u:"../Content/Topics/CANoeCANalyzer/CommunicationConcept/CCDOCAPLBinding.htm",l:-1,t:"CAPL Binding for Distributed Objects",i:0.00062917591074614,a:" CANoe  »  Communication Concept  » CAPL Binding for Distributed Objects CAPL Binding for Distributed Objects   A special variant of  binding  for  distributed objects (DO)  is to implement the transmission with CAPL itself. Therefore the binding attribute is set to CAPL and special functions and ..."},"8105":{y:0,u:"../Content/Topics/CAPLFunctions/IP/SOMEIPIL/Functions/CAPLfunctionSomeIpILControlStart.htm",l:-1,t:"SomeIpILControlStart",i:4.42640309726296E-05,a:"CAPL Functions  »  Ethernet  »  SOME/IP IL  » SomeIpILControlStart SomeIpILControlStart   Function Syntax long SomeIpILControlStart(); Description Starts SOME/IP IL. Enabled sending and receiving SOME/IP messages and Service Discovery. After the start of SOME/IP IL, all Application Endpoints and the ..."},"8106":{y:0,u:"../Content/Topics/CLibraryAPI/Functions/CAPLfunctioncclCallContextIsSynchronousCall.htm",l:-1,t:"cclCallContextIsSynchronousCall",i:3.86360090043396E-05,a:" CANoe  »  C Library API  »  Functions  » cclCallContextIsSynchronousCall cclCallContextIsSynchronousCall   Function Syntax int32_t cclCallContextIsSynchronousCall(cclCallContextID ccID, bool* isSynchronous); Description Returns whether a specific call context was used for a synchronous call. It is ..."},"8107":{y:0,u:"../Content/Topics/CANoeCANalyzer/ADAS/Basics/ADASOSICoordinateSystem.htm",l:-1,t:"OSI Coordinate System",i:4.04898751236606E-05,a:"ADAS  »  Data Model  »  ASAM OSI3 Standard  » OSI Coordinate System OSI Coordinate System   DetectedObjects The position of a DetectedObject is specified in relation to the Virtual Mounting Position according to OSI3. The virtual mounting position itself is specified in relation to the selected ..."},"8108":{y:0,u:"../Content/Topics/CAPLFunctions/Diagnostics/Functions/CAPLfunctionDoIPSetVehicleUdpPort.htm",l:-1,t:"DoIP_SetVehicleUdpPort",i:4.73561327788079E-05,a:"CAPL Functions  »  Diagnostics  » DoIP_SetVehicleUdpPort DoIP_SetVehicleUdpPort   Function Syntax void DoIP_SetVehicleUdpPort( dword port); Description Sets the UDP port (UDP_VEHICLE_LOCAL) to be used by the DoIP layer. This function must be called in  on preStart . Parameters Return Values — ..."},"8109":{y:0,u:"../Content/Topics/CAPLFunctions/Other/CAPLfunctionsNewOverview.htm",l:-1,t:"New CAPL Functions",i:5.66251029569005E-05,a:"CAPL Functions  » New CAPL Functions » 17 New CAPL Functions   ON THIS PAGE: A429 [▲ back] In this version no new functions are available. ADAS [▲ back] In this version no new functions are available. AFDX [▲ back] In this version no new functions are available. Associative Fields [▲ back] In this ..."},"8110":{y:0,u:"../Content/Topics/Shared/CAPL/General/Expressions.htm",l:-1,t:"Instructions, Expressions, Operators in CAPL",i:8.67648456193953E-05,a:"CAPL Introduction  » Instructions, Expressions, Operators in CAPL Instructions, Expressions, Operators in CAPL   The CAPL syntax is based on the programming language C. The following instructions, expressions and operators are permitted as in C: Instructions The following instructions are  keywords ..."},"8111":{y:0,u:"../Content/Topics/CANoeCANalyzer/J1939/j1939tsl/pattern/j1939tslPatternRequestResponse.htm",l:-1,t:"Request/Response",i:2.92484150348397E-05,a:"J1939  »  J1939 Test Service Library  »  Test Pattern  » Request/Response Request/Response   J1939 Request Check"},"8112":{y:0,u:"../Content/Topics/CANoeCANalyzer/VTSystem/VTSystemUsingOfflineMode.htm",l:-1,t:"Using the VT System Offline Mode",i:6.83206181647122E-05,a:"VT System  » Using the VT System Offline Mode Using the VT System Offline Mode   As of CANoe 11.0, one or more VT System modules can be switched to an offline mode. In this mode, it is no longer necessary for the actual module hardware to be present in your VT System. The VT System Offline Mode is ..."},"8113":{y:0,u:"../Content/Topics/CAPLFunctions/J1939/J1939InteractionLayer/Functions/CAPLfunctionJ1939ILResetBlockedRxMessage.htm",l:-1,t:"J1939ILResetBlockedRxMessage",i:0.00010371157436971,a:"CAPL Functions  »  J1939  »  J1939 IL  » J1939ILResetBlockedRxMessage J1939ILResetBlockedRxMessage   Function Syntax long J1939ILResetBlockedRxMessage(dword pgn, dword sourceAddress, qword filterMask, qword filterValue); // form 1 long J1939ILResetBlockedRxMessage(dbNode node, dword pgn, dword ..."},"8114":{y:0,u:"../Content/Topics/CAPLFunctions/MOST/Functions/CAPLfunctionMOSTGetNPR.htm",l:-1,t:"mostGetNPR",i:4.85657469754054E-05,a:"CAPL Functions  »  MOST  » mostGetNPR mostGetNPR   Function Syntax long mostGetNPR (long channel); Description This function returns the \"Node Position Register (NPR)\" value \n of the MOST hardware chip connected to the channel. Parameters Return Values Example — Availability mostGetChannel   •   ..."},"8115":{y:0,u:"../Content/Topics/CANoeCANalyzer/Connectivity/DDSProtocol.htm",l:-1,t:"DDS Protocol (Connectivity)",i:0.000147779888287102,a:" CANoe  »  Connectivity  » DDS Protocol DDS Protocol   The standard  Data Distribution Service (DDS)  published by the Object Management Group describes a protocol for transmitting data in distributed systems. The Object Management Group sees the purpose of the DDS specification in enabling the ..."},"8116":{y:0,u:"../Content/Topics/CANoeCANalyzer/VisualSequencer/VSCommands/VSCommandWaitForCANFrame.htm",l:-1,t:"Wait For CAN Frame (Visual Sequencer Command)",i:2.07323788374654E-05,a:"Visual Sequencer  »  Commands  » Wait For CAN Frame Wait For CAN Frame   Description Stops the sequence execution until a certain CAN frame arrives. Objects Operators — Operands — Example — Availability Send CAN Frame (Visual Sequencer Command)   •   Wait For CAN Raw Frame (Visual Sequencer Command)"},"8117":{y:0,u:"../Content/Topics/CANoeCANalyzer/Test/TestModules/XML/XMLFileCallCAPLTestFunction.htm",l:-1,t:"Call CAPL Test Function (XML Test Module)",i:5.15019496313461E-05,a:"Test Feature Set  » XML » Call CAPL Test Functions Call CAPL Test Function   In the  test module configuration dialog , CAPL files can be assigned to the XML test module as libraries. Test functions called from the XML test module can be implemented in these CAPL files. Event procedures are only ..."},"8118":{y:0,u:"../Content/Topics/CAPLFunctions/MOST/Functions/CAPLfunctionMOSTGetChannel.htm",l:-1,t:"mostGetChannel",i:0.000423656166518726,a:"CAPL Functions  »  MOST  » mostGetChannel mostGetChannel   Function Syntax mostGetChannel (); Description This query returns the number of the MOST channel to which the CAPL node is connected in the Simulation Setup. This query is especially useful with nodes that are only connected to one MOST ..."},"8119":{y:0,u:"../Content/Topics/SampConf/CAN/CANoe/Scope/BitmaskAnalysisCAN.htm",l:-1,t:"Bitmask Analysis (CAN - Scope)",i:0.000295409026218451,a:" CANoe  »  Sample Configurations  »  CAN  » Scope » Bitmask Analysis (CAN - Scope) Bitmask Analysis (CAN - Scope)   How to Use After the measurement is started, the test module can be started manually. CAN and CAN FD messages will be transmitted. They will be recorded and analyzed by the Scope. A  ..."},"8120":{y:0,u:"../Content/Topics/SampConf/SmartCharging/SampConfSmartCharging.htm",l:-1,t:"Sample Configurations SmartCharging",i:0.000305539683202942,a:" CANoe  »  Sample Configurations  » Sample Configurations SmartCharging Sample Configurations SmartCharging   Smart Charging (DIN70121/ISO 15118‑2) Smart Charging Basic Simulation -  SmartChargingBasic.cfg Demonstrates the communication between an electric vehicle and a charge point according to ..."},"8121":{y:0,u:"../Content/Topics/CAPLFunctions/CommunicationObjects/Functions/CAPLfunctionSOMEIPInjectPDU.htm",l:-1,t:"SOMEIP_InjectPDU",i:2.93763033289521E-05,a:"CAPL Functions  »  Communication Objects  » SOMEIP_InjectPDU SOMEIP_InjectPDU   Function Syntax long SOMEIP_InjectPDU(PDU pdu, long channel, IP_Endpoint srcIPEndpoint, IP_Endpoint dstIPEndpoint); Description Injects the PDU into the  SOME/IP-Binding block , where its then send. Parameters ..."},"8122":{y:0,u:"../Content/Topics/COMInterface/Objects/COMObjectMappingTable.htm",l:-1,t:"MappingTable (COM Object)",i:5.45154999324977E-05,a:" CANoe  »  COM Interface  »  Objects  » MappingTable MappingTable Application  »  Configuration  »  MeasurementSetup  »  OfflineSource  » MappingTable Description The MappingTable object allows setting or returning the channel mapping configuration for the offline source. Properties — Methods Events ..."},"8123":{y:0,u:"../Content/Topics/SampConf/Ethernet/CANoe/DHCP/DHCP.htm",l:-1,t:"DHCP Server and Client",i:4.99439537155258E-05,a:"Sample Configurations  »  Ethernet  » DHCP Server and Client DHCP Server and Client   The three client nodes have their own TCP/IP stack and want to retrieve the respective configuration via DHCP. This includes various scenarios. Desktops This configuration contains the following desktops: Setup  [▲ ..."},"8124":{y:0,u:"../Content/Topics/CANoeCANalyzer/J1939/blocks/obdimmonitor/obdimmDiagMsg.htm",l:-1,t:"Diagnostic Messages (J1939 OBD-I/M Monitor)",i:6.85700085007693E-05,a:" CANoe  »  J1939 OBD-I/M Monitor  » Diagnostic Messages Diagnostic Messages  "},"8125":{y:0,u:"../Content/Topics/SampConf/IOhil/CANoe/RS232/rs232democn.htm",l:-1,t:"RS232",i:5.92766381195476E-05,a:"Sample Configurations  »  I/O HIL  » RS232 RS232   The communication of the serial interface can be tested in three the different scenarios. For these scenarios the configuration with two panels can be used. Every panel demonstrates a serial port on your computer. The input field Data Transmission ..."},"8126":{y:0,u:"../Content/Topics/CAPLFunctions/CAN/Functions/CAPLfunctionOutput.htm",l:-1,t:"output (CAN)",i:0.000350010643983292,a:"CAPL Functions  »  CAN  » output (CAN) output (CAN)   Function Syntax void output(message msg); // form 1 void output(errorFrame); // form 2 Description Outputs a message (form 1) or an Error Frame (form 2) from the program block. Parameters Return Values — Example Availability  "},"8127":{y:0,u:"../Content/Topics/CAPLFunctions/LIN/Functions/CAPLfunctionLINGetProtectedID.htm",l:-1,t:"linGetProtectedID",i:5.60325482096528E-05,a:"CAPL Functions  »  LIN  » linGetProtectedID linGetProtectedID   Function Syntax dword linGetProtectedID (long frameID); Description With this function it is possible to calculate protected ID for the corresponding LIN frame identifier (i.e. the frame identifier with parity bits). Parameters ..."},"8128":{y:0,u:"../Content/Topics/CANoeCANalyzer/Windows/Trace/Columns/TraceColumnsCar2x.htm",l:-1,t:"Columns for Car2x",i:5.99333852283598E-05,a:" CANoe  » … »  Trace Window  »  Configuration  »  Column Configuration  » Car2x Columns for Car2x Context Menu Path :  Configuration | Column Configuration |Car2x Sample Configurations and Applications   •  "},"8129":{y:0,u:"../Content/Topics/CANoeCANalyzer/FunctionBlocks/ProgramNode/help_caplboxan_1.htm",l:-1,t:"Program Node: Compile",i:5.66820095926171E-05,a:"Program Node  » Compile Program Node: Compile Context Menu of a Program Node: Compile Before the start of measurement the programs belonging to the CAPL nodes must be compiled. The CAPL compiler can be run for each node individually using this button. You can also use   in the  Environment ribbon ..."},"8130":{y:0,u:"../Content/Topics/CAPLFunctions/MOST/Functions/CAPLfunctionMOSTOutputMostPktThis.htm",l:-1,t:"outputMostPktThis",i:6.84995873161362E-05,a:"CAPL Functions  »  MOST  » outputMostPktThis outputMostPktThis   Function Syntax outputMostPktThis(); Description Passes the packet on to the next node in the nodal sequence. Parameters — Return Values — Example Availability output   •   outputMostPkt"},"8131":{y:0,u:"../Content/Topics/CAPLFunctions/SmartCharging/Functions/CAPLfunctionSCCCreateServicePaymentSelectionReqDin.htm",l:-1,t:"SCC_CreateServicePaymentSelectionReq_DIN",i:6.24395493115898E-05,a:"CAPL Functions  »  Smart Charging  »  SCC Modeling Libraries (Simulation Setup)  »  V2G Test Functions  »  Shared Functions  » SCC_CreateServicePaymentSelectionReq_DIN SCC_CreateServicePaymentSelectionReq_DIN   Function Syntax long SCC_CreateServicePaymentSelectionReq_DIN \n( byte SessionID[], \nchar ..."},"8132":{y:0,u:"../Content/Topics/CAPLFunctions/IP/Functions/CAPLfunctionEthResetStatisticsOfAllNetworks.htm",l:-1,t:"ethResetStatisticsOfAllNetworks",i:2.1003717686362E-05,a:"CAPL Functions  »  Ethernet  »  Function Overview  » ethResetStatisticsOfAllNetworks ethResetStatisticsOfAllNetworks   Function Syntax void ethResetStatisticsOfAllNetworks(); Description Resets the RT statistic values of all ports of all Ethernet networks. It will not influence the Statistic Window ..."},"8133":{y:0,u:"../Content/Topics/CAPLFunctions/Sensor/Functions/CAPLfunctionSensorResetCRCMode.htm",l:-1,t:"sensorResetCRCMode",i:6.12619875133155E-05,a:"CAPL Functions  »  Sensor  » sensorResetCRCMode sensorResetCRCMode   Function Syntax SensorErrorCode sensorResetCRCMode(char[] sysVarNamespace); Description Resets the CRC mode of a sensor to the initially configured value. If short serial messages are selected, this function also resets the CRC ..."},"8134":{y:0,u:"../Content/Topics/CAPLFunctions/ADFX/CAPLfunctionsAFDXSelectors.htm",l:-1,t:"AFDX Selectors",i:0.000269102340840696,a:"CAPL » AFDX Selectors AFDX Selectors   Quick Access Selectors for Identification and Timing Selectors on Ethernet level Selectors on IP level Selectors on UDP level Selectors on AFDX level Selectors for Identification and Timing Value Range ErrFlag Selectors on Ethernet Level Selectors on IP level ..."},"8135":{y:0,u:"../Content/Topics/CANoeCANalyzer/Interfaces/MATLAB/CANoeDOlibrary/MATLABdoLibFunctionCalling.htm",l:-1,t:"DO Function Calling (MATLAB Integration Block)",i:3.59231463746792E-05,a:"MATLAB Integration Package  »  Distributed Object Library  » DO Function Calling DO Function Calling    "},"8136":{y:0,u:"../Content/Topics/CAPLFunctions/GPIB/Functions/CAPLfunctionGPIBReqRelSysCtrl.htm",l:-1,t:"GPIBReqRelSysCtrl",i:5.59241803361269E-05,a:"CAPL Functions  »  GPIB  » GPIBReqRelSysCtrl GPIBReqRelSysCtrl   Function Syntax long GPIBReqRelSysCtrl \n (long boardIdx, long mode); Description Sets or deletes the permission to send interface clear (IFC) or remote \nenable (REN). If mode is \"0,\" the GPIB board surrenders \n system control and all ..."},"8137":{y:0,u:"../Content/Topics/CAPLFunctions/MOST/Functions/CAPLfunctionMOSTNBSetAbilityToWake.htm",l:-1,t:"mostNBSetAbilityToWake",i:4.21929005290938E-05,a:"CAPL Functions  »  MOST  » mostNBSetAbilityToWake mostNBSetAbilityToWake   Function Syntax mostNBSetAbilityToWake(long wakestatus); Description Sets the AbilityToWake flags in NetBlock. If this flag is set to \"Off\", the connected MOST interface must not wake-up the ring. Parameters Return Values ..."},"8138":{y:0,u:"../Content/Topics/CAPLFunctions/Sensor/Functions/CAPLfunctionSensorSetNumberOfDataNibbles.htm",l:-1,t:"sensorSetNumberOfDataNibbles",i:6.12619875133155E-05,a:"CAPL Functions  »  Sensor  » sensorSetNumberOfDataNibbles sensorSetNumberOfDataNibbles   Function Syntax SensorErrorCode sensorSetNumberOfDataNibbles(char[] sysVarNamespace, dword numDataNibbles); Description Sets the number of data nibbles of a simulated sensor to the given value. Parameters ..."},"8139":{y:0,u:"../Content/Topics/CAPLFunctions/DistributedObjects/Methods/CAPLfunctiondistObjMemberBlueprintRemoveVirtualNetwork.htm",l:-1,t:"distObjMemberBlueprint::RemoveVirtualNetwork",i:6.2930904433097E-05,a:"CAPL Functions  »  Distributed Objects  » distObjMemberBlueprint::RemoveVirtualNetwork distObjMemberBlueprint::RemoveVirtualNetwork   Method  Syntax void  distObjMemberBlueprint ::RemoveVirtualNetwork(); Description Removes the virtual network from the member blueprint. Parameters — Return Values — ..."},"8140":{y:0,u:"../Content/Topics/CANoeCANalyzer/Windows/TraceTest/TestTraceWindowSplitter.htm",l:-1,t:"Test Trace Window: Splitter",i:6.12933736158185E-05,a:"Test Trace Window  » Splitter Test Trace Window: Splitter   After the measurement, the Test Trace Output Window can be split into two views (horizontal or vertical adjustment) via the  toolbar . Because the analysis area of the  buffers  can be moved in the two views independently of one another, ..."},"8141":{y:0,u:"../Content/Topics/CAPLFunctions/KLine/Functions/CAPLfunctionKLineSetHeaderFormat.htm",l:-1,t:"KLine_SetHeaderFormat",i:7.40609421063126E-05,a:"CAPL Functions  »  K-Line  » KLine_SetHeaderFormat KLine_SetHeaderFormat   Function Syntax long KLine_SetHeaderFormat(long useAddresses, long forceLengthByte) Description Configures the used header format. Parameters Return Values On success 0, otherwise a value less than 0. Example Availability ..."},"8142":{y:0,u:"../Content/Topics/CAPLFunctions/CANopen/NodeLayerTFS/Functions/CAPLfunctionCoTfsSetTimeOutValue.htm",l:-1,t:"coTfsSetTimeoutValue",i:5.71932447786973E-05,a:"CAPL Functions  »  CANopen  »  Test Feature Set Node Layer  » coTfsSetTimeoutValue coTfsSetTimeoutValue   Function Syntax long coTfsSetTimeoutValue( dword timeout ); Description This function sets the general time-out of all test functions, insofar as individual functions do not make a separate ..."},"8143":{y:0,u:"../Content/Topics/CANoeCANalyzer/FunctionBlocks/help_block.htm",l:-1,t:"Breakpoint",i:0.000113428500117418,a:"Measurement Setup  »  Function Blocks  » Breakpoint Breakpoint   Data flow branches located after a breakpoint are not run. This makes sense e.g. in online mode, if due to a high data rate not all functions (especially in the Trace Window) cannot be serviced without data loss. When a break is ..."},"8144":{y:0,u:"../Content/Topics/CAPLFunctions/ISO11783/ISOInteractionLayer/Functions/CAPLfunctionIso11783ILResetDelayedRxMessage.htm",l:-1,t:"Iso11783IL_ResetDelayedRxMessage",i:4.76169330998126E-05,a:"CAPL Functions  »  ISO11783   »  ISO11783 Interaction Layer   » Iso11783IL_ResetDelayedRxMessage Iso11783IL_ResetDelayedRxMessage   Function Syntax long Iso11783IL_ResetDelayedRxMessage(dword pgn, dword sourceAddress, qword filterMask, qword filterValue, dword behavior); // form 1 long ..."},"8145":{y:0,u:"../Content/Topics/COMInterface/Objects/COMObjectMcCANSettings.htm",l:-1,t:"McCANSettings (COM Object)",i:3.52386748331134E-05,a:" CANoe  »  COM Interface  »  Objects  » McCANSettings McCANSettings Application  »  Configuration  »  GeneralSetup  »  CCPSetup  »  McECUs  »  McECU  » McCANSettings Application  »  Configuration  »  GeneralSetup  »  XCPSetup  »  McECUs  »  McECU  » McCANSettings Description The McCANSettings object ..."},"8146":{y:0,u:"../Content/Topics/CAPLFunctions/IP/Selectors/CAPLfunctionProtocolByte.htm",l:-1,t:"ethernetPacket Selectors: \u003cprotocol\u003e.byte/word/dword/qword/char/int/long/int64",i:7.55229092414583E-05,a:"CAPL Functions  »  Ethernet  »  Function Overview  »  ethernetPacket  » Selector byte/word/dword/qword/char/int/long/int64 ethernetPacket Selectors: \u003cprotocol\u003e.byte/word/dword/qword/char/int/long/int64   Selectors byte  ethernetPacket .\u003c protocol \u003e.Byte ( index ); word  ethernetPacket .\u003c protocol ..."},"8147":{y:0,u:"../Content/Topics/CANoeCANalyzer/Diagnostics/Test/DiagnosticsAndTesting.htm",l:-1,t:"Diagnostics and Testing",i:2.21495311739236E-05,a:"Diagnostics with CANoe  »  Functional Overview  »  Testing  » Diagnostics and Testing Diagnostics and Testing   For test nodes and test modules, there are different methods for diagnostic communications with an ECU, depending on the bus system. CANoe Diagnostic Channel If you are using diagnostic ..."},"8148":{y:0,u:"../Content/Topics/CAPLFunctions/VTSystem/Functions/CAPLfunctionVTSSetTransferCycle.htm",l:-1,t:"SetTransferCycle",i:8.69904768093686E-05,a:"CAPL Functions  »  VT System  » SetTransferCycle SetTransferCycle   Method  Syntax long SystemVariable.SetTransferCycle (double CycleTime); Description Sets the cycle time for retrieving the measured value of a system variable from the VT System and writing it to the corresponding system variable. ..."},"8149":{y:0,u:"../Content/Topics/CAPLFunctions/J1939/J1939InteractionLayer/Functions/CAPLfunctionJ1939ILDelayTxTpCts.htm",l:-1,t:"J1939ILDelayTxTpCts",i:5.84788456228857E-05,a:"CAPL Functions  »  J1939  »  J1939 IL  » J1939ILDelayTxTpCts J1939ILDelayTxTpCts   Function Syntax long J1939ILDelayTxTpCts( long ctsToDelay, long timeout); //Form 1 long J1939ILDelayTxTpCts( dbNode node, long ctsToDelay, long timeout); //Form 2 Description Delays transmitting of a TP.CTS message ..."},"8150":{y:0,u:"../Content/Topics/CAPLFunctions/LIN/Functions/CAPLfunctionLINSetManualChecksum.htm",l:-1,t:"linSetManualChecksum",i:0.000103051895203309,a:"CAPL Functions  »  LIN  » linSetManualChecksum linSetManualChecksum   Function Syntax void linSetManualChecksum(linFrame linFrame, byte csValue); Description Sets a checksum (that is usually not a correct one) for a LIN frame. Parameters Return Values — Example Availability linResetManualChecksum"},"8151":{y:0,u:"../Content/Topics/CAPLFunctions/J1939/Functions/CAPLfunctionJ1939InitializeMultiPG.htm",l:-1,t:"J1939InitializeMultiPG",i:0.000151008556196586,a:"CAPL Functions  »  J1939  »  Function Overview  » J1939InitializeMultiPG J1939InitializeMultiPG   Function Syntax J1939InitializeMultiPG(message* multiPG, byte sa); // (form 1) J1939InitializeMultiPG(message* multiPG, byte prio, byte da, byte sa); // (form 2) Description Sets CAN ID of the multiPG ..."},"8152":{y:0,u:"../Content/Topics/SampConf/CAN/CANoe/Diagnostics/UDSBasicCN.htm",l:-1,t:"UDS Diagnostic Basic",i:6.23549321542032E-05,a:" CANoe  » Sample Configurations  »  CAN  » CAN Diagnostics » UDS Diagnostic Basic UDS Diagnostic Basic   Introduction This sample configuration shows the following use cases: Writing a diagnostic parameter (physical \u0026 symbolical representation). Writing a raw/large diagnostic parameter. Reading a ..."},"8153":{y:0,u:"../Content/Topics/SampConf/ISO11783/CANoe/MoreExamples/AuxiliaryDemo/AuxiliaryDemo_CN.htm",l:-1,t:"Auxiliary",i:5.8759640227408E-05,a:"Sample Configurations  »  ISO11783  » Auxiliary Auxiliary   This sample configuration demonstrates the usage of different auxiliary inputs in CANoe. Via the  Virtual Terminal  the functions of a Working Set Master are assigned to the controls of the auxiliary inputs. All nodes are using the ISO11783 ..."},"8154":{y:0,u:"../Content/Topics/CAPLFunctions/Security/Functions/CAPLfunctionX509CertificateSetIssuerDN.htm",l:-1,t:"X509Certificate_SetIssuerDN",i:6.41810845781887E-05,a:"CAPL Functions  »  Security  » X509Certificate_SetIssuerDN X509Certificate_SetIssuerDN   Method  Syntax dword X509Certificate_SetIssuerDN(qword objectHandle, qword newValue) Description Setter function for the Issuer field of the X.509 Certificate handle. Can also be used to remove the field by ..."},"8155":{y:0,u:"../Content/Topics/COMInterface/Objects/COMObjectApplicationSpecificModules.htm",l:-1,t:"ApplicationSpecificModules (COM Object)",i:3.93757532323208E-05,a:" CANoe  »  COM Interface  »  Objects  » ApplicationSpecificModules ApplicationSpecificModules Application  »  Configuration  »  VTSystem  »  AvailableModules  » ApplicationSpecificModules Description The ApplicationSpecificModules object represents the collection of available application specific ..."},});