define({"7498":{y:0,u:"../Content/Topics/CANoeCANalyzer/Windows/Trace/TraceWindowFilterAFDXEvents.htm",l:-1,t:"Filter Condition | AFDX Events",i:8.85322663786533E-05,a:" CANoe  » … »  Trace Window  »  Filters  »  Analysis Filters / Sequence Filters  » AFDX Events Filter Condition | AFDX Events Context Menu Path : Add Condition|AFDX Events With the Filter Condition dialog, you can either use an existing event in the Trace Window as a template for the filter or ..."},"7499":{y:0,u:"../Content/Topics/CAPLFunctions/ISO11783/ISOInteractionLayer/Functions/CAPLfunctionIso11783ILPDDOnPDM.htm",l:-1,t:"Iso11783IL_PDDOnPDM",i:3.67775937289007E-05,a:"CAPL Functions  »  ISO11783   »  ISO11783 Interaction Layer   » Iso11783IL_PDDOnPDM Iso11783IL_PDDOnPDM (Callback)   Function Syntax long Iso11783IL_PDDOnPDM( long command, long parameter, long senderAddress, long pddStatus ); Description The callback method is called from the ISO11783 Interaction ..."},"7500":{y:0,u:"../Content/Topics/CANoeCANalyzer/FunctionBlocks/IG/IGCANSignalConfigVariable.htm",l:-1,t:"Value Generator Type: Variable (CAN-IG)",i:3.33674760627342E-05,a:"CAN Interactive Generator  »  Signal Generator  » Type: Variable Signal Generator Type: Variable   This generator type receives its value(s) from the selected environment variable or system variable. The selected variable values can be entered, for example, via a panel. Because a permanently defined ..."},"7501":{y:0,u:"../Content/Topics/CAPLFunctions/Car2x/Functions/CAPLfunctionC2xSetVerbosity.htm",l:-1,t:"C2xSetVerbosity",i:4.80525515721617E-05,a:"CAPL Functions  »  Car2x  » C2xSetVerbosity C2xSetVerbosity   Function Syntax long C2xSetVerbosity( long verbosity ); Description This function sets the verbosity level of the Car2x IL. The default setting is that only error messages are written to the Write Window of CANoe. Parameters Return Values ..."},"7502":{y:0,u:"../Content/Topics/CANoeCANalyzer/ADAS/Interfaces/ADASMatlabInterfaceSFunction.htm",l:-1,t:"Matlab Interface / S-Function",i:4.65437746671073E-05,a:"ADAS  » Matlab Interface / S-Function Matlab Interface / S-Function   Matlab Interface For the connection of the ADAS feature set to DYNA4 and other simulation environments using MATLAB, the  S-Function protobufOSI  is used. This is part of the  MATLAB Integration Package . It can be used to read ..."},"7503":{y:0,u:"../Content/Topics/CAPLFunctions/IP/Functions/CAPLfunctionEthStartPacketGenerator.htm",l:-1,t:"ethStartPacketGenerator",i:0.000240128572584415,a:"CAPL Functions  »  Ethernet  »  Function Overview  » ethStartPacketGenerator ethStartPacketGenerator   Function Syntax long ethStartPacketGenerator( ethernetPacket txPacket, dword transmissionRate ); long ethStartPacketGenerator( ethernetPacket txPacket, dword transmissionRate, dword numberOfFrames ..."},"7504":{y:0,u:"../Content/Topics/CANoeCANalyzer/J1939/blocks/j1939nodefilter/nfChannelSelection.htm",l:-1,t:"Channel Selection (J1939 Node Filter Deprecated)",i:4.24543824929103E-05,a:"J1939  »  J1939 Filter  »  Node Filter  »  Deprecated Node Filter  » Channel Selection Channel Selection   In the dialog Channel selection you can define, which channels are filtered during measurement additionally to the filter rules for PGs. For each channel you can define a separated setting. ..."},"7505":{y:0,u:"../Content/Topics/CANoeCANalyzer/VisualSequencer/VSCommands/VSCommandSendLINFrame.htm",l:-1,t:"Send LIN Frame (Visual Sequencer Command)",i:2.89289050025294E-05,a:"Visual Sequencer  »  Commands  » Send LIN Frame Send LIN Frame   Description Transmits a LIN frame or LIN header once. The response for a Master Frame is activated automatically. Use the  Set  command to set the signals of the frame. The command is only available if the  usage of the signal layer is ..."},"7506":{y:0,u:"../Content/Topics/CAPLFunctions/CommunicationObjects/Functions/CAPLfunctionLookupTxPDU.htm",l:-1,t:"LookupTxPDU",i:4.09902356846758E-05,a:"CAPL Functions  »  Communication Objects  » LookupTxPDU LookupTxPDU   Function Syntax txPDURef * LookupTxPDU(char[] path); Description Searches for the specified tx PDU. The path must be complete including namespaces and endpoint(s): (Namespace::)+PDU[Sender] for broadcast PDUs ..."},"7507":{y:0,u:"../Content/Topics/CANoeCANalyzer/Windows/Data/DataWindowColumnsShortcutMenu.htm",l:-1,t:"Data Window: Columns Context Menu",i:0.000105228200493099,a:" CANoe  » … »  Data Window  »  Columns  » Columns Context Menu Columns Context Menu   Depending of the selected column different context menus are available. Context Menu of the Value, Raw Value, Current Min and Current Max Columns For the physical value, the raw data is extracted from the message ..."},"7508":{y:0,u:"../Content/Topics/CANoeCANalyzer/CANopen/writeWnd/writeWndCANopen.htm",l:-1,t:"Write Window (CANopen)",i:2.59572515702425E-05,a:"CANopen  » Write Window Write Window   The CANopen specific analysis in the  Trace Window  is activated on measurement start depending on the assigned databases. The test is done for each channel independently. If the CANopen specific analysis is activated, a messages is output to the Write Window. ..."},"7509":{y:0,u:"../Content/Topics/CANoeCANalyzer/FlexRay/FRHowTo/FRHowToCreateCFGForAnalysis.htm",l:-1,t:"How to create a configuration for analysis? (FlexRay)",i:2.55608542668558E-05,a:"FlexRay »  How to...  » How to create a configuration for analysis? How to create a configuration for analysis?   If any FIBEX file is not available, then optionally a CHI file can be imported into the  Controller Settings  via [Im-/Export | Import CHI…] that describes the TDMA  parameters for the ..."},"7510":{y:0,u:"../Content/Topics/CANoeCANalyzer/J1939/j1939IL/j1939ILSendPGs.htm",l:-1,t:"Send Parameter Groups With J1939 IL according to J1939-22",i:2.93922678184691E-05,a:"J1939  »  J1939 Interaction Layer  » Send Parameter Groups With J1939 IL according to J1939-22 Send Parameter Groups With J1939 IL according to J1939-22   In contrast to the classic J1939, in J1939-22 the parameter groups are not placed directly on the bus, but are transmitted within Multi-PGs or ..."},"7511":{y:0,u:"../Content/Topics/CANoeCANalyzer/J1939/blocks/gnsssimulator/settings/gsSettingsPositions.htm",l:-1,t:"Positions",i:0.000152197975496634,a:"J1939  »  GNSS Simulator  »  Configuration  » Positions Positions   Reference positions to be used for models on page  Model  can be defined in the table of this page. When the position name is selected, there is no need to explicitly specify altitude, longitude and latitude. Reference positions are ..."},"7512":{y:0,u:"../Content/Topics/CANoeCANalyzer/Analysis/AnalysisLogData.htm",l:-1,t:"Log/Read Data",i:5.6650993814021E-05,a:" CANoe  »  Analysis  »  Functional Overview  » Log/Read Data Log/Read Data   For an analysis after the measurement, you can also record data in CANoe and replay it later. CANoe supports two types of logging formats: message based and signal based. Message based A message-based (frame based) format ..."},"7513":{y:0,u:"../Content/Topics/CLibraryAPI/Functions/CAPLfunctioncclCanIsStandardIdentifier.htm",l:-1,t:"cclCanIsStandardIdentifier",i:3.8517174942517E-05,a:" CANoe  »  C Library API  »  Functions  » cclCanIsStandardIdentifier cclCanIsStandardIdentifier   Function Syntax int32_t cclCanIsStandardIdentifier(uint32_t identifier); Description Checks parameter for standard CAN identifier (11 Bit). Inside the program, a CAN identifier is saved as 32-bit ..."},"7514":{y:0,u:"../Content/Topics/CAPLFunctions/SmartCharging/Functions/CAPLfunctionSCCCreateSessionSetupResIso.htm",l:-1,t:"SCC_CreateSessionSetupRes_ISO",i:6.24395493115898E-05,a:"CAPL Functions  »  Smart Charging  »  SCC Modeling Libraries (Simulation Setup)  »  V2G Test Functions  »  Shared Functions  » SCC_CreateSessionSetupRes_ISO SCC_CreateSessionSetupRes_ISO   Function Syntax long SCC_CreateSessionSetupRes_ISO \n( byte SessionID[], char ResponseCode[], \nchar EVSEID[] )  ..."},"7515":{y:0,u:"../Content/Topics/CAPLFunctions/Test/Functions/CAPLfunctionTestWaitForMostAmsResponse.htm",l:-1,t:"TestWaitForMostAMSResponse",i:9.37824512557976E-05,a:"CAPL Functions  »  Test Feature Set  » TestWaitForMostAMSResponse TestWaitForMostAMSResponse   Function Syntax long TestWaitForMostAMSResponse (int aDestinationAddress, char[] aSymbolicMessage, int aInstanceId, unsigned long aTimeout); long TestWaitForMostAMSResponse (char[] aSymbolicMessage, int ..."},"7516":{y:0,u:"../Content/Topics/CANoeCANalyzer/ADAS/Interfaces/ADASCAPIProtobuf.htm",l:-1,t:"C-API / Protobuf",i:4.37938153638417E-05,a:"ADAS  » C-API / Protobuf C-API / Protobuf   Short Description The  programming examples  demonstrate the use of the C-API. In the ADAS project, the cclSetGpbOSI3Data2 function is used to import protobuf bytestreams into CANoe. This allows third-party simulation environments to be connected to CANoe ..."},"7517":{y:0,u:"../Content/Topics/CAPLFunctions/Test/Functions/CAPLfunctionChkQueryRequestOpType.htm",l:-1,t:"ChkQuery_RequestOpType",i:8.38349512661179E-05,a:"CAPL Functions  »  Test Service Library  »  Status Report Functions  » ChkQuery_RequestOpType ChkQuery_RequestOpType   Function Syntax long ChkQuery_RequestOpType(dword aCheckId); Method  Syntax check.QueryRequestOpType(); Check Name MOST Property Protocol Observation (Check Description)  |  MOST ..."},"7518":{y:0,u:"../Content/Topics/CAPLFunctions/IP/Objects/CAPLfunctionEthernetErrorPacket.htm",l:-1,t:"ethernetErrorPacket",i:7.78777460541996E-05,a:"CAPL Functions  »  Ethernet  »  Function Overview  » ethernetErrorPacket ethernetErrorPacket   Function Syntax ethernetErrorPacket \u003cerrorPacket var\u003e; Description Can be use in  on ethernetErrorPacket  handler to access packet data. Parameters Selectors Example Availability"},"7519":{y:0,u:"../Content/Topics/CAPLFunctions/ISO11783/ISOInteractionLayerFS/Functions/CAPLfunctionIso11783FSILSetSignal.htm",l:-1,t:"FSIL_SetSignal",i:6.69035355603464E-05,a:"CAPL Functions  »  ISO11783  »  File Server Interaction Layer (FS IL)   » FSIL_SetSignal FSIL_SetSignal   Function Syntax long FSIL_SetSignal( dbSignal signal, double value ); // form 1 long FSIL_SetSignal( dbNode fs, dbSignal signal, double value ); // form 2 Description Sets the signal to the ..."},"7520":{y:0,u:"../Content/Topics/CANoeCANalyzer/FunctionBlocks/Logging/LoggingFileExternalComponents.htm",l:-1,t:"Logging Block: External Writer/Reader",i:0.000141571789302695,a:"Logging Block / Replay Block  » External Writer/Reader for Logging Files Logging Block: External Writer/Reader   You can specify external writers and readers for any number of log formats \n in order to write and read them in CANoe. These logging files can then be read in Replay Blocks, as offline ..."},"7521":{y:0,u:"../Content/Topics/TestCommands/CheckDescriptions/Deprecated/CDJ1939RequestRetryTimelimit.htm",l:-1,t:"J1939 Request Retry Timelimit (Check Description)",i:2.48598523171083E-05,a:" CANoe  »  Check Descriptions  »  J1939-Specific Checks  » J1939 Request Retry Timelimit J1939 Request Retry Timelimit   J1939 Request Check (Check Description)"},"7522":{y:0,u:"../Content/Topics/SampConf/XCPamd/SampConfsXCPamd.htm",l:-1,t:"Sample Configurations AMD/XCP",i:0.000271076383890886,a:" CANoe  »  Sample Configurations  » AMD/XCP Sample Configurations AMD/XCP   General XCP Tester CAN –  XCPDemo.cfg Demonstrates how to use CANoe for XCP on CAN communication. View Description XCP Tester FlexRay –  FlexRayXCP.cfg Demonstrates how to use CANoe for XCP on FlexRay communication. — ..."},"7523":{y:0,u:"../Content/Topics/CAPLFunctions/Security/Functions/CAPLfunctionSecurityLocalEncryptAES128ECB.htm",l:-1,t:"SecurityLocalEncryptAES128ECB",i:6.43294920373682E-05,a:"CAPL Functions  »  Security  » SecurityLocalEncryptAES128ECB SecurityLocalEncryptAES128ECB   Function Syntax long SecurityLocalEncryptAES128ECB(byte key[], dword keyLength, byte data[], dword dataLength, byte cipheredData[], dword cipheredDataLength) Description Encrypts data with a given key using ..."},"7524":{y:0,u:"../Content/Topics/CANoeCANalyzer/SIL/RealTargetHardware/SILAdapterC.htm",l:-1,t:"C SIL Adapter",i:6.38110203499157E-05,a:" CANoe  »  Software-in-the-Loop  »  Real Target Hardware  » C SIL Adapter C SIL Adapter   General To enable the System Under Test (SUT) to communicate with CANoe  via a hardware debugger, the provided SIL Adapter must be integrated. This integration is done in three steps: Generation of the SIL ..."},"7525":{y:0,u:"../Content/Topics/COMInterface/Objects/COMObjectVTSystem.htm",l:-1,t:"VTSystem (COM Object)",i:0.000254958425591849,a:" CANoe  »  COM Interface  »  Objects  » VTSystem VTSystem Application  »  Configuration  » VTSystem Description The VTSystem object represents the configuration of VT System in CANoe. Properties Methods Events — Example Availability COM Object Hierarchy"},"7526":{y:0,u:"../Content/Topics/SampConf/Car2x/CANoe/V2xBasicScenarioCN/V2xBasicScenariosCN.htm",l:-1,t:"Basic Scenarios (V2x Sample Configuration)",i:3.15507036040119E-05,a:"Sample Configurations  »  V2x  » Basic Scenarios (V2x) Basic Scenarios (V2x)   Desktops This configuration contains several desktops. Setup This desktop displays the Simulation Setup and Measurement Setup with a Trace Window and a Map Window and a Write Window. The Simulation Setup contains the ..."},"7527":{y:0,u:"../Content/Topics/vCDL/Language/vCDLTypeAlias.htm",l:-1,t:"Type Alias (vCDL)",i:4.89565044351206E-05,a:" CANoe  »  vCDL  »  vCDL 1.4  »  Language  » Type Alias Type Alias   Type alias definitions allow to give a specific name to another type. The syntax is similar to type alias declarations in C++11, using the keyword typedef followed by an identifier for the new type, the assignment operator = and a ..."},"7528":{y:0,u:"../Content/Topics/CAPLFunctions/TCPIPAPI/Functions/CAPLfunctionIPSetAdapterMacId.htm",l:-1,t:"IpSetAdapterMacId",i:4.47117629458147E-05,a:"CAPL Functions  »  TCP/IP API  » IpSetAdapterMacId IpSetAdapterMacId   Function Syntax long IpSetAdapterMacId( dword ifIndex, qword macId); Description Sets the mac id of the given interface. Parameters Return Values Example Availability  "},"7529":{y:0,u:"../Content/Topics/CAPLFunctions/CANopen/NodeLayerTFS/Functions/CAPLfunctionCoTfsSdoResetAbortList.htm",l:-1,t:"coTfsSDOResetAbortList",i:4.95734326759622E-05,a:"CAPL Functions  »  CANopen  »  Test Feature Set Node Layer  » coTfsSDOResetAbortList coTfsSDOResetAbortList (Level 2)   Function Syntax long coTfsSDOResetAbortList( dword nodeID ); // form 1 long coTfsSDOResetAbortList( void ); // form 2 Description Form 1: Removes all entries of the previously ..."},"7530":{y:0,u:"../Content/Topics/CAPLFunctions/Security/Functions/CAPLfunctionSecurityLocalGetOperationParameterKeys.htm",l:-1,t:"SecurityLocalGetOperationParameterKeys",i:6.41810845781887E-05,a:"CAPL Functions  »  Security  » SecurityLocalGetOperationParameterKeys SecurityLocalGetOperationParameterKeys   Function Syntax long SecurityLocalGetOperationParameterKeys(long category, dword keyBuffer[], dword keyBufferLength) Description Gets the list of operation parameter keys, supported by the ..."},"7531":{y:0,u:"../Content/Topics/COMInterface/Objects/COMObjectStartValues.htm",l:-1,t:"StartValues (COM Object)",i:3.52245502510095E-05,a:" CANoe  »  COM Interface  »  Objects  » StartValues StartValues Application  »  Configuration  »  VTSystem  »  ConfiguredChannel  » StartValues Application  »  Configuration  »  VTSystem  »  ConfiguredModule  »  ConfiguredChannels  »  ConfiguredChannel  » StartValues Application  »  Configuration  » ..."},"7532":{y:0,u:"../Content/Topics/CAPLFunctions/MOST/Functions/CAPLfunctionMOSTOutputMostEthPkt.htm",l:-1,t:"outputMostEthPkt",i:6.04332929208517E-05,a:"CAPL Functions  »  MOST  » outputMostEthPkt outputMostEthPkt   Function Syntax outputMostEthPkt(long channel, int64 destMacAdr, long dataLen, byte[] data); // form 1 outputMostEthPkt(long channel, long prio, long retryCount, int64 sourceMacAdr, int64 destMacAdr, long dataLen, byte[] data); // form 2 ..."},"7533":{y:0,u:"../Content/Topics/CAPLFunctions/AUTOSARpduIL/Functions/CAPLfunctionARILFaultInjectionEnablePDU.htm",l:-1,t:"ARILFaultInjectionEnablePDU",i:4.12432555396294E-05,a:"CAPL Functions  »  AUTOSAR PDU IL  » ARILFaultInjectionEnablePDU ARILFaultInjectionEnablePDU   Function Syntax long ARILFaultInjectionEnablePDU (dbMsg dbMessage); Description Enables the sending of the PDU. Parameters Return Values Example — Availability  "},"7534":{y:0,u:"../Content/Topics/CAPLFunctions/Sensor/Functions/CAPLfunctionSetNumberOfDataNibbles.htm",l:-1,t:"SetNumberOfDataNibbles",i:6.12619875133155E-05,a:"CAPL Functions  »  Sensor  » SetNumberOfDataNibbles SetNumberOfDataNibbles   Method  Syntax SensorErrorCode sysvarSensorNamespace.SetNumberOfDataNibbles(dword numDataNibbles); Description Sets the number of data nibbles of a simulated sensor to the given value. Parameters Return Values Returns a  ..."},"7535":{y:0,u:"../Content/Topics/SampConf/Car2x/CANoe/V2xTemplateConfigurationCN/V2xTemplateConfigurationJ2735_2016_CN.htm",l:-1,t:"Template Configuration J2735 2016 (V2x Sample Configuration)",i:3.15507036040119E-05,a:"Sample Configuration » Car2x » Template Configuration J2735 2016 Template Configuration J2735 2016   The following application messages are included: BasicSafetyMessage MAP SPAT CommonSafetyRequest EmergencyVehicleAlert IntersectionCollision NMEA_Corrections ProbeDataManagement ProbeVehicleData ..."},"7536":{y:0,u:"../Content/Topics/CANoeCANalyzer/Windows/Graphics/GraphicsWindowDuplicateSignals.htm",l:-1,t:"Graphics Window: Adding Duplicate Symbols",i:2.62426702603056E-05,a:"Graphics Window  » Adding Duplicate Symbols Graphics Window: Adding Duplicate Symbols   Some of the  symbols  you have pasted in the Graphics Window by  drag and drop  \n or from the Clipboard may occur more than once. Answer the question with Yes \n if you wish to add each symbol in the Graphics ..."},"7537":{y:0,u:"../Content/Topics/CANoeCANalyzer/Windows/BusStatistic/BusStatisticWindowEthernet.htm",l:-1,t:"Bus Statistics Window: Ethernet",i:0.00012321472990491,a:"Bus Statistics Window  »  Ethernet Bus Statistics Window: Ethernet   The Bus Statistics Window shows Ethernet specific data and values too. The following information is available:   •   System Variables for Statistics: Ethernet"},"7538":{y:0,u:"../Content/Topics/SampConf/SmartCharging/SCCCSBindingBasicSimulation.htm",l:-1,t:"CCS-Binding Basic Simulation (SmartCharging Sample Configuration)",i:5.88382341971069E-05,a:"Sample Configurations  »  SmartCharging  » CCS Basic Simulation (Communication Setup) CCS Basic Simulation (Communication Setup)   Introduction The configuration presents the most important features of the  Option SmartCharging  by connecting a vehicle simulation to a charge point simulation. In the ..."},"7539":{y:0,u:"../Content/Topics/SampConf/J1939/CANoe/MoreExamples/ProprietaryPG/ProprietaryPGCN.htm",l:-1,t:"Proprietary PG",i:4.16632248661422E-05,a:"Sample Configurations  »  J1939  » Proprietary PG Proprietary PG   PGN ranges are reserved in SAE J1939-21 for manufacturer-specific Parameter Groups: PGN EF00h for peer-to-peer Parameter Groups PGN FF00h to FFFFh for broadcast Parameter Groups Because any manufacturer can freely use these PGNs, an ..."},"7540":{y:0,u:"../Content/Topics/CAPLFunctions/Test/Functions/CAPLfunctionTestInfoHeadingEnd.htm",l:-1,t:"TestInfoHeadingEnd",i:0.000131299723320842,a:"CAPL Functions  »  Test Feature Set  » TestInfoHeadingEnd TestInfoHeadingEnd   Function Syntax void TestInfoHeadingEnd (long handle); Description Ends the previously created header row. Parameters Return Values — Example Example Availability TestInfoCell   •   TestInfoHeadingBegin   •   TestInfoRow"},"7541":{y:0,u:"../Content/Topics/CAPLFunctions/VTSystem/Functions/CAPLfunctionVTSvtsSetPWMVoltageHigh.htm",l:-1,t:"vtsSetPWMVoltageHigh",i:6.39764567167822E-05,a:"CAPL Functions  »  VT System  » vtsSetPWMVoltageHigh vtsSetPWMVoltageHigh   Function Syntax long vtsSetPWMVoltageHigh (char Target[], double Voltage); Description Specifies the high level on output of a digital output signal, especially a PWM signal. Parameters Return Values Example Availability ..."},"7542":{y:0,u:"../Content/Topics/CANoeCANalyzer/Ribbon/Hardware/NetworkHardware/NetworkHardwareOSUpdate.htm",l:-1,t:"Operating System Update",i:1.91306081808397E-05,a:"VN8900  » Operating System Update VN8900: Operating System Update Ribbon :  Hardware Tab | Network Hardware |Operating System Update In certain rare cases, when a software or driver update doesn\u0027t suffice, it can be necessary to update the operating system (including all pre-installed drivers) ..."},"7543":{y:0,u:"../Content/Topics/CAPLFunctions/Test/Functions/CAPLfunctionTestWaitForFrFrameError.htm",l:-1,t:"TestWaitForFrFrameError",i:9.26018167736657E-05,a:"CAPL Functions  »  Test Feature Set  » TestWaitForFrFrameError TestWaitForFrFrameError   Function Syntax long TestWaitForFrFrameError (dbFrFrame aFrame, dword aTimeout); long TestWaitForFrFrameError (dword aSlotId, dword aBaseCycle, dword aCycleRepetition, dword aChannelMask, dword aTimeout); long ..."},"7544":{y:0,u:"../Content/Topics/CANoeCANalyzer/FunctionBlocks/Replay/IDD_RB_MOST_CFG_PAGE.htm",l:-1,t:"Replay Configuration: MOST Options",i:0.000261313294862817,a:"Replay Block  » Configuration » MOST Options Replay Configuration: MOST Options   Send Here you indicate which Spy, Tx node or Rx node messages contained in the file should be sent. Types/Channels In addition to \u0027normal\u0027 messages here the user inputs whether system messages (RemRead/RemWrite or ..."},"7545":{y:0,u:"../Content/Topics/CAPLFunctions/MOST/Functions/CAPLfunctionMOSTApplicationNode.htm",l:-1,t:"mostApplicationNode",i:0.0001422061371426,a:"CAPL Functions  »  MOST  » mostApplicationNode mostApplicationNode   Function Syntax void mostApplicationNode(); Description This CAPL function can only be called in on preStart \nand switches the CAPL node into application mode. The node will not receive Spy messages any more, only receive messages ..."},"7546":{y:0,u:"../Content/Topics/CAPLFunctions/SmartCharging/Callbacks/CAPLfunctionSCCCertificateUpdateRes.htm",l:-1,t:"SCC_CertificateUpdateRes",i:6.24395493115898E-05,a:"CAPL Functions  »  Smart Charging  »  SCC Modeling Libraries (Simulation Setup)  »  EV Callback Functions  » SCC_CertificateUpdateRes SCC_CertificateUpdateRes   Function Syntax void SCC_CertificateUpdateRes ( byte SessionID[], \n\nlong ResponseCode, char ContractID[])  Description The callback is ..."},"7547":{y:0,u:"../Content/Topics/CAPLFunctions/Test/Functions/CAPLfunctionChkConfigSetCallback.htm",l:-1,t:"ChkConfig_SetCallback",i:0.000188908160465346,a:"CAPL Functions  »  Test Service Library  »  Commands to Control Checks  » ChkConfig_SetCallback ChkConfig_SetCallback   Function Syntax long ChkConfig_SetCallback(dword aCheckId, char [] CaplCallback); Method  Syntax check.SetCallback(char [] CaplCallback); Description Sets a CAPL callback for the ..."},"7548":{y:0,u:"../Content/Topics/COMInterface/Objects/COMObjectIOAcquisition.htm",l:-1,t:"IOAcquisition (COM Object)",i:3.41517107730314E-05,a:" CANoe  »  COM Interface  »  Objects  » IOAcquisition IOAcquisition Application  »  Configuration  »  IOHardware  »  VectorIO  »  IODevices  »  IODevice  » IOAcquisition Description The IOAcquisition object represents the acquisition configuration of a Vector I/O device. Properties Methods — Events ..."},"7549":{y:0,u:"../Content/Topics/CAPLFunctions/Test/Functions/CAPLfunctionTestWaitForMostAllBypass.htm",l:-1,t:"TestWaitForMostAllBypass",i:6.38686333383327E-05,a:"CAPL Functions  »  Test Feature Set  » TestWaitForMostAllBypass TestWaitForMostAllBypass   Function Syntax long TestWaitForMostAllBypass(long aValue, unsigned long aTimeout); Description Use this function to determine whether the bypass on the MOST hardware connected to the channel has been set to ..."},"7550":{y:0,u:"../Content/Topics/CAPLFunctions/IP/SOMEIPIL/Functions/CAPLfunctionSomeIpSyntaxPredefinedSDAccessPath.htm",l:-1,t:"Syntax for Predefined Service Discovery (SD) Access Paths",i:0.000128327250808631,a:"CAPL Functions  »  Ethernet  »  SOME/IP IL  » Syntax for Predefined Service Discovery (SD) Access Paths Syntax for Predefined Service Discovery (SD) Access Paths    "},"7551":{y:0,u:"../Content/Topics/CAPLFunctions/MOST/Functions/CAPLFunctionMOSTSetGetRetryParameter.htm",l:-1,t:"mostSetRetryParameter, mostGetRetryParameter",i:4.51383881430535E-05,a:"CAPL Function Overview »  MOST  » mostSetRetryParameter, mostGetRetryParameter mostSetRetryParameter, mostGetRetryParameter   Function Syntax long mostSetRetryParameter(long channel, long id, long value); long mostGetRetryParameter(long channel, long id); Description The functions provide access to ..."},"7552":{y:0,u:"../Content/Topics/CAPLFunctions/CANopen/NodeLayerTFS/Functions/CAPLfunctionCoTfsSdo.htm",l:-1,t:"coTfsSDO",i:3.5857770891039E-05,a:"CAPL Functions  »  CANopen  »  Test Feature Set Node Layer  » coTfsSDO coTfsSDO (Level 3)   Function Syntax long coTfsSDO( dword index, dword subIndex ); Description This function executes the following transfers: SDO Block Upload SDO Expedited Upload SDO Segmented Upload SDO Block Download SDO ..."},"7553":{y:0,u:"../Content/Topics/CAPLFunctions/CANstress/CAPLfunctionsCANstressAccessMultipleCANstressDevices.htm",l:-1,t:"Access Multiple CANstress Devices from a Single Test Module",i:2.94647459955949E-05,a:"CAPL Functions  »  CANstress  » Access Multiple CANstress Devices from a Single Test Module Access Multiple CANstress Devices from a Single Test Module   With previous versions of CANstress NL DLL, it was only possible to access a single CANstress device from a single test module. Since Version 2.0 ..."},"7554":{y:0,u:"../Content/Topics/CAPLFunctions/Diagnostics/Functions/CAPLfunctionDiagGetSuppressRespDiagSetSuppressResp.htm",l:-1,t:"diagGetSuppressResp, diagSetSuppressResp",i:7.71102910289392E-05,a:"CAPL Functions  »  Diagnostics  » diagGetSuppressResp, diagSetSuppressResp diagGetSuppressResp, diagSetSuppressResp   Function Syntax long diagSetSuppressResp (diagRequest req, long flag); // form 1 long diagGetSuppressResp \n (diagRequest req); // form 2 Method  Syntax diagRequest::SetSuppressResp ..."},"7555":{y:0,u:"../Content/Topics/CANoeCANalyzer/RTSetup/InterfaceMode/InterfaceModeConcept.htm",l:-1,t:"Interface Mode",i:0.00031951461326924,a:"Realtime Execution (RT Setup)  » Interface Mode VN8900  » Interface Mode Interface Mode   Configuration and Operation   •   Vector Platform Manager"},"7556":{y:0,u:"../Content/Topics/CAPLFunctions/Test/Functions/CAPLfunctionChkCreateJ1939Request.htm",l:-1,t:"ChkCreate_J1939Request; ChkStart_J1939Request",i:0.00019882848172191,a:"CAPL Functions  »  Test Service Library  »  Checks  » ChkCreate_J1939Request; ChkStart_J1939Request ChkCreate_J1939Request; ChkStart_J1939Request   Function Syntax dword ChkCreate_J1939Request(Node requestNode , Node responseNode, Message requestedMessage, dword expected, dword options, dword ..."},"7557":{y:0,u:"../Content/Topics/CAPLFunctions/TCPIPAPI/Functions/CAPLfunctionIpSetStackParameter.htm",l:-1,t:"IpSetStackParameter",i:4.47117629458147E-05,a:"CAPL Functions  »  TCP/IP API  » IpSetStackParameter IpSetStackParameter   Function Syntax long IpSetStackParameter(char parameterName[], long value); // form 1 long IpSetStackParameter(dword ifIndex, char parameterName[], long value); // form 2 Description With this function it is possible to ..."},"7558":{y:0,u:"../Content/Topics/CLibraryAPI/Functions/CAPLfunctioncclAbstractUnsubscribePDU.htm",l:-1,t:"cclAbstractUnsubscribePDU",i:3.86360090043396E-05,a:" CANoe  »  C Library API  »  Functions  » cclAbstractUnsubscribePDU cclAbstractUnsubscribePDU   Function Syntax int32_t cclAbstractUnsubscribePDU(cclPDUReceiverID consumedPDUID); Description Revokes a consumer side service PDU port subscription. Parameters Return Values Example Availability The C ..."},"7559":{y:0,u:"../Content/Topics/CAPLFunctions/LIN/Functions/CAPLfunctionLINSetMaxHeaderLength.htm",l:-1,t:"linSetMaxHeaderLength",i:7.63297009012557E-05,a:"CAPL Functions  »  LIN  » linSetMaxHeaderLength linSetMaxHeaderLength   Function Syntax dword linSetMaxHeaderLength(long bitTimes); Description Sets the maximum header length in bit times. Parameters Return Values On success, a value unequal to zero, otherwise zero. Example — Availability ..."},"7560":{y:0,u:"../Content/Topics/CAPLFunctions/ISO11783/ISOInteractionLayer/Functions/CAPLfunctionIso11783ILGetWSMaster.htm",l:-1,t:"Iso11783IL_GetWSMaster",i:3.67775937289007E-05,a:"CAPL Functions  »  ISO11783  »  ISO11783 Interaction Layer   » Iso11783IL_GetWSMaster Iso11783IL_GetWSMaster   Function Syntax dword Iso11783IL_GetWSMaster(dword ecuAddress); Description This function returns the address of the Working Set Master, which is assigned to an ECU with the address ..."},"7561":{y:0,u:"../Content/Topics/CANoeCANalyzer/Windows/Graphics/GraphicsDiagramPause.htm",l:-1,t:"Graphics Window: Pause",i:6.8612521749869E-05,a:"Graphics Window  »  Diagram  » Pause  Graphics Window: Pause Context Menu of the  Diagram : Pause You can use the Pause function during longer measurements to disable continuous scrolling of the Graphics Window. This may be done to observe a section of the measurement in any desired time resolution ..."},"7562":{y:0,u:"../Content/Topics/CAPLFunctions/IP/Methods/CAPLfunctionHasProtocolError.htm",l:-1,t:"ethernetPacket::HasProtocolError",i:6.36695367168423E-05,a:"CAPL Functions  »  Ethernet  »  Function Overview  » ethernetPacket::HasProtocolError ethernetPacket::HasProtocolError   Method  Syntax word  ethernetPacket .HasProtocolError(); Description Returns 1, if the IP protocols of the Ethernet packet contains protocol errors, like wrong checksum or wrong ..."},});