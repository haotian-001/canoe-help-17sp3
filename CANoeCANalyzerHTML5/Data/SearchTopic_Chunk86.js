define({"5719":{y:0,u:"../Content/Topics/CAPLFunctions/FlexRay/Functions/CAPLfunctionFRSetPocState.htm",l:-1,t:"frSetPOCState",i:8.6341771590612E-05,a:"CAPL Functions  »  FlexRay  » frSetPOCState frSetPOCState   Function Syntax long frSetPOCState( long channel, long ccNumber, \n long pocState ); Description This function puts the FlexRay Communication Controller (CC) into the desired Protocol Operation Mode (POC state). The function is non-blocking. ..."},"5720":{y:0,u:"../Content/Topics/CAPLFunctions/CommunicationObjects/Methods/CAPLfunctionSetEvent.htm",l:-1,t:"SetEvent",i:7.31931486096687E-05,a:"CAPL Functions  »  Communication Objects  » SetEvent SetEvent   Method  Syntax long  consumedEventRef ::SetEvent(Event event); long  providedEventRef ::SetEvent(Event event); long  eventConsumerRef ::SetEvent(Event event); long  eventProviderRef ::SetEvent(Event event); Description Sets the ..."},"5721":{y:0,u:"../Content/Topics/CAPLFunctions/Car2x/Functions/CAPLfunctionC2xSetTokenInt64.htm",l:-1,t:"C2xSetTokenInt64",i:4.80525515721617E-05,a:"CAPL Functions  »  Car2x  » C2xSetTokenInt64 C2xSetTokenInt64   Function Syntax long C2xSetTokenInt64( long packet, char protocolDesignatorl[], char tokenDesignator[], int64 value ); // form 1 long C2xSetTokenInt64( long packet, char protocolDesignatorl[], char tokenDesignator[], long byteOffset, ..."},"5722":{y:0,u:"../Content/Topics/SampConf/popups/PopupLSS.htm",l:-1,t:"LSS",i:1.91306081808397E-05,a:"LSS   Layer \n Setting Services"},"5723":{y:0,u:"../Content/Topics/SampConf/CANopen/CANoe/SDOAccess/Operation/SDOAcOpObjectSelection.htm",l:-1,t:"SDO Transfer- Access according to the object \n selection",i:2.69456903986269E-05,a:"Sample Configurations  »  CANopen  »  SDO Transfer  » SDO Transfer- Access according to the object \n selection SDO Transfer- Access according to the object \n selection   The object to be read/written can be selected in the Object \n combination field of group Object Selection. \n The respective ..."},"5724":{y:0,u:"../Content/Topics/CANoeCANalyzer/MOST/SimulationConcept/ApplicationSocket/ShadowService.htm",l:-1,t:"Shadow Service (MOST Simulation Concept)",i:7.98377247828468E-05,a:"MOST  »  Simulation Concept  » Shadow Service Shadow Service   The shadow service can be used to locate an appropriate function block \n in the network. Applications with controller functionality, which send \n command messages to a function block, obtain the logical address of the \n device containing ..."},"5725":{y:0,u:"../Content/Topics/CAPLFunctions/Test/Functions/CAPLfunctionTestResetEnvVarValue.htm",l:-1,t:"TestResetEnvVarValue",i:0.000138492540338576,a:"CAPL Functions  »  Test Feature Set  » TestResetEnvVarValue TestResetEnvVarValue   Function Syntax long TestResetEnvVarValue (dbEnvVar aEnvVar); Description Resets the environment variable to initial value. If no initial value is available, the environment variable is set to 0 or \"\". Parameters ..."},"5726":{y:0,u:"../Content/Topics/CAPLFunctions/FlexRay/Functions/CAPLfunctionFrChannelUsesCANoeNetworkSimulator.htm",l:-1,t:"frChannelUsesCANoeNetworkSimulator",i:3.23882963415035E-05,a:"CAPL Functions  »  FlexRay  » frChannelUsesCANoeNetworkSimulator frChannelUsesCANoeNetworkSimulator   Function Syntax long frChannelUsesCANoeNetworkSimulator(long channel); Description Gets whether the given channel uses the built-in network simulator of CANoe. Parameters Return Values Example ..."},"5727":{y:0,u:"../Content/Topics/CANoeCANalyzer/Ribbon/RibbonStimulationSimulation.htm",l:-1,t:"Simulation (Ribbon)",i:6.23844396145017E-05,a:"Ribbon  » Simulation Simulation Ribbon : Simulation Tab Stimulation/Simulation – Concept   •   Stimulation/Simulation – Function Overview   •   Stimulation/Simulation Windows"},"5728":{y:0,u:"../Content/Topics/CANoeCANalyzer/AFDX/protocols/afdxProtocolUDP.htm",l:-1,t:"UDP (AFDX)",i:0.000107300969319055,a:"AFDX  »  Protocol Overview  » UDP UDP   Protocol Information UDP (User Data Protocol) is a network protocol with minimal protocol header. It is a connectionless protocol and doesn\u0027t use data segmentation, that means the packet size in CANoe is restricted to the maximum Ethernet size. With a checksum ..."},"5729":{y:0,u:"../Content/Topics/CAPLFunctions/Other/Functions/CAPLfunctionSetClockControlTime.htm",l:-1,t:"SetClockControlTime",i:6.58628057915514E-05,a:"CAPL Functions  »  General  »  Function Overview  » SetClockControlTime SetClockControlTime   Function Syntax void SetClockControlTime(char[] panel, char[] control, int hours, int minutes, int seconds); // form 1 void SetClockControlTime(char[] panel, char[] control, int time); // form 2 Description ..."},"5730":{y:0,u:"../Content/Topics/CAPLFunctions/ISO11783/ISOInteractionLayerVT/Functions/CAPLfunctionIso11783VTILResetDelayedTxTpEoma.htm",l:-1,t:"VTIL_ResetDelayedTxTpEoma",i:6.31176010967181E-05,a:"CAPL Functions  »  ISO11783  »  Virtual Terminal Interaction Layer (VT IL)  » VTIL_ResetDelayedTxTpEoma VTIL_ResetDelayedTxTpEoma   Function Syntax long VTIL_ResetDelayedTxTpEoma( ); //Form 1 long VTIL_ResetDelayedTxTpEoma( dbNode node); //Form 2 Description Resets all EoMA messages that where ..."},"5731":{y:0,u:"../Content/Topics/CAPLFunctions/J1939/GBT27930InteractionLayer/Functions/CAPLfunctionGBT27930ILStopChargingSimulation.htm",l:-1,t:"GBT27930IL_StopChargingSimulation",i:2.53633439571094E-05,a:"CAPL Functions  »  J1939  »  GB/T 27930 IL  » GBT27930IL_StopChargingSimulation GBT27930IL_StopChargingSimulation   Function Syntax long GBT27930IL_StopChargingSimulation( ); // form 1 long GBT27930IL_StopChargingSimulation(dbNode node); // form 2 Description Node stops the charging simulation. ..."},"5732":{y:0,u:"../Content/Topics/CAPLFunctions/Media/Properties/CAPLfunctionFrameRateRangeMax.htm",l:-1,t:"FrameRateRangeMax",i:3.74646044131614E-05,a:"CAPL Functions  »  Media API  »  Properties  » FrameRateRangeMax FrameRateRangeMax   Property FrameRateRangeMax Description The maximum frame rate that is supported by a video capture device, in frames per second. Data Type qword Remarks To get this property, call  MediaGetPropertyRatio . To set ..."},"5733":{y:0,u:"../Content/Topics/CAPLFunctions/ADFX/Functions/CAPLfunctionA664InitMessage.htm",l:-1,t:"A664InitMessage",i:6.46175708354408E-05,a:"CAPL Functions  »  AFDX  » A664InitMessage A664InitMessage   Function Syntax long A664InitMessage (a664Message aMessage, dword srcIP, dword dstIP, word srcUDP, word dstUDP, word VLid, word payloadSize) Description The complete Ethernet, IP- and UDP headers for an AFDX message are consistently set ..."},"5734":{y:0,u:"../Content/Topics/CAPLFunctions/ISO11783/ISOInteractionLayerVT/Functions/CAPLfunctionIso11783VTILResetDelayededTxTpAbort.htm",l:-1,t:"VTIL_ResetDelayededTxTpAbort",i:6.31176010967181E-05,a:"CAPL Functions  »  ISO11783  »  Virtual Terminal Interaction Layer (VT IL)  » VTIL_ResetDelayededTxTpAbort VTIL_ResetDelayededTxTpAbort   Function Syntax long VTIL_ResetDelayededTxTpAbort( ); //Form 1 long VTIL_ResetDelayededTxTpAbort( dbNode node); //Form 2 Description Resets all Abort messages ..."},"5735":{y:0,u:"../Content/Topics/CAPLFunctions/Diagnostics/Functions/CAPLfunctionDiagGetCommParameter.htm",l:-1,t:"diagGetCommParameter",i:0.000207884053096734,a:"CAPL Functions  »  Diagnostics  » diagGetCommParameter diagGetCommParameter   Function Syntax long diagGetCommParameter (char paramName[]); // form 1 long diagGetCommParameter( char paramName[], dword index,\n                char buffer[], dword bufferLen); // form 2 long DiagGetCommParameter(char ..."},"5736":{y:0,u:"../Content/Topics/CAPLFunctions/SignalAccess/CAPLfunctionGetSignalValueForDescription.htm",l:-1,t:"getSignalValueForDescription",i:3.85310487122572E-05,a:"CAPL Functions  »  Signal Access  » getSignalValueForDescription getSignalValueForDescription   Function Syntax long getSignalValueForDescription(Signal  signal, char description[], int64\u0026 rawValue); // form 1 long getSignalValueForDescription(char signalNamel[], char description[], int64\u0026 ..."},"5737":{y:0,u:"../Content/Topics/CAPLFunctions/LIN/Functions/CAPLfunctionLINRunSchedTableNtimes.htm",l:-1,t:"linRunSchedTableNtimes",i:3.94778668616039E-05,a:"CAPL Functions  »  LIN  » linRunSchedTableNtimes linRunSchedTableNtimes   Function Syntax long linRunSchedTableNtimes (dword tableIndex, dword numberOfRepetitions, dword onSlotIndex, dword returnToTableIndex); Description Switches from the current schedule table to another one, runs the table n ..."},"5738":{y:0,u:"../Content/Topics/CAPLFunctions/CommunicationObjects/EventProcedures/CAPLfunctionOnValueUpdate.htm",l:-1,t:"on value_update",i:9.87967879615066E-05,a:"CAPL Functions  »  Communication Objects / Distributed Objects  » on value_update on value_update   Function Syntax on value_update \u003cvalue\u003e; Description The event procedure is called whenever the specified value is updated, regardless of whether the value has changed. You can use the event procedure ..."},"5739":{y:0,u:"../Content/Topics/CANoeCANalyzer/Sensor/SensorI2CProtocol.htm",l:-1,t:"I2C Protocol",i:5.50854735785155E-05,a:"Option .Sensor  » I2C Protocol I2C Protocol   The Inter-Integrated Circuit Interface (I2C) is a synchronous serial data network interface for data exchange between at least a master and one or several slaves. Multi-master configurations are permitted, but they are not supported by CANoe. The I2C ..."},"5740":{y:0,u:"../Content/Topics/vCDL/Language/vCDLAttributeRefinements.htm",l:-1,t:"Attribute Refinements (vCDL)",i:5.10010054378927E-05,a:" CANoe  »  vCDL  »  vCDL 1.4  »  Language  » Attribute Refinements Attribute Refinements   To be able to split the pure communication description from binding specific settings or for overriding attribute settings  (e.g. per endpoint)  the refine keyword allows to reference any named objects and ..."},"5741":{y:0,u:"../Content/Topics/CAPLFunctions/Security/Functions/CAPLfunctionX509Extension_GetIsCritical.htm",l:-1,t:"X509Extension_GetIsCritical",i:6.41810845781887E-05,a:"CAPL Functions  »  Security  » X509Extension_GetIsCritical X509Extension_GetIsCritical   Method  Syntax dword X509Extension_GetIsCritical(qword objectHandle, dword\u0026 outValue) Description Getter function for the Critical field of the X.509 Extension handle. Parameters Selectors — Return Values ..."},"5742":{y:0,u:"../Content/Topics/CAPLFunctions/Test/Functions/CAPLfunctionTestJoinRawSignalMatch.htm",l:-1,t:"TestJoinRawSignalMatch",i:0.000117154001831049,a:"CAPL Functions  »  Test Feature Set  » TestJoinRawSignalMatch TestJoinRawSignalMatch   Function Syntax TestJoinRawSignalMatch(dbSignal aSignal, int64 value); // form 1 TestJoinRawSignalMatch(char aSignalName[], int64 value); // form 2 TestJoinRawSignalMatch(dbSignal aSignal, byte data[], dword ..."},"5743":{y:0,u:"../Content/Topics/CAPLFunctions/IP/AUTOSARethIL/Functions/CAPLfunctionOnAREthMethodRequest.htm",l:-1,t:"\u003cOnAREthMethodRequest\u003e",i:6.94328238827272E-05,a:"CAPL Functions  »  Ethernet  »  AUTOSAR Eth IL  » \u003cOnAREthMethodRequest\u003e \u003cOnAREthMethodRequest\u003e   Function Syntax void \u003cOnAREthMethodRequest\u003e(\tdword methodHandle, dword messageHandle, dword messageResponseHandle ); // form 1 void \u003cOnAREthMethodRequest\u003e( dword methodHandle, dword messageHandle ); // ..."},"5744":{y:0,u:"../Content/Topics/CANoeCANalyzer/SCOPE/ScopePhysicalLayerTestCAN.htm",l:-1,t:"Physical Layer Test for CAN (Scope)",i:2.62639721929913E-05,a:"Scope  »  Physical Layer Test  » CAN Physical Layer Test for CAN   The signal quality of a CAN high-speed channel can be verified with the bitmask analysis. The bitmask defines an area through which the signal must not cut. If portions of the signal are located within the bitmask, the Scope signals ..."},"5745":{y:0,u:"../Content/Topics/CAPLFunctions/CommunicationObjects/Methods/CAPLfunctionConsumedMethodRefCallAsync.htm",l:-1,t:"consumedMethodRef::CallAsync",i:7.31256109858634E-05,a:"CAPL Functions  »  Communication Objects  » consumedMethodRef::CallAsync consumedMethodRef::CallAsync   Method  Syntax callcontext \u003cMethodType\u003e  consumedMethodRef ::CallAsync(params ...); // form 1 void consumedMethodRef::CallAsync(params ..., Callback); // form 2 Description Calls the method from ..."},"5746":{y:0,u:"../Content/Topics/CAPLFunctions/Test/Functions/CAPLfunctionHILAPIStartSignalGenerator.htm",l:-1,t:"HILAPIStartSignalGenerator",i:0.000100729938054137,a:"CAPL Functions  »  Test Service Library  »  Stimulus Functions  » HILAPIStartSignalGenerator HILAPIStartSignalGenerator   Function Syntax dword HILAPIStartSignalGenerator(dword handle); Description Starts or resumes a Signal Generator. Parameters Return Values Example Availability ..."},"5747":{y:0,u:"../Content/Topics/CAPLFunctions/CANopen/NodeLayerTFS/Functions/CAPLfunctionCoTfsSdoInit.htm",l:-1,t:"coTfsSDOInit",i:8.62240015503944E-05,a:"CAPL Functions  »  CANopen  »  Test Feature Set Node Layer  » coTfsSDOInit coTfsSDOInit (Level 1)   Function Syntax long coTfsSDOInit( dword index, dword subIndex, dword ccs, dword expedited, dword sizeIndicated, dword notUsed, byte  inValueBuf[], dword valueBufSize ); Description This function ..."},"5748":{y:0,u:"../Content/Topics/ModelEditor/ModelEditorTLS.htm",l:-1,t:"Model Editor",i:5.88433620412649E-05,a:" Model Editor  »  Safety \u0026 Security » TLS Model Editor   TLS Configuration If you have selected the TLS (Transport Layer Security) node in the tree view, all TLS configurations  used in CANoe data model  are displayed here with the following properties: Name Role Comment You can add and delete TLS ..."},"5749":{y:0,u:"../Content/Topics/CAPLFunctions/ISO11783/ISOInteractionLayerFS/Functions/CAPLfunctionIso11783FSILOnCA.htm",l:-1,t:"FSIL_OnCA",i:5.51781215627026E-05,a:"CAPL Functions  »  ISO11783  »  File Server Interaction Layer (FS IL)   » FSIL_OnCA FSIL_OnCA (Callback)   Function Syntax long FSIL_OnCA(long newAddress); Description Is called from the FS IL when a Command Address message is received. The return value defines the node reaction to the Command ..."},"5750":{y:0,u:"../Content/Topics/CAPLFunctions/IP/SOMEIPIL/Functions/CAPLfunctionSomeIpRegisterCallback.htm",l:-1,t:"SomeIpRegisterCallback",i:3.72726476731717E-05,a:"CAPL Functions  »  Ethernet  »  SOME/IP IL  » SomeIpRegisterCallback SomeIpRegisterCallback   Function Syntax LONG SomeIpRegisterCallback( dword objHandle, char callbackName[] ); Description Enables to register/unregister a CAPL callback function for an object which has been created separately. ..."},"5751":{y:0,u:"../Content/Topics/CAPLFunctions/DistributedObjects/Methods/CAPLfunctionBindingSetInParameter.htm",l:-1,t:"Binding::SetInParameter",i:7.52213860213954E-05,a:"CAPL Functions  »  Distributed Objects  » Binding::SetInParameter Binding::SetInParameter   Method  Syntax long  Binding ::SetInParameter(callContext * cco, char name[], double value); long  Binding ::SetInParameter(callContext * cco, char name[], long value); long  Binding ..."},"5752":{y:0,u:"../Content/Topics/CAPLFunctions/Security/Functions/CAPLfunctionX509ObjectFactory_createPkcs10SigningRequest.htm",l:-1,t:"X509ObjectFactory_createPkcs10SigningRequest",i:6.41810845781887E-05,a:"CAPL Functions  »  Security  » X509ObjectFactory_createPkcs10SigningRequest X509ObjectFactory_createPkcs10SigningRequest   Method  Syntax dword X509ObjectFactory_createPkcs10SigningRequest(qword objectHandle, qword\u0026 outHandleCsr) Description Creation function for empty handle of type ..."},"5753":{y:0,u:"../Content/Topics/CANoeCANalyzer/J1939/blocks/gnssmonitor/procedures/gmZoomGraphic.htm",l:-1,t:"Display a Segment of the Graphic",i:6.24278384846911E-05,a:"J1939  »  GNSS \n Monitor  » Display a Segment of the Graphic Display a Segment of the Graphic   A specific segment of the graphic can be displayed at \n a larger scale. To do this, click with the right mouse button and move \n the cursor. As you move the cursor, you describe a rectangle representing \n ..."},"5754":{y:0,u:"../Content/Topics/CANoeCANalyzer/SCOPE/ScopeBitMaskDefinition.htm",l:-1,t:"Bitmask Definition (Scope)",i:5.38490841072897E-05,a:"Scope  »  Layout  »  Eye Diagram  » Bitmask Definition Bitmask Definition   Click on   (selection via  ) of the  Eye Diagram\u0027s  toolbar in the Scope Window to open the Bitmask Definition dialog. In addition to the eye diagram you can also analyze the eye diagram. To do this, a bitmask must be ..."},"5755":{y:0,u:"../Content/Topics/CAPLFunctions/TCPIPAPI/EventProcedures/CAPLfunctionTCPIPOnIpAddressRemoved.htm",l:-1,t:"OnIpAddressRemoved",i:4.47117629458147E-05,a:"CAPL Functions  »  TCP/IP API  » OnIpAddressRemoved OnIpAddressRemoved   Function Syntax void OnIpAddressRemoved(dword ifIndex, ip_address address, dword prefix, dword origin); Description If the CAPL program implements this callback it is called when a address gets removed from a network interface. ..."},"5756":{y:0,u:"../Content/Topics/CAPLFunctions/SmartCharging/Callbacks/SCC_MessageID.htm",l:-1,t:"Message ID",i:0.000362186016033242,a:"CAPL Functions  »  Smart Charging  » Message ID Message ID   CCS-Binding The following table applies to all callbacks and functions where a message ID is included. Modeling Libraries The following table applies to all callback functions where a message ID is included. Vehicle States The following ..."},"5757":{y:0,u:"../Content/Topics/CANoeCANalyzer/J1939/j1939tsl/j1939tslPatterns.htm",l:-1,t:"Test Pattern (J1939 TSL)",i:0.000130936267523218,a:"J1939  »  J1939 Test Service Library  » Test Pattern Test Pattern   Test patterns are small test procedures. The J1939 test pattern can \n be used in CAPL and XML test modules. Test patterns are active, this means \n messages are sent to create a response. CAPL Function Overview  •   XML Overview"},"5758":{y:0,u:"../Content/Topics/CANoeCANalyzer/Windows/Trace/TraceWindowFilterPredefinedMOSTEvents.htm",l:-1,t:"Predefined Filter for MOST Events",i:0.000118646054363624,a:" CANoe  » … »  Trace Window  »  Predefined Filters  » MOST Events Predefined Filter for MOST Events Predefined Filter |MOST Events In the MOST Filter dialog you can set filters on defined messages and events. Messages These settings determine which messages are to be filtered. An activated check box ..."},"5759":{y:0,u:"../Content/Topics/CAPLFunctions/MOST/CAPLfunctionsMOSTHighObserverCombiner.htm",l:-1,t:"MOST: High Observer and Combiner",i:0.000116489793778773,a:"CAPL Functions  »  MOST  » High Observer and Combiner MOST: High Observer and Combiner   The MOST High Observer observes all messages belonging to the MOST High \n Protocol (MHP) and uses the Combiner to combine them. The CAPL event procedures described here allow the reaction to events of the ..."},"5760":{y:0,u:"../Content/Topics/CANoeCANalyzer/J1939/j1939tsl/j1939tslOverview.htm",l:-1,t:"Test Service Library (J1939)",i:0.000370089603948348,a:"J1939  » Test Service Library Test Service Library   The J1939 Test Service Library (short J1939 TSL) extends the Test Feature Set with J1939 \n specific functions. The functions can be used in CAPL and XML test modules. In difference to the standard \n functions of the Test Feature Set (TSL), the ..."},"5761":{y:0,u:"../Content/Topics/SampConf/IOhil/CANoe/IOhardware/IOHardwareCN.htm",l:-1,t:"I/O Hardware",i:3.70491074889286E-05,a:"Sample Configurations  »  I/O HIL  » I/O Hardware I/O Hardware   The analog and digital I/O ports of different I/O cards can be read from or displayed on via CANoe I/O interface using system variables. The I/O cards are addressed by special device DLLs (Dynamic Link Libraries). There is a specific ..."},"5762":{y:0,u:"../Content/Topics/CAPLFunctions/A429/Functions/CAPLfunctionA429InitPayload.htm",l:-1,t:"a429InitPayload",i:3.8105639091395E-05,a:"CAPL Functions  » A429 » a429InitPayload a429InitPayload   Function Syntax long a429InitPayload (a429Word myA429word) Description Initialize the payload of an existing a429word using the current values of corresponding signals from SignalServer. This can be used to initialize a message from scratch ..."},"5763":{y:0,u:"../Content/Topics/CAPLFunctions/ISO11783/ISONodeLayer/Functions/CAPLfunctionIso11783OPShowObject.htm",l:-1,t:"Iso11783OPShowObject",i:4.89887579938959E-05,a:"CAPL Functions  »  ISO11783  »  ISO11783 Node Layer  » Iso11783OPShowObject Iso11783OPShowObject   Function Syntax long Iso11783OPShowObject( dword ecuHandle, dword \n objectID, dword show ); Description The function shows or hides an object. The Show \n Object command is sent to the Virtual Terminal. ..."},"5764":{y:0,u:"../Content/Topics/CAPLFunctions/CommunicationObjects/EventProcedures/CAPLfunctionOnAbstractEventUnsubscribed.htm",l:-1,t:"on Abstract_EventUnsubscribed",i:3.96681183462926E-05,a:"CAPL Functions  »  Communication Objects  » on Abstract_EventUnsubscribed on Abstract_EventUnsubscribed   Function Syntax on Abstract_EventUnsubscribed \u003cEvent\u003e; Description The event procedure is called at the provider when an event is unsubscribed by a consumer and abstract binding is used. ..."},"5765":{y:0,u:"../Content/Topics/CAPLFunctions/IP/AUTOSARethIL/Functions/CAPLFunctionAREthTlsAuthenticateAsClientWithConfiguration.htm",l:-1,t:"AREthTlsAuthenticateAsClientWithConfiguration",i:7.23530257203265E-05,a:"CAPL Functions  »  Ethernet  »  AUTOSAR Eth IL  » AREthTlsAuthenticateAsClientWithConfiguration AREthTlsAuthenticateAsClientWithConfiguration   Function Syntax AREthTlsAuthenticateAsClientWithConfiguration(dword connectionHandle,char configuration[]) Description Starts the (D) TLS  authentication ..."},"5766":{y:0,u:"../Content/Topics/CAPLFunctions/IP/Functions/CAPLfunctionEthGetRxBitRate.htm",l:-1,t:"ethGetRxBitRate",i:2.1003717686362E-05,a:"CAPL Functions  »  Ethernet  »  Function Overview  » ethGetRxBitRate ethGetRxBitRate   Function Syntax qword ethGetRxBitRate(ethernetPort port, ValueSelector valueSelector); Description Returns the RX bitrate of the specified port. The parameter valueSelector controls whether the minimum value, the ..."},"5767":{y:0,u:"../Content/Topics/CAPLFunctions/Security/Functions/CAPLfunctionX509Verifier_VerifyCertificateChain.htm",l:-1,t:"X509Verifier_VerifyCertificateChain",i:6.41810845781887E-05,a:"CAPL Functions  »  Security  » X509Verifier_VerifyCertificateChain X509Verifier_VerifyCertificateChain   Method  Syntax dword X509Verifier_VerifyCertificateChain(qword objectHandle, qword certificateToBeVerified, dword\u0026 verificationResult) Description Verificaiton function for Certificate chains. ..."},"5768":{y:0,u:"../Content/Topics/CANoeCANalyzer/Ribbon/File/Options/Extensions/ExtensionsMultiCANoe.htm",l:-1,t:"Configuration: Multi CANoe",i:9.31198014308302E-05,a:"Options  » Extensions »  Multi CANoe Configuration: Multi CANoe Ribbon :  File Tab | Options |Extensions|Multi CANoe Multi CANoe Settings Here you configure the participants of a  Multi CANoe cluster . With Activate Multi CANoe, you activate Multi CANoe for this CANoe. Activate Use IPv6 to use ..."},"5769":{y:0,u:"../Content/Topics/CANoeCANalyzer/Car2x/asn1/asnUsePacketTypeDesignators.htm",l:-1,t:"Initializing Several Protocol Layers (Car2x, ASN.1)",i:0.000119026037885837,a:"Car2x  »  Procedures  » Initializing Several Protocol Layers Initializing Several Protocol Layers   You can initialize a packet with the wanted underlying protocols by using combinations of Packet Type Designators. The single packet type designators are intercombinable and can be assigned as strings ..."},"5770":{y:0,u:"../Content/Topics/CANoeCANalyzer/General/HELP_STARTDELAY.htm",l:-1,t:"Start Delay",i:3.68670328661693E-05,a:" CANoe  » Start Delay Start Delay   The Start Delay is a time span after the start of measurement in which \n the particular node remains completely passive. It does not react to external \n influences, nor does it activate itself. It does not change its behavior \n and function like every other node ..."},"5771":{y:0,u:"../Content/Topics/CAPLFunctions/Test/Functions/CAPLfunctionTestWaitForEthernetLinkStatus.htm",l:-1,t:"TestWaitForEthernetLinkStatus",i:4.97244385942953E-05,a:"CAPL Functions  »  Test Feature Set  » TestWaitForEthernetLinkStatus TestWaitForEthernetLinkStatus   Function Syntax long TestWaitForEthernetLinkStatus(long channel, long status, dword aTimeout); // form 1 long TestWaitForEthernetLinkStatus(long channel, Int64 hwChannel, long status, dword ..."},"5772":{y:0,u:"../Content/Topics/CAPLFunctions/Test/Functions/CAPLfunctionChkQueryEventReason.htm",l:-1,t:"ChkQuery_EventReason",i:0.000114540933722623,a:"CAPL Functions  »  Test Service Library  »  Status Report Functions  » ChkQuery_EventReason ChkQuery_EventReason   Function Syntax long ChkQuery_EventReason (dword checkId); Method  Syntax check.QueryEventReason(); Description Retrieves the exact reason of firing event in the LIN specific check. ..."},"5773":{y:0,u:"../Content/Topics/CAPLFunctions/Car2x/Functions/CAPLfunctionC2xSecCertificateValidIdentifiedRegion.htm",l:-1,t:"C2xSecCertificateValidIdentifiedRegion",i:4.80525515721617E-05,a:"CAPL Functions  »  Car2x  » C2xSecCertificateValidIdentifiedRegion C2xSecCertificateValidIdentifiedRegion   Function Syntax long C2xSecCertificateValidIdentifiedRegion(long certHdl, dword countryId, dword checkChain); Description Validates the validity of a certificate region. Parameters ..."},"5774":{y:0,u:"../Content/Topics/CANoeCANalyzer/Ribbon/File/Options/Extensions/GLLogger.htm",l:-1,t:"GL Logger",i:0.00025450956189157,a:"Vector Logger Suite  » Configuration Options  » Extensions » GL Logger GL Logger Ribbon :  File Tab | Options |Extensions|GL Logger GL Logger Mode Options Monitoring Mode Signal Sampling Mode  "},"5775":{y:0,u:"../Content/Topics/CANoeCANalyzer/LIN/HowTos/LIN_Create_CANoeLIN-Configuration.htm",l:-1,t:"How to Create a LIN Configuration",i:0.000244865774334134,a:"LIN  » How to Create a LIN Configuration How to Create a LIN Configuration   How to Create a LIN Description File"},"5776":{y:0,u:"../Content/Topics/CANoeCANalyzer/J1939/blocks/diagmonitor/dmTabDTC.htm",l:-1,t:"DTC",i:0.000175772952876392,a:"J1939  »  J1939 DTC Monitor  » DTC DTC   The page DTC of the J1939 DTC Monitor shows the error codes which can requested with Diagnostic Message Parameter Groups (DM6, DM12, DM23, DM27, DM28, DM35, DM41 to DM52).The columns of the table are configurable in that way that it is shown which DTC was ..."},"5777":{y:0,u:"../Content/Topics/CAPLFunctions/Diagnostics/Functions/CAPLfunctionDiagGetFunctionalGroupID.htm",l:-1,t:"diagGetFunctionalGroupId",i:6.39919394772371E-05,a:"CAPL Functions  »  Diagnostics  » diagGetFunctionalGroupId diagGetFunctionalGroupId   Function Syntax dword diagGetFunctionalGroupId () dword diagGetFunctionalGroupId (char groupQualifier) Description Determines the CAN ID on which functional requests are sent by the diagnostic tester. If the ..."},"5778":{y:0,u:"../Content/Topics/CANoeCANalyzer/Ethernet/Protocols/ProtocolNTPControlmsg.htm",l:-1,t:"NTP/SNTP - Control messages",i:2.16381250964572E-05,a:"Ethernet  »  Protocol Overview  »  NTP  » NTP/SNTP - Control messages NTP/SNTP - Control messages   For control messages of  NTP  the following header format is valid: Header Format  "},"5779":{y:0,u:"../Content/Topics/CAPLFunctions/DistributedObjects/Methods/CAPLfunctiondistObjBlueprintGetAttribute.htm",l:-1,t:"distObjBlueprint::GetAttribute",i:7.17816517754894E-05,a:"CAPL Functions  »  Distributed Objects  » distObjBlueprint::GetAttribute distObjBlueprint::GetAttribute   Method  Syntax long  distObjBlueprint  *::GetAttribute(char name[], char value[]); long  distObjBlueprint  *::GetAttribute(char name[], long\u0026 value); long  distObjBlueprint  *::GetAttribute(char ..."},"5780":{y:0,u:"../Content/Topics/CANoeCANalyzer/SIL/VirtualExecutionEnvironment/SILAdapterC++.htm",l:-1,t:"C++ SIL Adapter",i:5.25931945226307E-05,a:" CANoe  »  Software-in-the-Loop  »  Virtual Execution Environment  » C++ SIL Adapter C++ SIL Adapter   General When the C++ SIL Adapter is created, it is completely generated as source code in the selected directory. A CMakeLists.txt file is included with the SIL Adapter, which allows the SIL ..."},"5781":{y:0,u:"../Content/Topics/CAPLFunctions/Other/Functions/CAPLfunctionSetPictureBoxImage.htm",l:-1,t:"SetPictureBoxImage",i:0.000208196280644868,a:"CAPL Functions  »  General  »  Function Overview  » SetPictureBoxImage SetPictureBoxImage   Function Syntax setPictureBoxImage(panel, control, imagefile); Description Replaces the image of the Panel Designer control during runtime:  Picture Box The panel is accessed by its individual panel name that ..."},"5782":{y:0,u:"../Content/Topics/CAPLFunctions/Diagnostics/Functions/CAPLfunctiondiagGetParameterLongName.htm",l:-1,t:"diagGetParameterLongName, diagGetRespParameterLongName",i:7.11449068391489E-05,a:"CAPL Functions  »  Diagnostics  » diagGetParameterLongName, diagGetRespParameterLongName diagGetParameterLongName, diagGetRespParameterLongName   Function Syntax long\n diagGetParameterLongName (diagResponse obj, dword paramNo, char buffer[],\n dword buffersize); long\n diagGetParameterLongName ..."},"5783":{y:0,u:"../Content/Topics/CANoeCANalyzer/FunctionBlocks/IG/IDD_VG_CFG_SWEEP.htm",l:-1,t:"Value Generator Type: Range of Values",i:5.26481555815748E-05,a:"IG  »  Configuration  »    Signal List  »  Signal Configurator  » Type: Range of Values  CAN Interactive Generator  »  Signal Generator  » Type: Range of Values Value Generator Type: Range of Values   This generator type generates \n a signal chart, whose value range is defined in the CANdb++ ..."},});