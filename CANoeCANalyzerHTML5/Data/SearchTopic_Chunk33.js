define({"2206":{y:0,u:"../Content/Topics/CAPLFunctions/DistributedObjects/EventProcedures/CAPLfunctionOnAnyFctCalling.htm",l:-1,t:"on any_fct_calling",i:4.14736886503626E-05,a:"CAPL Functions  »  Distributed Objects  » on any_fct_calling on any_fct_calling   Function Syntax on any_fct_calling \u003cprovided or internal interface method\u003e; Description This handler is called whenever a method of a distributed object derived from the given interface is about to be called. At this ..."},"2207":{y:0,u:"../Content/Topics/CAPLFunctions/LIN/Functions/CAPLfunctionLINIsMasterNode.htm",l:-1,t:"linIsMasterNode",i:3.89520431734087E-05,a:"CAPL Functions  »  LIN  » linIsMasterNode linIsMasterNode   Function Syntax long linIsMasterNode(); Description This function returns 1 if the calling node is the current LIN master node of the network given by the current bus context. This will be the node assigned to the LIN master from the LDF if ..."},"2208":{y:0,u:"../Content/Topics/CAPLFunctions/MOST/Functions/CAPLfunctionMOSTMsgEncodeRLE.htm",l:-1,t:"mostMsgEncodeRLE",i:4.10111743147298E-05,a:"CAPL Functions  »  MOST  » mostMsgEncodeRLE mostMsgEncodeRLE   Function Syntax long mostMsgEncodeRLE(mostAmsMessage * msg, long \n fktIds[], long size); Description mostMsgEncodeRLE() encodes a list of function IDs and saves it in the data area of a message. Run Length Encoding in accordance with ..."},"2209":{y:0,u:"../Content/Topics/CAPLFunctions/MapWindowAPI/Callbacks/CAPLfunctionOnMapObjectClick.htm",l:-1,t:"OnMapObjectClick ",i:9.62708528581417E-05,a:"CAPL Functions  »  Map Window API  » OnMapObjectClick  OnMapObjectClick    Function Syntax OnMapObjectClick ( long handle ); Description Function is called when a map object is clicked. It is only raised for map objects that are defined as selectable using the function  SetMapObjectSelectable . ..."},"2210":{y:0,u:"../Content/Topics/CAPLFunctions/Test/Functions/CAPLfunctionTestDisableMsg.htm",l:-1,t:"TestDisableMsg",i:0.000311465328755168,a:"CAPL Functions  »  Test Feature Set  » TestDisableMsg TestDisableMsg   Function Syntax long TestDisableMsg (dbMsg aMessage); long TestDisableMsg (dword aMessageId); long TestDisableMsg (char aMessageName[]); Description Disables the sending of the message except by calling the function  ..."},"2211":{y:0,u:"../Content/Topics/CANoeCANalyzer/CANopen/TfsNodelayer/TfsNLOverview.htm",l:-1,t:"Test feature set node layer overview",i:8.94396412676163E-05,a:"CANopen  » Test Feature Set Node Layer CANopen Test Feature Set Node Layer   Overview The Test Feature Set test module for  CANopen  can be assigned to any test module within CANoe. This test module makes available the following functionality: SDO protocol tests (support of expedited SDO  Up / ..."},"2212":{y:0,u:"../Content/Topics/CANoeCANalyzer/Car2x/windows/wlanPacketBuilder/wlanpbWndPacketlist.htm",l:-1,t:"Packet List (Car2x WLAN Packet Builder)",i:5.02158531446936E-05,a:"WLAN Packet Builder  »  User Interface  » Packet List                  Packet List   In the packet list an overview of all packets and its information is listed. The following columns show you the packet information: You can add new packets with [Add Packet]. With a click on the arrow you can insert ..."},"2213":{y:0,u:"../Content/Topics/CANoeCANalyzer/VTSystem/VT2820/VT2820.htm",l:-1,t:"VT2820 – General-Purpose Relay Module (VT System)",i:9.1807721500311E-05,a:"VT System  »  Modules  » VT2820 – General-Purpose Relay Module VT2820 – General-Purpose Relay Module    "},"2214":{y:0,u:"../Content/Topics/CAPLFunctions/CommunicationObjects/Objects/CAPLfunctionRxPDURef.htm",l:-1,t:"rxPDURef",i:0.000139653521811373,a:"CAPL Functions  »  Communication Objects  » rxPDURef rxPDURef   Function Syntax rxPDURef * \u003cvar\u003e; // form 1 rxPDURef \u003cPDU\u003e \u003cvar\u003e; // form 2 rxPDURef \u003cDatatype\u003e \u003cvar\u003e; // form 3 Method  Syntax rxPDURef::SetSender rxPDURef::SetReceiver rxPDURef::GetSender rxPDURef::GetSenderIndex rxPDURef::GetReceiver ..."},"2215":{y:0,u:"../Content/Topics/CAPLFunctions/Security/Functions/CAPLfunctionX509PkiAccess_CreateSigner.htm",l:-1,t:"X509PkiAccess_CreateSigner",i:6.41810845781887E-05,a:"CAPL Functions  »  Security  » X509PkiAccess_CreateSigner X509PkiAccess_CreateSigner   Method  Syntax dword X509PkiAccess_CreateSigner(qword objectHandle, byte[] keyData, dword keyDataLength, byte[] certificateData, dword certificateDataLength, char[] hashFunction, qword\u0026 outHandleSigner) ..."},"2216":{y:0,u:"../Content/Topics/CAPLFunctions/Other/Functions/CAPLfunctionStrStr.htm",l:-1,t:"strstr, strstr_off",i:7.55544859503042E-05,a:"CAPL Functions  »  General  »  Function Overview  » strstr, strstr_off strstr, strstr_off   Function Syntax long strstr(char s1[], char s2[]); long strstr_off(char s1[], long offset, char s2[]); Description Searches in s1 for s2. Parameters Return Values First position in bytes of s2 in s1, or -1 if ..."},"2217":{y:0,u:"../Content/Topics/CANoeCANalyzer/FunctionBlocks/IG/ig_value-generator_shortcut-menu.htm",l:-1,t:"Value Generator: Context Menu",i:4.978609005114E-05,a:"IG  »   Configuration  »  Signal List  »  Signal Configurator  » Context Menu Value Generator: Context Menu   The following context menu is available in the  Value Generator Configuration dialog  in the Values area. The \n individual menu commands are available depending on the type.  Cut \n (only ..."},"2218":{y:0,u:"../Content/Topics/ModelEditor/ModelEditorBindings.htm",l:-1,t:"Modell-Editor",i:0.000126943737152359,a:" Model Editor  »  Binding » AUTOSAR Modell-Editor   AUTOSAR Endpoints If you have selected the Autosar node in the tree view, all AUTOSAR endpoints with their assigned application layer endpoints will be displayed: Name IP Address TCP Port UDP Port Multicast IP Address Multicast Port You can edit ..."},"2219":{y:0,u:"../Content/Topics/CANoeCANalyzer/VTSystem/VT2004/VT2004ArbitraryWaveForms.htm",l:-1,t:"Arbitrary Wave Forms (VT2004)",i:0.000398750708365846,a:"VT2004  » Arbitrary Wave Forms Arbitrary Wave Forms   Stimulation of Wave Forms Not only can the VT2004 stimulation module be used to stimulate constant values and PWM signals, it also allows the use of arbitrary wave forms for stimulating. A maximum of 512 interpolation points are defined in a file ..."},"2220":{y:0,u:"../Content/Topics/COMInterface/Objects/COMObjectEnvironmentVariable.htm",l:-1,t:"EnvironmentVariable (COM Object)",i:0.000115584742094191,a:" CANoe  »  COM Interface  »  Objects  » EnvironmentVariable EnvironmentVariable Application  »  Environment  » EnvironmentVariable Description The EnvironmentVariable object represents an environment variable. Properties Methods — Events Example Example —  OnChangeAndTime event The following example ..."},"2221":{y:0,u:"../Content/Topics/CAPLFunctions/IP/AUTOSARethIL/Functions/CAPLfunctionAREthTCPListen.htm",l:-1,t:"AREthTCPListen",i:1.94421887491495E-05,a:"CAPL Functions  »  Ethernet  »  AUTOSAR Eth IL  » AREthTCPListen AREthTCPListen    Function Syntax long AREthTCPListen(dword aepHandle); Description Listens on this TCP application endpoint. Parameters Return Values Example — Availability  "},"2222":{y:0,u:"../Content/Topics/CANoeCANalyzer/Ethernet/Procedures/UseCaseLogEthernetData.htm",l:-1,t:"How to Log Ethernet Traffic",i:6.60601500155798E-05,a:"Ethernet   »  Use Cases » How to Log Ethernet Traffic How to Log Ethernet Traffic   Ethernet, as the other bus systems, is recorded with the  Logging Block . The Ethernet packets and partly further information like the  link status  and faulty Ethernet packets are recorded. As usual, raw data is ..."},"2223":{y:0,u:"../Content/Topics/CAPLFunctions/Car2x/Functions/CAPLfunctionC2xSecPacketSetSignerHandle.htm",l:-1,t:"C2xSecPacketSetSignerHandle",i:4.80525515721617E-05,a:"CAPL Functions  »  Car2x  » C2xSecPacketSetSignerHandle C2xSecPacketSetSignerHandle   Function Syntax long C2xSecPacketSetSignerHandle( long packetHandle, long certificateHandle ); Description Assigns a certificate to a Tx packet. The assigned certificate is used to sign the Tx packet when  ..."},"2224":{y:0,u:"../Content/Topics/CAPLFunctions/Security/Functions/CAPLfunctionPkcs10SigningRequest_GetSignature.htm",l:-1,t:"Pkcs10SigningRequest_GetSignature",i:6.41810845781887E-05,a:"CAPL Functions  »  Security  » Pkcs10SigningRequest_GetSignature Pkcs10SigningRequest_GetSignature   Method  Syntax dword Pkcs10SigningRequest_GetSignature(qword objectHandle, byte[] outBuffer, dword outBufferLength) Description Getter function for the Signature field of the PKCS#10 CSR handle. ..."},"2225":{y:0,u:"../Content/Topics/CAPLFunctions/GPIB/Functions/CAPLfunctionGPIBGetCnt.htm",l:-1,t:"GPIBGetCnt",i:5.59241803361269E-05,a:"CAPL Functions  »  GPIB  » GPIBGetCnt GPIBGetCnt   Function Syntax long GPIBGetCnt (void); Description Returns the number of bytes transferred by the last GPIB operation. Parameters — Return Values Example — Availability  "},"2226":{y:0,u:"../Content/Topics/CANoeCANalyzer/FunctionBlocks/IG/IGpduConfigRawDataView.htm",l:-1,t:"Raw Data (PDU IG)",i:5.4831346278521E-05,a:"PDU Interactive Generator  »  Configuration  » Raw Data Raw Data   The Raw Data shows the payload of the selected PDU of the  PDUs  view, transmitted on the network. It is also possible to toggle between Raw Data view and  Signals  view. The view displays the paylod of a PDU represented by bytes. A ..."},"2227":{y:0,u:"../Content/Topics/CAPLFunctions/Other/Functions/CAPLfunctionlookupFrFrame.htm",l:-1,t:"lookupFrFrame",i:2.48558024828843E-05,a:"CAPL Functions  »  General  »  Function Overview  » lookupFrFrame lookupFrFrame   Function Syntax dbFrFrame * lookupFrFrame(char frameName[]); Description Searches for a FlexRay frame definition in the database(s). If the frame is not found or if the name is not unique, test modules/units report an ..."},"2228":{y:0,u:"../Content/Topics/SampConf/SmartCharging/SCSmartChargingVH5110Basic.htm",l:-1,t:"VH5110 Basic (CCS Listener) (SmartCharging Sample Configuration)",i:3.64445576041791E-05,a:"Sample Configurations  »  SmartCharging  » VH5110 Basic (CCS Listener) VH5110 Basic (CCS Listener)   Introduction This configuration uses the CANoe Option SmartCharging  to display the communication in the Trace Window in a readable way. Hardware Requirements A  VH5110-CCS-Listener  is required for ..."},"2229":{y:0,u:"../Content/Topics/CANoeCANalyzer/Ribbon/File/Options/Extensions/ExtensionsCANoeRT.htm",l:-1,t:"Distributed Mode (Configuration)",i:4.32491316003435E-05,a:"Options  » Extensions » CANoe RT Distributed Mode  » Configuration CANoe RT Ribbon :  File Tab | Options |Extensions|Distributed Mode Distributed Mode: Overview"},"2230":{y:0,u:"../Content/Topics/CAPLFunctions/ISO11783/ISOInteractionLayer/Functions/CAPLfunctionIso11783ILActivateDiagnosticsSupport.htm",l:-1,t:"Iso11783IL_ActivateDiagnosticsSupport",i:8.74961910343231E-05,a:"CAPL Functions  »  ISO11783  »  ISO11783 Interaction Layer   » Iso11783IL_ActivateDiagnosticsSupport Iso11783IL_ActivateDiagnosticsSupport   Function Syntax long Iso11783IL_ActivateDiagnosticsSupport(byte enable); // form 1 long Iso11783IL_ActivateDiagnosticsSupport(dbNode node, byte enable); // ..."},"2231":{y:0,u:"../Content/Topics/CANoeCANalyzer/J1939/blocks/j1939scanner/tabs/network.htm",l:-1,t:"Network",i:7.65575491965843E-05,a:"J1939  »  J1939 Scanner  » Pages » Network Network   The nodes are ordered by channel. If the nodes are active, their states are displayed with different arrows. If they are inactive, no arrows are displayed and the nodes are framed with different colors. Display With Arrow The node is active on the ..."},"2232":{y:0,u:"../Content/Topics/CANoeCANalyzer/AFDX/protocols/afdxProtocolICMP.htm",l:-1,t:"ICMP (AFDX)",i:9.73445333080378E-05,a:"AFDX  »  Protocol Overview  »  ICMP ICMP   The ICMP protocol (Internet Control Message Protocol) is generally used for control tasks. With AFDX, it is exclusively used for the ping application (echo request/ reply). This checks if an equipment or an application is available in an AFDX network. The ..."},"2233":{y:0,u:"../Content/Topics/CAPLFunctions/SystemVariables/Functions/CAPLfunctionSysGetVariableLongLong.htm",l:-1,t:"sysGetVariableLongLong",i:4.17976601722804E-05,a:"CAPL Functions  »  System Variables  » sysGetVariableLongLong sysGetVariableLongLong   Function Syntax int64 sysGetVariableLongLong(char namespace[], char variable[]); // form 1 int64 sysGetVariableLongLong(SysVarName); // form 2 long sysGetVariableLongLong(char namespace[], char variable[], int64\u0026 ..."},"2234":{y:0,u:"../Content/Topics/SampConf/ARINC825/CANaeroBasicJoyStickCN.htm",l:-1,t:"CANaero Basic Joystick (ARINC-825 Sample Configuration)",i:3.93705104727567E-05,a:"Sample Configurations  »  ARINC-825  » CANaero Basic Joystick CANaero Basic Joystick   The configuration consists of the  desktops Setup and Measurement. The  Simulation Setup  contains a CAPL node, which takes user inputs via the  panel  and generates the related CAN messages. Desktops ..."},"2235":{y:0,u:"../Content/Topics/SampConf/J1939/CANoe/Modeling/Aftertreatment/AftertreatmentCN.htm",l:-1,t:"Aftertreatment",i:4.16632248661422E-05,a:"Sample Configurations  »  J1939  » Aftertreatment Aftertreatment   This sample demonstrates the use of the J1939 node layer. The sample simulates an ECU for exhaust gas aftertreatment. The exhaust system can be viewed in the panel. If the speed is increased with the slider, the exhaust gas ..."},"2236":{y:0,u:"../Content/Topics/CAPLFunctions/ISO11783/ISOInteractionLayerVT/Functions/CAPLfunctionIso11783VTILOnRequest.htm",l:-1,t:"VTIL_OnRequest",i:4.89214897086971E-05,a:"CAPL Functions  »  ISO11783  »  Virtual Terminal Interaction Layer (VT IL)   » VTIL_OnRequest VTIL_OnRequest (Callback)   Function Syntax long VTIL_OnRequest( long rqPGN, long sourceAddr ); long VTIL_OnRequest( long rqPGN, long sourceAddr, long destinationAddress ); Description This callback ..."},"2237":{y:0,u:"../Content/Topics/CAPLFunctions/IP/SOMEIPIL/Functions/CAPLfunctionSomeIpGetValueString.htm",l:-1,t:"SomeIpGetValueString",i:4.20076981764684E-05,a:"CAPL Functions  »  Ethernet  »  SOME/IP IL  » SomeIpGetValueString SomeIpGetValueString   Function Syntax dword SomeIpGetValueString( dword objectHandle, char valuePath[], dword bufferLength, char buffer[] ); Description This function can be used to read out a string from the object specified in the ..."},"2238":{y:0,u:"../Content/Topics/CANoeCANalyzer/CANopen/popups/sdoParamD.htm",l:-1,t:"d",i:1.91306081808397E-05,a:"Data of the object  "},"2239":{y:0,u:"../Content/Topics/CANoeCANalyzer/Sensor/SensorSENTProtocol.htm",l:-1,t:"SENT Protocol",i:0.000104074511181721,a:"Option .Sensor  » SENT Protocol SENT Protocol   SENT (Single Edge Nibble Transmission) is a digital voltage interface between a sensor and an ECU. The connection is one-way: the data are only transferred from the sensor to the ECU. SENT is intended to allow you to implement sensors in the most cost ..."},"2240":{y:0,u:"../Content/Topics/CAPLFunctions/CommunicationObjects/Functions/CAPLfunctionLookupServiceProvider.htm",l:-1,t:"LookupServiceProvider",i:3.7303269429465E-05,a:"CAPL Functions  »  Communication Objects  » LookupServiceProvider LookupServiceProvider   Function Syntax serviceProviderRef * LookupServiceProvider(char[] path); Description Searches for the specified service provider. The path must be complete including namespaces and endpoint: ..."},"2241":{y:0,u:"../Content/Topics/CANoeCANalyzer/Connectivity/MQTTController.htm",l:-1,t:"MQTT Controller (Connectivity)",i:5.80426608649988E-05,a:" CANoe  »  Connectivity  » MQTT Controller MQTT Controller   Introduction The CANoe MQTT-Controller allows to start/stop the CANoe internal MQTT broker. Use of the MQTT Controller Start/Stop of the CANoe internal MQTT broker:  "},"2242":{y:0,u:"../Content/Topics/CANoeCANalyzer/FunctionBlocks/Replay/help_envar_replay.htm",l:-1,t:"Replay of Environment Variables",i:9.19405631282057E-05,a:"Replay Block  » Replay of Environment Variables Replay of Environment Variables   The Replay Block provides you with the option of feeding data into the simulation configuration from both binary and ASCII files. Thus, you can edit ASCII logging files with a conventional text editor before you play ..."},"2243":{y:0,u:"../Content/Topics/CAPLFunctions/ISO11783/ISOInteractionLayer/Functions/CAPLfunctionIso11783ILOPChangeLineAttr.htm",l:-1,t:"Iso11783IL_OPChangeLineAttribute",i:3.69260011880801E-05,a:"CAPL Functions  »  ISO11783   »  ISO11783 Interaction Layer   » Iso11783IL_OPChangeLineAttribute Iso11783IL_OPChangeLineAttribute   Function Syntax long Iso11783IL_OPChangeLineAttribute( dword \n objectID, dword color, dword width, dword art ); // form 1 long Iso11783IL_OPChangeLineAttribute( dbNode ..."},"2244":{y:0,u:"../Content/Topics/CAPLFunctions/Test/Functions/CAPLfunctionTestJoinFrPDUEvent.htm",l:-1,t:"TestJoinFrPDUEvent",i:0.000114563323177999,a:"CAPL Functions  »  Test Feature Set  » TestJoinFrPDUEvent TestJoinFrPDUEvent   Function Syntax long TestJoinFrPDUEvent (dbFrPDU aPDU) long TestJoinFrPDUEvent () Description Completes the current set of \"joined events\" with the transmitted event. This function does not wait. Parameters Return Values ..."},"2245":{y:0,u:"../Content/Topics/SampConf/MOST/MOSTECL.htm",l:-1,t:"Electrical Control Line",i:6.89255177682331E-05,a:"Sample Configurations  »  MOST  » Electrical Control Line Electrical Control Line   Configuration The API ECL.CIN used for the ECL protocol is realized in CAPL and can be found in the following folder:  Open Folder Here, the available API interfaces and the necessary callbacks are defined (see ..."},"2246":{y:0,u:"../Content/Topics/CAPLFunctions/Other/Functions/CAPLfunctionStopReplayFile.htm",l:-1,t:"StopReplayFile",i:7.39801273203939E-05,a:"CAPL Functions  »  General  »  Function Overview  » StopReplayFile StopReplayFile   Function Syntax void StopReplayFile(dword handle); Description Stops the replay file from playing with the handle handle. Parameters Return Values — Example — Availability  "},"2247":{y:0,u:"../Content/Topics/CAPLFunctions/Other/Functions/CAPLfunctionSetPostTrigger.htm",l:-1,t:"setPostTrigger",i:7.46334556132967E-05,a:"CAPL Functions  »  General  »  Function Overview  » setPostTrigger setPostTrigger   Function Syntax setPostTrigger(long PostTriggerTime); Description Sets the posttrigger of the logging. The posttrigger set with this function is valid until the end of the measurement or until the next call of this ..."},"2248":{y:0,u:"../Content/Topics/CANoeCANalyzer/Car2x/protocols/CV2XDataLinkLayer.htm",l:-1,t:"C-V2X Data Link Layer",i:6.69827756496873E-05,a:"Protocol Overview  » C-V2X Data Link Layer C-V2X Data Link Layer   Protocol Information In the C-V2X data link layer, the source and destination Layer-2 Identifiers are determined according to 3GPP TS 36.321 V14.11.0, Chapter 6.2.4 MAC header for SL-SCH. Protocol Dependencies  [▲ top] The data is ..."},"2249":{y:0,u:"../Content/Topics/CAPLFunctions/IP/Selectors/CAPLfunctionProtocolFieldBitLength.htm",l:-1,t:"ethernetPacket Selectors: \u003cprotocol\u003e.\u003cfield\u003e.bitLength",i:6.179642721132E-05,a:"CAPL Functions  »  Ethernet  »  Function Overview  »  ethernetPacket  » Selector \u003cprotocol\u003e.\u003cfield\u003e.bitLength ethernetPacket Selectors: \u003cprotocol\u003e.\u003cfield\u003e.bitLength   Selectors dword  ethernetPacket .\u003c protocol \u003e.\u003cfield\u003e.bitLength; Description Bit length of a protocol field. The selector is read ..."},"2250":{y:0,u:"../Content/Topics/CANoeCANalyzer/FlexRay/FRHowTo/FRHowToIncreaseDeterminism.htm",l:-1,t:"How to increase determinism? (FlexRay)",i:3.05606666171472E-05,a:"FlexRay »  How to...  » How to increase determinism? How to increase determinism?   Here \"indeterminism\" is related to unpredictable update time points for frames. Although the programmer assumes the update takes place according to a relative and always equidistant trigger event (periodical timer), ..."},"2251":{y:0,u:"../Content/Topics/CANoeCANalyzer/LibrariesPackages/AUTOSARpduIL/AUTOSARpduILUsage.htm",l:-1,t:"Usage of the Interaction Layer",i:3.1359075957511E-05,a:" CANoe  »  Libraries \u0026 Add-ons  »  AUTOSAR PDU IL  » Usage of the Interaction Layer Usage of the Interaction Layer   If you have fully described the transmission behavior of the nodes, messages and signals in the database (DBC or AUTOSAR), there are two options for building a simulation model using ..."},"2252":{y:0,u:"../Content/Topics/CANoeCANalyzer/SCOPE/ScopeHardware.htm",l:-1,t:"Supported Hardware (Scope)",i:7.52761710416824E-05,a:"Scope  » Supported Scope Devices Supported Hardware   Hardware Configuration"},"2253":{y:0,u:"../Content/Topics/CAPLFunctions/Test/Functions/CAPLfunctionTestJoinMostAMSMessageEvent.htm",l:-1,t:"TestJoinMostAMSMessageEvent",i:0.000150596189494268,a:"CAPL Functions  »  Test Feature Set  » TestJoinMostAMSMessageEvent TestJoinMostAMSMessageEvent   Function Syntax long TestJoinMostAMSMessageEvent(dbMsg aDBMsg, int aInstanceId) long TestJoinMostAMSMessageEvent(int aFBlockId, int aInstanceId) long TestJoinMostAMSMessageEvent(int aFBlockId, int ..."},"2254":{y:0,u:"../Content/Topics/CAPLFunctions/Car2x/Functions/CAPLfunctionC2xGetStationPosition.htm",l:-1,t:"C2xGetStationPosition",i:4.83323854682765E-05,a:"CAPL Functions  »  Car2x  » C2xGetStationPosition C2xGetStationPosition   Function Syntax long C2xGetStationPosition(out float latitude, out float longitude, out float elevation, out float heading); // form 1 long C2xGetStationPosition(char* stationName, out float latitude, out float longitude, out ..."},"2255":{y:0,u:"../Content/Topics/TestCommands/CheckDescriptions/Deprecated/CDJ1939AnswerOwnGlobalRequest.htm",l:-1,t:"J1939 Answer Own Global Request (Check Description)",i:2.48598523171083E-05,a:" CANoe  »  Check Descriptions  »  J1939-Specific Checks  » J1939 Answer Own Global Request J1939 Answer Own Global Request   J1939 Request Check (Check Description)"},"2256":{y:0,u:"../Content/Topics/CAPLFunctions/ISO11783/ISONodeLayer/Functions/CAPLfunctionIso11783AppTxIndication.htm",l:-1,t:"Iso11783AppTxIndication",i:6.16110975808111E-05,a:"CAPL Functions  »  ISO11783  »  ISO11783 Node Layer   » Iso11783AppTxIndication Iso11783AppTxIndication (Callback)   Function Syntax dword Iso11783AppTxIndication( long ecuHandle, long txPG, long source, long dest ); Description Indicates that a PG has been sent successfully. The function for ..."},"2257":{y:0,u:"../Content/Topics/Shared/Menus/Edit/EditRemoveOldInformation.htm",l:-1,t:"Remove Old Browser Information",i:4.23386408558276E-05,a:" CANoe  » … »   CANoe  »  CAPL Browser  » Remove Old Browser Information Remove Old Browser Information Ribbon :  Home Tab |Remove Old Browser Information CAPL programs which were created with a CAPL Browser version prior to 8.0 contain browser information required for enabling separate display of a ..."},"2258":{y:0,u:"../Content/Topics/CANoeCANalyzer/J1939/ComplianceChecks2015/compliancetest2015.htm",l:-1,t:"J1939-82 Compliance Test (2015)",i:8.02641422645146E-05,a:"J1939  »  J1939 Test Service Library  »  Checks  » J1939-82 Compliance Test (2015) J1939-82 Compliance Test (2015)   The tests serve to cover test cases from the J1939 Compliance Specification (2015). For further information, please refer to the specification. Advantages Configuration With the ..."},"2259":{y:0,u:"../Content/Topics/CAPLFunctions/IP/Selectors/CAPLfunctionProtocolFieldByteOffset.htm",l:-1,t:"ethernetPacket Selectors: \u003cprotocol\u003e.\u003cfield\u003e.byteOffset",i:6.16480197521406E-05,a:"CAPL Functions  »  Ethernet  »  Function Overview  »  ethernetPacket  » Selector \u003cprotocol\u003e.\u003cfield\u003e.byteOffset ethernetPacket Selectors: \u003cprotocol\u003e.\u003cfield\u003e.byteOffset   Selectors dword  ethernetPacket .\u003c protocol \u003e.\u003cfield\u003e.byteOffset; Description Byte offset of a protocol field. The selector is read ..."},"2260":{y:0,u:"../Content/Topics/CAPLFunctions/MOST/Functions/CAPLfunctionMOSTNwmFiEnableRingScan.htm",l:-1,t:"mostNwmFiEnableRingScan",i:4.89373271970289E-05,a:"CAPL Functions  »  MOST  » mostNwmFiEnableRingScan mostNwmFiEnableRingScan   Function Syntax long mostNwmFiEnableRingScan(long mode); Description Can be called to change the ring scan behavior of CANoe’s NetworkMaster. The function is available for CAPL programs assigned to the NetworkMaster block ..."},"2261":{y:0,u:"../Content/Topics/CAPLFunctions/Other/Functions/CAPLfunctionGetConfigurationName.htm",l:-1,t:"getConfigurationName",i:2.7992198419529E-05,a:"CAPL Functions  »  General  »  Function Overview  » getConfigurationName getConfigurationName   Function Syntax long getConfigurationName(char buffer[], dword bufferLength); Description Returns the filename of the currently loaded configuration. It includes neither the filename extension nor any ..."},"2262":{y:0,u:"../Content/Topics/COMInterface/Objects/Deprecated/COMObjectMcDatabaseSignal.htm",l:-1,t:"McDatabaseSignal (COM Object)",i:3.46229342078774E-05,a:" CANoe  »  COM Interface  »  Objects  » McDatabaseSignal McDatabaseSignal Application  »  Configuration  »  GeneralSetup  »  CCPSetup  »  McECUs  »  McECU  »  McDatabaseSignals  » McDatabaseSignal Application  »  Configuration  »  GeneralSetup  »  XCPSetup  »  McECUs  »  McECU  »  McDatabaseSignals ..."},"2263":{y:0,u:"../Content/Topics/CAPLFunctions/J1939/J1939NodeLayer/Functions/CAPLfunctionJ1939Set.htm",l:-1,t:"J1939Set...",i:1.99346589967799E-05,a:"CAPL Functions  »  J1939  »  J1939 NL  » J1939Set... J1939Set...   Function Syntax long J1939SetAAC( char[] deviceName, long aac) long J1939SetIG( char[] deviceName, long ig) long J1939SetVS( char[] deviceName, long vs) long J1939SetVSInstance( char[] deviceName, long vsi) long J1939SetFct( char[] ..."},"2264":{y:0,u:"../Content/Topics/CAPLFunctions/ISO11783/ISOInteractionLayerFS/Functions/CAPLfunctionIso11783FSILControlStart.htm",l:-1,t:"FSIL_ControlStart",i:5.99162704069633E-05,a:"CAPL Functions  »  ISO11783  »  File Server Interaction Layer (FS IL)   » FSIL_ControlStart FSIL_ControlStart   Function Syntax long FSIL_ControlStart(); // form 1 long FSIL_ControlStart( byte address ); // form 2 long FSIL_ControlStart( dbNode fs); // form 3 long FSIL_ControlStart(dbNode fs, byte ..."},"2265":{y:0,u:"../Content/Topics/CAPLFunctions/Diagnostics/Functions/CAPLfunctionDoIPSetBroadcastIPaddress.htm",l:-1,t:"DoIP_SetBroadcastIPaddress",i:4.18341899206929E-05,a:"CAPL Functions  »  Diagnostics  » DoIP_SetBroadcastIPaddress DoIP_SetBroadcastIPaddress   Function Syntax void DoIP_SetBroadcastIPaddress(char broadcastAddress[]); Description Sets target IP address for broadcast messages sent from this node. Parameters Return Values — Example Availability ..."},"2266":{y:0,u:"../Content/Topics/CAPLFunctions/SmartCharging/Callbacks/CAPLfunctionSCCChargeParameterDiscoveryReqAC.htm",l:-1,t:"SCC_ChargeParameterDiscoveryReqAC",i:6.24395493115898E-05,a:"CAPL Functions  »  Smart Charging  »  SCC Modeling Libraries (Simulation Setup)  »  EVSE Callback Functions  » SCC_ChargeParameterDiscoveryReqAC SCC_ChargeParameterDiscoveryReqAC   Function Syntax  void SCC_ChargeParameterDiscoveryReqAC \n\n( byte SessionID[], float EAmount ) Description The callback ..."},"2267":{y:0,u:"../Content/Topics/CAPLFunctions/SmartCharging/Functions/CAPLfunctionSCCSetEnergyTransferType.htm",l:-1,t:"SCC_SetEnergyTransferType",i:7.30542437411043E-05,a:"CAPL Functions  »  Smart Charging  »  SCC Modeling Libraries (Simulation Setup)  »  V2G Simulation Control  »  Shared Functions  » SCC_SetEnergyTransferType SCC_SetEnergyTransferType   Function Syntax long SCC_SetEnergyTransferType \n( char EnergyTransferType[] ) //form 1 (EV only) long ..."},"2268":{y:0,u:"../Content/Topics/CAPLFunctions/CommunicationObjects/Methods/CAPLfunctionConsumedPduRefAbstractReleasePdu.htm",l:-1,t:"consumedPduRef::AbstractReleasePdu",i:6.55146380010346E-05,a:"CAPL Functions  »  Communication Objects  » consumedPduRef::AbstractReleasePdu consumedPduRef::AbstractReleasePdu   Method  Syntax int  consumedPDURef ::AbstractReleasePDU(); Description Releases the subscription of a specific service PDU if abstract binding is used: for the specified consumer from ..."},"2269":{y:0,u:"../Content/Topics/CANoeCANalyzer/LIN/HowTos/LIN_Control_LIN-Master-Scheduler.htm",l:-1,t:"How to Control a LIN Master\u0027s Scheduler",i:4.58918308870144E-05,a:"LIN  » How to Control a LIN Master\u0027s Scheduler How to Control a LIN Master\u0027s Scheduler   Using the Interactive Master Using CAPL How to Create a LIN Description File"},"2270":{y:0,u:"../Content/Topics/CAPLBrowser/Ribbon/CBRibbon.htm",l:-1,t:"Ribbon (CAPL Browser)",i:0.000238353349734799,a:" CANoe  »  CAPL Browser  » Ribbon Ribbon Ribbon In the CAPL Browser ribbon the following tabs are available: Quick Access Toolbar As default in the Quick Access Toolbar the following functions are available: Open With a click on the symbol you open a dialog to select a previously saved file. The ..."},"2271":{y:0,u:"../Content/Topics/CANoeCANalyzer/Interfaces/VN8900/VN8900Troubleshooting.htm",l:-1,t:"VN8900: Troubleshooting",i:3.63140105575842E-05,a:"VN8900  » Troubleshooting VN8900: Troubleshooting    "},"2272":{y:0,u:"../Content/Topics/TestCommands/CheckDescriptions/CDADASGroundTruthObjectsHaveMatchingDetectedObjectsObservation.htm",l:-1,t:"ADAS Ground Truth Objects Have Matching Detected Objects Observation (Check Description)",i:5.38872596404319E-05,a:" CANoe  »  Check Descriptions  »  ADAS-Specific Checks  » ADAS Ground Truth Objects Have Matching Detected Objects Observation ADAS Ground Truth Objects Have Matching Detected Objects Observation   Description Observes if Moving Objects have matching Detected Moving Objects. The check fires an event ..."},"2273":{y:0,u:"../Content/Topics/Externals/DiagConsole/red_DIAG.htm",l:-1,t:"red",i:3.39705107274469E-05,a:""},});