define({"2999":{y:0,u:"../Content/Topics/SampConf/Ethernet/CANoe/TCP/TCPDotNET.htm",l:-1,t:"Basic TCP Server and Client (C#/.NET)",i:4.99439537155258E-05,a:"Sample Configurations  »  Ethernet  » Basic TCP Server and Client (C#/.NET) Basic TCP Server and Client (C#/.NET)   The configuration consists of a TCP server and a TCP client whose communication is represented in a simple way. Once you have connected the server to the client, send a string ..."},"3000":{y:0,u:"../Content/Topics/CANoeCANalyzer/ADAS/Interfaces/ADASVehicleNetworks.htm",l:-1,t:"Vehicle Network",i:3.74606965545613E-05,a:"ADAS  » Vehicle Network Vehicle Network   Vehicles communicate internally via network messages (e.g. via CAN, Ethernet, ...). The ADAS Feature Set works on abstract data types in  ASAM OSI  format. To be able to analyze network data with the ADAS Feature Set, the network data must be mapped to the ..."},"3001":{y:0,u:"../Content/Topics/CAPLFunctions/ISO11783/ISONodeLayer/Functions/CAPLfunctionIso11783OPSetNumericValue.htm",l:-1,t:"Iso11783OPSetNumericValue",i:4.89887579938959E-05,a:"CAPL Functions  »  ISO11783  »  ISO11783 Node Layer  » Iso11783OPSetNumericValue Iso11783OPSetNumericValue   Function Syntax long Iso11783OPSetNumericValue( dword ecuHandle, \n dword objectID, long numericValue ); long Iso11783OPSetNumericValue( dword ecuHandle, \n dword objectID, long numericValue, ..."},"3002":{y:0,u:"../Content/Topics/CAPLFunctions/Test/Functions/CAPLfunctionTestWaitScopeShowMask.htm",l:-1,t:"testWaitScopeShowMask",i:8.85628646661868E-05,a:"CAPL Functions  »  Scope  » testWaitScopeShowMask testWaitScopeShowMask   Function Syntax long testWaitScopeShowMask (ScopeAnalyseHandle handle, dword msgFieldStart, long startBitNo, long bitCount); // form 1 long testWaitScopeShowMask (ScopeAnalyseHandle handle, frFrame frame, dword msgFieldStart, ..."},"3003":{y:0,u:"../Content/Topics/CAPLFunctions/Car2x/Callbacks/CAPLfunctionC2xOnStartScenario.htm",l:-1,t:"OnStartScenario",i:0.000145581557981045,a:"CAPL Functions  »  Car2x  » OnStartScenario OnStartScenario (Callback)   Function Syntax void OnStartScenario(); Description This callback is called at the time when the scenario start was triggered: manually in Scenario Manager Window; as a result of calling  C2xStartScenario() CAPL function. ..."},"3004":{y:0,u:"../Content/Topics/CAPLFunctions/Test/Functions/CAPLfunctionTestJoinA429WordEvent.htm",l:-1,t:"TestJoinA429WordEvent",i:5.51428331482431E-05,a:"CAPL Functions  »  Test Feature Set  » TestJoinA429WordEvent TestJoinA429WordEvent   Function Syntax long TestJoinA429WordEvent (dbA429Word aWord ) long TestJoinA429WordEvent (dword aLabel) Description Add an ARINC word to the set of joined events. If ARINC word events are delivered from different ..."},"3005":{y:0,u:"../Content/Topics/CAPLFunctions/Test/Functions/CAPLfunctionTestWaitForScopeShowEdges.htm",l:-1,t:"testWaitForScopeShowEdges",i:8.36019087855185E-05,a:"CAPL Functions  »  Scope  » testWaitForScopeShowEdges testWaitForScopeShowEdges   Function Syntax long testWaitForScopeShowEdges(linFrame aMessage, dword msgFieldStart,long bitNo, long noOfBits, dword flags, ScopeanalyseHandle handle); Description The defined frame cutout of the previously ..."},"3006":{y:0,u:"../Content/Topics/CAPLFunctions/Test/Functions/CAPLfunctionTestValidateImplValueFloat.htm",l:-1,t:"TestValidateImplValueFloat",i:0.000135704695976995,a:"CAPL Functions  »  Test Feature Set  » TestValidateImplValueFloat TestValidateImplValueFloat   Function Syntax long TestValidateImplValueFloat(char aTestStep[], valueHandle * value, float awaitedValue); Description Checks the impl encoding of a valueHandle value against the condition. This function ..."},"3007":{y:0,u:"../Content/Topics/vCDL/Language/vCDLListDataTypes.htm",l:-1,t:"List Data Types (vCDL 1.4)",i:6.60681509244982E-05,a:" CANoe  »  vCDL  »  vCDL 1.4  »  Language  » List Data Types List Data Types   List data types are a more flexible linear collection than arrays. They are declared using the list keyword, specifying the list’s base data type and a maximum size in angle brackets. A minimum size can be defined for the ..."},"3008":{y:0,u:"../Content/Topics/CANoeCANalyzer/Ribbon/File/Options/Measurement/MeasurementGeneralSettingsVectorHardware.htm",l:-1,t:"Configuration: Vector Hardware",i:0.000176411950175865,a:"  Configuration: Vector Hardware Windows Menu Path: Start|Settings|Control Panel|Vector Hardware With the Vector Hardware configuration dialog you can edit several specific hardware settings. Among other features you can define additional application channels check / change the assignment of the ..."},"3009":{y:0,u:"../Content/Topics/CAPLFunctions/ISO11783/ISOInteractionLayer/Functions/CAPLfunctionIso11783ILtimClearLwATable.htm",l:-1,t:"Iso11783IL_TIMClearLwATable",i:3.67775937289007E-05,a:"CAPL Functions  »  ISO11783   »  ISO11783 Interaction Layer   » Iso11783IL_TIMClearLwATable Iso11783IL_TIMClearLwATable   Function Syntax long Iso11783IL_TIMClearLwATable( ); // form 1 long Iso11783IL_TIMClearLwATable(dbNode participan); // form 2 Description Removes all LwA (lightweight ..."},"3010":{y:0,u:"../Content/Topics/CAPLFunctions/Other/EventProcedures/CAPLfunctionOn.htm",l:-1,t:"on *",i:3.89555733349792E-05,a:"CAPL Functions  »  General  »  Event Procedures  » on * on *   You can access the on * event procedure in Measurement Setup.  If you add a CAPL program in Measurement Setup, it will initially act as a filter, as only messages/frames called explicitly in the CAPL program will be allowed through. on * ..."},"3011":{y:0,u:"../Content/Topics/CANoeCANalyzer/Ethernet/EthernetConcept.htm",l:-1,t:"Ethernet | Concept",i:5.35737635504187E-05,a:"Ethernet  » Concept Ethernet | Concept   Ethernet Function Overview   •  More Concepts: "},"3012":{y:0,u:"../Content/Topics/CAPLFunctions/Proj/Functions/CAPLfunctionProjTransformToInertial.htm",l:-1,t:"Proj_TransformToInertial",i:8.17126845819047E-05,a:"CAPL Functions  »  Proj  » Proj_TransformToInertial Proj_TransformToInertial   Function Syntax long result; result = Proj_TransformToInertial(latitude, longitude, elevation, out x, out y, out z); Description This function transforms an inertial coordinate to a geodetic coordinate. Proj_Create has to ..."},"3013":{y:0,u:"../Content/Topics/CAPLFunctions/Other/Functions/CAPLfunctionCanOnline.htm",l:-1,t:"canOnline",i:0.000626691386356376,a:"CAPL Functions  »  General  »  Function Overview  » canOnline canOnline   Function Syntax  void canOnline(); // form 1: deprecated dword canOnline(dword flags); // form 2 Description Restores the connection of the node to the bus. After a call to the function canOffline() the node can be connected ..."},"3014":{y:0,u:"../Content/Topics/CAPLFunctions/J1939/GBT27930InteractionLayer/Functions/CAPLfunctionGBT27930ILOnError.htm",l:-1,t:"GBT27930IL_OnError",i:0.000255189166681584,a:"CAPL Functions  »  J1939  »  GB/T 27930 IL  » GBT27930IL_OnError GBT27930IL_OnError (Callback)   Function Syntax void GBT27930IL_OnError( long errorCode, long param ) Description This callback function is called from the GBT27930 IL if an error occurred. Parameters Return Values — Example ..."},"3015":{y:0,u:"../Content/Topics/CAPLFunctions/Other/Functions/CAPLfunctionGetSteadyClockCurrentTimeNS.htm",l:-1,t:"GetSteadyClockCurrentTimeNS",i:3.62573836637761E-05,a:"CAPL Functions  »  General  »  Function Overview  » GetSteadyClockCurrentTimeNS GetSteadyClockCurrentTimeNS   Function Syntax int64 GetSteadyClockCurrentTimeNS(); Description Returns the current time of a steady clock. This time is only useful in comparison with other times from that clock. The ..."},"3016":{y:0,u:"../Content/Topics/CAPLFunctions/J1939/GBT27930InteractionLayer/Functions/CAPLfunctionGBT27930ILControlInit.htm",l:-1,t:"GBT27930IL_ControlInit",i:2.09495897350384E-05,a:"CAPL Functions  »  J1939  »  GB/T 27930 IL  » GBT27930IL_ControlInit GBT27930IL_ControlInit   Function Syntax long GBT27930IL_ControlInit(); // form 1 long GBT27930IL_ControlInit(dbNode node);  // form 2 Description This function can only be used in on preStart, to suppress the auto-start function ..."},"3017":{y:0,u:"../Content/Topics/CAPLFunctions/IP/Methods/CAPLfunctionGetSourceIPAddress.htm",l:-1,t:"ethernetPacket::GetSourceIPAddress",i:6.35211292576629E-05,a:"CAPL Functions  »  Ethernet  »  Function Overview  » ethernetPacket::GetSourceIPAddress ethernetPacket::GetSourceIPAddress   Method  Syntax long  ethernetPacket .GetSourceIPAddress( ip_Address address ); Description Assigns the source IP address to an ip_Address variable. Parameters Return Values ..."},"3018":{y:0,u:"../Content/Topics/CLibraryAPI/Functions/CAPLfunctioncclCanValueOfIdentifier.htm",l:-1,t:"cclCanValueOfIdentifier",i:4.72105040757116E-05,a:" CANoe  »  C Library API  »  Functions  » cclCanValueOfIdentifier cclCanValueOfIdentifier   Function Syntax uint32_t cclCanValueOfIdentifier(uint32_t identifier) Description Returns the value of a CAN identifier. Inside the program, a CAN identifier is saved as 32-bit unsigned integer, for which the ..."},"3019":{y:0,u:"../Content/Topics/CAPLFunctions/CAN/Functions/CAPLfunctionMkExtID.htm",l:-1,t:"mkExtId",i:0.000106234010808749,a:"CAPL Functions  »  CAN  » mkExtId mkExtId   Function Syntax dword mkExtId(dword id); Description Returns an extended id. Parameters Return Values Extended identifier Example Availability  "},"3020":{y:0,u:"../Content/Topics/COMInterface/Samples/COMSamplesVBPanelControl.htm",l:-1,t:"Easy – Panel Control.exe (COM Sample)",i:7.57890977821115E-05,a:" CANoe  »  COM Interface  »  COM Samples  » Easy – Panel Control.exe Easy – Panel Control.exe   This sample shows how an external application can control the CANoe panels. It demonstrates the saving of panel positions, create a panel, add \u0026 remove a panel from a panel group as well as setting a ..."},"3021":{y:0,u:"../Content/Topics/CAPLFunctions/AUTOSARpduIL/Functions/CAPLfunctionARILFaultInjectionDisturbUpdateBit.htm",l:-1,t:"ARILFaultInjectionDisturbUpdateBit",i:2.89426304575787E-05,a:"CAPL Functions  »  AUTOSAR PDU IL  » ARILFaultInjectionDisturbUpdateBit ARILFaultInjectionDisturbUpdateBit   Function Syntax long ARILFaultInjectionDisturbUpdateBit (dbSignal, long disturbanceMode, long disturbanceCount, long disturbanceValue); long ARILFaultInjectionDisturbUpdateBit (dbMsg ..."},"3022":{y:0,u:"../Content/Topics/CAPLFunctions/Diagnostics/Functions/CAPLfunctionDiagConnectChannel.htm",l:-1,t:"diagConnectChannel",i:7.18538109462476E-05,a:"CAPL Functions  »  Diagnostics  » diagConnectChannel diagConnectChannel   Function Syntax long diagConnectChannel(); // form 1 DiagConnectChannel(char ecuQualifier[]); // form 2 Description Connects a channel. State of the channel is Connected afterwards. The channel the function refers to is set ..."},"3023":{y:0,u:"../Content/Topics/CAPLFunctions/ADFX/Functions/CAPLfunctionAfdxGetDBMessageName.htm",l:-1,t:"AfdxGetDBMessageName",i:4.11616532648487E-05,a:"CAPL Functions  »  AFDX  » AfdxGetDBMessageName AfdxGetDBMessageName   Function Syntax long AfdxGetDBMessageName( long msgID, long bufSize, char buffer[] ); Description Retrieves the message name from database from a given message ID if it is defined there. Parameters Return Values Example — ..."},"3024":{y:0,u:"../Content/Topics/CAPLFunctions/Diagnostics/Functions/CAPLfunctionDiagGetAbsolutePositionResp.htm",l:-1,t:"diagGetAbsolutePosition, diagGetAbsolutePositionResp",i:4.18341899206929E-05,a:"CAPL Functions  »  Diagnostics  » diagGetAbsolutePosition, diagGetAbsolutePositionResp diagGetAbsolutePosition, diagGetAbsolutePositionResp   Function Syntax long DiagGetAbsolutePosition( diagRequest request, char parameterPath[]\n, dword\u0026 bytePosOut, dword\u0026 bitPosOut, dword\u0026 bitConsumptionOut); // ..."},"3025":{y:0,u:"../Content/Topics/SampConf/LIN/CANoe/LINBasicStress/LINBasicStress.htm",l:-1,t:"Stress (LIN)",i:5.56149108899304E-05,a:"Sample Configurations  »  LIN  » Stress (LIN) Stress (LIN)   Introduction This sample configuration shows how you can simulate various protocol errors with the help of the Stress Feature Set for LIN. Desktops This configuration contains the following desktops: Stress via LIN Stress IG  [▲ back] You ..."},"3026":{y:0,u:"../Content/Topics/CANoeCANalyzer/VTSystem/VT2820/VT2820BusBars.htm",l:-1,t:"VT2820: Using the Bus Bars",i:3.86397536916444E-05,a:"VT2820  » Bus Bars Bus Bars   The module has two bus bars. You can switch line a of each of the 12 normally open contact channels to them. You cannot switch line a to bus bars a and b at the same time, i.e. you can only switch it to one of the two bus bars at a given time. This prevents short ..."},"3027":{y:0,u:"../Content/Topics/CAPLFunctions/ISO11783/ISOInteractionLayerTC/Functions/CAPLfunctionIso11783TCILResetTCStatus.htm",l:-1,t:"TCIL_ResetTCStatus",i:5.00139850703977E-05,a:"CAPL Functions  »  ISO11783  »  Task Controller Interaction Layer (TC IL)   » TCIL_ResetTCStatus TCIL_ResetTCStatus   Function Syntax long TCIL_ResetTCStatus( ); // form 1 long TCIL_ResetTCStatus(dbNode tc); // form 2 Description This function reverts changes made by  TCIL_SetTCStatus  and turns ..."},"3028":{y:0,u:"../Content/Topics/CAPLFunctions/CANstress/CAPLfunctionsCANstressOverview.htm",l:-1,t:"CANstress CAPL Functions",i:0.000102115582882152,a:"CAPL Functions  » CANstress CAPL Functions CANstress CAPL Functions   Access Multiple CANstress Devices from a Single Test Module   •   CANstress and Distributed Mode   •   CANstress: Main Test Function Example"},"3029":{y:0,u:"../Content/Topics/CAPLFunctions/Other/Functions/CAPLfunctionMessageTimeNS.htm",l:-1,t:"MessageTimeNS",i:0.000101578687437006,a:"CAPL Functions  »  General  »  Function Overview  » MessageTimeNS MessageTimeNS   Function Syntax float MessageTimeNS(message msg); // from 1 float MessageTimeNS(linFrame msg); // from 2 float MessageTimeNS(mostMessage msg); // from 3 float MessageTimeNS(mostAmsMessage msg); // from 4 float ..."},"3030":{y:0,u:"../Content/Topics/CAPLFunctions/Car2x/Functions/CAPLfunctionC2xTestJoinSignalMatch.htm",l:-1,t:"C2xTestJoinSignalMatch",i:0.000172522093042293,a:"CAPL Functions  »  Car2x  » C2xTestJoinSignalMatch C2xTestJoinSignalMatch   Function Syntax long C2xTestJoinSignalMatch (char* protocolDesignator, char* tokenDesignator, int64 tokenValue) // form 1 long C2xTestJoinSignalMatch (char* protocolDesignator, char* tokenDesignator, int64 tokenValue, char* ..."},"3031":{y:0,u:"../Content/Topics/CANoeCANalyzer/CommunicationConcept/CCDistributedObjects.htm",l:-1,t:"Distributed Objects",i:0.00145616061433531,a:" CANoe  »  Communication Concept  » Distributed Objects Distributed Objects   General Distributed Objects (DOs) are , besides  communication objects  (COs),  a core feature of the communication concept. In CANoe they stand for various nodes, devices or functions that communicate with each other via ..."},"3032":{y:0,u:"../Content/Topics/vCDL/Language/vCDLSecureOnboardCommunication.htm",l:-1,t:"Secure Onboard Communication (vCDL 1.4)",i:5.08577602721154E-05,a:" CANoe  »  vCDL  »  vCDL 1.4  »  Language  » Secure Onboard Communication Secure Onboard Communication   The Secure Onboard Communication shall provide authentication and integrity protection for sensitive data transmitted over the network. It is similar in nature to  E2E protection  and accordingly ..."},"3033":{y:0,u:"../Content/Topics/COMInterface/Objects/COMObjectDatabaseSetup.htm",l:-1,t:"DatabaseSetup (COM Object)",i:5.77359283632051E-05,a:" CANoe  »  COM Interface  »  Objects  » DatabaseSetup DatabaseSetup Application  »  Configuration  »  GeneralSetup  » DatabaseSetup Description The DatabaseSetup object represents the assigned databases of the current configuration. Properties Methods — Events Example Example — OnChange event The ..."},"3034":{y:0,u:"../Content/Topics/CANoeCANalyzer/FunctionBlocks/IG/IGJ1587Parameter.htm",l:-1,t:"J1587 Parameters in the Interactive Generator",i:0.00011281058950864,a:"IG  »  Configuration  »  Transmit List  » J1587 J1587 Parameters in the Interactive Generator   The Interactive Generator can send J1587 messages. A message can \n be inserted from the database with the button [New]. \n A click on the arrow of the button [New] \n opens a menu. With the menu command ..."},"3035":{y:0,u:"../Content/Topics/CANoeCANalyzer/CommunicationConcept/CCDODynamicObjectReferences.htm",l:-1,t:"Dynamic Objects and References",i:0.00017723524710611,a:" CANoe  »  Communication Concept  »  Distributed Objects  » Dynamic Objects and References Dynamic Objects and References   Another feature of the communication concept are dynamically generated distributed objects. These can be generated at runtime via C# or CAPL, for which examples are shown ..."},"3036":{y:0,u:"../Content/Topics/SampConf/Ethernet/CANoe/BasicProprietaryProtocol/BasicProprietaryProtocolCN.htm",l:-1,t:"Proprietary IP Protocol",i:4.79175835799545E-05,a:"Sample Configurations  »  Ethernet  » Proprietary IP Protocol Proprietary IP Protocol   CANoe supports the interpretation of many Ethernet and IP-based protocols. Standardized protocols such as SOME/IP, AUTOSAR PDU, DoIP, and XCP, are evaluated up to the signal level and can be displayed directly in ..."},"3037":{y:0,u:"../Content/Topics/CANoeCANalyzer/AFDX/protocols/afdxProtocolsIntro.htm",l:-1,t:"Protocol Overview (AFDX)",i:0.000369926151665677,a:"AFDX  » Protocol Overview Protocol Overview   The AFDX option supports various protocols, which are listed in the following table: These protocols are associated with a dedicated set of rules, according to ARINC 664 Part 7-1. For more information, see the  AFDX Protocol  help page. Option .AFDX"},"3038":{y:0,u:"../Content/Topics/CAPLFunctions/Other/Functions/CAPLfunctionGetLocalTime.htm",l:-1,t:"getLocalTime",i:0.000171202368575897,a:"CAPL Functions  »  General  »  Function Overview  » getLocalTime getLocalTime   Function Syntax void getLocalTime(long time[]); Description Returns details to the current date and time in an array of type long. Parameters An array of type long with at least 9 entries. The entries of the array will ..."},"3039":{y:0,u:"../Content/Topics/CAPLFunctions/ISO11783/ISOInteractionLayer/Functions/CAPLfunctionIso11783ILControlInit.htm",l:-1,t:"Iso11783IL_ControlInit",i:6.13683309747124E-05,a:"CAPL Functions  »  ISO11783  »  ISO11783 Interaction Layer   » Iso11783IL_ControlInit Iso11783IL_ControlInit   Function Syntax long Iso11783IL_ControlInit(); // form 1 long Iso11783IL_ControlInit( byte deviceName[8] ); // form 2 long Iso11783IL_ControlInit( dbNode node ); // form 3 long ..."},"3040":{y:0,u:"../Content/Topics/SampConf/CAN/CANoe/Stress/StressStartCN.htm",l:-1,t:"Stress (CAN)",i:6.6669751070761E-05,a:" CANoe  » Sample Configurations  »  CAN  » Stress (CAN) Stress (CAN)   Introduction Start the measurement. With the help of the Interactive Generator and CAPL programs, cyclical messages are sent automatically. You can stimulate bus traffic with the following functions. The key combinations are also ..."},"3041":{y:0,u:"../Content/Topics/CANoeCANalyzer/Interfaces/ASAMMCD3SystemVariables.htm",l:-1,t:"ASAM MCD3: Access through System Variables",i:2.83743419246974E-05,a:" CANoe  » Interfaces/Add-ons »  ASAM MCD3  » System variables ASAM MCD3: Access through System Variables   Access to MCD parameters through system variables ECU parameters available through the integration of an MCD server are not directly accessible in XML test modules, Graphics or Data Window, ..."},"3042":{y:0,u:"../Content/Topics/CAPLFunctions/IP/Methods/CAPLfunctionGetInt64.htm",l:-1,t:"ethernetPacket::GetInt64",i:2.1003717686362E-05,a:"CAPL Functions  »  Ethernet  »  Function Overview  » ethernetPacket::GetInt64 ethernetPacket::GetInt64   Method  Syntax int  ethernetPacket .GetInt64(char protocol[], char field[]); Description Returns the value of the specified field as int64. If protocol or field is not contained in the packet, ..."},"3043":{y:0,u:"../Content/Topics/CAPLFunctions/ISO11783/ISOInteractionLayer/Functions/CAPLfunctionIso11783ILtimRemoveCertificate.htm",l:-1,t:"Iso11783IL_TIMRemoveCertificate",i:3.67775937289007E-05,a:"CAPL Functions  »  ISO11783   »  ISO11783 Interaction Layer   » Iso11783IL_TIMRemoveCertificate Iso11783IL_TIMRemoveCertificate   Function Syntax long Iso11783IL_TIMRemoveCertificate(byte certificateType); // form 1 long Iso11783IL_TIMRemoveCertificate(dbNode participant, byte certificateType); // ..."},"3044":{y:0,u:"../Content/Topics/COMInterface/Objects/COMObjectMOSTApplicationFilter.htm",l:-1,t:"MostApplicationFilter (COM Object)",i:3.47338499342406E-05,a:" CANoe  »  COM Interface  »  Objects  » MostApplicationFilter MostApplicationFilter Application  »  Networks  »  Network  »  Devices  »  Device  »  MostNetworkInterface  » MostApplicationFilter Description The MostApplicationFilter object represents a filter, that filters the messages and packets in ..."},"3045":{y:0,u:"../Content/Topics/CAPLFunctions/IP/Methods/CAPLfunctionFaultInjectDisableLengthPadding.htm",l:-1,t:"ethernetPacket::FaultInjectDisableLengthPadding",i:6.35211292576629E-05,a:"CAPL Functions  »  Ethernet  »  Function Overview  » ethernetPacket::FaultInjectDisableLengthPadding ethernetPacket::FaultInjectDisableLengthPadding   Method  Syntax dword  ethernetPacket .FaultInjectDisableLengthPadding(); Description Disable automatic padding of Ethernet data to minimal length. ..."},"3046":{y:0,u:"../Content/Topics/CAPLFunctions/ISO11783/ISOInteractionLayerVT/Functions/CAPLfunctionIso11783VTILRemoveAuxAssignment.htm",l:-1,t:"VTIL_RemoveAuxAssignment",i:4.89214897086971E-05,a:"CAPL Functions  »  ISO11783  »  Virtual Terminal Interaction Layer (VT IL)   » VTIL_RemoveAuxAssignment VTIL_RemoveAuxAssignment   Function Syntax long VTIL_RemoveAuxAssignment(dbNode auxiliaryFunctionWSM, word auxiliaryFunctionId); // form 1 long VTIL_RemoveAuxAssignment(dword ..."},"3047":{y:0,u:"../Content/Topics/CAPLFunctions/SystemVariables/Functions/CAPLfunctionSysGetVariableTimeNS.htm",l:-1,t:"sysGetVariableTimeNS",i:7.43735921339383E-05,a:"CAPL Functions  »  System Variables  » sysGetVariableTimeNS sysGetVariableTimeNS   Function Syntax int64 sysGetVariableTimeNS(SysVarName); Description Returns the time stamp of the last update to the variable value. Parameters Return Values Time stamp of the last update to the variable value, in ..."},"3048":{y:0,u:"../Content/Topics/CAPLFunctions/CANDisturbance/Classes/CAPLfunctionCanDisturbanceExternalTrigger.htm",l:-1,t:"Class: CanDisturbanceExternalTrigger",i:2.43989410252601E-05,a:"CAPL Functions  »  CAN Disturbance Interface  »  Classes »  Class: CanDisturbanceExternalTrigger Class: CanDisturbanceExternalTrigger   This trigger can be used, if a sequence or a frame based sequence should be sent based on a digital input value. Methods — Attributes You can access control ..."},"3049":{y:0,u:"../Content/Topics/CAPLFunctions/IP/Methods/CAPLfunctionGetVlan.htm",l:-1,t:"ethernetPacket::GetVlan",i:6.85694165712658E-05,a:"CAPL Functions  »  Ethernet  »  Function Overview  » ethernetPacket::GetVlan ethernetPacket::GetVlan   Method  Syntax long  ethernetPacket .GetVlan(word \u0026tpid, word \u0026tci); // form 1 long  ethernetPacket .GetVlan(dword vlanIndex, word \u0026tpid, word \u0026tci); // form 2 Description Returns the VLAN tag, if ..."},"3050":{y:0,u:"../Content/Topics/CLibraryAPI/Functions/CAPLfunctioncclConsumedFieldGetID.htm",l:-1,t:"cclConsumedFieldGetID",i:5.50563412661908E-05,a:" CANoe  »  C Library API  »  Functions  » cclConsumedFieldGetID cclConsumedFieldGetID   Function Syntax typedef int32_t cclConsumedFieldID; cclConsumedFieldID cclConsumedFieldGetID(const char* path); Description Returns a consumer side service field port ID, which can be used in field registration ..."},"3051":{y:0,u:"../Content/Topics/CAPLFunctions/VTSystem/Functions/CAPLfunctionVTSStopStimulation.htm",l:-1,t:"StopStimulation",i:7.82718631625601E-05,a:"CAPL Functions  »  VT System  » StopStimulation StopStimulation   Method  Syntax long SysVarNamespace.StopStimulation (); Description Stops the output of a stimulation signal. This resets the stimulation mode. Therefore it is not sufficient to call  StartStimulation  to start the output again. You ..."},"3052":{y:0,u:"../Content/Topics/SampConf/SOA/SOABasicAsrAdaptive.htm",l:-1,t:"Basic AUTOSAR Adaptive (SOA)",i:0.000150810420967062,a:"Sample Configurations  »  SOA  » Basic AUTOSAR Adaptive (SOA) Basic AUTOSAR Adaptive (SOA)   The sample configuration is based on an AUTOSAR Adaptive database. This describes a Calculator service interface with the communication participants Consumer and Provider. The Calculator service interface ..."},"3053":{y:0,u:"../Content/Topics/COMInterface/Objects/COMObjectVisualSequences.htm",l:-1,t:"VisualSequences (COM Object)",i:4.34307990930598E-05,a:" CANoe  »  COM Interface  »  Objects  » VisualSequences VisualSequences Application  »  Configuration  »  GeneralSetup  »  VisualSequenceSetup  » VisualSequences Description The VisualSequences object represents the configured visual sequences of the current configuration. Properties Methods Events ..."},"3054":{y:0,u:"../Content/Topics/CANoeCANalyzer/Ethernet/Protocols/ProtocolSRP.htm",l:-1,t:"SRP",i:4.06253551004015E-05,a:"Ethernet  »  Protocol Overview  » SRP SRP   Protocol Information  [▲ back] The Stream Reservation Protocol (SRP) utilizes three signaling protocols MMRP, MVRP and MSRP to establish stream reservations across a bridged network. SRP is defined in IEEE 802.1Qat. The Multiple MAC Registration Protocol ..."},"3055":{y:0,u:"../Content/Topics/CAPLFunctions/J1939/J1939InteractionLayer/Functions/CAPLfunctionJ1939ILResetAllManipulatedMessages.htm",l:-1,t:"J1939ILResetAllManipulatedMessages",i:0.000134358429179193,a:"CAPL Functions  »  J1939  »  J1939 IL  » J1939ILResetAllManipulatedMessages J1939ILResetAllManipulatedMessages   Function Syntax long J1939ILResetAllManipulatedMessages(); // form 1 long J1939ILResetAllManipulatedMessages(dbNode node); // form 2 Description Resets the changes of all  ..."},"3056":{y:0,u:"../Content/Topics/CAPLFunctions/RS232/Functions/CAPLfunctionRS232Send.htm",l:-1,t:"RS232Send",i:7.78574346924056E-05,a:"CAPL Functions  »  RS232  » RS232Send RS232Send   Function Syntax dword RS232Send( dword port, byte buffer[], dword number ) Description Sends a block of bytes to a serial port. The operation starts the sending of a block.  The callback handler  RS232OnSend  will notify the node of completion. To ..."},"3057":{y:0,u:"../Content/Topics/CAPLFunctions/Other/Functions/CAPLfunctionMbStrLen.htm",l:-1,t:"mbstrlen",i:0.000300470048063895,a:"CAPL Functions  »  General  »  Function Overview  » mbstrlen mbstrlen   Function Syntax long mbstrlen(char s[]); Description The functional result is the length of the string s in characters. Parameters string Return Values Length of the string in characters. Example Availability strlen   •   ..."},"3058":{y:0,u:"../Content/Topics/CAPLFunctions/DistributedObjects/Methods/CAPLfunctiondistObjMemberBlueprintSetInitialValue.htm",l:-1,t:"distObjMemberBlueprint::SetInitialValue",i:6.2930904433097E-05,a:"CAPL Functions  »  Distributed Objects  » distObjMemberBlueprint::SetInitialValue distObjMemberBlueprint::SetInitialValue   Method  Syntax long  distObjMemberBlueprint ::SetInitialValue(T value); Description Sets the initial value of the member blueprint. This method is only available for members ..."},"3059":{y:0,u:"../Content/Topics/CAPLFunctions/Other/Functions/CAPLfunctionFileWriteBinaryBlock.htm",l:-1,t:"fileWriteBinaryBlock",i:3.60574464297289E-05,a:"CAPL Functions  »  General  »  Function Overview  » fileWriteBinaryBlock fileWriteBinaryBlock   Function Syntax long fileWriteBinaryBlock (byte buff[], long buffsize, dword fileHandle); Method  Syntax (Dynamic) long File::WriteBinaryBlock(byte buff[], long buffsize); Description This function writes ..."},"3060":{y:0,u:"../Content/Topics/CAPLFunctions/DistributedObjects/EventProcedures/CAPLfunctionOnTransmitAnyUnsubscribe.htm",l:-1,t:"on transmit_any_unsubscribe",i:4.14736886503626E-05,a:"CAPL Functions  »  Distributed Objects  » on transmit_any_unsubscribe on transmit_any_unsubscribe   Function Syntax on transmit_any_unsubscribe \u003cInterface Member\u003e; Description This handler is called whenever an instance of a consumed data, event, or field member transmits an unsubscribe via the  ..."},"3061":{y:0,u:"../Content/Topics/COMInterface/Objects/COMObjectCANController.htm",l:-1,t:"CANController (COM Object)",i:6.20100815101087E-05,a:" CANoe  »  COM Interface  »  Objects  » CANController CANController Application  »  Bus  »  Channels  »  Channel  » CANController Application  »  Configuration  »  GeneralSetup  » CANController Application  »  Configuration  »  SimulationSetup  »  Buses  »  Bus  »  Channels  »  Channel  » ..."},"3062":{y:0,u:"../Content/Topics/CAPLFunctions/RS232/Functions/CAPLfunctionRS232SetSignalLine.htm",l:-1,t:"RS232SetSignalLine",i:0.000116168619989986,a:"CAPL Functions  »  RS232  » RS232SetSignalLine RS232SetSignalLine   Function Syntax dword RS232SetSignalLine( dword port, dword line, dword state ); Description Sets signal lines on serial port. Parameters Return Values Example — Availability  "},"3063":{y:0,u:"../Content/Topics/CAPLFunctions/ISO11783/ISOInteractionLayer/Functions/CAPLfunctionIso11783ILOPLock.htm",l:-1,t:"Iso11783IL_OPLock",i:3.69260011880801E-05,a:"CAPL Functions  »  ISO11783   »  ISO11783 Interaction Layer   » Iso11783IL_OPLock Iso11783IL_OPLock   Function Syntax long Iso11783IL_OPLock( dword lock, dword maskID, dword timeout ); // form 1 long Iso11783IL_OPLock( dbNode implement, dword lock, dword maskID, dword timeout ); // form 2 ..."},});