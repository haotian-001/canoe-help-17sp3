define({"6838":{y:0,u:"../Content/Topics/CANoeCANalyzer/J1939/j1939IL/j1939ILCreateTxMsg.htm",l:-1,t:"Setup a Tx message",i:6.17690892616823E-05,a:"J1939  »  J1939 Interaction Layer  » Setup a Tx message Setup a Tx message   This page explains how to setup Tx message for the  J1939 Interaction Layer . The Tx messages of a node are sent by the J1939 IL. The signal value can be changed via CAPL or panels. To setup Tx messages, the node must ..."},"6839":{y:0,u:"../Content/Topics/CANoeCANalyzer/FunctionBlocks/LINDisturbanceBlock/LINDisturbanceBlockResponseDisturbanceView.htm",l:-1,t:"LIN Disturbance Block: Response Disturbance View",i:8.77806315734083E-05,a:"LIN Disturbance Block  » Views » Response Disturbance LIN Disturbance Block: Response Disturbance View   Response disturbances are configured in the Header Disturbance view. Configuration Byte without disturbance Value of the data byte for disturbance configuration, displayed as a bit sequence with ..."},"6840":{y:0,u:"../Content/Topics/CAPLFunctions/SmartCharging/Functions/CAPLfunctionSCCSLACGetDestinationAddress.htm",l:-1,t:"SCC_SLAC_GetDestinationAddress",i:6.24395493115898E-05,a:"CAPL Functions  »  Smart Charging  »  SCC Modeling Libraries (Simulation Setup)  »  SLAC Data Queries  »  Shared Functions  » SCC_SLAC_GetDestinationAddress SCC_SLAC_GetDestinationAddress   Function Syntax void SCC_SLAC_GetDestinationAddress \n\n( byte[] MACAddress )  Description Gets the destination ..."},"6841":{y:0,u:"../Content/Topics/CANoeCANalyzer/FunctionBlocks/Filter/IPFilter.htm",l:-1,t:"IP Filter",i:0.000183346149554571,a:"Measurement Setup  »  Filter  » IP Filter IP Filter Ribbon | Analysis Tab |Filter|IP Filter Context Menu of a  Hot Spot : Insert Event Filter|IP Option Ethernet"},"6842":{y:0,u:"../Content/Topics/CAPLFunctions/IP/SOMEIPIL/Functions/CAPLfunctionSomeIpSetValueFloat.htm",l:-1,t:"SomeIpSetValueFloat",i:4.14994072109848E-05,a:"CAPL Functions  »  Ethernet  »  SOME/IP IL  » SomeIpSetValueFloat SomeIpSetValueFloat   Function Syntax long SomeIpSetValueFloat( dword objectHandle, char valuePath[], float value ); Description This function can be used to set a raw value in the object specified in the objectHandle parameter. The ..."},"6843":{y:0,u:"../Content/Topics/CANoeCANalyzer/ISO11783/InteractiveTaskController/ITCMeasurementCommandDialog.htm",l:-1,t:"Measurement Command Dialog (ISO11783 ITC)",i:0.000106025630421431,a:"ISO11783  »  Interactive Task Controller  »  Device view  » Measurement Command Dialog (ISO11783 ITC) Measurement Command Dialog   Over this dialog you can send different measurement commands ton the Task Controller Client. Enter therefor an interval or a threshold for the selected process data ..."},"6844":{y:0,u:"../Content/Topics/CAPLFunctions/IP/SOMEIPIL/Functions/CAPLfunctionOnSomeIpProcessTxMessage.htm",l:-1,t:"OnSomeIpProcessTxMessage",i:4.09491205431634E-05,a:"CAPL Functions  »  Ethernet  »  SOME/IP IL  » OnSomeIpProcessTxMessage OnSomeIpProcessTxMessage   Function Syntax long OnSomeIpProcessTxMessage(dword messageHandle, long txChannel); Description This callback function is called whenever the IL wants to send a SOME/IP message. The return value of this ..."},"6845":{y:0,u:"../Content/Topics/CAPLFunctions/CANstress/Functions/CAPLfunctionCANstressGetInfo.htm",l:-1,t:"CANstressGetInfo",i:2.1414782593373E-05,a:"CAPL Functions  »  CANstresss  » CANstressGetInfo CANstressGetInfo   Function Syntax long CANstressGetInfo( char softwareVersion[], long swVersionBufLen, char firmwareVersion[], long fwVersionBufLen, char serialNumber[], long snBufLen, char canInterface1[], long if1BufLen, char canInterface2[], long ..."},"6846":{y:0,u:"../Content/Topics/CAPLFunctions/Car2x/Functions/CAPLfunctionC2xStopScenario.htm",l:-1,t:"C2xStopScenario",i:0.000184915675846417,a:"CAPL Functions  »  Car2x  » C2xStopScenario C2xStopScenario   Function Syntax long C2xStopScenario(); Description This function stops the scenario execution immediately. The values of scenario attributes remain constant after the scenario stop. The scenario can be started again by calling  ..."},"6847":{y:0,u:"../Content/Topics/CAPLFunctions/Other/Functions/CAPLfunctionFDXSetByteOrder.htm",l:-1,t:"FDXSetByteOrder",i:9.08100330446567E-05,a:"CAPL Functions  »  General  »  Function Overview  » FDXSetByteOrder FDXSetByteOrder   Function Syntax long FDXSetByteOrder(long fdxClientHandle, long byteOrder); Description This function configures the byte order of the FDX protocol that should be used for the communication with the specified ..."},"6848":{y:0,u:"../Content/Topics/CLibraryAPI/Functions/CAPLfunctioncclSomeIPSetEventGroupUnsubscribedHandler.htm",l:-1,t:"cclSomeIPSetEventGroupUnsubscribedHandler",i:3.86360090043396E-05,a:" CANoe  »  C Library API  »  Functions  » cclSomeIPSetEventGroupUnsubscribedHandler cclSomeIPSetEventGroupUnsubscribedHandler   Function Syntax typedef void(*cclSomeIPEventGroupSubscriptionHandler)(cclSomeIPProvidedEventGroupID providedEventGroupID); int32_t ..."},"6849":{y:0,u:"../Content/Topics/CANoeCANalyzer/AFDX/windows/afdxStatisticWnd/afdxStatisticWndConfig.htm",l:-1,t:"Configure the AFDX VL Statistics Window",i:6.95672672873729E-05,a:"AFDX VL Statistics Window  » Configure the AFDX VL Statistics Window Configure the AFDX VL Statistics Window Statistics Window | Context Menu | Configuration  Open the dialog AFDX VL Statistics - Configuration via the context menu. Activate or deactivate the check boxes to create your configuration. ..."},"6850":{y:0,u:"../Content/Topics/CAPLFunctions/SmartCharging/Callbacks/CAPLfunctionSCCCMMNBCSoundInd.htm",l:-1,t:"SCC_CM_MNBC_Sound_Ind",i:9.46765925004267E-05,a:"CAPL Functions  »  Smart Charging  »  SCC Modeling Libraries (Simulation Setup)  »  EVSE Callback Functions  » SCC_CM_MNBC_Sound_Ind SCC_CM_MNBC_Sound_Ind   Function Syntax void SCC_CM_MNBC_Sound_Ind ( byte RunId[], byte SourceMacAddress[], dword Count ) Description The callback is called as soon as ..."},"6851":{y:0,u:"../Content/Topics/CLibraryAPI/Functions/CAPLFunctioncclLinSetWakeupTimings.htm",l:-1,t:"cclLinSetWakeupTimings (CAPL Function)",i:3.86360090043396E-05,a:" CANoe  »  C Library API  »  Functions  » cclLinSetWakeupTimings (CAPL Function) cclLinSetWakeupTimings   Function Syntax int32_t cclLinSetWakeupTimings(int32_t channel, uint32_t ttobrk, uint32_t wakeupSignalCount, uint32_t widthinMicSec); Description Sets timing parameters, on the current node, for ..."},"6852":{y:0,u:"../Content/Topics/TestCommands/CheckDescriptions/Deprecated/CDJ1939PGN.htm",l:-1,t:"J1939 PGN (Check Description)",i:2.48598523171083E-05,a:" CANoe  »  Check Descriptions  »  J1939-Specific Checks  » J1939 PGN J1939 PGN    "},"6853":{y:0,u:"../Content/Topics/CLibraryAPI/Functions/CAPLfunctioncclSignalSetHandler.htm",l:-1,t:"cclSignalSetHandler",i:3.86360090043396E-05,a:" CANoe  »  C Library API  »  Functions  » cclSignalSetHandler cclSignalSetHandler   Function Syntax int32_t cclSignalSetHandler(int32_t signalID, void (*function)(int32_t signalID) ); Description The function assigns an event routine to the specified signal. The event routine is called each time \na ..."},"6854":{y:0,u:"../Content/Topics/CANoeCANalyzer/AFDX/windows/symbolExplorer/symbolExplorerMessageStatistics.htm",l:-1,t:"Message Statistics for AFDX",i:3.10758842361534E-05,a:"AFDX Windows  » Symbol Explorer » Message Statistics for AFDX  Message Statistics for AFDX    Predefined signals for message-related statistical values are generated for a message defined in the database. You can add the predefined statistic signals to the Graphics or Data Window by drag and drop ..."},"6855":{y:0,u:"../Content/Topics/CANoeCANalyzer/J1939/j1939basics/j1939FunctionalSafety.htm",l:-1,t:"Functional Safety J1939-76",i:8.77480500243819E-05,a:"J1939  »  J1939 Basics  » Functional Safety J1939-76 Functional Safety J1939-76   Introduction The SAE J1939-76 standard (SAE J1939 Functional Safety Communications Protocol) describes a J1939 extension for the transmission of safety-critical data. This is achieved by sending an additional message ..."},"6856":{y:0,u:"../Content/Topics/CAPLFunctions/Car2x/Functions/CAPLfunctionC2xGetMessageHandle.htm",l:-1,t:"C2xGetMessageHandle",i:4.80525515721617E-05,a:"CAPL Functions  »  Car2x  » C2xGetMessageHandle C2xGetMessageHandle   Function Syntax long C2xGetMessageHandle(char* dbMessage); // form 1 long C2xGetMessageHandle(char* stationName, char* dbMessage); //form 2 long C2xGetMessageHandle(uint64 stationID, long sequenceNumber); //form 3 long ..."},"6857":{y:0,u:"../Content/Topics/CAPLFunctions/TCPIPAPI/Functions/CAPLfunctionIpGetStackParameter.htm",l:-1,t:"IpGetStackParameter",i:4.47117629458147E-05,a:"CAPL Functions  »  TCP/IP API  » IpGetStackParameter IpGetStackParameter   Function Syntax long IpGetStackParameter(char parameterName[], long \u0026value); // form 1 long IpGetStackParameter(dword ifIndex, char parameterName[], long \u0026value); // from 2 Description With this function it is possible to ..."},"6858":{y:0,u:"../Content/Topics/CAPLFunctions/CANopen/NodeLayerTFS/Functions/CAPLfunctionCoTfsGuardingRequest.htm",l:-1,t:"coTfsGuardingRequest",i:3.5857770891039E-05,a:"CAPL Functions  »  CANopen  »  Test Feature Set Node Layer  » coTfsGuardingRequest coTfsGuardingRequest (Level 1)   Function Syntax long coTfsGuardingRequest( dword guardTime, dword retryFactor, dword tolerance, dword guardReqNumber, dword waitForEmcy ); Description The test sets the guard time and ..."},"6859":{y:0,u:"../Content/Topics/CAPLFunctions/VTSystem/Functions/CAPLfunctionVTSLoadWFResistance.htm",l:-1,t:"LoadWFResistance",i:0.00019282345600813,a:"CAPL Functions  »  VT System  » LoadWFResistance LoadWFResistance   Method  Syntax long SysVarNamespace.LoadWFResistance (char filepath[]); Description This function loads a resistance curve for a VT2004 channel from the specified file. Parameters Return Values Example Availability ..."},"6860":{y:0,u:"../Content/Topics/CAPLFunctions/FlexRay/Functions/CAPLfunctionFRSendSymbol.htm",l:-1,t:"frSendSymbol",i:3.29141200296987E-05,a:"CAPL Functions  »  FlexRay  » frSendSymbol frSendSymbol   Function Syntax frSendSymbol( long \u003ctype\u003e, long \u003cparam\u003e, \n int channel ); Description This function sends an MTS symbol in the next possible symbol window if the Communication Controller is in normal mode (synchronized). Parameters ..."},"6861":{y:0,u:"../Content/Topics/CAPLFunctions/ISO11783/ISONodeLayer/Functions/CAPLfunctionIso11783OPGetAttribute.htm",l:-1,t:"Iso11783OPGetAttribute",i:4.89887579938959E-05,a:"CAPL Functions  »  ISO11783  »  ISO11783 Node Layer  » Iso11783OPGetAttribute Iso11783OPGetAttribute   Function Syntax long \n Iso11783OPGetAttribute( dword ecuHandle, dword objectID, dword attributeID \n ); Description The function returns a value of an object attribute from the local object \n pool. ..."},"6862":{y:0,u:"../Content/Topics/CAPLFunctions/MOST/Functions/CAPLfunctionMOSToutput.htm",l:-1,t:"output (MOST)",i:0.000140553937046896,a:"CAPL Functions  »  MOST  » output (MOST) output (MOST)   Function Syntax void output (mostMessage msg); // form 1 void output (mostAmsMessage msg); // form 2 void output (mostRawMessage msg); // form 3 Description Sends a message on the MOST ring. Parameters Variable of type mostMessage, ..."},"6863":{y:0,u:"../Content/Topics/CANoeCANalyzer/Car2x/windows/busStatisticWnd.htm",l:-1,t:"Bus Statistics Window (Car2x)",i:3.55413097820012E-05,a:"Car2x  » Car2x Windows » Bus Statistics Window Bus Statistics Window   The Bus Statistics Window shows WLAN specific data and values too. The following information is displayed: Option Car2x   •  "},"6864":{y:0,u:"../Content/Topics/CAPLFunctions/ISO11783/ISONodeLayer/Functions/CAPLfunctionIso11783GetEnvDbl.htm",l:-1,t:"Iso11783GetEnvDbl",i:4.89887579938959E-05,a:"CAPL Functions  »  ISO11783  »  ISO11783 Node Layer   » Iso11783GetEnvDbl Iso11783GetEnvDbl   Function Syntax double  Iso11783GetEnvDbl( char envVar[], dword index ); Description This function gets the value of an environment variable. Parameters Return Values Value of the environment variable or ..."},"6865":{y:0,u:"../Content/Topics/CANoeCANalyzer/AFDX/afdxDBsupport/afdxDBsupportNodeAttributes.htm",l:-1,t:"Node Attributes (AFDX)",i:7.33591212516568E-05,a:"Database Support  » Node Attributes Node Attributes   This attribute allows the assignment of an application to an equipment. The following table describes ICMP relevant node attributes. Option .AFDX"},"6866":{y:0,u:"../Content/Topics/TestCommands/CheckDescriptions/Deprecated/CDJ1939RulesSpecific.htm",l:-1,t:"J1939 Rules Specific (Check Description)",i:2.48598523171083E-05,a:" CANoe  »  Check Descriptions  »  J1939-Specific Checks  » J1939 Rules Specific J1939 Rules Specific    "},"6867":{y:0,u:"../Content/Topics/CANoeCANalyzer/SCOPE/ScopeEyeDiagram.htm",l:-1,t:"Eye Diagram (Scope)",i:0.00010943709045758,a:"Scope  »  Layout  » Eye Diagram Eye Diagram   Analysis Requirements Supported bus systems: CAN and CAN FD (starting with CANoe 9.0) FlexRay (starting with CANoe 9.0 SP2) LIN (starting with CANoe 9.0 SP4) Analysis of single frames that can be selected in the  Trace view . Analysis of multiple frames ..."},"6868":{y:0,u:"../Content/Topics/CAPLFunctions/CarMaker/Functions/CAPLfunctionCarMakerStopTestSeries.htm",l:-1,t:"CarMaker_StopTestSeries",i:5.80642905539631E-05,a:"CAPL Functions  »  CarMaker Interface   » CarMaker_StopTestSeries CarMaker_StopTestSeries   Function Syntax long CarMaker_StopTestSeries( ); Description Stops test series immediately in CarMaker. Parameters — Return Values APO return code Example Availability  "},"6869":{y:0,u:"../Content/Topics/CANoeCANalyzer/Windows/Write/WriteWindowNotifications/06WriteWindow.htm",l:-1,t:"Write Window",i:2.79090323299601E-05,a:" CANoe  »  Write Window   »  Notifications  » Write Window Write Window   Write Window"},"6870":{y:0,u:"../Content/Topics/CAPLFunctions/Car2x/Functions/CAPLfunctionC2xStartScenario.htm",l:-1,t:"C2xStartScenario",i:0.000229478520151535,a:"CAPL Functions  »  Car2x  » C2xStartScenario C2xStartScenario   Function Syntax long C2xStartScenario(); // form 1 long C2xStartScenario(char* stationName, double latitude, double longitude, double heading); // form 2 Description Form 1 This function starts the scenario assigned to the current CANoe ..."},"6871":{y:0,u:"../Content/Topics/CANoeCANalyzer/Ethernet/Protocols/ProtocolCATPGT.htm",l:-1,t:"CAT PGT",i:2.8038679546916E-05,a:"Ethernet  »  Protocol Overview  » CAT PGT CAT PGT   Protocol information  [▲ back] Cat PGT is a  J1939 -oriented protocol over Ethernet that enables a client (consumer) to request and receive parameter values (signals) from a corresponding server (provider) over a network. HTTP PDU  [▲ back] The ..."},"6872":{y:0,u:"../Content/Topics/SampConf/SampConfsDiagnostics.htm",l:-1,t:"Sample Configurations Diagnostics",i:0.000188616619087512,a:" CANoe  »  Sample Configurations  » Diagnostics Sample Configurations Diagnostics   Introduction Most ECUs provide diagnostic services, e.g. for reading fault memory, queryings and changing settings. For this purpose, diagnostic data is exchanged between a Tester (Client)and the ECU (Server) ..."},"6873":{y:0,u:"../Content/Topics/CAPLFunctions/CommunicationObjects/Functions/CAPLfunctionSDDisconnect.htm",l:-1,t:"SD_Disconnect",i:4.1850257217554E-05,a:"CAPL Functions  »  Communication Objects  » SD_Disconnect SD_Disconnect   Function Syntax void SD_Disconnect(providedServiceRef * providedService); // form 1 vvoid SD_Disconnect(consumedServiceRef * consumedService); // form 2 Description Disconnects a service provider and consumer. You can call the ..."},"6874":{y:0,u:"../Content/Topics/CANoeCANalyzer/Connectivity/DDSMonitoring.htm",l:-1,t:"DDS Monitoring (Connectivity)",i:0.000147779888287102,a:" CANoe  »  Connectivity  »  DDS Protocol  » DDS Monitoring DDS Monitoring   Monitoring Events The DDS binding, which is used to model DDS participants in CANoe, triggers certain monitoring events in CANoe. Currently there are the following events and data types, which are described in more detail ..."},"6875":{y:0,u:"../Content/Topics/CAPLFunctions/J1939/Functions/CAPLfunctionJ1939MakeCanId.htm",l:-1,t:"J1939MakeCanId",i:2.33544839104749E-05,a:"CAPL Functions  »  J1939  »  Function Overview  » J1939MakeCanId J1939MakeCanId   Function Syntax dword J1939MakeCanId (byte priority , dword pgn, byte destinationAddress, byte sourceAddress, byte setExtendedBit); Description Assembles a CAN ID of a  parameter group  (PG) from source/destination ..."},"6876":{y:0,u:"../Content/Topics/CANoeCANalyzer/Diagnostics/KLine/DiagnosticsKLineConfiguration.htm",l:-1,t:"K-Line Settings",i:0.000223242046535177,a:"Diagnostics with CANoe  »  Functional Overview  »  K-Line  »  Protocol Settings  » K-Line Settings K-Line Settings Ribbon :  Diagnostics \u0026 XCP Tab | Diagnostics/ISO TP Configuration | Administrate Diagnostic Descriptions |Assignments|K-Line Settings Configuration using Vector Interfaces K-Line ..."},"6877":{y:0,u:"../Content/Topics/CANoeCANalyzer/J1939/blocks/j1939nodefilter/nfMainWnd.htm",l:-1,t:"Node Filter (J1939 Deprecated)",i:0.00013719823805732,a:"J1939  »  J1939 Filter  »  Node Filter  » Deprecated Node Filter (Deprecated)   With the J1939 Node Filter you can filter on PGs that are sent or received by specific nodes. [Add filter rule...]: A new filter rule will be added to this filter. This rule will be configured using the  Node selection  ..."},"6878":{y:0,u:"../Content/Topics/COMInterface/Objects/COMObjectPanelSetup.htm",l:-1,t:"PanelSetup (COM Object)",i:0.000117774783444827,a:" CANoe  »  COM Interface  »  Objects  » PanelSetup PanelSetup Application  »  Configuration  »  GeneralSetup  » PanelSetup Description The PanelSetup object represents the panel settings of the CANoe application. Properties Methods Events — Example Availability COM Object Hierarchy"},"6879":{y:0,u:"../Content/Topics/CAPLFunctions/MOST/Functions/CAPLfunctionMOSTEvent.htm",l:-1,t:"mostEventChannel, mostEventTime, mostEventOrigTime, mostEventTimeNs",i:0.000317270371354518,a:"CAPL Functions  »  MOST  » mostEventChannel, mostEventTime, mostEventOrigTime, mostEventTimeNs mostEventChannel, mostEventTime, mostEventOrigTime, mostEventTimeNs   Function Syntax long mostEventChannel(); dword mostEventTime(); dword mostEventOrigTime(); float mostEventTimeNs(); Description long ..."},"6880":{y:0,u:"../Content/Topics/CANoeCANalyzer/Car2x/windows/ScenarioEditor/ScenarioEditorUserInterface.htm",l:-1,t:"User Interface (Scenario Editor)",i:5.63949459658947E-05,a:"Stimulation/Simulation Windows  »  ADAS / Car2x  Windows »  Scenario Editor  » User Interface User Interface   Ribbon File Settings In the settings of the Scenario Editor (also to be opened via   in the title bar) you can make the following general settings: Home In the ribbon tab Home, the ..."},"6881":{y:0,u:"../Content/Topics/CAPLFunctions/Media/Functions/CAPLfunctionMediaReleaseAudioRenderer.htm",l:-1,t:"MediaReleaseAudioRenderer",i:8.98724644822982E-05,a:"CAPL Functions  »  Media API  » MediaReleaseAudioRenderer MediaReleaseAudioRenderer   Function Syntax long MediaReleaseAudioRenderer(dword audioRendererHandle); Description Releases the audio renderer. Parameters Return Values Example — Availability"},"6882":{y:0,u:"../Content/Topics/CANoeCANalyzer/J1939/gnssNL/gnssNLOverview.htm",l:-1,t:"GNSS Node Layer (J1939)",i:0.000142258152377883,a:"J1939  » GNSS Node Layer GNSS Node Layer   Function The GNSS Node Layer (J1939) (Global Navigation Satellite System) is used to simulate a GNSS receiver. These virtual receivers can be used to supply other devices on the network with position data. GNSS positions are transferred cyclically with ..."},"6883":{y:0,u:"../Content/Topics/CAPLFunctions/GPIB/Functions/CAPLfunctionGPIBDevOnline.htm",l:-1,t:"GPIBDevOnline",i:5.59241803361269E-05,a:"CAPL Functions  »  GPIB  » GPIBDevOnline GPIBDevOnline   Function Syntax long GPIBDevOnline (long deviceDescriptor, long mode); Description Activates/deactivates the device. Parameters Return Values Example — Availability  "},"6884":{y:0,u:"../Content/Topics/CAPLFunctions/ISO11783/ISOInteractionLayerVT/Functions/CAPLfunctionIso11783VTILAddKeyGroup.htm",l:-1,t:"VTIL_AddKeyGroup",i:6.11584998754114E-05,a:"CAPL Functions  »  ISO11783  »  Virtual Terminal Interaction Layer (VT IL)   » VTIL_AddKeyGroup VTIL_AddKeyGroup   Function Syntax VTIL_AddKeyGroup(dword maskIndex, dword position, dbNode workingSetMaster, dword keyGroupId); // form 1 VTIL_AddKeyGroup(dword maskIndex, dword position, dword ..."},"6885":{y:0,u:"../Content/Topics/CAPLFunctions/MOST/Functions/CAPLfunctionMOSTGetLockEx.htm",l:-1,t:"mostGetLockEx",i:6.79180424829691E-05,a:"CAPL Functions  »  MOST  » mostGetLockEx mostGetLockEx   Function Syntax long mostGetLockEx (long channel); Description The function returns the lock status of the connected MOST hardware. In contrast to  mostGetLock() , the additional states \"Stable Lock\" and \"Critical Unlock\" are considered ..."},"6886":{y:0,u:"../Content/Topics/Shared/CAPL/SignalOrientedProgramming/SOPSignalFunctionParameter.htm",l:-1,t:"Signals as Function Parameters",i:9.11874591900448E-05,a:"CAPL Introduction  »  Concept of a Signal in CAPL  » Signals as Function Parameters Signals as Function Parameters   Signals can be transferred to functions as parameters. For this purpose, write the parameter type signal *. A variable declaration of type signal * is not possible (see  Concept of a ..."},"6887":{y:0,u:"../Content/Topics/CAPLFunctions/Test/Functions/CAPLfunctionChkCreateAllNodesBabbling.htm",l:-1,t:"ChkCreate_AllNodesBabbling, ChkStart_AllNodesBabbling",i:7.01802237925366E-05,a:"CAPL Functions  »  Test Service Library  »  Checks  » ChkCreate_AllNodesBabbling, ChkStart_AllNodesBabbling ChkCreate_AllNodesBabbling, ChkStart_AllNodesBabbling   Function Syntax dword ChkCreate_AllNodesBabbling (Duration aMinQuietTime, char [] CaplCallback); dword ChkStart_AllNodesBabbling ..."},"6888":{y:0,u:"../Content/Topics/CAPLFunctions/Sensor/Functions/CAPLfunctionSensorQueueSerialFrames.htm",l:-1,t:"sensorQueueSerialFrames",i:6.61651344281577E-05,a:"CAPL Functions  »  Sensor  » sensorQueueSerialFrames sensorQueueSerialFrames   Function Syntax SensorErrorCode sensorQueueSerialFrames(char[] sysVarNamespace, char[] data, dword dataCount); // form 1 SensorErrorCode sensorQueueSerialFrames(char[] sysVarNamespace, dword[] data, dword dataCount); // ..."},"6889":{y:0,u:"../Content/Topics/CAPLFunctions/CANstress/Functions/CAPLfunctionCANstressCreateServerDeviceAlias.htm",l:-1,t:"CANstressCreateServer(DeviceAlias)",i:5.89660882219676E-05,a:"CAPL Functions  »  CANstresss  » CANstressCreateServer(DeviceAlias) CANstressCreateServer(DeviceAlias)   Function Syntax long CANstressCreateServer (char[] deviceAlias); Description Starts the CANstress software and establishes a connection to this COM server via the COM interface. The COM server ..."},"6890":{y:0,u:"../Content/Topics/CAPLFunctions/CommunicationObjects/Methods/CAPLfunctionConsumedEventGroupRefSOMEIPIsEventGroupRequested.htm",l:-1,t:"consumedEventGroupRef::SOMEIPIsEventGroupRequested",i:2.93763033289521E-05,a:"CAPL Functions  »  Communication Objects  » consumedEventGroupRef::SOMEIPIsEventGroupRequested consumedEventGroupRef::SOMEIPIsEventGroupRequested   Method  Syntax dword consumedEventGroupRef::SOMEIPIsEventGroupRequested(); Description Returns whether the specified event group is currently requested. ..."},"6891":{y:0,u:"../Content/Topics/CAPLFunctions/Media/Properties/CAPLfunctionVideoLighting.htm",l:-1,t:"VideoLighting",i:3.21571136471415E-05,a:"CAPL Functions  »  Media API  »  Properties  » VideoLighting VideoLighting   Property VideoLighting Description Specifies the optimal lighting conditions for a video media type. Data Type dword Remarks The value of this property is one of the following: VideoLighting_Unknown = 0, ..."},"6892":{y:0,u:"../Content/Topics/COMInterface/Objects/COMObjectPerformance.htm",l:-1,t:"Performance (COM Object)",i:0.000188223209288508,a:" CANoe  »  COM Interface  »  Objects  » Performance Performance Application  » Performance Description The Performance object allows setting or returning parameters that influence the performance on multicore processors. Properties Methods — Events — Example Availability COM Object Hierarchy   •   ..."},"6893":{y:0,u:"../Content/Topics/CAPLFunctions/Other/Functions/CAPLfunctionStandaloneGetCurrentConfig.htm",l:-1,t:"StandaloneGetCurrentConfig",i:4.93452285189672E-05,a:"CAPL Functions  »  General  »  Function Overview  » StandaloneGetCurrentConfig StandaloneGetCurrentConfig   Function Syntax dword StandaloneGetCurrentConfig(char cfgNameBuffer[], dword cfgNameBufferLength); Description Returns the filename of the currently loaded configuration in standalone mode. It ..."},"6894":{y:0,u:"../Content/Topics/CANoeCANalyzer/Ethernet/Protocols/ProtocolPTPsignallingMsg.htm",l:-1,t:"PTP: Signaling Message",i:2.27846246619195E-05,a:"Ethernet  »  Protocol Overview  »  PTP  » PTP: Signaling Message PTP: Signaling Message    "},"6895":{y:0,u:"../Content/Topics/CAPLFunctions/Test/Functions/CAPLfunctionTestModuleDescription.htm",l:-1,t:"TestModuleDescription",i:7.25778584118895E-05,a:"CAPL Functions  »  Test Feature Set  » TestModuleDescription TestModuleDescription   Function Syntax TestModuleDescription (char description[]); Description With this function, a description text for the test module can be written into the report. The function can be called several times in a row, ..."},"6896":{y:0,u:"../Content/Topics/CAPLFunctions/CommunicationObjects/EventProcedures/CAPLfunctionOnAbstractEventSubscribed.htm",l:-1,t:"on Abstract_EventSubscribed",i:4.84318723845462E-05,a:"CAPL Functions  »  Communication Objects  » on Abstract_EventSubscribed on Abstract_EventSubscribed   Function Syntax on Abstract_EventSubscribed \u003cEvent\u003e; Description The event procedure is called at the provider when an event is subscribed by a consumer and abstract binding is used. Parameters ..."},"6897":{y:0,u:"../Content/Topics/CAPLFunctions/Media/Functions/CAPLfunctionMediaCreateMultiplexer.htm",l:-1,t:"MediaCreateMultiplexer",i:0.000210826261171563,a:"CAPL Functions  »  Media API  » MediaCreateMultiplexer MediaCreateMultiplexer   Function Syntax dword MediaCreateMultiplexer(char outputSubtype[]) Description Creates a multiplexor for the provided output media subtype. For a list of subtypes, see  Major Media Types / Subtypes . Parameters ..."},"6898":{y:0,u:"../Content/Topics/CAPLFunctions/ISO11783/ISONodeLayer/Functions/CAPLfunctionIso11783OPChangePolygonPoint.htm",l:-1,t:"Iso11783OPChangePolygonPoint",i:4.89887579938959E-05,a:"CAPL Functions  »  ISO11783  »  ISO11783 Node Layer  » Iso11783OPChangePolygonPoint Iso11783OPChangePolygonPoint   Function Syntax long Iso11783OPChangePolygonPoint( dword ecuHandle, dword polygonID, dword index, dword x, dword y ); Description The function changes the position of a point of a ..."},"6899":{y:0,u:"../Content/Topics/CANoeCANalyzer/ISO11783/procedures/GNSSReceiverSimulation.htm",l:-1,t:"GNSS Receiver",i:2.08834599671164E-05,a:"ISO11783  » GNSS Receiver GNSS Receiver   The options .J1939 and .ISO11783 offer you two ways to simulate a GNSS receiver and thus generate J1939 or ISO11738 messages with position data. With the  GNSS Simulator  you can drive predefined routes with an adjustable speed with just a few clicks. If you ..."},"6900":{y:0,u:"../Content/Topics/CANoeCANalyzer/FunctionBlocks/Replay/IDD_RB_GENERAL_CFG_PAGE.htm",l:-1,t:"Replay Configuration: General",i:0.000245990424910891,a:"Replay Block  » Configuration » General Settings Replay Configuration: General   A Replay Block is controllable by CAPL calls automatically even if the start/stop and pause/resume keys (see bottom of the page) are not defined. You can start, suspend, resume or stop the Replay Block during the ..."},"6901":{y:0,u:"../Content/Topics/CAPLFunctions/Car2x/Functions/CAPLfunctionC2xTestJoinSignalInRange.htm",l:-1,t:"C2xTestJoinSignalInRange",i:0.000178494134730892,a:"CAPL Functions  »  Car2x  » C2xTestJoinSignalInRange C2xTestJoinSignalInRange   Function Syntax long C2xTestJoinSignalInRange (char* protocolDesignator, char* tokenDesignator, int64 minTokenValue,  int64 maxTokenValue) // form 1 long C2xTestJoinSignalInRange (char* protocolDesignator, char* ..."},"6902":{y:0,u:"../Content/Topics/COMInterface/Objects/COMObjectMcMeasurementGroup.htm",l:-1,t:"McMeasurementGroup (COM Object)",i:4.47524137041378E-05,a:" CANoe  »  COM Interface  »  Objects  » McMeasurementGroup McMeasurementGroup Application  »  Configuration  »  GeneralSetup  »  CCPSetup  »  McECUs  »  McECU  »  McMeasurementGroups  » McMeasurementGroup Application  »  Configuration  »  GeneralSetup  »  XCPSetup  »  McECUs  »  McECU  »  ..."},"6903":{y:0,u:"../Content/Topics/CAPLFunctions/ISO11783/ISOInteractionLayer/Functions/CAPLfunctionIso11783ILtimAddCertificate.htm",l:-1,t:"Iso11783IL_TIMAddCertificate",i:4.65073639608937E-05,a:"CAPL Functions  »  ISO11783   »  ISO11783 Interaction Layer   » Iso11783IL_TIMAddCertificate Iso11783IL_TIMAddCertificate   Function Syntax long Iso11783IL_TIMAddCertificate(byte certificateType, char certificateFilePath[]); // form 1 long Iso11783IL_TIMAddCertificate(dbNode participant, byte ..."},"6904":{y:0,u:"../Content/Topics/CAPLFunctions/TCPIPAPI/Functions/CAPLfunctionIPRouteDeleteHost.htm",l:-1,t:"IPRouteDeleteHost",i:4.47117629458147E-05,a:"CAPL Functions  »  TCP/IP API  » IPRouteDeleteHost IPRouteDeleteHost   Function Syntax long IPRouteDeleteHost( dword hostAddr ); // form 1 long IPRouteDeleteHost( byte hostAddr[] ); // form 2 long IPRouteDeleteHost( IP_Address hostAddr ); // form 3 Description With this function it is possible to ..."},});