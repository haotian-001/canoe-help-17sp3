define({"687":{y:0,u:"../Content/Topics/CANoeCANalyzer/Windows/MOSTWindowsKeyboardOperation.htm",l:-1,t:"MOST Windows: Keyboard Operations",i:0.000128932135849022,a:"MOST  » MOST Windows » Keyboard Operations MOST Windows: Keyboard Operations   Keyboard operations MOST IG   •   Keyboard Operations MOST Application Filter   •   Keyboard Operations MOST Event Highlighting   •   Keyboard Operations   •  "},"688":{y:0,u:"../Content/Topics/CANoeCANalyzer/ISO11783/ISO11783IL/ISO11783ILConfig.htm",l:-1,t:"Setting up the ISO11783 Interaction Layer",i:7.05900513032699E-05,a:"ISO11783  »  Implement  » Setting up the ISO11783 Interaction Layer Setting up the ISO11783 Interaction Layer   Setting up the ISO11783 Interaction Layer The ISO11783 Interaction Layer (ISO11783 IL) is configured via the database. Follow the next steps to activate using the ISO1783 IL by a node. ..."},"689":{y:0,u:"../Content/Topics/CAPLFunctions/ADAS/Functions/CAPLfunctionTestWaitForADASDetectedObjectSpeed.htm",l:-1,t:"TestWaitForADASDetectedObjectSpeed",i:8.17492781845902E-05,a:"CAPL Functions  »  ADAS  » TestWaitForADASDetectedObjectSpeed TestWaitForADASDetectedObjectSpeed   Function Syntax long TestWaitForADASDetectedObjectSpeed (long overUnder, float threshold, long aTimeout)//form 1 long TestWaitForADASDetectedObjectSpeed (long overUnder, float threshold, int64 ..."},"690":{y:0,u:"../Content/Topics/CAPLFunctions/Other/Functions/CAPLfunctionSysMinimize.htm",l:-1,t:"sysMinimize",i:0.000130676681863281,a:"CAPL Functions  »  General  »  Function Overview  » sysMinimize sysMinimize   Function Syntax void sysMinimize(); Description The application window of will be minimized or restored. The first call of the function minimizes the window, afterwards the window will be restored to normal size and ..."},"691":{y:0,u:"../Content/Topics/SampConf/IOhil/CANoe/FMI/FMIBouncingBall.htm",l:-1,t:"Bouncing Ball (FMI)",i:0.000147334163104397,a:"Sample Configurations  »  I/O HIL  » Bouncing Ball (FMI) Bouncing Ball (FMI)   Introduction The model of a bouncing ball is integrated via FMI in the configuration. You can define the parameters before the start of the measurement in the BouncingBall panel. When the measurement starts, the ball ..."},"692":{y:0,u:"../Content/Topics/CAPLFunctions/IP/Methods/CAPLfunctionGetInt.htm",l:-1,t:"ethernetPacket::GetInt",i:2.1003717686362E-05,a:"CAPL Functions  »  Ethernet  »  Function Overview  » ethernetPacket::GetInt ethernetPacket::GetInt   Method  Syntax int  ethernetPacket .GetInt(char protocol[], char field[]); Description Returns the value of the specified field as int. If protocol or field is not contained in the packet, the ..."},"693":{y:0,u:"../Content/Topics/CAPLFunctions/SmartCharging/Functions/CAPLfunctionSCCSLACSetLinkStatusPollingInterval.htm",l:-1,t:"SCC_SLAC_SetLinkStatusPollingInterval",i:6.24395493115898E-05,a:"CAPL Functions  »  Smart Charging  »  SCC Modeling Libraries (Simulation Setup)  »  SLAC Simulation  »  Shared Functions  » SCC_SLAC_SetLinkStatusPollingInterval SCC_SLAC_SetLinkStatusPollingInterval   Function Syntax  long SCC_SLAC_SetLinkStatusPollingInterval \n( long Interval )  Description This ..."},"694":{y:0,u:"../Content/Topics/CAPLFunctions/IP/AUTOSARethIL/Functions/CAPLfunctionAREthAddEvent.htm",l:-1,t:"AREthAddEvent",i:0.000131164600294903,a:"CAPL Functions  »  Ethernet  »  AUTOSAR Eth IL  » AREthAddEvent AREthAddEvent   Function Syntax dword AREthAddEvent( dword psiHandle, dword eventId, char onPrepareEventCallback[] ); Description This function adds an Event to a Provided Service Instance that was created by  ..."},"695":{y:0,u:"../Content/Topics/CAPLFunctions/LIN/Functions/CAPLfunctionLINSetChannelMasterMode.htm",l:-1,t:"linSetChannelMasterMode",i:5.46061248465813E-05,a:"CAPL Functions  »  LIN  » linSetChannelMasterMode linSetChannelMasterMode   Function Syntax long linSetChannelMasterMode(long masterMode); Description By calling this function, the channel specified by the current bus context can be switched to master or slave mode. See  SetBusContext  for how to ..."},"696":{y:0,u:"../Content/Topics/CAPLFunctions/IP/SOMEIPIL/Functions/CAPLfunctionSomeIpProvidedEventsAndFieldsAddConsumer.htm",l:-1,t:"SomeIpProvidedEventsAndFieldsAddConsumer",i:2.5159460402859E-05,a:"CAPL Functions  »  Ethernet  »  SOME/IP IL  » SomeIpProvidedEventsAndFieldsAddConsumer SomeIpProvidedEventsAndFieldsAddConsumer   Function Syntax long SomeIpProvidedEventsAndFieldsAddConsumer(dword psiHandle, dword remoteIPv4Address, dword remoteUDPPort, dword remoteTCPPort); // form 1 long ..."},"697":{y:0,u:"../Content/Topics/CANoeCANalyzer/J1939/blocks/j1939nodefilter/nfNodeSelection.htm",l:-1,t:"Node Selection (J1939 Node Filter Deprecated)",i:4.24543824929103E-05,a:"J1939  »  J1939 Filter  »  Node Filter  »  Deprecated Node Filter  » Node Selection Node Selection   Rules can be defined for the filter in this dialog. The following possibilities are available for setting the source address and the destination address: Ignore: The setting will be ignored. If this ..."},"698":{y:0,u:"../Content/Topics/CAPLFunctions/AUTOSARpduIL/Functions/CAPLfunctionARILControlInit.htm",l:-1,t:"ARILControlInit",i:6.72960600649563E-05,a:"CAPL Functions  »  AUTOSAR PDU IL  » ARILControlInit ARILControlInit   Function Syntax long ARILControlInit () Description Initializes the IL. If this function is called in  on preStart , then the IL will enter the suspended state during  on Start  and must explicitly be started. Parameters — ..."},"699":{y:0,u:"../Content/Topics/CAPLFunctions/Media/Functions/CAPLfunctionMediaReleaseSourceReader.htm",l:-1,t:"MediaReleaseSourceReader",i:8.98724644822982E-05,a:"CAPL Functions  »  Media API  » MediaReleaseSourceReader MediaReleaseSourceReader   Function Syntax long MediaReleaseSourceReader(dword sourceReaderHandle); Description Releases the source reader. Parameters Return Values Example — Availability"},"700":{y:0,u:"../Content/Topics/CAPLFunctions/Sensor/Functions/CAPLfunctionSensorSetCrcMode.htm",l:-1,t:"sensorSetCrcMode",i:6.12619875133155E-05,a:"CAPL Functions  »  Sensor  » sensorSetCrcMode sensorSetCrcMode   Function Syntax SensorErrorCode sensorSetCRCMode(char[] sysVarNamespace, dword crcMode); Description Sets the CRC mode of a sensor to the given value. If short serial messages are selected, this method also changes the CRC algorithm ..."},"701":{y:0,u:"../Content/Topics/CAPLFunctions/SmartCharging/Functions/CAPLfunctionSCCSetEVReady.htm",l:-1,t:"SCC_SetEVReady",i:6.24395493115898E-05,a:"CAPL Functions  »  Smart Charging  »  SCC Modeling Libraries (Simulation Setup)  »  V2G Simulation Data   »  EV Functions  » SCC_SetEVReady SCC_SetEVReady   Function Syntax  long SCC_SetEVReady ( long Ready )  Description The function sets the ready flag.  Parameters Return Values Example — ..."},"702":{y:0,u:"../Content/Topics/CAPLFunctions/IP/AVBIL/Functions/CAPLfunctionAvbGetStreamId.htm",l:-1,t:"AvbGetStreamId",i:2.08319350235577E-05,a:"CAPL Functions  »  Ethernet  »  AVB IL  » AvbGetStreamId AvbGetStreamId   Function Syntax dword AvbGetStreamId(dword listenerOrTalkerHandle, byte retStreamId[]); Description The function retrieves the Stream Identifier (ID) of the Listener or Talker. Parameters Return Values Example — Availability"},"703":{y:0,u:"../Content/Topics/TestCommands/CheckDescriptions/CDMessageCountObservation.htm",l:-1,t:"Message Count Observation (Check Description)",i:6.17333918272789E-05,a:" CANoe  »  Check Descriptions  »  FlexRay-Specific Checks  » Message Count Observation Message Count Observation   Description Monitors the bus and reports if a minimum and/or a maximum number for each of the defined messages occurred within a specified cyclic time interval. It is also allowed to ..."},"704":{y:0,u:"../Content/Topics/CAPLFunctions/ObjectOrientedProg/CAPLfunctionsOOPDiagRequest.htm",l:-1,t:"Class: DiagRequest",i:4.90621227536712E-05,a:"CAPL Functions  »  Classes  » DiagRequest Class: DiagRequest   This class represents a diagnostic request. Declaration and Initialization of Diagnostic Objects   •   Diagnostics CAPL Functions"},"705":{y:0,u:"../Content/Topics/COMInterface/Programming/COMProgrammingScriptsProgramming.htm",l:-1,t:"Receiving Events (VBScript) (COM Programming)",i:3.47850372397482E-05,a:" CANoe  »  COM Interface  »  COM Programming  »  Scripts  » Receiving Events (VBScript) Receiving Events (VBScript)   The following script code shows the various possibilities for reacting to events within CANoe. It is assumed that the code is executed under Windows Script Host 2.0. Programming with ..."},"706":{y:0,u:"../Content/Topics/CANoeCANalyzer/ISO11783/ISO11783IL/ILObjectPoolComponent/ILOPConfiguration.htm",l:-1,t:"Configuration",i:3.81561864660544E-05,a:"ISO11783  »  ISO11783 Interaction Layer  »  Object Pool Component  » Configuration Configuration   After setting up the  ISO11783 IL , perform the following additional steps in the database: Add the message VT21 (PGN = EC00h) in the Tx list of the node. Set the node attributes ISO11783IOPFilename ..."},"707":{y:0,u:"../Content/Topics/CANoeCANalyzer/AFDX/windows/afdxIG/afdxIGSignalList/afdxIGSignalListContextmenu.htm",l:-1,t:"Context Menu in the Signal List (AFDX IG)",i:3.2294180307381E-05,a:"AFDX Interactive Generator  »  Signal List  » Context Menu in the Signal List Context Menu in the Signal List   The following commands are available to you in the context menu. Option .AFDX   •  "},"708":{y:0,u:"../Content/Topics/CAPLFunctions/FlexRay/Objects/CAPLfunctionFRFrame.htm",l:-1,t:"frFrame",i:0.000170470395899428,a:"CAPL Functions  »  FlexRay  » frFrame frFrame   Function Syntax frFrame \u003cframe name\u003e \u003cframe var\u003e; // form 1 Uses a symbolic frame name from the database. frFrame MsgChannel\u003cnum\u003e.\u003cframe name\u003e \u003cframe var\u003e; // form 2 Uses a symbolic frame name from the database and specifies the send channel/cluster. ..."},"709":{y:0,u:"../Content/Topics/CAPLFunctions/IP/AUTOSARethIL/Functions/CAPLfunctionAREthCloseLocalApplicationEndpoint.htm",l:-1,t:"AREthCloseLocalApplicationEndpoint",i:5.27100317836499E-05,a:"CAPL Functions  »  Ethernet  »  AUTOSAR Eth IL  » AREthCloseLocalApplicationEndpoint AREthCloseLocalApplicationEndpoint   Function Syntax LONG AREthCloseLocalApplicationEndpoint( dword aepHandle ); Description Closes an Application Endpoint that was previously opened with  ..."},"710":{y:0,u:"../Content/Topics/CAPLFunctions/CommunicationObjects/EventProcedures/CAPLfunctionOnfctCalled.htm",l:-1,t:"on fct_called",i:0.000131202075121181,a:"CAPL Functions  »  Communication Objects / Distributed Objects  » on fct_called on fct_called   Function Syntax on fct_called \u003cfunction\u003e; Description The event procedure is called when a service function is called at a provider. At this time, the automatic answering feature has already set the out ..."},"711":{y:0,u:"../Content/Topics/CANoeCANalyzer/VTSystem/VT6306/VT6306SystemVariables.htm",l:-1,t:"System Variables (VT6306)",i:3.67400790651995E-05,a:"VT6306  » System Variables System Variables   You can use system variables to set the following relays for each channel of the VT6306 module. Namespace is the name of the channel in the VT System configuration: The following settings are available via system variables for channels 1 to 3 of a VT6306 ..."},"712":{y:0,u:"../Content/Topics/CAPLFunctions/Test/Functions/CAPLfunctionTestWaitScopePerformSignalTransitionTime.htm",l:-1,t:"testWaitScopePerformSignalTransitionTime",i:0.000150970923156514,a:"CAPL Functions  »  Scope  » testWaitScopePerformSignalTransitionTime testWaitScopePerformSignalTransitionTime   Function Syntax long testWaitScopePerformSignalTransitionTime (message aMessage, ScopeAnalyseRange range, dword flags, long thresholdStart, long thresholdEnd, ScopeBitTransitionTimeResult ..."},"713":{y:0,u:"../Content/Topics/CANoeCANalyzer/Windows/Trace/Columns/TraceColumnsIPbased2.htm",l:-1,t:"Columns for Ethernet IP/RTP/RTCP",i:5.79008185503659E-05,a:" CANoe  » … »  Trace Window  »  Configuration  »  Column Configuration  » Ethernet IP/RTP/RTCP Columns for Ethernet IP/RTP/RTCP Context Menu Path:  Configuration | Column Configuration |Ethernet IP/RTP/RTCP Sample Configurations and Applications   •   Length Definitions   •  "},"714":{y:0,u:"../Content/Topics/CAPLFunctions/CommunicationObjects/Methods/CAPLfunctionConsumedPduRefAbstractRequestPdu.htm",l:-1,t:"consumedPduRef::AbstractRequestPdu",i:6.55146380010346E-05,a:"CAPL Functions  »  Communication Objects  » consumedPduRef::AbstractRequestPdu consumedPduRef::AbstractRequestPdu   Method  Syntax int  consumedPDURef ::AbstractRequestPDU(); Description Requests the subscription of a specific service PDU if abstract binding is used: for the specified consumer from ..."},"715":{y:0,u:"../Content/Topics/CAPLFunctions/KLine/Functions/CAPLfunctionKLineSetECUAddress.htm",l:-1,t:"KLine_SetECUAddress",i:8.93309407919786E-05,a:"CAPL Functions  »  K-Line  » KLine_SetECUAddress KLine_SetECUAddress   Function Syntax long KLine_SetECUAddress(Byte ecuAddress) Description Sets the address of the ECU. Parameters Return Values On success 0, otherwise a value less than 0. Example — Availability KLine_SetTesterAddress   •   ..."},"716":{y:0,u:"../Content/Topics/CAPLFunctions/SmartCharging/Functions/CAPLfunctionSCCGetRetryCounter.htm",l:-1,t:"SCC_GetRetryCounter",i:6.24395493115898E-05,a:"CAPL Functions  »  Smart Charging  »  SCC Modeling Libraries (Simulation Setup)  »  V2G Data Queries  »  EV Functions  » SCC_GetRetryCounter SCC_GetRetryCounter   Function Syntax long SCC_Get Retry Counter () Description Gets the retry counter of a CertificationUpdateRes. In case of failure, this ..."},"717":{y:0,u:"../Content/Topics/CAPLFunctions/CANopen/CANopenBasic/Functions/CAPLfunctionsCANopenDownload.htm",l:-1,t:"CANopenDownload",i:5.68157175637181E-05,a:"CAPL Functions  »  CANopen  »  Basic Functions  » CANopenDownload CANopenDownload   Function Syntax void CANopenDownload( dword nodeId, dword index, dword subIndex, qword data, dword dataSize, dword blockMode, dword errCode[] ); // form 1 void CANopenDownload( dword nodeId, dword index, dword ..."},"718":{y:0,u:"../Content/Topics/CAPLFunctions/ISO11783/ISOInteractionLayerVT/Functions/CAPLfunctionIso11783VTILResetDelayedRxMessage.htm",l:-1,t:"VTIL_ResetDelayedRxMessage",i:6.3340001596796E-05,a:"CAPL Functions  »  ISO11783   »  Virtual Terminal Interaction Layer (VT IL)   » VTIL_ResetDelayedRxMessage VTIL_ResetDelayedRxMessage   Function Syntax long VTIL_ResetDelayedRxMessage(dword pgn, dword sourceAddress, qword filterMask, qword filterValue, dword behavior); // form 1 long ..."},"719":{y:0,u:"../Content/Topics/CAPLFunctions/Diagnostics/Functions/CAPLfunctionDiagGetObjectPath.htm",l:-1,t:"diagGetObjectPath",i:5.65572675118065E-05,a:"CAPL Functions  »  Diagnostics  » diagGetObjectPath diagGetObjectPath   Function Syntax long diagGetObjectPath (diagResponse obj, char buffer[], dword buffersize) long diagGetObjectPath (diagRequest obj, char buffer[], dword buffersize) Method  Syntax long diagResponse::GetObjectPath (char buffer[], ..."},"720":{y:0,u:"../Content/Topics/CAPLFunctions/Other/Functions/CAPLfunctionCancelTimer.htm",l:-1,t:"cancelTimer",i:0.000356680198908689,a:"CAPL Functions  »  General  »  Function Overview  » cancelTimer cancelTimer   Function Syntax void cancelTimer(msTimer t); // from 1 void cancelTimer(timer t); // from 2 Method  Syntax (Dynamic) void msTimer::cancel(); Description Stops an active timer. Parameters Timer or msTimer variable. ..."},"721":{y:0,u:"../Content/Topics/CAPLFunctions/Media/Properties/CAPLfunctionDvAauxCtrlPack0.htm",l:-1,t:"DvAauxCtrlPack0",i:3.21571136471415E-05,a:"CAPL Functions  »  Media API  »  Properties  » DvAauxCtrlPack0 DvAauxCtrlPack0   Property DvAauxCtrlPack0 Description Audio auxiliary (AAUX) source control pack for the first audio block in a digital video (DV) media type. Data Type dword Remarks — Availability"},"722":{y:0,u:"../Content/Topics/CAPLFunctions/Media/Properties/CAPLfunctionFixedSizeSamples.htm",l:-1,t:"FixedSizeSamples",i:4.12683046357239E-05,a:"CAPL Functions  »  Media API  »  Properties  » FixedSizeSamples FixedSizeSamples   Property FixedSizeSamples Description Specifies for a media type whether the samples have a fixed size.  Data Type dword (treat as a Boolean value) Remarks If this property is TRUE, every sample in the stream is the ..."},"723":{y:0,u:"../Content/Topics/CAPLFunctions/Test/Functions/CAPLfunctionTestGetWaitEventMostPkt.htm",l:-1,t:"TestGetWaitEventMostPkt",i:8.30384475987346E-05,a:"CAPL Functions  »  Test Feature Set  » TestGetWaitEventMostPkt TestGetWaitEventMostPkt   Function Syntax long TestGetWaitEventMostPkt(); long TestGetWaitEventMostPkt(dword aIndex); Description If the last (single) wait condition was resolved by a MOST packet event, the first function makes the ..."},"724":{y:0,u:"../Content/Topics/CANoeCANalyzer/VTSystem/VT7001/VT7001.htm",l:-1,t:"VT7001/VT7101 – Power Module (VT System)",i:0.000250983714836549,a:"VT System  »  Modules  » VT7001/VT7101 - Power Module VT7001/VT7101 – Power Module    "},"725":{y:0,u:"../Content/Topics/CAPLFunctions/DistributedObjects/Objects/CAPLfunctionAttributable.htm",l:-1,t:"attributable",i:4.14736886503626E-05,a:"CAPL Functions  »  Distributed Objects  » attributable attributable   Function Syntax attributable Method  Syntax — Description The type of objects that can have attributes. This type is a supertype of distObjRef *, distObjMemberRef *, distObjInterface *, distObjInterfaceMember *, and virtNet. The ..."},"726":{y:0,u:"../Content/Topics/CANoeCANalyzer/DesktopManagement/DesktopUseCases.htm",l:-1,t:"Use Cases (Desktop)",i:0.000166270887330229,a:"Desktop Concept  » Use Cases Use Cases   Use cases are presented here to demonstrate the utility of the desktop and window management concepts. In doing so, you must differentiate between the model producer and the end user. A model producer constructs a test configuration. The producer groups the ..."},"727":{y:0,u:"../Content/Topics/CAPLFunctions/ISO11783/ISOInteractionLayerTC/Functions/CAPLfunctionIso11783TCILRequestVersion.htm",l:-1,t:"TCIL_RequestVersion",i:5.00139850703977E-05,a:"CAPL Functions  »  ISO11783  »  Task Controller Interaction Layer (TC IL)   » TCIL_RequestVersion TCIL_RequestVersion   Function Syntax   long TCIL_RequestVersion(dbNode client); // form 1 long TCIL_RequestVersion(dword addressClient); // form 2 long TCIL_RequestVersion(dbNode tc, dbNode client); // ..."},"728":{y:0,u:"../Content/Topics/SampConf/IOhil/CANoe/ASAMXILAPI/PythonClient.htm",l:-1,t:"ASAM XIL API Python Client",i:5.16964511678919E-05,a:"Sample Configurations  »  I/O HIL  » ASAM XIL API Python Client ASAM XIL API Python Client   This sample configuration contains two system variables called Variable1 and Variable2: Variable1 is stimulated by a Signal Generator with a sine wave and read by the Python client script. Variable2 is ..."},"729":{y:0,u:"../Content/Topics/Shared/CAPL/TCPIPAPI/TCPIPAPI.htm",l:-1,t:"TCP/IP API",i:0.000501353673296802,a:"Ethernet  »  TCP/IP API TCP/IP API    "},"730":{y:0,u:"../Content/Topics/CAPLFunctions/CommunicationObjects/Methods/CAPLfunctionValueClearUpdateFlag.htm",l:-1,t:"valueHandle::ClearUpdateFlag",i:4.95907757530951E-05,a:"CAPL Functions  »  Communication Objects  » valueHandle::ClearUpdateFlag valueHandle::ClearUpdateFlag   Method  Syntax dword valueHandle::ClearUpdateFlag() Description Clears the update flag of the value. It will be set again when the value is updated the next time. You can wait for the flag to be ..."},"731":{y:0,u:"../Content/Topics/CANoeCANalyzer/Ribbon/File/Options/Measurement/MeasurementGeneralSettingsChannelsSimulationMode.htm",l:-1,t:"Channels in Simulation Mode",i:0.000110908734670715,a:"Options  » Measurement »  General » Channels in Simulation Mode Channels in Simulation Mode Ribbon :  File Tab | Options |Measurement| General In  online mode  with  working mode Simulated Bus/Slave Mode buses and network nodes are completely simulated. Each channel corresponds to a simulated bus. ..."},"732":{y:0,u:"../Content/Topics/CANoeCANalyzer/FunctionBlocks/IG/IGCANConfigSignalView.htm",l:-1,t:"Signals (CAN IG)",i:0.000135382575276765,a:"CAN Interactive Generator  »  Configuration  » Signals Signals   The Signals view shows all signals of a selected CAN frame from an assigned database of the  Frames  view. It is also possible to toggle between the Signals view and the  Raw Data view. The customization of the columns can be ..."},"733":{y:0,u:"../Content/Topics/CAPLFunctions/CANopen/NodeLayerTFS/Functions/CAPLfunctionCoTfsGetNodeId.htm",l:-1,t:"coTfsGetNodeId",i:3.5857770891039E-05,a:"CAPL Functions  »  CANopen  »  Test Feature Set Node Layer  » coTfsGetNodeId coTfsGetNodeId   Function Syntax dword  coTfsGetNodeId( void ); Description This function returns the internally-stored node-ID that is used for the simplified test functions. Parameters — Return Values Node-ID Example ..."},"734":{y:0,u:"../Content/Topics/CANoeCANalyzer/Ethernet/Protocols/ProtocolDHCP.htm",l:-1,t:"DHCPv4",i:4.81927129578651E-05,a:"Ethernet  »  Protocol Overview  » DHCPv4 DHCPv4   Protocol Information  [▲ back] The Dynamic Host Configuration Protocol (DHCP) can assign IP addresses to one or more nodes. This allows the integration of a new node into an existing network without a manual configuration. The used transport protocol ..."},"735":{y:0,u:"../Content/Topics/CAPLFunctions/Other/Functions/CAPLfunctionHalt.htm",l:-1,t:"halt",i:2.80553283036042E-05,a:"CAPL Functions  »  General  »  Function Overview  » halt halt   Function Syntax void halt(); Description The function stops both the debugged program as well as the simulation. The debugger window opens and the halt() command is displayed. The function thus creates a breakpoint while simultaneously ..."},"736":{y:0,u:"../Content/Topics/CAPLFunctions/GPIB/Functions/CAPLfunctionGPIBOnError.htm",l:-1,t:"GPIBOnError",i:5.59241803361269E-05,a:"CAPL Functions  »  GPIB  » GPIBOnError GPIBOnError   Function Syntax GPIBOnError (long deviceDescriptor, char query[], char response[], long status, long error); Description This optional function is called if a query or a write operation ( GPIBWriteStr  or  GPIBWriteNum ) raised an error condition. ..."},"737":{y:0,u:"../Content/Topics/CAPLFunctions/J1587/Functions/CAPLfunctionJ1587GetParameter.htm",l:-1,t:"J1587GetParameter",i:0.00011553816075622,a:"CAPL Functions  »  J1587  » J1587GetParameter J1587GetParameter   Function Syntax byte  J1587GetParameter(J1587Message msg /*in*/, J1587Param param /*out*/, word index /*in*/) Description Gets a J1587 parameter inside a J1708 message at a given index. Parameters Return Values 0 or error code Example ..."},"738":{y:0,u:"../Content/Topics/CAPLFunctions/Diagnostics/Functions/CAPLfunctionDiagGetCommunicationErrorString.htm",l:-1,t:"diagGetCommunicationErrorString",i:4.18341899206929E-05,a:"CAPL Functions  »  Diagnostics  » diagGetCommunicationErrorString diagGetCommunicationErrorString   Function Syntax long DiagGetCommunicationErrorString( long communicationError, char descriptionOut, dword bufferLen); Description Returns a description for the given communication error. Parameters ..."},"739":{y:0,u:"../Content/Topics/CAPLFunctions/Diagnostics/Functions/CAPLfunctionDoIPConfigureVehicleAnnouncement.htm",l:-1,t:"DoIP_ConfigureVehicleAnnouncement",i:0.000158864861264882,a:"CAPL Functions  »  Diagnostics  » DoIP_ConfigureVehicleAnnouncement DoIP_ConfigureVehicleAnnouncement   Function Syntax void DoIP_ConfigureVehicleAnnouncement(dword toInitial_ms, dword messageCount, dword toInterval_ms); Description Configures when the Vehicle Announcement Messages are sent. ..."},"740":{y:0,u:"../Content/Topics/CLibraryAPI/Functions/CAPLfunctioncclValueGetState.htm",l:-1,t:"cclValueGetState",i:3.86360090043396E-05,a:" CANoe  »  C Library API  »  Functions  » cclValueGetState cclValueGetState   Function Syntax int32_t cclValueGetState(cclValueID valueID, cclValueState* state); Description Returns the current measurement state of a communication object value. The returned state is from predefined enumeration ..."},"741":{y:0,u:"../Content/Topics/SampConf/IOhil/CANoe/VTSystem/VTSystemUserFPGA7820.htm",l:-1,t:"VT7820 User FPGA",i:5.16964511678919E-05,a:" CANoe  »  Sample Configurations  »  I/O HIL  » VT7820 User FPGA VT7820 User FPGA   Configuration To set up this sample configuration, you need a VT7900 with VT7820 and User FPGA. The used VHDL program is preinstalled on the VT7900 and does not have to be installed separately on the module. In ..."},"742":{y:0,u:"../Content/Topics/CAPLFunctions/Other/Functions/CAPLfunctionlookupSysvarInt.htm",l:-1,t:"lookupSysvarInt",i:1.96035070035483E-05,a:"CAPL Functions  »  General  »  Function Overview  » lookupSysvarInt lookupSysvarInt   Function Syntax sysvarInt * lookupSysvarInt(char sysvarPath[]); // form 1 sysvarInt * lookupSysvarInt(char namespace[], char sysvarName[]); // form 2 Description Searches for a system variable definition. If the ..."},"743":{y:0,u:"../Content/Topics/SampConf/Programming/CANoe/Python/PythonCN.htm",l:-1,t:"COM Automation via Python",i:0.000129430849154891,a:"Sample Configurations  »  Programming  »  COM Automation via Python COM Automation via Python   The Python script RunAllTest.py controls the following actions via the CANoe COM interface: Starting CANoe. Loading the configuration Python/PythonBasicEmpty.cfg. Adding test environment/test ..."},"744":{y:0,u:"../Content/Topics/CAPLFunctions/KLine/Functions/CAPLfunctionKLineResetECUConnection.htm",l:-1,t:"KLine_ResetECUConnection",i:3.87099008302445E-05,a:"CAPL Functions  »  K-Line  » KLine_ResetECUConnection KLine_ResetECUConnection   Function Syntax long KLine_ResetECUConnection () Description Resets the connection state of the simulated ECU. \nAfter calling this function an initialization pattern can be received again. Parameters — Return Values On ..."},"745":{y:0,u:"../Content/Topics/CANoeCANalyzer/Diagnostics/DiagnosticWindow/DiagnosticConsole/DiagFeatDiagnosticConsole.htm",l:-1,t:"Diagnostic Console (Diagnostic Feature)",i:0.00011797136838915,a:"Diagnostics with CANoe  »  Functional Overview  »  Basics  » Diagnostic Console (Diagnostic Feature) Diagnostic Console (Diagnostic Feature) Ribbon | Diagnostics \u0026 XCP Tab | Diagnostic Window |Diagnostic Console (Diagnostic Feature)  "},"746":{y:0,u:"../Content/Topics/CAPLFunctions/FlexRay/EventProcedures/CAPLfunctionOnFRNnullFrame.htm",l:-1,t:"on frNullFrame",i:0.00010205236889641,a:"CAPL Functions  »  FlexRay  » on frNullFrame on frNullFrame   Function Syntax on frNullFrame *; // form 1 This procedure is always called whenever the frame definitions below do NOT occur. In other words, for a specific frame, only this function or the formats below will be called! on frNullFrame ..."},"747":{y:0,u:"../Content/Topics/CAPLFunctions/IP/SOMEIPIL/Functions/CAPLfunctionSomeIpGetValue.htm",l:-1,t:"SomeIpGetValue...",i:0.000105807541883463,a:"CAPL Functions  »  Ethernet  »  SOME/IP IL  » SomeIpGetValue... SomeIpGetValue...   A raw value can be read out with the following function: SomeIpGetValueDWord SomeIpGetValueFloat SomeIpGetValueInt64 SomeIpGetValueLong SomeIpGetValuePhys SomeIpGetValueQWord SomeIpGetValueString"},"748":{y:0,u:"../Content/Topics/CAPLFunctions/FlexRay/Functions/CAPLfunctionFRGetBoundaryViolationCount.htm",l:-1,t:"frGetBoundaryViolationCount",i:3.23882963415035E-05,a:"CAPL Functions  »  FlexRay  » frGetBoundaryViolationCount frGetBoundaryViolationCount   Function Syntax long frGetBoundaryViolationCount(long channel, long channelMask); Description Gets the total count of boundary violations of a FlexRay channel. Parameters Return Values Total count of boundary ..."},"749":{y:0,u:"../Content/Topics/CANoeCANalyzer/Windows/Data/DataWindowFavorites.htm",l:-1,t:"Favorites (Data Window)",i:8.32756167159519E-05,a:" CANoe  » … »  Data Window  »  Columns  » Favorites Favorites Favorites Column  /  Toolbar : Manage Favorites... You can filter symbols of special interest via favorites. Manage Favorites You manage favorites in the Favorites dialog. You can open this dialog either via the Manage Favorites... ..."},"750":{y:0,u:"../Content/Topics/CANoeCANalyzer/Windows/StartValues/StartValuesWindowToolbar.htm",l:-1,t:"Start Values Window: Toolbar",i:6.37801715720478E-05,a:"Start Values Window  » Toolbar Start Values Window: Toolbar   The toolbar provides the following symbols for controlling the  Start Values Window . The functions are as follows:  "},"751":{y:0,u:"../Content/Topics/COMInterface/Objects/COMObjectBasicModules.htm",l:-1,t:"BasicModules (COM Object)",i:3.93757532323208E-05,a:" CANoe  »  COM Interface  »  Objects  » BasicModules BasicModules Application  »  Configuration  »  VTSystem  »  AvailableModules  » BasicModules Description The BasicModules object represents the collection of available basic VT System modules. Properties Methods — Events — Example Availability COM ..."},"752":{y:0,u:"../Content/Topics/CANoeCANalyzer/Interfaces/FMI.htm",l:-1,t:"Functional Mock-up Interface (FMI)",i:0.000164488763046313,a:"Installer Additional Components, Extensions and Interfaces  »  Functional Mock-up Interface (FMI) Functional Mock-up Interface (FMI) Ribbon :  Environment Tab |Tool Couplings|Functional Mock-up Interface The Functional Mock-up Interface (FMI) defines a standardized interface for the coupling ..."},"753":{y:0,u:"../Content/Topics/CAPLFunctions/ISO11783/ISONodeLayer/Functions/CAPLfunctionIso11783OPOnESC.htm",l:-1,t:"Iso11783OPOnESC",i:4.89887579938959E-05,a:"CAPL Functions  »  ISO11783  »  ISO11783 Node Layer  » Iso11783OPOnESC Iso11783OPOnESC (Callback)   Function Syntax void \n Iso11783OPOnESC( dword ecuHandle, dword objectID, dword error ); Description The function is called by the node layer, when the user aborts an input \n action.  Parameters ..."},});