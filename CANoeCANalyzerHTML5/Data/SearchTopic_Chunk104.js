define({"6905":{y:0,u:"../Content/Topics/CAPLFunctions/Security/Functions/CAPLfunctionSecurityOfNodeGetFreshness.htm",l:-1,t:"SecurityOfNodeGetFreshness",i:6.41810845781887E-05,a:"CAPL Functions  »  Security  » SecurityOfNodeGetFreshness SecurityOfNodeGetFreshness   Function Syntax long SecurityOfNodeGetFreshness(char nodeName[], char networkName[], char freshnessIdentifierString[], dword freshnessValueId, byte freshnessData[], dword freshnessDataLength) Description Gets the ..."},"6906":{y:0,u:"../Content/Topics/CANoeCANalyzer/MOST/MOSTHowTos/MOSTHowToAnalyzeMOSTSystem.htm",l:-1,t:"MOST: How to Analyze a MOST System",i:2.68490380791446E-05,a:"MOST  »  How to...  » How to Analyze the MOST Ring MOST: How to Analyze a MOST System   After measurement start you can monitor the MOST data traffic in the  Trace Window  ( Analysis ribbon tab |Trace), if a real MOST system is connected to your MOST hardware a suitable function catalog is assigned ..."},"6907":{y:0,u:"../Content/Topics/CAPLFunctions/MOST/CAPLfunctionsMOSTInitializationMessageVariables.htm",l:-1,t:"MOST: Initialization of Message Variables",i:7.55412509123049E-05,a:"CAPL Functions  »  MOST  » Initialization of message variables MOST: Initialization of Message Variables   There are the following types of message variable for MOST:  "},"6908":{y:0,u:"../Content/Topics/CAPLFunctions/ISO11783/ISOInteractionLayer/ObjectPoolXMLElements.htm",l:-1,t:"Object Pool XML Elements",i:3.4947644009287E-05,a:"CAPL Functions  »  ISO11783   »  ISO11783 Interaction Layer   » Object Pool XML Elements Object Pool XML Elements   The object pool component supports the loading and saving of binary IOP files. The content of the file is identical to the data sent to the Virtual Terminal with the Object Pool ..."},"6909":{y:0,u:"../Content/Topics/CAPLFunctions/Other/Functions/CAPLfunctionSymbolMappingSetDynamicMappingSet.htm",l:-1,t:"SymbolMappingSetDynamicMappingSet",i:3.36871910833183E-05,a:"CAPL Functions  »  General  »  Function Overview  » SymbolMappingSetDynamicMappingSet SymbolMappingSetDynamicMappingSet   Function Syntax void SymbolMappingSetDynamicMappingSet(char mappingSetName[]); Description Changes the dynamic mapping set that will be used for mapping in the CANoe Symbol ..."},"6910":{y:0,u:"../Content/Topics/CAPLFunctions/ISO11783/ISONodeLayer/Functions/CAPLfunctionIso11783fsmove.htm",l:-1,t:"Iso11783FSMove",i:4.89887579938959E-05,a:"CAPL Functions  »  ISO11783  »  ISO11783 Node Layer   » Iso11783FSMove Iso11783FSMove   Function Syntax long Iso11783FSMove( char sourcePath[], char destPath[], dword movemode ); Description The function moves, copies or deletes a file or directory. Parameters Return Values 0 or  error code Example ..."},"6911":{y:0,u:"../Content/Topics/COMInterface/Objects/COMObjectIODeviceDriver.htm",l:-1,t:"IODeviceDriver (COM Object)",i:4.39479335964681E-05,a:" CANoe  »  COM Interface  »  Objects  » IODeviceDriver IODeviceDriver Application  »  Configuration  »  IOHardware  »  OtherIO  »  IODeviceDrivers  » IODeviceDriver Description The IODeviceDriver object represents a third party I/O hardware device driver in CANoe. Properties Methods — Events — ..."},"6912":{y:0,u:"../Content/Topics/CAPLFunctions/J1939/J1939InteractionLayer/Functions/CAPLfunctionJ1939ILKillTp.htm",l:-1,t:"J1939ILKillTp",i:3.17823366007146E-05,a:"CAPL Functions  »  J1939  »  J1939 IL  » J1939ILKillTp J1939ILKillTp   Function Syntax long J1939ILKillTp(dword protocol, dword sa, dword da); //Form 1 long J1939ILKillTp(dbNode node, dword protocol, dword sa, dword da); //Form 2 Description Kills (silently closes) the current transport protocol ..."},"6913":{y:0,u:"../Content/Topics/CANoeCANalyzer/Windows/Trace/TraceWindowSearch.htm",l:-1,t:"Search",i:0.000216735483884053,a:" CANoe  » … »  Trace Window  » Search Search   The Trace Window contains various search criteria in the Search page   of the  Trace Explorer . The search is always started from the current cursor position in the display area. If the display area search has been completed, you can extend the search ..."},"6914":{y:0,u:"../Content/Topics/CAPLFunctions/Test/Functions/CAPLfunctionTestWaitForLinReceiveError.htm",l:-1,t:"TestWaitForLinReceiveError",i:0.000119288611712843,a:"CAPL Functions  »  Test Feature Set  » TestWaitForLinReceiveError TestWaitForLinReceiveError   Function Syntax long TestWaitForLinReceiveError (dword aFrameId, dword aTimeout); long TestWaitForLinReceiveError (dword aTimeout); Description Waits for the occurrence of LIN Receive Error event. Should ..."},"6915":{y:0,u:"../Content/Topics/CAPLFunctions/Other/EventProcedures/CAPLfunctionOnSysVar.htm",l:-1,t:"on sysVar",i:4.4188111213435E-05,a:"CAPL Functions  »  General  »  Event Procedures  » on sysVar on sysVar   The event procedure type on sysVar is provided to react to value changes of system variables in CANoe. In contrast to messages, system variables are not blocked by CAPL nodes in the Measurement Setup. Therefore, when there are ..."},"6916":{y:0,u:"../Content/Topics/CAPLFunctions/Diagnostics/Functions/CAPLfunctionDiagvFlashUnloadProject.htm",l:-1,t:"vFlashUnloadProject",i:4.18341899206929E-05,a:"CAPL Functions  »  Diagnostics  » vFlashUnloadProject vFlashUnloadProject   Function Syntax void vFlashUnloadProject(); Description Unloads the current vFlash project. The CAPL callback vFlashUnloadProjectCompleted will be called when the unloading completed and further API calls are possible. Note: ..."},"6917":{y:0,u:"../Content/Topics/CANoeCANalyzer/Car2x/procedures/c2xProceduresHW/c2xOperateVN4610.htm",l:-1,t:"How to Operate a VN4610 (Car2x)",i:8.5505310192331E-05,a:"Procedures  » Operate a VN4610 Operate a VN4610   To put a VN4610 with CANoe .Car2x into operation, proceed as follows. With CANoe .Car2x you also have the possibility to change or read out transmission parameters at runtime. Use the CAPL functions  C2xConfigureChannel ,  C2xSetSendParameters  or  ..."},"6918":{y:0,u:"../Content/Topics/CLibraryAPI/Functions/CAPLfunctioncclSomeIPEventGroupProviderGetEvents.htm",l:-1,t:"cclSomeIPEventGroupProviderGetEvents",i:3.86360090043396E-05,a:" CANoe  »  C Library API  »  Functions  » cclSomeIPEventGroupProviderGetEvents cclSomeIPEventGroupProviderGetEvents   Function Syntax int32_t cclSomeIPEventGroupProviderGetEvents(cclSomeIPEventGroupProviderID eventGroupProviderID, cclEventProviderID* buffer, int32_t* bufferSize); Description Returns ..."},"6919":{y:0,u:"../Content/Topics/CAPLFunctions/Scope/Functions/CAPLfunctionScopeDeactivateTrigger.htm",l:-1,t:"scopeDeactivateTrigger",i:5.93075961833991E-05,a:"CAPL Functions  »  Scope  » scopeDeactivateTrigger scopeDeactivateTrigger   Function Syntax long scopeDeactivateTrigger(); Description Performs Deactivate Trigger action for  Scope Window . This action is equivalent to deactivating the trigger via the GUI. The completion of this action is reported ..."},"6920":{y:0,u:"../Content/Topics/CAPLFunctions/Security/Functions/CAPLfunctionSecurityLocalTransmitApplicationProtocol.htm",l:-1,t:"SecurityLocalTransmitApplicationProtocol",i:6.41810845781887E-05,a:"CAPL Functions  »  Security  » SecurityLocalTransmitApplicationProtocol SecurityLocalTransmitApplicationProtocol   Function Syntax long SecurityLocalTransmitApplicationProtocol(char applicationProtocolUserDefinedId[], byte payload[], dword payloadLength) Description Transmits a special message of ..."},"6921":{y:0,u:"../Content/Topics/CLibraryAPI/Functions/CAPLfunctioncclCanMakeExtendedIdentifier.htm",l:-1,t:"cclCanMakeExtendedIdentifier",i:5.3758435149876E-05,a:" CANoe  »  C Library API  »  Functions  » cclCanMakeExtendedIdentifier cclCanMakeExtendedIdentifier   Function Syntax uint32_t cclCanMakeExtendedIdentifier(uint32_t identifier); Description This function creates an extended identifier (29-bit) from the specified value. Inside the program, a CAN ..."},"6922":{y:0,u:"../Content/Topics/CAPLFunctions/VTSystem/Functions/CAPLfunctionVTSSetPWMMeasurementDuration.htm",l:-1,t:"SetPWMMeasurementDuration",i:0.000125553856428991,a:"CAPL Functions  »  VT System  » SetPWMMeasurementDuration SetPWMMeasurementDuration   Method  Syntax long SysVarNamespace.SetPWMMeasurementDuration (double Duration); Description During measurement of PMW Parameters with the Modules\nVT1004/VT1104, VT2516 or VT2848 a Duty Cicle of 0 or 100% is shown, ..."},"6923":{y:0,u:"../Content/Topics/CAPLFunctions/Security/CAPLFunctionsSecurityOverview.htm",l:-1,t:"Security CAPL Functions",i:0.0096979401873094,a:"CAPL Functions  » Security CAPL Functions Security CAPL Functions   ON THIS PAGE: Callback Handler  [▲ back] Low Level Crypto Functions  [▲ back] Secure Onboard Communication (SecOC)  [▲ back] Test  [▲ back] Test Callback Handler  [▲ back] Utility  [▲ back] X.509 Certificates  [▲ back]  "},"6924":{y:0,u:"../Content/Topics/CAPLFunctions/SmartCharging/Callbacks/CAPLfunctionSCCContractAuthenticationRes.htm",l:-1,t:"SCC_ContractAuthenticationRes",i:6.24395493115898E-05,a:"CAPL Functions  »  Smart Charging  »  SCC Modeling Libraries (Simulation Setup)  »  EV Callback Functions  » SCC_ContractAuthenticationRes SCC_ContractAuthenticationRes   Function Syntax void SCC_ContractAuthenticationRes ( byte SessionID[], long ResponseCode ) Description The callback is called as ..."},"6925":{y:0,u:"../Content/Topics/COMInterface/Objects/COMObjectIpNetworkAddressList.htm",l:-1,t:"IpNetworkAddressList (COM Object)",i:3.12955230026843E-05,a:" CANoe  »  COM Interface  »  Objects  » IpNetworkAddressList IpNetworkAddressList Application  »  Configuration  »  SimulationSetup  »  Nodes  »  Node  »  TcpIpStackSetting  »  TcpIpAdapters  »  TcpIpAdapter  »  IpSetting  » IpNetworkAddressList Application  »  Configuration  »  SimulationSetup  »  ..."},"6926":{y:0,u:"../Content/Topics/CAPLFunctions/Sensor/Functions/CAPLfunctionSensorStopSpcTriggerPulseTransmission.htm",l:-1,t:"sensorStopSpcTriggerPulseTransmission",i:6.09821536172007E-05,a:"CAPL Functions  »  Sensor  » sensorStopSpcTriggerPulseTransmission sensorStopSpcTriggerPulseTransmission   Function Syntax SensorErrorCode sensorStopSpcTriggerPulseTransmission(char[] sysVarNamespace); Description Stops any periodic trigger pulse transmission on the specified ECU channel. Parameters ..."},"6927":{y:0,u:"../Content/Topics/CAPLFunctions/Security/Functions/CAPLfunctionX509CertificateGetSubjectDN.htm",l:-1,t:"X509Certificate_GetSubjectDN",i:6.41810845781887E-05,a:"CAPL Functions  »  Security  » X509Certificate_GetSubjectDN X509Certificate_GetSubjectDN   Method  Syntax dword X509Certificate_GetSubjectDN(qword objectHandle, qword\u0026 outHandleDN) Description Getter function for the Subject field of the X.509 Certificate handle. Parameters Return Values Example ..."},"6928":{y:0,u:"../Content/Topics/CANoeCANalyzer/FunctionBlocks/Trigger/TriggerTypeMessage.htm",l:-1,t:"Trigger condition: User-defined",i:4.31078826804615E-05,a:"Trigger Configuration  » Trigger Condition User-defined Trigger condition: User-defined   With the user-defined trigger \n condition triggering occurs when a configured  set of user-defined conditions  is satisfied. \n The set may include combinations of conditions which are based on a wide \n range of ..."},"6929":{y:0,u:"../Content/Topics/CANoeCANalyzer/CANopen/Nodelayer/CANopenNLOverview.htm",l:-1,t:"CANopen Node Layer",i:2.15859112649693E-05,a:"CANopen  » Node Layer CANopen Node Layer (deprecated)   Each node in the  Simulation Setup  can be assigned a node layer. The node layer makes the following \n functionality available to the node via function calls. Handling of the SDO Protocol as SDO Client The node can access the object dictionary ..."},"6930":{y:0,u:"../Content/Topics/CANoeCANalyzer/Security/SecurityTLS.htm",l:-1,t:"Transport Layer Security (TLS)",i:0.00015678693469954,a:"Security  » Transport Layer Security (TLS) Transport Layer Security (TLS)   The communication between two endpoints can be secured with TLS. It allows to setup up a secured communication between client and server. CANoe can take part in a TLS communication and simulate the TLS server and/or the TLS ..."},"6931":{y:0,u:"../Content/Topics/vCDL/Language/vCDLPreprocessor.htm",l:-1,t:"Preprocessor (vCDL 1.4)",i:5.08577602721154E-05,a:" CANoe  »  vCDL  »  vCDL 1.4  »  Language  » Preprocessor Preprocessor   vCDL comes with an integrated preprocessor like those used in C/C++ and C#, but with a reduced feature set consisting of conditional parsing, regions, and pragmas. It does not support macros and include directives. However, the ..."},"6932":{y:0,u:"../Content/Topics/CAPLFunctions/Test/Functions/CAPLfunctionTestWaitForPhysValueInRangeUInt.htm",l:-1,t:"TestWaitForPhysValueInRangeUInt",i:0.000100212140489065,a:"CAPL Functions  »  Test Feature Set  » TestWaitForPhysValueInRangeUInt TestWaitForPhysValueInRangeUInt   Function Syntax long TestWaitForPhysValueInRangeUInt(valueHandle * value, qword aLowLimit, qword aHighLimit, dword aTimeout); Description Checks the phys encoding of a valueHandle value against ..."},"6933":{y:0,u:"../Content/Topics/CANoeCANalyzer/Windows/SimulationSetup/SimulationSetupFilter.htm",l:-1,t:"Simulation Setup Filter",i:0.000101585148741544,a:"Simulation Setup  » Filter Simulation Setup Filter Context Menu of Line between Bus and Node Messages received or sent by blocks in the Simulation Setup can be filtered. Therefore you can use  message filters  and  channel filters . For the following function blocks you can use filters: ECU Input ..."},"6934":{y:0,u:"../Content/Topics/CAPLFunctions/IP/Methods/CAPLfunctionPrintAddressToString.htm",l:-1,t:"IP_Address::PrintAddressToString",i:9.38315445375379E-05,a:"CAPL Functions  »  Ethernet  »  Function Overview  » IP_Address::PrintAddressToString IP_Address::PrintAddressToString   Method  Syntax long  IP_Address ::PrintAddressToString(char ipAddr[]); Description Converts the IP address to a character string. In case of an IPv6 address the compressed IPv6 ..."},"6935":{y:0,u:"../Content/Topics/CAPLFunctions/CANopen/NodeLayerTFS/Functions/CAPLfunctionCoTfsLssAddMasterResponseIdentifyRemoteSlave.htm",l:-1,t:"coTfsLssAddMasterResponseIdentifyRemoteSlave",i:3.08472802280901E-05,a:"CAPL Functions  »  CANopen  »  Test Feature Set Node Layer  » coTfsLssAddMasterResponseIdentifyRemoteSlave coTfsLssAddMasterResponseIdentifyRemoteSlave (Level 2)   Function Syntax long coTfsLssAddMasterResponseIdentifyRemoteSlave( dword vendorId, dword productCode, dword revisionNoLow, dword ..."},"6936":{y:0,u:"../Content/Topics/QuickStartGuide/02Windows/02Windows.htm",l:-1,t:"Windows",i:8.26849954037218E-05,a:"Quick Start Guide  » Windows Windows   With the selected configuration, a configuration with the desktops Trace, Configuration and Analysis is opened. If you open CANoe the first time a configuration with the desktops Trace, Configuration, and Analysis is opened automatically. CANoe has various ..."},"6937":{y:0,u:"../Content/Topics/SampConf/ADAS/SampleConfsADAS.htm",l:-1,t:"ADAS Sample Configurations",i:0.000453347624549369,a:" CANoe  » ADAS Sample Configurations ADAS Sample Configurations   Sample Configuration   ADAS Basic ROS -  ADASBasicROS.cfg Demonstrates the use of ADAS features to stimulate a ROS node with ADAS data from a created scenario. The results of the ADAS algorithm running in the ROS node are then ..."},"6938":{y:0,u:"../Content/Topics/SampConf/LIN/CANoe/LINScope/LINScope.htm",l:-1,t:"LIN Scope",i:3.98573287610941E-05,a:"Sample Configurations  »  LIN  » LIN Scope LIN Scope   Introduction To use the configuration, you need the CANoe option Scope and real hardware. You can define the analysis area in which the Duty Cycle is to be measured. An example points to the case where the Duty Cycle is within defined limits and ..."},"6939":{y:0,u:"../Content/Topics/CANoeCANalyzer/Windows/SymbolPanel.htm",l:-1,t:"Symbol Panel",i:0.000157266882899378,a:" CANoe  »  Windows and User Interfaces  » Symbol Panel Symbol Panel    "},"6940":{y:0,u:"../Content/Topics/CLibraryAPI/Functions/CAPLfunctioncclSetServiceProviderDiscoveredHandler.htm",l:-1,t:"cclSetServiceProviderDiscoveredHandler",i:3.86360090043396E-05,a:" CANoe  »  C Library API  »  Functions  » cclSetServiceProviderDiscoveredHandler cclSetServiceProviderDiscoveredHandler   Function Syntax typedef void(*cclProviderDiscoveredHandler)(cclAddressID addressID); int32_t cclSetServiceProviderDiscoveredHandler(cclServiceID serviceID, ..."},"6941":{y:0,u:"../Content/Topics/CAPLFunctions/ADFX/Functions/CAPLfunctionAfdxGetLastError.htm",l:-1,t:"AfdxGetLastError",i:0.000183791263688653,a:"CAPL Functions  »  AFDX  » AfdxGetLastError AfdxGetLastError   Function Syntax long AfdxGetLastError( void ); Description Returns the error code of the last called Afdx… function. Parameters — Return Values Example Availability"},"6942":{y:0,u:"../Content/Topics/CAPLFunctions/SignalAccess/CAPLfunctionReadByteArraySignalAsInteger.htm",l:-1,t:"ReadByteArraySignalAsInteger",i:3.85310487122572E-05,a:"CAPL Functions  »  Signal Access  » ReadByteArraySignalAsInteger ReadByteArraySignalAsInteger   Function Syntax dword ReadByteArraySignalAsInteger(signal aSignal, qword\u0026 value, dword direction, dword byteOrder, dword byteFillMode) // form 1 dword ReadByteArraySignalAsInteger(pdu aPDU, char ..."},"6943":{y:0,u:"../Content/Topics/CANoeCANalyzer/Ribbon/File/SaveConfiguration.htm",l:-1,t:"Save Configuration",i:6.65698933119733E-05,a:" CANoe  » Configuration Save Configuration Ribbon :  File Tab |Save The entire program configuration can be saved to file. The configuration is comprised of the following information: Measurement configuration for online mode Measurement configuration for offline mode Simulation configuration ..."},"6944":{y:0,u:"../Content/Topics/CAPLFunctions/MATLAB/Functions/CAPLfunctionMODELinit.htm",l:-1,t:"\u003cModelName\u003e_init",i:0.00010119436796221,a:"CAPL Functions  »  MATLAB Integration  » \u003cModelName\u003e_init \u003cModelName\u003e_init   Function Syntax long \u003cModelName\u003e_init( dword enableTimer, dword enableEvents); Description Initializes the CANoe runtime environment for the generated model DLL. This effectively overrides the default execution settings ..."},"6945":{y:0,u:"../Content/Topics/CAPLFunctions/Security/Functions/CAPLfunctionSecurityLocalVerifyAuthenticationInformation.htm",l:-1,t:"SecurityLocalVerifyAuthenticationInformation",i:6.43294920373682E-05,a:"CAPL Functions  »  Security  » SecurityLocalVerifyAuthenticationInformation SecurityLocalVerifyAuthenticationInformation   Function Syntax long SecurityLocalVerifyAuthenticationInformation(dword dataId, byte payload[], dword payloadLength, qword truncatedAuthenticatorHigh, qword ..."},"6946":{y:0,u:"../Content/Topics/CLibraryAPI/Functions/CAPLfunctioncclCallContextSetDefaultAnswer.htm",l:-1,t:"cclCallContextSetDefaultAnswer",i:3.86360090043396E-05,a:" CANoe  »  C Library API  »  Functions  » cclCallContextSetDefaultAnswer cclCallContextSetDefaultAnswer   Function Syntax int32_t cclCallContextSetDefaultAnswer(cclCallContextID ccID); Description Copies the simulation server configured default result and output parameters to the given call context. ..."},"6947":{y:0,u:"../Content/Topics/CANoeCANalyzer/J1939/nmeabasics/fastPacketCAPL.htm",l:-1,t:"Fast Packet Protocol (CAPL J1939)",i:4.96090289973464E-05,a:"J1939  » Fast Packet Protocol (CAPL J1939) Fast Packet Protocol (CAPL J1939)   The support for maritime applications offers functionality to analyze and simulate the Fast Packet Protocol, so CANoe can send and receive this transport protocol. In order to recognize the Fast Packet Protocol, the ..."},"6948":{y:0,u:"../Content/Topics/CAPLFunctions/IP/Selectors/CAPLfunctionProtocolByteLength.htm",l:-1,t:"ethernetPacket Selectors: \u003cprotocol\u003e.byteLength",i:7.23471383155408E-05,a:"CAPL Functions  »  Ethernet  »  Function Overview  »  ethernetPacket  » Selector \u003cprotocol\u003e.byteLength ethernetPacket Selectors: \u003cprotocol\u003e.byteLength   Selectors dword  ethernetPacket .\u003c protocol \u003e.byteLength; Description Returns the length of the payload of the protocol. The selector is read only. ..."},"6949":{y:0,u:"../Content/Topics/CANoeCANalyzer/Windows/Trace/TraceWindowExamples.htm",l:-1,t:"Sample Configurations and Applications",i:0.000321718780035241,a:" CANoe  » … »  Trace Window  » Sample Configurations and Applications Sample Configurations and Applications    "},"6950":{y:0,u:"../Content/Topics/CANoeCANalyzer/FunctionBlocks/Filter/CANWin_MOST_Application_Filter_messagelist.htm",l:-1,t:"MOST Application Filter: Message List",i:0.000179977516703189,a:"MOST Application Filter  » Message List MOST Application Filter: Message List   The message list is located in the upper half of the MOST Application Filter configuration dialog. For each message to be filtered, an entry must be added to the message list. The description of a message is contained in ..."},"6951":{y:0,u:"../Content/Topics/CAPLFunctions/Test/Functions/CAPLfunctionTestWaitForJ1939PG.htm",l:-1,t:"TestWaitForJ1939PG",i:0.000150076758009015,a:"CAPL Functions  »  Test Feature Set  » TestWaitForJ1939PG TestWaitForJ1939PG   Function Syntax long TestWaitForJ1939PG (dbMsg aMessage, dword aTimeout); long TestWaitForJ1939PG (dword aPGN, dword aTimeout); long TestWaitForJ1939PG (dword aPGN, dword aSourceAddress, dword aDestinationAddress, dword ..."},"6952":{y:0,u:"../Content/Topics/CANoeCANalyzer/Interfaces/MatrixSwitches/MatrixSwitchesDebounceTime.htm",l:-1,t:"Switches: Switch Debounce Time",i:0.000100911750891499,a:"Switches » Switch Debounce Time Switches: Switch Debounce Time   Most switches are relay based. This means after setting a route the \n switch requires a certain settling period. This time is called debounce time. Please note that all API functions return immediately, i.e. the \n functions do not wait ..."},"6953":{y:0,u:"../Content/Topics/CAPLFunctions/Diagnostics/Functions/CAPLfunctionDoIPGetAnnounceInterval.htm",l:-1,t:"DoIP_GetAnnounceInterval",i:6.88413212218677E-05,a:"CAPL Functions  »  Diagnostics  » DoIP_GetAnnounceInterval DoIP_GetAnnounceInterval   Function Syntax dword DoIP_GetAnnounceInterval(); Description Gets the time between the Vehicle Announcement Messages sent by a vehicle simulation (in milliseconds). Parameters — Return Values Time between the sent ..."},"6954":{y:0,u:"../Content/Topics/CAPLFunctions/CANopen/NodeLayerTFS/Functions/CAPLfunctionCoTfsLssWaitForInquireSerialNoReq.htm",l:-1,t:"coTfsLssWaitForInquireSerialNoRequest",i:3.6274081724292E-05,a:"CAPL Functions  »  CANopen  »  Test Feature Set Node Layer  » coTfsLssWaitForInquireSerialNoRequest coTfsLssWaitForInquireSerialNoRequest (Level 2)   Function Syntax long coTfsLssWaitForInquireSerialNoRequest( dword serialNo ); Description This function waits for the Inquire serial number request ..."},"6955":{y:0,u:"../Content/Topics/CAPLFunctions/ISO11783/ISONodeLayer/Functions/CAPLfunctionIso11783GetRxData.htm",l:-1,t:"Iso11783GetRxData",i:0.000104615939020961,a:"CAPL Functions  »  ISO11783  »  ISO11783 Node Layer   » Iso11783GetRxData Iso11783GetRxData   Function Syntax dword Iso11783GetRxData( dword bufferSize, char buffer[] ); Description An auxiliary function for receiving PG data within a callback function. The DLL interface will not permit you to ..."},"6956":{y:0,u:"../Content/Topics/CLibraryAPI/Functions/CAPLfunctioncclGetProvidedService.htm",l:-1,t:"cclGetProvidedService",i:3.86360090043396E-05,a:" CANoe  »  C Library API  »  Functions  » cclGetProvidedService cclGetProvidedService   Function Syntax cclProvidedServiceID cclGetProvidedService(cclServiceID serviceID, int32_t consumerID, int32_t providerID); Description Searches a provider side service port by its binding specific endpoint ..."},"6957":{y:0,u:"../Content/Topics/SampConf/Matlab/MATLABscAnalysisConf.htm",l:-1,t:"MATLAB Integration: Analysis",i:9.10894199429204E-05,a:"Sample Configurations  »  MATLAB/Simulink  »  MATLAB Integration  » MATLAB Integration: Analysis MATLAB Integration: Analysis   This configuration shows how MATLAB/Simulink models can be used for analysis tasks. In Online mode the CAPL node Traffic outputs a frame to the CAN bus which contains a ..."},"6958":{y:0,u:"../Content/Topics/CAPLFunctions/VTSystem/Functions/CAPLfunctionVTSvtsSerialConfigure.htm",l:-1,t:"vtsSerialConfigure",i:0.000198419347564551,a:"CAPL Functions  »  VT System  » vtsSerialConfigure vtsSerialConfigure   Function Syntax long vtsSerialConfigure (char Target[],eVTSBaudRate baudrate, eVTSDataBits numberOfDataBits, eVTSStopBits numberOfStopBits, eVTSParity parity); Description Configures the serial port of the VT System channel that ..."},"6959":{y:0,u:"../Content/Topics/CANoeCANalyzer/CommunicationConcept/Programming/CCPDOs.htm",l:-1,t:"Data Types for Distributed Objects",i:0.000140585244244535,a:" CANoe  »  Communication Concept  »  Programming  » Data Types for Distributed Objects Data Types for Distributed Objects   ON THIS PAGE: CAPL  [▲ back] Most distributed object types in  CAPL  can represent an invalid value. If variables of such types are not initialized on declaration, they are ..."},"6960":{y:0,u:"../Content/Topics/CAPLBrowser/CAPLBrowserBreakPointWindow.htm",l:-1,t:"Breakpoint Window",i:7.2544093557077E-05,a:" CANoe  »  CAPL Browser  »  Windows  » Breakpoint Window Breakpoint Window   The Breakpoint Window displays the breakpoints that were set in the  Debugger . The breakpoints can be enabled, disabled or deleted there via the  Debugging ribbon tab or the context menu of the  Text Editor . You can ..."},"6961":{y:0,u:"../Content/Topics/CAPLFunctions/J1939/GBT27930InteractionLayer/Functions/CAPLfunctionGBT27930ILResetManipulatedMessage.htm",l:-1,t:"GBT27930IL_ResetManipulatedMessage",i:0.000114350679897503,a:"CAPL Functions  »  J1939  »  GB/T 27930 IL  » GBT27930IL_ResetManipulatedMessage GBT27930IL_ResetManipulatedMessage   Function Syntax long GBT27930IL_ResetManipulatedMessage( dword pgn, dword destinationAddress, qword filterMask, qword filterValue ); // form 1 long ..."},"6962":{y:0,u:"../Content/Topics/CAPLFunctions/IP/AUTOSARethIL/Functions/CAPLfunctionAREthRemoveField.htm",l:-1,t:"AREthRemoveField",i:3.0753837210417E-05,a:"CAPL Functions  »  Ethernet  »  AUTOSAR Eth IL  » AREthRemoveField AREthRemoveField   Function Syntax long AREthRemoveField( dword pfHandle ); Description This function removes a field from a Provided Service Instance. The notification callback registered with  AREthAddField  is no longer called ..."},"6963":{y:0,u:"../Content/Topics/CAPLFunctions/Test/Functions/CAPLfunctionTestValidatePhysValueInRangeUInt.htm",l:-1,t:"TestValidatePhysValueInRangeUInt",i:0.000100212140489065,a:"CAPL Functions  »  Test Feature Set  » TestValidatePhysValueInRangeUInt TestValidatePhysValueInRangeUInt   Function Syntax long TestValidatePhysValueInRangeUInt(char aTestStep[], valueHandle * value, qword aLowLimit, qword aHighLimit); Description Checks the phys encoding of a valueHandle value ..."},"6964":{y:0,u:"../Content/Topics/CAPLFunctions/Other/Functions/CAPLfunctionStrtoul.htm",l:-1,t:"strtoul",i:4.2363753381723E-05,a:"CAPL Functions  »  General  »  Function Overview  » strtoul strtoul   Function Syntax int strtoul(char s[], dword\u0026 result); // from 1 int strtoul(char s[], dword startIndex, dword\u0026 result); // from 2 Description Converts the string s to an unsigned 32bit integer. The number base is hexadecimal if ..."},"6965":{y:0,u:"../Content/Topics/TestCommands/CheckDescriptions/CDMOSTMethodProtocolObservation.htm",l:-1,t:"MOST Method Protocol Observation (Check Description)",i:0.000162527302741288,a:" CANoe  »  Check Descriptions  »  MOST-Specific Checks  » MOST Method Protocol Observation MOST Method Protocol Observation   MOST Test Concept  "},"6966":{y:0,u:"../Content/Topics/SampConf/Ethernet/CANoe/UDP/UDPDotNET.htm",l:-1,t:"Basic UDP Server and Client (C#/.NET)",i:4.99439537155258E-05,a:"Sample Configurations  »  Ethernet  » Basic UDP Server and Client (C#/.NET) Basic UDP Server and Client (C#/.NET)   The configuration consists of a UDP server and a UDP client, which operates or controls the server. The server starts at the start of the measurement. The UDP client has six functions ..."},"6967":{y:0,u:"../Content/Topics/CANoeCANalyzer/FunctionBlocks/IG/IGpduConfigPDUView.htm",l:-1,t:"PDUs (PDU IG)",i:7.65718973259867E-05,a:"PDU Interactive Generator  »  Configuration  » PDUs PDUs   Via the PDUs view you can configure AUTOSAR PDUs, that you want to send over the network. You can add AUTOSAR PDUs from an assigned database via the symbolic selection dialog and adjust their properties before sending. To customize the ..."},"6968":{y:0,u:"../Content/Topics/CANoeCANalyzer/ISO11783/InteractiveTaskController/ITCTaskOverview.htm",l:-1,t:"Task overview of the Interactive Task Controller",i:6.50730521758435E-05,a:"ISO11783  »  Interactive Task Controller  » Task overview Task overview of the Interactive Task Controller   If you select the entry Tasks in the tree view of the Interactive Task Controller the right side shows the task overview. The table contains all  tasks  with their designator and the default ..."},"6969":{y:0,u:"../Content/Topics/CAPLFunctions/ISO11783/ISONodeLayer/Functions/CAPLfunctionIso11783fswritefile.htm",l:-1,t:"Iso11783FSWriteFile",i:4.89887579938959E-05,a:"CAPL Functions  »  ISO11783  »  ISO11783 Node Layer   » Iso11783FSWriteFile Iso11783FSWriteFile   Function Syntax long Iso11783FSWriteFile( dword fileHandle, dword bufferSize, char buffer[] ); long Iso11783FSWriteFile( dword fileHandle, dword bufferSize, byte buffer[]  ); Description This function ..."},});