define({"5121":{y:0,u:"../Content/Topics/CAPLFunctions/ISO11783/ISOInteractionLayerTC/Functions/CAPLfunctionIso11783TCILValueCommandRawPhysical.htm",l:-1,t:"TCIL_ValueCommand, TCIL_ValueCommandRaw, TCIL_ValueCommandPhysical",i:6.0642007596146E-05,a:"CAPL Functions  »  ISO11783  »  Task Controller Interaction Layer (TC IL)   » TCIL_ValueCommand, TCIL_ValueCommandRaw, TCIL_ValueCommandPhysical TCIL_ValueCommand, TCIL_ValueCommandRaw, TCIL_ValueCommandPhysical   Function Syntax long TCIL_ValueCommand(dbNode client, dword ddi, dword elementNumber); ..."},"5122":{y:0,u:"../Content/Topics/CAPLFunctions/Test/Functions/CAPLfunctionTestGetStringInput.htm",l:-1,t:"TestGetStringInput",i:9.92263576418498E-05,a:"CAPL Functions  »  Test Feature Set  » TestGetStringInput TestGetStringInput   Function Syntax long TestGetStringInput (char aAnswer[], dword aAnswerLen); Description Returns the result of the last successful call of  TestWaitForStringInput . Parameters Return Values Example Availability  "},"5123":{y:0,u:"../Content/Topics/CANoeCANalyzer/J1939/blocks/j1939scanner/scannerOverview.htm",l:-1,t:"J1939 Scanner",i:0.000368862522341949,a:" CANoe  »  Analysis Windows  » J1939 Scanner J1939 Scanner Ribbon | Analysis Tab |System Scanner|View / New Option .J1939"},"5124":{y:0,u:"../Content/Topics/CANoeCANalyzer/Diagnostics/ISOTPobserver/DiagISOTPObserverExamp.htm",l:-1,t:"ISO TP Observer Use Case",i:3.624049212412E-05,a:"Diagnostics with CANoe  »  Functional Overview  »  Configuration - Off-Board  » ISO TP Observer Use Case ISO TP Observer Use Case   To allow use of the ISO TP observer to analyze \n messages in the Trace Window you can Assign databases to your configuration that \n define the ISO TP typical attributes ..."},"5125":{y:0,u:"../Content/Topics/CAPLFunctions/ISO11783/ISONodeLayer/Functions/CAPLfunctionIso11783GetWSMaster.htm",l:-1,t:"Iso11783GetWSMaster",i:4.89887579938959E-05,a:"CAPL Functions  »  ISO11783  »  ISO11783 Node Layer   » Iso11783GetWSMaster Iso11783GetWSMaster   Function Syntax dword Iso11783GetWSMaster(char busName[], dword ecuAddress); Description This function returns the address of the Working Set Master, which is assigned to an ECU with the address ..."},"5126":{y:0,u:"../Content/Topics/CAPLFunctions/Media/CAPLfunctionsMediaErrorCodes.htm",l:-1,t:"Media Error Codes",i:0.000938597208656384,a:"CAPL Functions  »  Media API  » Media Error Codes Media Error Codes   For your convenience, the Media Foundation Error Codes are re-printed from the Windows SDK/MSDN online library. 14000 – 14999: General Media Foundation Errors 15000 – 15999: ASF Parsing Errors 16000 - 16999: Media Source Events ..."},"5127":{y:0,u:"../Content/Topics/CANoeCANalyzer/Windows/MeasurementSetup/OfflineModeWindow.htm",l:-1,t:"Offline Mode Window",i:0.000359756426362517,a:"Measurement Setup  »  Online/Offline Mode  »  Offline  » Offline Mode Window Offline Mode Window Ribbon | Analysis Tab |Offline Mode"},"5128":{y:0,u:"../Content/Topics/SampConf/CAN/CANoe/Diagnostics/K-Line/KLineCN.htm",l:-1,t:"K-Line",i:0.000278132934789258,a:" CANoe  » Sample Configurations  »  Diagnostics  » K-Line K-Line   Requirements CANoe 8.0 SP4 or higher. K-Line capable VN interface or interfaces. Two K-Line channels looped with a CANcable0. Actual drivers for VN interfaces. General The sample configuration shows how a K-Line tester and ECU can be ..."},"5129":{y:0,u:"../Content/Topics/CANoeCANalyzer/J1939/j1939basics/j1939ExtCanId.htm",l:-1,t:"Extended CAN Identifier",i:0.000540063271216417,a:"CANoe  »  J1939  »  J1939 Basics  » Extended CAN Identifier Extended CAN Identifier   The extended CAN identifier used for  J1939  receives, in addition to the  PGN  also the priority, source address, and DataPage information. This is depicted schematically below:  If the value of PDU format \u003c 240 ..."},"5130":{y:0,u:"../Content/Topics/CAPLFunctions/LIN/Functions/CAPLfunctionLINIsFlashModeActive.htm",l:-1,t:"linIsFlashModeActive",i:3.89520431734087E-05,a:"CAPL Functions  »  LIN  » linIsFlashModeActive linIsFlashModeActive   Function Syntax dword linIsFlashModeActive(); Description This function reports the flash mode state on high-speed capable transceivers. Parameters — Return Values Returns 1 if flash mode is active, otherwise 0. Example ..."},"5131":{y:0,u:"../Content/Topics/CAPLFunctions/LIN/Functions/CAPLfunctionLINGetOEMWakeupInd.htm",l:-1,t:"linGetOEMWakeupInd",i:8.98900021242398E-05,a:"CAPL Functions  »  LIN  » linGetOEMWakeupInd linGetOEMWakeupInd   Function Syntax long linGetOEMWakeupInd(); // form 1 long linGetOEMWakeupInd(char slaveName[]); // form 2 Description With this function it\u0027s possible to query the wake-up indication bit of a Slave node. Without parameter, the wake-up ..."},"5132":{y:0,u:"../Content/Topics/CAPLFunctions/ADAS/Functions/CAPLfunctionProjTransformToGeo.htm",l:-1,t:"Proj_TransformToGeo (ADAS)",i:3.96861969335153E-05,a:"CAPL Functions  »  ADAS  » Proj_TransformToGeo (ADAS) Proj_TransformToGeo (ADAS)   Function Syntax C# bool result = _ADAS.DataModel.ProjAccess.Proj_TransformToGeo.Call(inertialCoordinate, out geoCoordinate); CAPL long result; result = ..."},"5133":{y:0,u:"../Content/Topics/CANoeCANalyzer/RTSetup/DistributedMode/DistributedModeHardwareConfiguration.htm",l:-1,t:"Distributed Mode: Hint for Hardware Configuration",i:9.60883272154864E-05,a:"Distributed Mode  » Hint Vector Hardware Configuration for Distributed Mode Distributed Mode: Hint for Hardware Configuration   Changes on the local Vector Driver \n Applet for local Vector Hardware \n affect only the user computer and not the RT server. If you like to change Vector hardware ..."},"5134":{y:0,u:"../Content/Topics/CAPLFunctions/Test/Functions/CAPLfunctionTestWaitForMostAMSSpyReport.htm",l:-1,t:"TestWaitForMostAMSSpyReport",i:0.000103231312418913,a:"CAPL Functions  »  Test Feature Set  » TestWaitForMostAMSSpyReport TestWaitForMostAMSSpyReport   Function Syntax long TestWaitForMostAMSSpyReport(int aFBlockId, int aInstanceId, int aFunctionId, unsigned long aTimeout); long TestWaitForMostAMSSpyReport(char[] aSymbolicMessage, int aInstanceId, ..."},"5135":{y:0,u:"../Content/Topics/CAPLFunctions/IP/AUTOSARethIL/Functions/CAPLfunctionAREthGetValueFloat.htm",l:-1,t:"AREthGetValueFloat",i:2.866331520751E-05,a:"CAPL Functions  »  Ethernet  »  AUTOSAR Eth IL  » AREthGetValueFloat AREthGetValueFloat   Function Syntax float AREthGetValueFloat( dword objectHandle, char valuePath[] ); Description This function can be used to read out a raw value from the object specified in the objectHandle parameter. The value ..."},"5136":{y:0,u:"../Content/Topics/CAPLFunctions/ISO11783/ISOInteractionLayer/Functions/CAPLfunctionIso11783ILOPChangeActiveMask.htm",l:-1,t:"Iso11783IL_OPChangeActiveMask",i:3.69260011880801E-05,a:"CAPL Functions  »  ISO11783   »  ISO11783 Interaction Layer   » Iso11783IL_OPChangeActiveMask Iso11783IL_OPChangeActiveMask   Function Syntax long Iso11783IL_OPChangeActiveMask( dword maskID ); // form 1 long Iso11783IL_OPChangeActiveMask( dbNode implement, dword maskID ); // form 2 Description This ..."},"5137":{y:0,u:"../Content/Topics/Shared/Interfaces/VModule/VModuleFormatNodeLayerDLL.htm",l:-1,t:"NodeLayer-DLL (Module Description)",i:4.33503864354216E-05,a:"Module Description  »  Format of the Module Description  » NodeLayer-DLL NodeLayer-DLL   The NodeLayer-DLL XML element contains additional data for modules of type NodeLayer-DLL and contains the following XML elements:  "},"5138":{y:0,u:"../Content/Topics/CAPLFunctions/ADAS/Functions/CAPLfunctionIsScenarioStarted.htm",l:-1,t:"IsScenarioStarted",i:3.94063630374005E-05,a:"CAPL Functions  »  ADAS  » IsScenarioStarted IsScenarioStarted   Function Syntax C# bool IsScenarioStarted.Call(); CAPL int IsScenarioStarted.Call(); Description Query whether the currently loaded scenario has started. Parameters — Return Values C# CAPL Example In the examples it is assumed in each ..."},"5139":{y:0,u:"../Content/Topics/CAPLFunctions/Other/Functions/CAPLfunctionGetNetworkName.htm",l:-1,t:"GetNetworkName",i:1.96035070035483E-05,a:"CAPL Functions  »  General  »  Function Overview  » GetNetworkName GetNetworkName   Function Syntax long GetNetworkName(dword busType, dword channelNumber, char name[]); Description Retrieves the name assigned in the Simulation Setup for a specific channel. Parameters Return Values Example ..."},"5140":{y:0,u:"../Content/Topics/CAPLFunctions/CommunicationObjects/Functions/CAPLfunctionLookupMeasuredEvent.htm",l:-1,t:"LookupMeasuredEvent",i:5.69163707923395E-05,a:"CAPL Functions  »  Communication Objects  » LookupMeasuredEvent LookupMeasuredEvent   Function Syntax measuredEventRef * LookupMeasuredEvent(char[] path); Description Searches for the specified measured event. The path must be complete including namespaces and both endpoints: ..."},"5141":{y:0,u:"../Content/Topics/SampConf/SmartCharging/SCVT7870BasicDOEVSE.htm",l:-1,t:"VT7870 DO EVSE",i:3.64445576041791E-05,a:"Sample Configurations  »  SmartCharging  » VT7870 DO EVSE VT7870 DO EVSE   Introduction This configuration employs a subset of the  CCS Basic Simulation (Communication Setup)  sample configuration in order to run a charge point simulation together with a real remote station. Hardware Requirements ..."},"5142":{y:0,u:"../Content/Topics/CANoeCANalyzer/Ethernet/TCPIPNetworkSettings/PageAdvancedSettings.htm",l:-1,t:"Advanced Settings",i:0.000143124011729687,a:"Ethernet  »  TCP/IP Stack  » Advanced Settings Advanced Settings Ribbon :  Simulation Tab | TCP/IP Stack |Advanced Settings On this page the Tcp Delayed Acknowledge can be activated/deactivated. This page is available for CANoe  TCP/IP Stack with activated  Use  CANoe  internal TCP/IP stack  option ..."},"5143":{y:0,u:"../Content/Topics/CAPLFunctions/CANopen/NodeLayerTFS/Functions/CAPLfunctionCoTfsOdAddEntrySubIndexRange.htm",l:-1,t:"coTfsODAddEntrySubIndexRange",i:4.97095090564087E-05,a:"CAPL Functions  »  CANopen  »  Test Feature Set Node Layer  » coTfsODAddEntrySubIndexRange coTfsODAddEntrySubIndexRange (Level 2)   Function Syntax long coTfsODAddEntrySubIndexRange( dword index, dword minSubIndex,  dword maxSubIndex, dword accessType, dword entrySize, byte inMaskBuf[], dword ..."},"5144":{y:0,u:"../Content/Topics/CANoeCANalyzer/Connectivity/MQTTDataTypes.htm",l:-1,t:"MQTT Data Types",i:0.000119098159096818,a:" CANoe  »  Connectivity  » MQTT Data Types MQTT Data Types   The MQTT binding loads certain predefined data types that are used in the  MQTT Client API  and in the  MQTT fault injection : 1.\t_MQTT::DataTypes::MQTTPublishMessage 2. _MQTT::DataTypes::SubscriptionRequest 3. ..."},"5145":{y:0,u:"../Content/Topics/CAPLFunctions/ISO11783/ISONodeLayer/Functions/CAPLfunctionIso11783OPGetVersion.htm",l:-1,t:"Iso11783OPGetVersion",i:4.89887579938959E-05,a:"CAPL Functions  »  ISO11783  »  ISO11783 Node Layer  » Iso11783OPGetVersion Iso11783OPGetVersion   Function Syntax long Iso11783OPGetVersion( dword ecuHandle ); long Iso11783OPGetVersion( dword ecuHandle, byte extendedVersions ); Description The function requests the stored object pools from the ..."},"5146":{y:0,u:"../Content/Topics/TestCommands/CheckDescriptions/Deprecated/CDJ1939ByteOrder.htm",l:-1,t:"J1939 Byte Order (Check Description)",i:2.48598523171083E-05,a:" CANoe  »  Check Descriptions  »  J1939-Specific Checks  » J1939 Byte Order J1939 Byte Order    "},"5147":{y:0,u:"../Content/Topics/CLibraryAPI/Functions/CAPLfunctioncclAbstractConsumedFieldGetID.htm",l:-1,t:"cclAbstractConsumedFieldGetID",i:0.000120737670313595,a:" CANoe  »  C Library API  »  Functions  » cclAbstractConsumedFieldGetID cclAbstractConsumedFieldGetID   Function Syntax cclConsumedFieldID cclAbstractConsumedFieldGetID(const char* path); Description Returns an abstract binding specific consumer side service field port ID, which can be used for ..."},"5148":{y:0,u:"../Content/Topics/CAPLFunctions/ISO11783/ISOInteractionLayerVT/Functions/CAPLfunctionIso11783VTILResetManipulatedMessage.htm",l:-1,t:"VTIL_ResetManipulatedMessage",i:6.94062228911124E-05,a:"CAPL Functions  »  ISO11783   »  Virtual Terminal Interaction Layer (VT IL)   » VTIL_ResetManipulatedMessage VTIL_ResetManipulatedMessage   Function Syntax long VTIL_ResetManipulatedMessage( dword pgn, dword destinationAddress, qword filterMask, qword filterValue ); // form 1 long ..."},"5149":{y:0,u:"../Content/Topics/SampConf/Car2x/CANoe/V2xBasicSecurityCN/V2xBasicSecurityCN.htm",l:-1,t:"Basic Security (V2x Sample Configuration)",i:3.79380735518398E-05,a:"Sample Configurations  »  V2x  » Basic Security (V2x) Basic Security (V2x)   This sample configuration is intended to help the user quickly learn how to use the  Security CAPL API  and the  Certificate Manager . The simulation contains two nodes, one sender node and one receiving node. Valid and ..."},"5150":{y:0,u:"../Content/Topics/CAPLFunctions/Car2x/Functions/CAPLfunctionC2xGetThisValue16.htm",l:-1,t:"C2xGetThisValue16",i:6.27099315484939E-05,a:"CAPL Functions  »  Car2x  » C2xGetThisValue16 C2xGetThisValue16   Function Syntax long C2xGetThisValue16( long offset ); Description This function reads the data of a received packet in Intel format. Parameters Return Values Read value. Example Availability"},"5151":{y:0,u:"../Content/Topics/CANoeCANalyzer/FunctionBlocks/Trigger/TriggerNoteTime.htm",l:-1,t:"Notes on the Time Window",i:4.31078826804615E-05,a:"Trigger Configuration  » Notes on the Time Window Notes on the Time Window   If you select the trigger \n condition  Start  \n and the Infinite post-trigger time \n check box, all data are logged from the beginning to the end of the measurement. This corresponds to the  Entire Measurement  trigger ..."},"5152":{y:0,u:"../Content/Topics/CAPLFunctions/ISO11783/ISOInteractionLayerVT/Functions/CAPLfunctionIso11783VTILOnCA.htm",l:-1,t:"VTIL_OnCA",i:4.89214897086971E-05,a:"CAPL Functions  »  ISO11783  »  Virtual Terminal Interaction Layer (VT IL)   » VTIL_OnCA VTIL_OnCA (Callback)   Function Syntax long VTIL_OnCA(long newAddress); Description This callback function is called from the VT IL when a Command Address message is received. The assignment of the new address ..."},"5153":{y:0,u:"../Content/Topics/CAPLFunctions/Other/Functions/CAPLfunctionRandom.htm",l:-1,t:"random",i:2.01293306917435E-05,a:"CAPL Functions  »  General  »  Function Overview  » random random   Function Syntax dword random(dword num); Description Calculates a random number between 0 and num-1. Parameters Determines the interval. Return Values Random number between 0 and num-1. Example Availability runError"},"5154":{y:0,u:"../Content/Topics/CAPLFunctions/ISO11783/ISONodeLayer/Functions/CAPLfunctionIso11783OPLoadAuxAssignment.htm",l:-1,t:"Iso11783OPLoadAuxAssignment",i:5.90226658848391E-05,a:"CAPL Functions  »  ISO11783  »  ISO11783 Node Layer  » Iso11783OPLoadAuxAssignment Iso11783OPLoadAuxAssignment   Function Syntax long Iso11783OPLoadAuxAssignment( dword ecuHandle, char filename[] ); Description This function loads the \"Preferred Auxiliary Input Assignment\" from an ini file. If the ..."},"5155":{y:0,u:"../Content/Topics/CANoeCANalyzer/Interfaces/MATLAB/CANoeCOlibrary/MATLABcoLibSignalStructOutput.htm",l:-1,t:"CO Signal Struct Output (MATLAB Integration Block)",i:3.59231463746792E-05,a:"MATLAB Integration Package  »  Communication Object Library  » CO Signal  Struct Output CO Signal  Struct Output    "},"5156":{y:0,u:"../Content/Topics/CANoeCANalyzer/Windows/SimulationSetup/SimulationSetupNetworkRename.htm",l:-1,t:"Simulation Setup: Renaming a Network",i:4.54490332688224E-05,a:"Simulation Setup  » Renaming a Network Simulation Setup: Renaming a Network   In the System View of the Simulation Setup, you can see a tree \n representation of the current configuration. If you go there or go directly to a network in the Simulation Setup \n with the mouse pointer and click with the ..."},"5157":{y:0,u:"../Content/Topics/CANoeCANalyzer/Car2x/Hardware/v2x/c2xV2XHwConfig.htm",l:-1,t:"V2X Hardware Configuration",i:0.000106423533974063,a:"Car2x  »  Procedures  »  Connect C-V2X Device  » V2X Hardware Configuration V2X Hardware Configuration Ribbon :  Hardware Tab |Channels|V2X Hardware For a third party V2X device configuration you can assign the application channels used by CANoe (e.g. Ath 1) to V2X devices in this dialog. The V2X ..."},"5158":{y:0,u:"../Content/Topics/CAPLFunctions/CommunicationObjects/Methods/CAPLfunctionProvidedEventRefTrigger.htm",l:-1,t:"providedEventRef::Trigger",i:5.01923313280586E-05,a:"CAPL Functions  »  Communication Objects  » providedEventRef::Trigger providedEventRef::Trigger   Method  Syntax void  providedEventRef ::Trigger(); Description Triggers the specified event. This leads to a transmission of the event to the specified consumer (if the consumer is subscribed) without ..."},"5159":{y:0,u:"../Content/Topics/CANoeCANalyzer/Ribbon/Hardware/NetworkHardware/NetworkHardwareSync.htm",l:-1,t:"Hardware Synchronization",i:0.000210422087863545,a:"Network Hardware  » Hardware Synchronization Hardware Synchronization Ribbon :  Hardware Tab | Network Hardware |Hardware Sync Enable the Activate check box, to switch on the Hardware synchronization.\n By default use the automatic configuration option. If the Automatic Configuration option doesn\u0027t ..."},"5160":{y:0,u:"../Content/Topics/CANoeCANalyzer/Car2x/procedures/c2xProceduresAnalysis/c2xAnalyzeNewTraffic.htm",l:-1,t:"How to Analyze New Network Traffic (Car2x)",i:6.92677170273804E-05,a:"Car2x  »  Procedures  »   Analyze New Network Traffic Analyze New Network Traffic   To analyze new network traffic, proceed as follows. In the Trace Window, you also have the option of making various settings that simplify the analysis. These include the detail view, which gives you an insight into ..."},"5161":{y:0,u:"../Content/Topics/CAPLFunctions/FlexRay/Functions/CAPLfunctionFRGetRateCorrection.htm",l:-1,t:"frGetRateCorrection",i:3.23882963415035E-05,a:"CAPL Functions  »  FlexRay  » frGetRateCorrection frGetRateCorrection   Function Syntax long frGetRateCorrection(long channel, long channelMask); Description Gets the rate correction of a FlexRay channel. Parameters Return Values Rate correction, if FlexRay statistics is enabled; 0 otherwise. ..."},"5162":{y:0,u:"../Content/Topics/COMInterface/Objects/COMObjectMOSTDisassembler.htm",l:-1,t:"MostDisassembler (COM Object)",i:3.93413900384621E-05,a:" CANoe  »  COM Interface  »  Objects  » MostDisassembler MostDisassembler Application  »  Networks  »  Network  »  Devices  »  Device  » MostDisassembler Description The MostDisassembler object activates disassembling of MOST messages via XML catalogs, that are assigned to the CANoe configuration. ..."},"5163":{y:0,u:"../Content/Topics/CAPLFunctions/Test/Functions/CAPLfunctionTestWaitForLinSyncError.htm",l:-1,t:"TestWaitForLinSyncError",i:9.02415021964852E-05,a:"CAPL Functions  »  Test Feature Set  » TestWaitForLinSyncError TestWaitForLinSyncError   Function Syntax long TestWaitForLinSyncError(dword aTimeout); Description Waits for a synchronisation error for the specified amount of time. Parameters Return Values Example Availability ..."},"5164":{y:0,u:"../Content/Topics/CAPLFunctions/CANopen/NodeLayerTFS/Functions/CAPLfunctionCoTfsLssSendActBitTimingParReq.htm",l:-1,t:"coTfsLssSendActivateBitTimingRequest",i:3.6274081724292E-05,a:"CAPL Functions  »  CANopen  »  Test Feature Set Node Layer  » coTfsLssSendActivateBitTimingRequest coTfsLssSendActivateBitTimingRequest (Level 2)   Function Syntax long coTfsLssSendActivateBitTimingRequest( dword switchDelay ); Description This function sends a LSS Activate Bit-Timing Parameter ..."},"5165":{y:0,u:"../Content/Topics/SampConf/SmartCharging/SCCHAdeMOBasicSim.htm",l:-1,t:"CHAdeMO Basic Simulation (SmartCharging Sample Configuration)",i:7.50506243428885E-05,a:"Sample Configurations  »  SmartCharging  » CHAdeMO Basic Simulation CHAdeMO Basic Simulation   Introduction The configuration presents the main features of the  Option SmartCharging  for the CHAdeMO protocol by combining a vehicle simulation with a charging station simulation. In the communication ..."},"5166":{y:0,u:"../Content/Topics/CAPLFunctions/Test/Functions/CAPLfunctionTestWaitForReplay.htm",l:-1,t:"TestWaitForReplay",i:4.34249207829591E-05,a:"CAPL Functions  »  Test Feature Set  » TestWaitForReplay TestWaitForReplay   Function Syntax long TestWaitForReplay(char file[]); Description Starts playing the replay file with the name file and waits until the execution has been finished. This function replays events of the following types: CAN ..."},"5167":{y:0,u:"../Content/Topics/COMInterface/Objects/COMObjectInteractiveGenerator.htm",l:-1,t:"InteractiveGenerator (COM Object)",i:6.11991246764714E-05,a:" CANoe  »  COM Interface  »  Objects  » InteractiveGenerator InteractiveGenerator Application  »  Bus  »  InteractiveGenerators  » InteractiveGenerator Application  »  Configuration  »  SimulationSetup  »  InteractiveGenerators  » InteractiveGenerator Application  »  Configuration  »  ..."},"5168":{y:0,u:"../Content/Topics/CAPLFunctions/Test/Functions/CAPLfunctionTestReportAddMiscInfo.htm",l:-1,t:"TestReportAddMiscInfo",i:9.13324971326626E-05,a:"CAPL Functions  »  Test Feature Set  » TestReportAddMiscInfo TestReportAddMiscInfo   Function Syntax TestReportAddMiscInfo (char name[], char description[], ...); Description With these functions, information pairs of name and description (e.g. \"parameter value V0\" and \"3.7 V\") can be taken up into ..."},"5169":{y:0,u:"../Content/Topics/CAPLFunctions/Scope/CAPLfunctionsScopeOverview.htm",l:-1,t:"Scope CAPL Functions",i:0.00203251923916894,a:"CAPL Functions  » Scope CAPL Functions Scope CAPL Functions   ON THIS PAGE: Event Procedures  [▲ back] Eye Diagram  [▲ back] Functions Short Description testWaitForScopeShowEyeDiagram  Create an eye diagram for a message (or part of a message) or for a complete node. ..."},"5170":{y:0,u:"../Content/Topics/CANoeCANalyzer/J1939/blocks/gnsssimulator/procedures/gsFitGraphic.htm",l:-1,t:"Adjust the Graphic to the Graphics Window",i:8.30237505685763E-05,a:"J1939  »  GNSS Simulator  » Adjust the Graphic to the Graphics Window Adjust the Graphic to the Graphics Window   Clicking on the   button in the  main window  adjusts the scale and offset so that the entire graphic is visible. Scrolling is reset during this process. If automatic adjustment of the ..."},"5171":{y:0,u:"../Content/Topics/CANoeCANalyzer/Ribbon/File/Options/BussystemsProtocols/BussystemsProtocolsCANopen.htm",l:-1,t:"Configuration: CANopen",i:0.000546919651013314,a:"Options  » Bus Systems/Protocols » CANopen Configuration: CANopen Ribbon :  File Tab | Options |Bus Systems/Protocols|CANopen CANopen Settings SDO Timeout You can use this input box to enter the maximum wait time in milliseconds that is to be used to wait for responses from the SDO command. Set NMT ..."},"5172":{y:0,u:"../Content/Topics/CANoeCANalyzer/ISO11783/ISO11783IL/TIMComponent/TIMComponentFaultInjection.htm",l:-1,t:"Fault Injections (TIM Component - ISO11783)",i:2.45746157785722E-05,a:"ISO11783  »  ISO11783 Interaction Layer  »  TIM Component  » Fault Injections Fault Injections   You can influence the communication between a simulated TIM participant with a TIM counterpart in various ways. E.g. you can use invalid certificate files or you can modify the TIM server status ..."},"5173":{y:0,u:"../Content/Topics/COMInterface/Objects/COMObjectFDXFile.htm",l:-1,t:"FDXFile (COM Object)",i:0.000106823870488797,a:" CANoe  »  COM Interface  »  Objects  » FDXFile FDXFile Application  »  Configuration  »  FDXFiles  » FDXFile Description The FDXFile object represents a single FDX file in a CANoe configuration. Properties Methods — Events — Example Availability COM Object Hierarchy"},"5174":{y:0,u:"../Content/Topics/CANoeCANalyzer/CommunicationConcept/CCDOCSharpBinding.htm",l:-1,t:"C# Binding for Distributed Objects",i:0.000212186642069317,a:" CANoe  »  Communication Concept  » C# Binding for Distributed Objects C# Binding for Distributed Objects   A special variant of  binding  for  distributed objects (DO)  is to implement the transmission with C# itself. Therefore the binding attribute is set to C# and special functions and handlers ..."},"5175":{y:0,u:"../Content/Topics/COMInterface/Objects/COMObjectIODevices.htm",l:-1,t:"IODevices (COM Object)",i:5.759707814826E-05,a:" CANoe  »  COM Interface  »  Objects  » IODevices IODevices Application  »  Configuration  »  IOHardware  »  VectorIO  » IODevices Description The IODevices object represents the collection of Vector I/O devices currently configured. Properties Methods Events — Example Availability COM Object ..."},"5176":{y:0,u:"../Content/Topics/vCDL20/Language/vCDLRefinements.htm",l:-1,t:"Refinements (vCDL 2.0)",i:0.0002516804980058,a:" CANoe  »  vCDL  »  vCDL 2.0  » Language » Refinements Refinements Navigation:  « System Variables   •   Preprocessor » Refinements allow assigning and changing both attributes and values of any referable object. Although the concept may seem like additional effort at first there are two reasons why ..."},"5177":{y:0,u:"../Content/Topics/CAPLFunctions/ADFX/EventProcedures/CAPLfunctionAFDXOnA664Frame.htm",l:-1,t:"on a664Frame",i:7.09247835889305E-05,a:"CAPL Functions  »  AFDX  » on a664Frame on a664Frame   Function Syntax on a664Frame \u003cvirtual link\u003e|ICMP Description The event procedure on a664Frame is called on every AFDX packet if the following conditions are fulfilled: The virtual link id corresponds to the given id (asterisk means “any virtual ..."},"5178":{y:0,u:"../Content/Topics/Shared/SystemVariables/SysVarStatisticsEthernet.htm",l:-1,t:"System Variables for Statistics (Ethernet)",i:7.9710272568128E-05,a:"System Variables  »  Statistics Bus Statistics Window Ethernet  »  System Variables for Statistics  » Ethernet System Variables for Statistics   Statistic CAPL Functions"},"5179":{y:0,u:"../Content/Topics/CANoeCANalyzer/Windows/Graphics/GraphicsWindowUseCases.htm",l:-1,t:"Graphics Window: Use Cases",i:6.32733614308188E-05,a:"Graphics Window  » Use Cases Graphics Window: Use Cases    "},"5180":{y:0,u:"../Content/Topics/CAPLFunctions/SmartCharging/Functions/CAPLfunctionSCCSetExternalPaymentAllowed.htm",l:-1,t:"SCC_SetExternalPaymentAllowed",i:6.24395493115898E-05,a:"CAPL Functions  »  Smart Charging  »  SCC Modeling Libraries (Simulation Setup)  »  V2G Simulation Control  »  EVSE Functions  » SCC_SetExternalPaymentAllowed SCC_SetExternalPaymentAllowed   Function Syntax long SCC_SetExternalPaymentAllowed ( dword Allowed ) Description  Changes the available ..."},"5181":{y:0,u:"../Content/Topics/CAPLFunctions/IP/Functions/CAPLfunctionEthGetSQI.htm",l:-1,t:"ethGetSQI",i:2.1003717686362E-05,a:"CAPL Functions  »  Ethernet  »  Function Overview  » ethGetSQI ethGetSQI   Function Syntax qword ethGetSQI(ethernetPort port, ValueSelector valueSelector); Description Returns the SQI (Signal Quality Indicator) of the specified port. The parameter valueSelector controls whether the minimum value, ..."},"5182":{y:0,u:"../Content/Topics/COMInterface/Objects/COMObjectNode.htm",l:-1,t:"Node (COM Object)",i:0.000198240243204831,a:" CANoe  »  COM Interface  »  Objects  » Node Node Application  »  Configuration  »  SimulationSetup  »  Nodes  » Node Description The Node object represents a  »node  of the  Simulation Setup  /  Communication Setup  of the CANoe application. Properties Methods Events — Example Example —  ..."},"5183":{y:0,u:"../Content/Topics/CANoeCANalyzer/FlexRay/Configuration/FlexRay_Configuration_Interface_KeySlot_Config.htm",l:-1,t:"Key Slot Configuration (FlexRay)",i:5.14470770181682E-05,a:"FlexRay Network Hardware  » Key Slot Configuration Key Slot Configuration Ribbon :  Hardware Tab | Network Hardware || FlexRay |Key Slot To start-up a FlexRay bus there are at least two start-up/sync frames necessary. The VN interface is able to transmit two start-up/sync frames. Thus, they can ..."},"5184":{y:0,u:"../Content/Topics/CANoeCANalyzer/Connectivity/MQTTModelingDOs.htm",l:-1,t:"Distributed Objects (MQTT - Connectivity)",i:0.000321638070551842,a:" CANoe  »  Connectivity  »  MQTT Protocol  » Distributed Objects (DOs) Distributed Objects (DOs)   MQTT Modeling with Distributed Objects The modeling of an MQTT client in CANoe occurs according to the new communication concept and distributed objects (DOs). The elements which can be used for ..."},"5185":{y:0,u:"../Content/Topics/CAPLFunctions/CommunicationObjects/Objects/CAPLfunctionMeasuredServiceRef.htm",l:-1,t:"measuredServiceRef",i:2.93763033289521E-05,a:"CAPL Functions  »  Communication Objects  » measuredServiceRef measuredServiceRef   Function Syntax measuredServiceRef * \u003cvar\u003e; // form 1 measuredServiceRef \u003cService\u003e \u003cvar\u003e; // form 2 measuredServiceRef \u003cInterface\u003e \u003cvar\u003e; // form 3 Method  Syntax — Description References a service measurement point, ..."},"5186":{y:0,u:"../Content/Topics/CLibraryAPI/Functions/CAPLfunctioncclConsumerGetID.htm",l:-1,t:"cclConsumerGetID",i:6.91309117763489E-05,a:" CANoe  »  C Library API  »  Functions  » cclConsumerGetID cclConsumerGetID   Function Syntax typedef int32_t cclConsumerID; cclConsumerID cclConsumerGetID(const char* path); Description Returns a consumer side service endpoint ID, which can be used in service discovery functions. All consumer IDs ..."},"5187":{y:0,u:"../Content/Topics/CAPLFunctions/ISO11783/ISOInteractionLayerVT/Functions/CAPLfunctionIso11783VTILGetDwordValue.htm",l:-1,t:"VTIL_GetDwordValue, VTIL_GetDoubleValue, VTIL_GetStringValue",i:4.89214897086971E-05,a:"CAPL Functions  »  ISO11783  »  Virtual Terminal Interaction Layer (VT IL)   » VTIL_GetDwordValue, VTIL_GetDoubleValue, VTIL_GetStringValue VTIL_GetDwordValue, VTIL_GetDoubleValue, VTIL_GetStringValue   Function Syntax long VTIL_GetDwordValue(dbNode workingSetMaster, dword objectId, dword \u0026 value); ..."},});