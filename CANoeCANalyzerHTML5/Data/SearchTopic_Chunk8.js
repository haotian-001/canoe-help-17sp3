define({"555":{y:0,u:"../Content/Topics/CAPLFunctions/Security/Functions/CAPLfunctionSecurityOfNodeVerifyAuthenticationInformation.htm",l:-1,t:"SecurityOfNodeVerifyAuthenticationInformation",i:6.41810845781887E-05,a:"CAPL Functions  »  Security  » SecurityOfNodeVerifyAuthenticationInformation SecurityOfNodeVerifyAuthenticationInformation   Function Syntax long SecurityOfNodeVerifyAuthenticationInformation(dword dataId, byte payload[], dword payloadLength, qword truncatedAuthenticatorHigh, qword ..."},"556":{y:0,u:"../Content/Topics/CAPLFunctions/Security/Functions/CAPLfunctionSecurityLocalGenerateEphemeralKeyPair.htm",l:-1,t:"SecurityLocalGenerateEphemeralKeyPair",i:0.00011217824417343,a:"CAPL Functions  »  Security  » SecurityLocalGenerateEphemeralKeyPair SecurityLocalGenerateEphemeralKeyPair   Function Syntax long SecurityLocalGenerateEphemeralKeyPair(dword curve, byte publicKey[], dword* publicKeyLength, byte privateKey[], dword* privateKeyLength); Description Generates a key pair ..."},"557":{y:0,u:"../Content/Topics/CAPLFunctions/Test/Functions/CAPLfunctionTestWaitForMostNodeAdr.htm",l:-1,t:"TestWaitForMostNodeAdr",i:0.000242249409672382,a:"CAPL Functions  »  Test Feature Set  » TestWaitForMostNodeAdr TestWaitForMostNodeAdr   Function Syntax long TestWaitForMostNodeAdr(long aValue, unsigned long aTimeout); Description The function waits for the expiration of the time aTimeout for the occurrence of the MOST event of a change of its own ..."},"558":{y:0,u:"../Content/Topics/CANoeCANalyzer/Interfaces/MATLAB/CANoeDOlibrary/MATLABdoLibFunctionCall.htm",l:-1,t:"DO Function Call (MATLAB Integration Block)",i:3.59231463746792E-05,a:"MATLAB Integration Package  »  Distributed Object Library  » DO Function Call DO Function Call    "},"559":{y:0,u:"../Content/Topics/CANoeCANalyzer/J1939/blocks/j1939filter/j1939FilterBlock.htm",l:-1,t:"J1939 Filter",i:0.000315508598022126,a:"J1939  » J1939 Filter J1939 Filter Ribbon | Analysis Tab |Filter|J1939 Filter"},"560":{y:0,u:"../Content/Topics/SampConf/Sensor/UART/UARTBasic.htm",l:-1,t:"UART Basic",i:4.08415854227062E-05,a:"Sample Configurations  »  Sensor  » UART Basic UART Basic   In order to execute the configuration, it is necessary to connect pins Tx1 and Rx1 of Digital Interface Connector 1 with pins Rx2 and Tx2 of Digital Interface Connetor 2. As working mode Real Bus must be set. Introduction After wiring the ..."},"561":{y:0,u:"../Content/Topics/CANoeCANalyzer/Ethernet/Protocols/ProtocolAAF.htm",l:-1,t:"AVTP Audio Format (AAF)",i:2.57888319735391E-05,a:"Ethernet  »  Protocol Overview  » AVTP Audio Format (AAF) AVTP Audio Format (AAF)   Protocol Information  [▲ back] This encapsulation uses the  AVTP  Common Stream Header with the Subtype field of the AVTP Common Header set to 2. Protocol Dependencies  [▲ back] Header-Format  [▲ back]  "},"562":{y:0,u:"../Content/Topics/CAPLFunctions/DistributedObjects/Methods/CAPLfunctiondistObjBlueprintCreateObject.htm",l:-1,t:"distObjBlueprint::CreateObject",i:7.17816517754894E-05,a:"CAPL Functions  »  Distributed Objects  » distObjBlueprint::CreateObject distObjBlueprint::CreateObject   Method  Syntax distObjRef  \u003cInterface\u003e  distObjBlueprint  \u003cInterface\u003e::CreateObject(char path[]); Description Creates a dynamic object from the blueprint. Parameters Return Values New dynamic ..."},"563":{y:0,u:"../Content/Topics/CAPLFunctions/J1939/J1939NodeLayer/Functions/CAPLfunctionJ1939TxAbort.htm",l:-1,t:"J1939TxAbort",i:1.99346589967799E-05,a:"CAPL Functions  »  J1939  »  J1939 NL  » J1939TxAbort J1939TxAbort   Function Syntax dword J1939TxAbort( dword ecuHandle, dword pgn ); Description Interrupt of a transfer that has previously been started with  J1939TxReqPG() . Please note in this regard \n that for technical reasons, it is only ..."},"564":{y:0,u:"../Content/Topics/CANoeCANalyzer/Connectivity/MQTTProtocol.htm",l:-1,t:"MQTT Protocol (Connectivity)",i:0.000240468840983293,a:" CANoe  »  Connectivity  » MQTT Protocol MQTT Protocol   Introduction MQTT is a lightweight transport protocol which sits atop TCP/IP. It is primarily used in the machine-to-machine (M2M) and Internet of Things (IoT) environments. The publish/subscribe pattern, which enables 1-n distribution of the ..."},"565":{y:0,u:"../Content/Topics/Shared/CAPL/General/EnumerationTypes.htm",l:-1,t:"Enumeration Types",i:0.000107757583403413,a:"CAPL Introduction  » Enumeration Types Enumeration Types   Enumeration types are defined in CAPL in exactly the same way as in C: enum Colors { Red, Green, Blue }; Element names must be unique throughout the CAPL  program . Fixed integer values can also be assigned to individual elements: enum State ..."},"566":{y:0,u:"../Content/Topics/CAPLFunctions/ISO11783/ISOInteractionLayerVT/Functions/CAPLfunctionIso11783VTILRemoveWindowMask.htm",l:-1,t:"VTIL_RemoveWindowMask",i:5.7585652645755E-05,a:"CAPL Functions  »  ISO11783  »  Virtual Terminal Interaction Layer (VT IL)   » VTIL_RemoveWindowMask VTIL_RemoveWindowMask   Function Syntax VTIL_RemoveWindowMask(dword maskIndex, dword column, dword row); // form 1 VTIL_RemoveWindowMask(dbNode vt, dword maskIndex, dword column, dword row); // form ..."},"567":{y:0,u:"../Content/Topics/CAPLFunctions/J1939/J1939InteractionLayer/Functions/CAPLfunctionJ1939ILGetAddress.htm",l:-1,t:"J1939ILGetAddress",i:2.01909972472997E-05,a:"CAPL Functions  »  J1939  »  J1939 IL  » J1939ILGetAddress J1939ILGetAddress   Function Syntax long J1939ILGetAddress(); // form 1 long J1939ILGetAddress(dbNode node); // form 2 Description Returns the address that is used by the J1939 IL. Parameters Return Values Example Availability  "},"568":{y:0,u:"../Content/Topics/CAPLFunctions/IP/Methods/CAPLfunctionIsIPv6Address.htm",l:-1,t:"IP_Address::IsIPv6Address",i:9.38315445375379E-05,a:"CAPL Functions  »  Ethernet  »  Function Overview  » IP_Address::IsIPv6Address IP_Address::IsIPv6Address   Method  Syntax long  IP_Address ::IsIPv6Address(); Description Checks if the current address is an IPv6 address. Parameters — Return Values Returns 1 if the object currently represents an IPv6 ..."},"569":{y:0,u:"../Content/Topics/CANoeCANalyzer/ADAS/SimEnvironments/ADASSimEnvDYNA4.htm",l:-1,t:"DYNA4",i:4.82566527548101E-05,a:"ADAS  » DYNA4 DYNA4   DYNA4  is an open simulation environment for virtual driving tests with passenger cars and utility vehicles. The physical models include vehicle dynamics, powertrain, combustion and electric engines as well as sensors and traffic. Virtual test drives with DYNA4 enable efficient ..."},"570":{y:0,u:"../Content/Topics/CAPLFunctions/CANopen/NodeLayerTFS/Functions/CAPLfunctionCoTfsMonitorActivate.htm",l:-1,t:"coTfsMonitorActivate",i:0.000122100017055152,a:"CAPL Functions  »  CANopen  »  Test Feature Set Node Layer  » coTfsMonitorActivate coTfsMonitorActivate(Level 2)   Function Syntax long coTfsMonitorActivate( void ); Description This function activates the passive communication monitor and resets the statistics. Furthermore the active nodes are ..."},"571":{y:0,u:"../Content/Topics/CANoeCANalyzer/Windows/AUTOSARPreprocessor.htm",l:-1,t:"AUTOSAR Preprocessor",i:0.000181576030299077,a:" CANoe  »  Communication Concept  » AUTOSAR Preprocessor AUTOSAR Preprocessor Ribbon :  Tools Tab |AUTOSAR Preprocessor Working with AUTOSAR Extracts and System Descriptions In many cases, no system descriptions are available but only individual extracts (ARXML) that describe an ECU with its inputs ..."},"572":{y:0,u:"../Content/Topics/CANoeCANalyzer/Interfaces/MATLAB/CANoeCOlibrary/MATLABcoLib.htm",l:-1,t:"Communication Object Library (MATLAB Integration)",i:0.000217314886688924,a:"MATLAB Integration Package  » Communication Object Library Communication Object Library   The Communication Objects  library is a collection of S-Functions blocks. The library provides the following features: Union Data Type A Union data type, as part of a signal struct, is represented in Simulink ..."},"573":{y:0,u:"../Content/Topics/CANoeCANalyzer/Windows/CommunicationSetup/CommunicationSetup.htm",l:-1,t:"Communication Setup",i:0.00123322342740158,a:" CANoe  »  Window Overview  » Communication Setup Communication Setup Ribbon :  Environment Tab |Communication Setup Communication Concept   •   Vector Communication Description Language (vCDL)"},"574":{y:0,u:"../Content/Topics/CAPLFunctions/ISO11783/CAPLfunctionsISO11783Overview.htm",l:-1,t:"ISO11783 CAPL Functions",i:0.0123694009404102,a:"CAPL Functions  » ISO11783 CAPL Functions ISO11783 CAPL Functions    "},"575":{y:0,u:"../Content/Topics/CANoeCANalyzer/Windows/SimulinkAnalysisModels.htm",l:-1,t:"Simulink Analysis Models",i:0.000161692247705921,a:"Simulink Model Viewer  » Simulink Analysis Models Simulink Analysis Models Ribbon :  Environment Tab |Analysis Models In this dialog, you can configure Simulink models in such a way that you can perform evaluations during the measurement. In contrast to the models that are assigned for the node in ..."},"576":{y:0,u:"../Content/Topics/CAPLFunctions/TCPIPAPI/Functions/CAPLfunctionIpGetSocketName.htm",l:-1,t:"IpGetSocketName",i:4.47117629458147E-05,a:"CAPL Functions  »  TCP/IP API  » IpGetSocketName IpGetSocketName   Function Syntax long IpGetSocketName( dword socket, dword \u0026ipv4Address, dword \u0026port); // form 1 long IpGetSocketName( dword socket, byte ipv6Address[], dword \u0026port); // form 2 long IpGetSocketName( dword socket, IP_Endpoint ..."},"577":{y:0,u:"../Content/Topics/CAPLFunctions/Other/Functions/CAPLfunctionStartValuesUpdateList.htm",l:-1,t:"startValuesUpdateList",i:3.40930641622256E-05,a:"CAPL Functions  »  General  »  Function Overview  » startValuesUpdateList startValuesUpdateList   Function Syntax void startValuesUpdateList(); // form 1 void startValuesUpdateList(char groupName[]); // form 2 void startValuesUpdateList(char groupName[], long onlyActiveStartValues); // form 3 ..."},"578":{y:0,u:"../Content/Topics/CANoeCANalyzer/Windows/Map/MapWindowGui.htm",l:-1,t:"User Interface (Map Window)",i:8.61976422587355E-05,a:"Map Window  » User Interface User Interface   ON THIS PAGE: General  [▲ back] Toolbar 1) Only available with Option Car2x. Map Right-click on a point on the map to open the context menu and display the coordinates of the point. Select the coordinates to copy them to the clipboard. Detail View  The ..."},"579":{y:0,u:"../Content/Topics/CAPLFunctions/ISO11783/ISOInteractionLayer/Functions/CAPLfunctionIso11783ILBlockTxTpDt.htm",l:-1,t:"Iso11783IL_BlockTxTpDt",i:5.13176378628896E-05,a:"CAPL Functions  »  ISO11783   »  ISO11783 Interaction Layer   » Iso11783IL_BlockTxTpDt Iso11783IL_BlockTxTpDt   Function Syntax long Iso11783IL_BlockTxTpDt( long firstMsg, long numOfMsg, long timeout); //Form 1 long Iso11783IL_BlockTxTpDt( dbNode node, long firstMsg, long numOfMsg, long timeout); ..."},"580":{y:0,u:"../Content/Topics/CAPLFunctions/Car2x/Functions/CAPLfunctionC2xGetThisValue64.htm",l:-1,t:"C2xGetThisValue64",i:6.27099315484939E-05,a:"CAPL Functions  »  Car2x  » C2xGetThisValue64 C2xGetThisValue64   Function Syntax long C2xGetThisValue64( long offset ); Description This function reads the data of a received packet in Intel format. Parameters Return Values Read value. Example Availability"},"581":{y:0,u:"../Content/Topics/CAPLFunctions/J1939/Functions/CAPLfunctionJ1939GetSourceAddress.htm",l:-1,t:"J1939GetSourceAddress",i:5.64400224210231E-05,a:"CAPL Functions  »  J1939  »  Function Overview  » J1939GetSourceAddress J1939GetSourceAddress   Function Syntax dword J1939GetSourceAddress (pg* aPG); // form 1 dword J1939GetSourceAddress (dword canId); // form 2 Description Returns the  source address  of a parameter group or CAN ID. Parameters ..."},"582":{y:0,u:"../Content/Topics/CLibraryAPI/Functions/CAPLfunctioncclPDUReceiverGetID.htm",l:-1,t:"cclPDUReceiverGetID",i:3.86360090043396E-05,a:" CANoe  »  C Library API  »  Functions  » cclPDUReceiverGetID cclPDUReceiverGetID   Function Syntax typedef int32_t cclPDUReceiverID; cclPDUReceiverID cclPDUReceiverGetID(const char* path); Description Returns a receiver side PDU port ID, which can be used for accessing PDU signal values. All PDU ..."},"583":{y:0,u:"../Content/Topics/TestCommands/CheckDescriptions/CDJ193976FunctionalSafetyCheck.htm",l:-1,t:"J1939-76 Functional Safety Check (Check Description)",i:2.70378418208802E-05,a:" CANoe  »  Check Descriptions  »  J1939-Specific Checks  » J1939-76 Functional Safety Check J1939-76 Functional Safety Check   Description This check observes the J1939-76 functional safety communication according J1939-76. It is possible to observe all nodes or only a specific node. During the ..."},"584":{y:0,u:"../Content/Topics/CAPLFunctions/ADFX/Functions/CAPLfunctionAfdxSetTokenInt.htm",l:-1,t:"AfdxSetTokenInt",i:7.06647921211593E-05,a:"CAPL Functions  »  AFDX  » AfdxSetTokenInt AfdxSetTokenInt   Function Syntax long AfdxSetTokenInt( long packet, char protocolDesignator[], char tokenDesignator[], long value ); // form 1 long AfdxSetTokenInt( long packet, char protocolDesignatorl[], char tokenDesignator[], long offset, long length, ..."},"585":{y:0,u:"../Content/Topics/CANoeCANalyzer/Windows/TestEnvironments/TestEnvironmentSave.htm",l:-1,t:"Save / Save As",i:4.65295339282389E-05,a:"Test Setup for Test Modules  »  Test Environment  » Save / Save As Save / Save As Context Menu  of a  Test Environment : Save / Save As… To save a  Test Environment  select it with the right mouse button in the  Test Setup for Test Modules  and select the context menu command Save. The test ..."},"586":{y:0,u:"../Content/Topics/CAPLFunctions/SmartCharging/Functions/CAPLfunctionSCCSetTLSEnabled.htm",l:-1,t:"SCC_SetTLSEnabled",i:8.01307066941141E-05,a:"CAPL Functions  »  Smart Charging  »  SCC Modeling Libraries (Simulation Setup)  »  Simulation Control  »  Shared Functions  » SCC_SetTLSEnabled SCC_SetTLSEnabled   Function Syntax void SCC_SetTLSEnabled ( long Enabled )\n Description Specifies if TLS is used. This function will affect both the ..."},"587":{y:0,u:"../Content/Topics/TestCommands/CheckDescriptions/CDSignalCycleTimeAbsolute.htm",l:-1,t:"Signal Cycle Time Absolute (Check Description)",i:3.29977984171037E-05,a:" CANoe  »  Check Descriptions  »  Signal Evaluation  » Signal Cycle Time Absolute Signal Cycle Time Absolute   Description The check is useful to observe the send distance of a signal. A check failure will be generated, if the time between two consecutive signal occurrences is out of the specified ..."},"588":{y:0,u:"../Content/Topics/CANoeCANalyzer/CommunicationConcept/Programming/CCPCOs.htm",l:-1,t:"API of the Different Communication Object Types",i:0.000162515171674099,a:" CANoe  »  Communication Concept  »  Programming  » API of the Different Communication Object Types API of the Different Communication Object Types   Table of Contents Services  [▲ back] A service allows you to access individual elements (fields, events, methods and PDUs) with a \u0027.\u0027 and their name. ..."},"589":{y:0,u:"../Content/Topics/CANoeCANalyzer/FunctionBlocks/Trigger/TriggerTypeStart.htm",l:-1,t:"Trigger Condition: Start",i:5.22683248063083E-05,a:"Trigger Configuration  » Trigger Condition Start Trigger Condition: Start   With the Start trigger condition, \n triggering - and thereby data logging - occurs immediately at the start \n of the measurement. The entry of a pretrigger time is meaningless here and should be set \n to 0. The post-trigger ..."},"590":{y:0,u:"../Content/Topics/CAPLFunctions/Diagnostics/Functions/CAPLfunctionDoIPGetLastResponseCode.htm",l:-1,t:"DoIP_GetLastResponseCode",i:5.9334965506209E-05,a:"CAPL Functions  »  Diagnostics  » DoIP_GetLastResponseCode DoIP_GetLastResponseCode   Function Syntax long DoIP_GetLastResponseCode(); Description Returns the last negative response code received from the peer. Parameters — Return Values Example Availability DoIP_ErrorInd"},"591":{y:0,u:"../Content/Topics/CAPLFunctions/TLSAPI/EventProcedures/CAPLfunctionOnTlsHandshakeComplete.htm",l:-1,t:"OnTlsHandshakeComplete",i:4.87730777464509E-05,a:"CAPL Functions  »  TLS API  » OnTlsHandshakeComplete OnTlsHandshakeComplete   Function Syntax void OnTlsHandshakeComplete(dword socket, long result); Description If the CAPL program implements this callback it is called when a TLS handshake is completed. Parameters Return Values — Example ..."},"592":{y:0,u:"../Content/Topics/CANoeCANalyzer/J1939/blocks/gnsssimulator/settings/gsSettingsDlg.htm",l:-1,t:"GNSS Simulator (Configuration)",i:0.000193993699827099,a:"J1939  »  GNSS Simulator  » Configuration Configuration   The Configuration dialog you open via the context menu command with the same name or via the Configuration button in the toolbar:  In the Configuration dialog, you can change the settings of the GNSS Simulator. There are the following pages ..."},"593":{y:0,u:"../Content/Topics/CANoeCANalyzer/J1939/blocks/diagmemaccess/dmaOverview.htm",l:-1,t:"Diagnostic Memory Access (J1939)",i:0.000175371629728511,a:"J1939  » Diagnostic Memory Access (J1939) J1939 Diagnostic Memory Access Ribbon | Diagnostics \u0026 XCP Tab |J1939|Diagnostic Memory Access|View / New Manual direct memory access   •   Manual object-oriented memory access   •   Cyclical object-oriented memory access   •   Configuration   •   Shortcuts"},"594":{y:0,u:"../Content/Topics/Shared/CAPL/IncludeFiles/IncludeFiles.htm",l:-1,t:"Include Files: Overview",i:0.000273564191001899,a:"CAPL Introduction  » Include Files Include Files: Overview   You can source out constants, variables and functions that are needed identically in multiple CAPL  program s. You can integrate Include files directly in the code of the CAPL  program  (see below or  Insert Include Files ). For Include ..."},"595":{y:0,u:"../Content/Topics/COMInterface/Objects/COMObjectExporterSymbol.htm",l:-1,t:"ExporterSymbol (COM Object)",i:4.0301894401351E-05,a:" CANoe  »  COM Interface  »  Objects  » ExporterSymbol ExporterSymbol Application  »  Configuration  »  MeasurementSetup  »  LoggingCollection  »  Logging  »  Exporter  »  ExporterSymbols  » ExporterSymbol Description The ExporterSymbol object represents a symbol (signal, system variable or bus ..."},"596":{y:0,u:"../Content/Topics/CAPLFunctions/Other/Functions/CAPLfunctionGetGPSTimeString.htm",l:-1,t:"getGPSTimeString",i:0.000160657578038881,a:"CAPL Functions  »  General  »  Function Overview  » getGPSTimeString getGPSTimeString   Function Syntax void getGPSTimeString(char timeBuffer[], dword timestamp); Description Copies a printed representation of the GPS time stamp represented as UTC date and time into the supplied character buffer. ..."},"597":{y:0,u:"../Content/Topics/CAPLFunctions/MOST/Functions/CAPLfunctionMOSTGetShutdownFlag.htm",l:-1,t:"mostGetShutdownFlag",i:3.22962801505533E-05,a:"CAPL Functions  »  MOST  » mostGetShutdownFlag mostGetShutdownFlag   Function Syntax  long mostGetShutdownFlag(long channel); Description Returns the current state of the Shutdown flag. Parameters Return Values Example — Availability  "},"598":{y:0,u:"../Content/Topics/CANoeCANalyzer/LIN/LINSlaveConformanceTest/LINSCTIUTSettings1x.htm",l:-1,t:"IUT Settings LIN 1.x",i:3.12210947947779E-05,a:"LIN Slave Conformance Test   » IUT Settings LIN 1.x IUT Settings LIN 1.x Test Setup for Test Modules | Slave Conformance Test Module| Configuration...|IUT Settings... IUT settings not specified in the database can be configured here. Common Settings Supports interbyte \u003e= 1 bit This check box should ..."},"599":{y:0,u:"../Content/Topics/CAPLFunctions/SmartCharging/Functions/CAPLfunctionSCCCreateWeldingDetectionReqIso.htm",l:-1,t:"SCC_CreateWeldingDetectionReq_ISO",i:6.24395493115898E-05,a:"CAPL Functions  »  Smart Charging  »  SCC Modeling Libraries (Simulation Setup)  »  V2G Test Functions  »  Shared Functions  » SCC_CreateWeldingDetectionReq_ISO SCC_CreateWeldingDetectionReq_ISO   Function Syntax long SCC_CreateWeldingDetectionReq_ISO \n( byte SessionID[], byte StatusFlags[], \nchar ..."},"600":{y:0,u:"../Content/Topics/CANoeCANalyzer/Interfaces/IOPiggy/IOPiggy.htm",l:-1,t:"IOpiggy",i:0.000361955589328605,a:"Connecting to External Hardware  » IOpiggy IOpiggy    "},"601":{y:0,u:"../Content/Topics/CAPLFunctions/J1939/GBT27930InteractionLayer/Functions/CAPLfunctionGBT27930ILBlockTxMessage.htm",l:-1,t:"GBT27930IL_BlockTxMessage",i:0.000318892216839779,a:"CAPL Functions  »  J1939  »  GB/T 27930 IL  » GBT27930IL_BlockTxMessage GBT27930IL_BlockTxMessage   Function Syntax long GBT27930IL_BlockTxMessage(dword pgn, dword destinationAddress, qword filterMask, qword filterValue); // form 1 long GBT27930IL_BlockTxMessage(dbNode node, dword pgn, dword ..."},"602":{y:0,u:"../Content/Topics/Shared/SystemVariables/SysVarConfigNameDisplay.htm",l:-1,t:"Name Display (System Variable)",i:0.00021218320965709,a:" CANoe  » … »  System Variables  » Configuration Name Display Ribbon :  Environment Tab | System Variables |Name Display On this page, you can specify how much path information of  user-defined system variables and struct definitions is to be displayed. So that changes can be made on the Name ..."},"603":{y:0,u:"../Content/Topics/CAPLFunctions/Test/Functions/CAPLfunctionTestWaitScopeGetAnalysedBitSegments.htm",l:-1,t:"testWaitScopeGetAnalysedBitSegments",i:0.000145393446719421,a:"CAPL Functions  »  Scope  » testWaitScopeGetAnalysedBitSegments testWaitScopeGetAnalysedBitSegments   Function Syntax long testWaitScopeGetAnalysedBitSegments(long bitNumber, ScopeAnalyseBitSegmentData segmentData, dword noOfSegments);  Description Request the analysis data for a single bit. The ..."},"604":{y:0,u:"../Content/Topics/CAPLFunctions/Test/Functions/CAPLfunctionTestAddConstraint.htm",l:-1,t:"TestAddConstraint",i:8.20800703480368E-05,a:"CAPL Functions  »  Test Feature Set  » TestAddConstraint TestAddConstraint   Function Syntax long TestAddConstraint (dword aAuxHandle); long TestAddConstraint (dword aAuxHandle, long aBehavior); long TestAddConstraint (char aEventText[]); long TestAddConstraint (char aEventText[], long aBehavior); ..."},"605":{y:0,u:"../Content/Topics/CAPLFunctions/J1939/J1939InteractionLayer/Functions/CAPLfunctionJ1939ILOnChangedState.htm",l:-1,t:"J1939ILOnChangedState",i:3.03431427771281E-05,a:"CAPL Functions  »  J1939  »  J1939 IL  » J1939ILOnChangedState J1939ILOnChangedState (Callback)   Function Syntax void J1939ILOnChangedState( long state ) Description This callback function is called from the J1939 IL if it has changed its  state . Parameters Return Values — Example Availability  "},"606":{y:0,u:"../Content/Topics/CAPLFunctions/Media/Properties/CAPLfunctionMpeg4SampleDescription.htm",l:-1,t:"Mpeg4SampleDescription",i:3.21571136471415E-05,a:"CAPL Functions  »  Media API  »  Properties  » Mpeg4SampleDescription Mpeg4SampleDescription   Property Mpeg4SampleDescription Description Contains the sample description box for an MP4 or 3GP file. Data Type byte[] Remarks The sample description box describes the encoding used for a stream in the ..."},"607":{y:0,u:"../Content/Topics/CANoeCANalyzer/J1939/blocks/gnsssimulator/settings/gsSettingsModel.htm",l:-1,t:" Model",i:0.000211907469545088,a:"J1939  »  GNSS Simulator  »  Configuration  »  Model  Model   In the list Model \n you can choose between different models that can be used to  generate \n GNSS data . Possible Models File Line Rectangle Meander  "},"608":{y:0,u:"../Content/Topics/CANoeCANalyzer/FlexRay/CAPL_Functions/FlexRay_CAPL_Sending_FlexRay-Frames.htm",l:-1,t:"Sending FlexRay Frames",i:2.71736181718196E-05,a:"FlexRay  »  Exemplary Usage of FlexRay Functions in CAPL  » \n Sending FlexRay Frames Sending FlexRay Frames   It is possible to send FlexRay frames in the current version using CAPL \n functions and with the FlexRay Frame Panel . There are the following functions in CAPL: FRSetSendFrame This function ..."},"609":{y:0,u:"../Content/Topics/CAPLFunctions/ISO11783/ISOInteractionLayer/Functions/CAPLfunctionIso11783ILtimUnassignFunction.htm",l:-1,t:"Iso11783IL_TIMUnassignFunction",i:3.67775937289007E-05,a:"CAPL Functions  »  ISO11783   »  ISO11783 Interaction Layer   » Iso11783IL_TIMUnassignFunction Iso11783IL_TIMUnassignFunction   Function Syntax long Iso11783IL_TIMUnassignFunction(byte functionId); // form 1 long Iso11783IL_TIMUnassignFunction(byte functionId, dword options); // form 2 long ..."},"610":{y:0,u:"../Content/Topics/SampConf/ISO11783/CANoe/ISO11783SystemDemo/Functions/PanelTractorECU.htm",l:-1,t:"Tractor ECU",i:5.36898815854291E-05,a:"Sample Configurations  »  ISO11783  »  ISO11783SystemDemo  »  Desktop \u0027Simulation\u0027  » Tractor ECU Tractor ECU   Panel with a Class 2 Tractor ECU with front mounted implement support and navigational message support. On measurement start the key switch is enabled by default and the engine is running. ..."},"611":{y:0,u:"../Content/Topics/CAPLFunctions/Test/Functions/CAPLfunctionTestEnableUpdateBit.htm",l:-1,t:"TestEnableUpdateBit",i:7.55219094866171E-05,a:"CAPL Functions  »  Test Feature Set  » TestEnableUpdateBit TestEnableUpdateBit   Function Syntax long TestEnableUpdateBit (dbSignal aSignal); Description Re-enables the standard behavior of the update bit, after it has been disabled with  TestDisableUpdateBit . This function influences a simulation ..."},"612":{y:0,u:"../Content/Topics/CAPLFunctions/ISO11783/ISONodeLayer/Functions/CAPLfunctionIso11783AppAddrClaimed.htm",l:-1,t:"Iso11783AppAddrClaimed",i:4.89887579938959E-05,a:"CAPL Functions  »  ISO11783  »  ISO11783 Node Layer   » Iso11783AppAddrClaimed Iso11783AppAddrClaimed (Callback)   Function Syntax dword Iso11783AppAddrClaimed( long ecuHandle ); Description Indicates that Address Claiming was performed successfully, which means that the control device is permitted ..."},"613":{y:0,u:"../Content/Topics/CLibraryAPI/Functions/CAPLfunctioncclSomeIPSubscribeEventGroup.htm",l:-1,t:"cclSomeIPSubscribeEventGroup",i:3.86360090043396E-05,a:" CANoe  »  C Library API  »  Functions  » cclSomeIPSubscribeEventGroup cclSomeIPSubscribeEventGroup   Function Syntax int32_t cclSomeIPSubscribeEventGroup(cclSomeIPConsumedEventGroupID consumedEventGroupID); Description Subscribes a consumer side service event group port for an event group. ..."},"614":{y:0,u:"../Content/Topics/SampConf/ISO11783/CANoe/MoreExamples/ExtendedTransportProtocol/ExtendedTransportProtocol_CN.htm",l:-1,t:"Extended Transport Protocol",i:4.1346435834165E-05,a:"Sample Configurations  »  ISO11783  » Extended Transport Protocol Extended Transport Protocol   This configuration demonstrates the Extended Transport Protocol. Introduction After measurement start the desktop Measurement is activated and the Working Set Master sends its Object Pool to the Virtual ..."},"615":{y:0,u:"../Content/Topics/CAPLFunctions/CANopen/NodeLayerTFS/Functions/CAPLfunctionCoTfsLssWaitForConfNodeIdReq.htm",l:-1,t:"coTfsLssWaitForConfigureNodeIdRequest",i:1.95469190140927E-05,a:"CAPL Functions  »  CANopen  »  Test Feature Set Node Layer  » coTfsLssWaitForConfigureNodeIdRequest coTfsLssWaitForConfigureNodeIdRequest (Level 2)   Function Syntax long coTfsLssWaitForConfigureNodeIdRequest( byte[] pNID ); Description The function waits for the configure LSS node id request. ..."},"616":{y:0,u:"../Content/Topics/CANoeCANalyzer/VTSystem/VTSystemUsingInNET.htm",l:-1,t:"Usage in .NET (VT System)",i:0.000113523197317912,a:"VT System  » Usage in .NET Usage in .NET   In CANoe 7.5 SP2 and higher, the complete scope of the VT System can be used in .NET test cases. In so doing, the modules and channels of the system can be addressed using their names, which enables simple creation of abstract tests. Access to Module and ..."},"617":{y:0,u:"../Content/Topics/CAPLFunctions/Media/Properties/CAPLfunctionAudioValidBitsPerSample.htm",l:-1,t:"AudioValidBitsPerSample",i:4.50774889820005E-05,a:"CAPL Functions  »  Media API  »  Properties  » AudioValidBitsPerSample AudioValidBitsPerSample   Property AudioValidBitsPerSample Description Number of valid bits of audio data in each audio sample. Data Type dword Remarks The AudioValidBitsPerSample property is used for audio formats that contain ..."},"618":{y:0,u:"../Content/Topics/CANoeCANalyzer/Ethernet/Protocols/ProtocolSVF.htm",l:-1,t:"SDI Video Format (SVF)",i:2.14048768659637E-05,a:"Ethernet  »  Protocol Overview  » SDI Video Format (SVF) SDI Video Format (SVF)   Protocol Information  [▲ back] The SDI Video Format (SVF) is designated to carry direct mappings of the commonly used SDI (Serial Data Interface) data streams. It is a primary objective of the SVF to allow equipment ..."},"619":{y:0,u:"../Content/Topics/Shared/CAPL/TCPIPAPI/SocketBasedCommunication.htm",l:-1,t:"Socket based Communication",i:3.45387675347267E-05,a:"Ethernet  »  TCP/IP API  » Socket based Communication Socket based Communication   Sockets can be used to build an end-to-end communication. An end is referred to as a Server Socket. It waits for incoming connections. The other end is referred to as the Client Socket. It initiates communication and ..."},"620":{y:0,u:"../Content/Topics/CAPLFunctions/VTSystem/Functions/CAPLfunctionVTSSetMeasurementMode.htm",l:-1,t:"SetMeasurementMode",i:7.75917805795791E-05,a:"CAPL Functions  »  VT System  » SetMeasurementMode SetMeasurementMode   Method  Syntax long SysVarNamespace.SetMeasurementMode (eVTSMeasurementMode Mode); // VT1004/VT1104 long SysVarNamespace.SetMeasurementMode (eVTS2816MeasurementMode Mode); // VT2816 Description Controls the internal measuring ..."},"621":{y:0,u:"../Content/Topics/CAPLFunctions/Test/Functions/CAPLfunctionTestValidateDiagAuthGeneric.htm",l:-1,t:"testValidateDiagAuthGeneric, testValidateDiagAuth",i:6.61285025228123E-05,a:"CAPL Functions  »  Test Feature Set  » testValidateDiagAuthGeneric, testValidateDiagAuth testValidateDiagAuthGeneric, testValidateDiagAuth   Function Syntax long testValidateDiagAuthGeneric(\n\n  const char ecuQualifier, const char genericString); // form 1 long testValidateDiagAuth(\n\n  const char ..."},});