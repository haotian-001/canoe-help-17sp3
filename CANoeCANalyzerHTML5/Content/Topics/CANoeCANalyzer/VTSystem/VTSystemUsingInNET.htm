<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en-us" xml:lang="en-us" class="" data-mc-search-type="Stem" data-mc-help-system-file-name="CANoeCANalyzer.xml" data-mc-path-to-help-system="../../../../" data-mc-conditions="vConditions.CANalyzerExclude" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic" data-mc-preload-images="false" data-mc-in-preview-mode="false">
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta charset="utf-8" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
        <meta name="msapplication-config" content="../../../../Skins/Favicons/browserconfig.xml" />
        <link rel="apple-touch-icon" sizes="180x180" href="../../../../Skins/Favicons/apple-touch-icon.png" />
        <link rel="shortcut icon" href="../../../../Skins/Favicons/favicon-32x32.png" />
        <link rel="icon" sizes="96x96" href="../../../../Skins/Favicons/favicon-96x96.png" />
        <link rel="icon" sizes="32x32" href="../../../../Skins/Favicons/favicon-32x32.png" />
        <link rel="icon" sizes="16x16" href="../../../../Skins/Favicons/favicon-16x16.png" /><title>Usage in .NET (VT System)</title>
        <link href="../../../../Skins/Default/Stylesheets/Slideshow.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../Skins/Default/Stylesheets/Components/Styles.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../Skins/Default/Stylesheets/Components/Tablet.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../Skins/Default/Stylesheets/Components/Mobile.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../Skins/Default/Stylesheets/Components/Print.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../Resources/Stylesheets/vTableMasterPageHeader.css" rel="stylesheet" data-mc-stylesheet-type="table" />
        <link href="../../../Resources/Stylesheets/vStylesheet.css" rel="stylesheet" type="text/css" />
        <style>/*&lt;meta /&gt;*/

.button.expand-all-button
{
	-pie-background: linear-gradient(#ffffff, #ffffff);
}

.button.remove-highlight-button
{
	-pie-background: linear-gradient(#ffffff, #ffffff);
}

.button.collapse-all-button
{
	-pie-background: linear-gradient(#ffffff, #ffffff);
}

.needs-pie
{
	behavior: url('../../../../Resources/Scripts/PIE-no-motw.htc');
}

</style>
        <link href="../../../Resources/Stylesheets/vTable.css" rel="stylesheet" data-mc-stylesheet-type="table" />
        <link href="../../../Resources/Stylesheets/vTableSymbol.css" rel="stylesheet" data-mc-stylesheet-type="table" />
        <link rel="apple-touch-icon" sizes="180x180" href="../../../../Skins/Favicons/apple-touch-icon.png" />
        <link rel="shortcut icon" href="../../../../Skins/Favicons/favicon-32x32.png" />
        <link rel="icon" sizes="96x96" href="../../../../Skins/Favicons/favicon-96x96.png" />
        <link rel="icon" sizes="32x32" href="../../../../Skins/Favicons/favicon-32x32.png" />
        <link rel="icon" sizes="16x16" href="../../../../Skins/Favicons/favicon-16x16.png" />
        <script src="../../../../Resources/Scripts/jquery.min.js" type="text/javascript">
        </script>
        <script src="../../../../Resources/Scripts/purify.min.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/require.min.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/require.config.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/foundation.min.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/plugins.min.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapGlobal.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapDom.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapUtilities.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapXhr.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapTextEffects.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapSlideshow.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapMessageBus.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapMessageBus.CrossFrame.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapDefault.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapMediaQueries.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapAccessibility.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapHelpSystem.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapAliasFile.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapTopicFeedback.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapFeedbackHelper.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapSkinHelper.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapToc.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapToc.Breadcrumbs.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapToc.MiniToc.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapToc.SideMenu.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapIndex.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapGlossary.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapParser.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapSearch.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapNavigateTopics.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapLms.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapELearning.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapTopic.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapFeedback.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapMicroContentComponent.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapSearchHelper.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapTopicElements.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapTriPane.js" type="text/javascript" defer="defer">
        </script>
        <script type="text/jscript" src="../../../Resources/vScripts/SyntaxHighlighting.js">
        </script>
        <script type="text/jscript" src="../../../Resources/vScripts/TabSwitch.js">
        </script>
        <script type="text/javascript" src="../../../Resources/vScripts/Vector.js">
        </script>
    </head>
    <body>
        <p class="MCWebHelpFramesetLink MCWebHelpFramesetLinkTop"><a href="../../../../CANoeCANalyzer.htm#Topics/CANoeCANalyzer/VTSystem/VTSystemUsingInNET.htm">Open topic with navigation</a>
        </p>
        <div class="Body">
            <div role="main" id="mc-main-content">
                <div>
                    <p class="StructurePath"><a href="VTSystem.htm" class="StructurePath">VT System</a> Â» Usage in .NET</p>
                    <h1>Usage in .NET</h1>
                    <p class="MenuPath">&#160;</p>
                    <p class="AutoSearchFilterConcepts"><a name="aanchor7073"></a>
                        <MadCap:concept term="SFCore" />
                    </p>
                    <p class="IndexConcept"><a name="kanchor5368"></a>
                    </p>
                </div>
                <p>In <span class="Product">CANoe</span> 7.5 SP2 and higher, the complete scope of the <span class="Product">VT System</span> can be used in .NET test cases. In so doing, the modules and channels of the system can be addressed using their names, which enables simple creation of abstract tests.</p>
                <div>
                    <h2 class="SectionSub">Access to Module and Channels</h2>
                    <p>The <span class="bold">IVTSystem</span> interface is used as the interface for accessing the <span class="Product">VT System</span>. This interface is defined in the <span class="SourceCode">Vector.CANoe.VTS.DLL</span> assembly, which is added automatically as a reference to every new .NET test module.</p>
                    <p>At the start of a test module, an object that implements the IVTSystem interface can be created. Access to the <span class="Product">VT System</span> via <span class="SourceCode">VTSystem.Instance</span> is also possible, but creating of the object requires a more transparent source code.</p>
                    <div>
                        <table style="width: 100%;mc-table-style: url('../../../Resources/Stylesheets/vTableSymbol.css');" class="TableStyle-vTableSymbol" cellspacing="0">
                            <col class="TableStyle-vTableSymbol-Column-Column1" />
                            <col class="TableStyle-vTableSymbol-Column-Column2" />
                            <tbody>
                                <tr>
                                    <td class="TableStyle-vTableSymbol-BodyB-Column1-">
                                        <p class="Table">
                                            <img src="../../../Resources/vImages/vExample.png" style="width: 48px;height: 45px;" title="Example" alt="Example" />
                                        </p>
                                    </td>
                                    <td class="TableStyle-vTableSymbol-BodyA-Column2-">
                                        <p class="TableSymbolHead">Example</p>
                                        <p class="TableSourceCode"><span class="blue">// Get the VTSystem instance</span>
                                            <br />IVTSystem vts = VTSystem.Instance;</p>
                                    </td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                    <p>The object enables access to the modules and their channels in two ways:</p>
                    <ul>
                        <li>
                            <p class="TableBold">Access via the module or channel name</p>
                            <p class="Table">This approach uses the <span class="SourceCode">GetModule</span> and <span class="SourceCode">GetChannel</span> methods. The name assigned for the module or channel in <span class="Product">CANoe</span> is transferred as the parameter.</p>
                            <div>
                                <table style="width: 100%;mc-table-style: url('../../../Resources/Stylesheets/vTableSymbol.css');" class="TableStyle-vTableSymbol" cellspacing="0">
                                    <col class="TableStyle-vTableSymbol-Column-Column1" />
                                    <col class="TableStyle-vTableSymbol-Column-Column2" />
                                    <tbody>
                                        <tr>
                                            <td class="TableStyle-vTableSymbol-BodyB-Column1-">
                                                <p class="Table">
                                                    <img src="../../../Resources/vImages/vExample.png" style="width: 48px;height: 45px;" title="Example" alt="Example" />
                                                </p>
                                            </td>
                                            <td class="TableStyle-vTableSymbol-BodyA-Column2-">
                                                <p class="TableSymbolHead">Example</p>
                                                <p class="TableSourceCode"><span class="blue">// Get channel 1 of a VT1004 module</span>
                                                    <br />IVT1004Channel vt1004_Channel1 = vts.GetChannel("VT1004_Ch1") as IVT1004Channel;</p>
                                                <p class="TableSourceCode"><span class="blue">// Get the VT7001 module called "Power"</span>
                                                    <br />IVT7001 vt7001 = vts.GetModule("Power") as IVT7001;</p>
                                            </td>
                                        </tr>
                                    </tbody>
                                </table>
                            </div>
                            <p class="Table">The interfaces thus obtained are derived from the general <span class="bold">IVTModule</span> or <span class="bold">IVTChannel</span> interfaces. In order to be able to access module- and channel-specific methods and properties these must still be converted as shown in the example above.</p>
                            <p>With the <span class="bold">ModuleNames</span> and <span class="bold">ChannelNames</span> properties of the <span class="Product">VT System</span> object, it is possible to query lists containing the names of all available modules or channels.</p>
                        </li>
                        <li>
                            <p class="TableBold">Access via lists</p>
                            <p class="Table">The second option for accessing the modules and channels of the <span class="Product">VT System</span> involves the <span class="bold">Modules</span> and <span class="bold">Channels</span> properties of the <span class="Product">VT System</span> object. These return lists of all available modules or channels.</p>
                            <div>
                                <table style="width: 100%;mc-table-style: url('../../../Resources/Stylesheets/vTableSymbol.css');" class="TableStyle-vTableSymbol" cellspacing="0">
                                    <col class="TableStyle-vTableSymbol-Column-Column1" />
                                    <col class="TableStyle-vTableSymbol-Column-Column2" />
                                    <tbody>
                                        <tr>
                                            <td class="TableStyle-vTableSymbol-BodyB-Column1-">
                                                <p class="Table">
                                                    <img src="../../../Resources/vImages/vExample.png" style="width: 48px;height: 45px;" title="Example" alt="Example" />
                                                </p>
                                            </td>
                                            <td class="TableStyle-vTableSymbol-BodyA-Column2-">
                                                <p class="TableSymbolHead">Example</p>
                                                <p class="TableSourceCode"><span class="blue">// Iterate over all VT2516 modules in the VT rack</span>
                                                    <br />foreach (IVTModule module in vts.Modules)<br />{<br />&#160;&#160;if (module is IVT2516)<br />&#160;&#160;{<br />&#160;&#160;&#160;&#160;IVT2516 vt2516 = module as IVT2516;<br />&#160;&#160;&#160;&#160;<span class="blue">// ToDo: Do something with the module</span><br />&#160;&#160;}<br />}</p>
                                            </td>
                                        </tr>
                                    </tbody>
                                </table>
                            </div>
                            <p>The modules themselves also have a list of all their channels. If a module object was already created, its channels can thus be easily accessed. Moreover, every channel has the <span class="bold">ParentModule</span> property, which can be used to query the module to which the channel is assigned.</p>
                        </li>
                    </ul>
                </div>
                <div>
                    <h2 class="SectionSub">Overview of the available interfaces</h2>
                    <p>As can be seen in the code examples above, various interfaces are available for accessing the modules and channels of the <span class="Product">VT System</span>. These differ in their degree of abstraction so that type conversions (e.g., with the <span class="bold">as</span> operator) are necessary in order to access special properties and methods.</p>
                    <p>The following graphic shows this interface hierarchy:</p>
                    <p>
                        <img src="../../../Resources/Images/CANoeCANalyzer/VTSystem/VTSystemNETInterfaces.png" />
                    </p>
                </div>
                <div>
                    <h2 class="SectionSub">Description of the Single Interfaces</h2>
                    <div>
                        <table style="width: 100%;margin-left: 0;margin-right: auto;mc-table-style: url('../../../Resources/Stylesheets/vTable.css');" class="TableStyle_vTable" cellspacing="0">
                            <col style="width: 185px;" />
                            <col />
                            <thead>
                                <tr>
                                    <th class="TableStyle_vTable_Head_0_0_RowSep_ColSep">
                                        <p class="TableHead">Interface</p>
                                    </th>
                                    <th class="TableStyle_vTable_Head_0_0_RowSep_ColEnd">
                                        <p class="TableHead">Short&#160;Description</p>
                                    </th>
                                </tr>
                            </thead>
                            <tbody>
                                <tr>
                                    <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                        <p class="Table">IVTModule</p>
                                    </td>
                                    <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd">
                                        <p class="Table">Basic interface from which all other module interfaces are derived. This is returned if the <span class="SourceCode">GetModule</span> method of the <span class="Product">VT System</span> object is called.</p>
                                    </td>
                                </tr>
                                <tr>
                                    <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                        <p class="Table">IVT1004</p>
                                    </td>
                                    <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd">
                                        <p class="Table">Interface for modules of type <span class="Product">VT1004</span>. This interface provides all <span class="Product">VT1004</span>-specific methods and properties.</p>
                                    </td>
                                </tr>
                                <tr>
                                    <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                        <p class="Table">IVT2004</p>
                                    </td>
                                    <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd">
                                        <p class="Table">Interface for modules of type <span class="Product">VT2004</span>. This interface provides all <span class="Product">VT2004</span>-specific methods and properties.</p>
                                    </td>
                                </tr>
                                <tr>
                                    <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                        <p class="Table">IVT2516</p>
                                    </td>
                                    <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd">
                                        <p class="Table">Interface for modules of type <span class="Product">VT2516</span>. This interface provides all <span class="Product">VT2516</span>-specific methods and properties.</p>
                                    </td>
                                </tr>
                                <tr>
                                    <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                        <p class="Table">IVT2816</p>
                                    </td>
                                    <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd">
                                        <p class="Table">Interface for modules of type <span class="Product">VT2816</span>. This interface provides all <span class="Product">VT2816</span>-specific methods and properties.</p>
                                    </td>
                                </tr>
                                <tr>
                                    <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                        <p class="Table">IVT2820</p>
                                    </td>
                                    <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd">
                                        <p class="Table">Interface for modules of type <span class="Product">VT2820</span>. This interface provides all <span class="Product">VT2820</span>-specific methods and properties.</p>
                                    </td>
                                </tr>
                                <tr>
                                    <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                        <p class="Table">IVT2848</p>
                                    </td>
                                    <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd">
                                        <p class="Table">Interface for modules of type <span class="Product">VT2848</span>. This interface provides all <span class="Product">VT2848</span>-specific methods and properties.</p>
                                    </td>
                                </tr>
                                <tr>
                                    <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                        <p class="Table">IVT6104</p>
                                    </td>
                                    <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd">
                                        <p class="Table">Interface for modules of type <span class="Product">VT6104</span>. This interface provides all <span class="Product">VT6104</span>-specific methods and properties.</p>
                                    </td>
                                </tr>
                                <tr>
                                    <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                        <p class="Table">IVT7001</p>
                                    </td>
                                    <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd">
                                        <p class="Table">Interface for modules of type <span class="Product">VT7001</span>. This interface provides all <span class="Product">VT7001</span>-specific methods and properties.</p>
                                    </td>
                                </tr>
                                <tr>
                                    <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                        <p class="Table">IVT7900</p>
                                    </td>
                                    <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd">
                                        <p class="Table">Interface for modules of type <span class="Product">VT7900</span>. This interface provides all <span class="Product">VT7900</span>-specific methods and properties.</p>
                                    </td>
                                </tr>
                                <tr>
                                    <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                        <p class="Table">IVTChannel</p>
                                    </td>
                                    <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd">
                                        <p class="Table">Basic interface from which all other channel interfaces are derived. This is returned if the <span class="SourceCode">GetChannel</span> method of the <span class="Product">VT System</span> object is called.</p>
                                    </td>
                                </tr>
                                <tr>
                                    <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                        <p class="Table">IVT1004Channel</p>
                                    </td>
                                    <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd">
                                        <p class="Table">Interface for channels of a <span class="Product">VT1004</span> module. This interface provides all specific methods and properties for this type of channel.</p>
                                    </td>
                                </tr>
                                <tr>
                                    <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                        <p class="Table">IVT2004Channel</p>
                                    </td>
                                    <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd">
                                        <p class="Table">Interface for channels of a <span class="Product">VT2004</span> module. This interface provides all specific methods and properties for this type of channel.</p>
                                    </td>
                                </tr>
                                <tr>
                                    <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                        <p class="Table">IVT2004PotiChannel</p>
                                    </td>
                                    <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd">
                                        <p class="Table">The first channel of a <span class="Product">VT2004</span> implements this interface. Thus, it is possible to access the system variable <span class="bold">Poti</span> on this channel, but not on the remaining channels.</p>
                                    </td>
                                </tr>
                                <tr>
                                    <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                        <p class="Table">IVT2516Channel</p>
                                    </td>
                                    <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd">
                                        <p class="Table">Interface for channels of a <span class="Product">VT2516</span> module. This interface provides all specific methods and properties for this type of channel.</p>
                                    </td>
                                </tr>
                                <tr>
                                    <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                        <p class="Table">IVT2816MeasurementChannel</p>
                                    </td>
                                    <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd">
                                        <p class="Table">Interface for measurement channels of a <span class="Product">VT2816</span> module. This interface provides all specific methods and properties for this type of channel.</p>
                                    </td>
                                </tr>
                                <tr>
                                    <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                        <p class="Table">IVT2816StimChannel</p>
                                    </td>
                                    <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd">
                                        <p class="Table">Interface for stimulation channels of a <span class="Product">VT2816</span> module. This interface provides all specific methods and properties for this type of channel.</p>
                                    </td>
                                </tr>
                                <tr>
                                    <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                        <p class="Table">IVT2816WFStimChannel</p>
                                    </td>
                                    <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd">
                                        <p class="Table">This interface provides additional functionality to allow for waveform stimulation.</p>
                                    </td>
                                </tr>
                                <tr>
                                    <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                        <p class="Table">IVT2820Channel</p>
                                    </td>
                                    <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd">
                                        <p class="Table">Interface for stimulation channels of a <span class="Product">VT2820</span> module. This interface provides all specific methods and properties for this type of channel.</p>
                                    </td>
                                </tr>
                                <tr>
                                    <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                        <p class="Table">IVT2820BusBarChannel</p>
                                    </td>
                                    <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd">
                                        <p class="Table">This interface provides access to the two additional relays on this type of channels.</p>
                                    </td>
                                </tr>
                                <tr>
                                    <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                        <p class="Table">IVT2848Channel</p>
                                    </td>
                                    <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd">
                                        <p class="Table">Interface for channels of a <span class="Product">VT2848</span> module. This interface provides all specific methods and properties for this type of channel.</p>
                                    </td>
                                </tr>
                                <tr>
                                    <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                        <p class="Table">IVT2848PWMMeasurementChannel</p>
                                    </td>
                                    <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd">
                                        <p class="Table">This interface provides additional properties and methods for PWM measurement.</p>
                                    </td>
                                </tr>
                                <tr>
                                    <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                        <p class="Table">IVT2848PWMStimChannel</p>
                                    </td>
                                    <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd">
                                        <p class="Table">This interface provides additional properties and methods for PWM stimulation.</p>
                                    </td>
                                </tr>
                                <tr>
                                    <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                        <p class="Table">IVT6104Channel</p>
                                    </td>
                                    <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd">
                                        <p class="Table">Interface for channels of a <span class="Product">VT6104</span> module. This interface provides all specific methods and properties for this type of channel.</p>
                                    </td>
                                </tr>
                                <tr>
                                    <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                        <p class="Table">IVT7001Channel</p>
                                    </td>
                                    <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd">
                                        <p class="Table">Interface for channels of a <span class="Product">VT7001</span> module. This interface provides all specific methods and properties for this type of channel.</p>
                                    </td>
                                </tr>
                                <tr>
                                    <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                        <p class="Table">IVT7001Supply</p>
                                    </td>
                                    <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd">
                                        <p class="Table">Interface for voltage supplies of a <span class="Product">VT7001</span> module. This interface provides all methods and properties that all three voltage supplies have in common.</p>
                                    </td>
                                </tr>
                                <tr>
                                    <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                        <p class="Table">IVT7001SupplyInternal</p>
                                    </td>
                                    <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd">
                                        <p class="Table">This interface describes the internal voltage supply of a <span class="Product">VT7001</span> module.</p>
                                    </td>
                                </tr>
                                <tr>
                                    <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                        <p class="Table">IVT7001SupplyExternal</p>
                                    </td>
                                    <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd">
                                        <p class="Table">This interface describes the external voltage supply of a <span class="Product">VT7001</span> module. Among other things it provides an interface for serial communication.</p>
                                    </td>
                                </tr>
                                <tr>
                                    <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                        <p class="Table">IVT7001Supply1</p>
                                    </td>
                                    <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd">
                                        <p class="Table">This interface describes the voltage supply 1 of a <span class="Product">VT7001</span> module.</p>
                                    </td>
                                </tr>
                                <tr>
                                    <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                        <p class="Table">IVT7001Supply2</p>
                                    </td>
                                    <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd">
                                        <p class="Table">This interface describes the voltage supply 2 of a <span class="Product">VT7001</span> module. In addition to the interface of the external voltage supply, it contains the system variable <span class="bold">ReversePolarity</span>.</p>
                                    </td>
                                </tr>
                                <tr>
                                    <td class="TableStyle_vTable_Body_0_0_RowEnd_ColSep">
                                        <p class="Table">IVT7900Channel</p>
                                    </td>
                                    <td class="TableStyle_vTable_Body_0_0_RowEnd_ColEnd">
                                        <p class="Table">Interface for channels of a <span class="Product">VT7900</span> module. This interface provides all specific methods and properties for this type of channel.</p>
                                    </td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                </div>
                <div>
                    <h2 class="SectionSub">Use of system variables of VT System</h2>
                    <p>The system variables of the <span class="Product">VT System</span> can also be accessed by means of the object hierarchy starting from the VT system object. The following describes how to read and write variables and how to query the availability of variables.</p>
                </div>
                <div>
                    <h2 class="SectionSub">Access to the values of variables</h2>
                    <p>The system variables of the <span class="Product">VT System</span> (e.g., <span class="bold">Cur</span>, <span class="bold">RelayBusBar</span>, <span class="bold">Voltage</span>, etc.) are implemented as properties of the various module or channel objects. Because some of the system variables also have properties (e.g., <span class="bold">CycleTime</span> and <span class="bold">IntegrationTime</span>), they are not simple data type types but rather are implemented as separate classes. A direct assignment of values is therefore not possible. Instead the <span class="bold">Value</span> property is used in order to access the values of variables.</p>
                    <div>
                        <table style="width: 100%;mc-table-style: url('../../../Resources/Stylesheets/vTableSymbol.css');" class="TableStyle-vTableSymbol" cellspacing="0">
                            <col class="TableStyle-vTableSymbol-Column-Column1" />
                            <col class="TableStyle-vTableSymbol-Column-Column2" />
                            <tbody>
                                <tr>
                                    <td class="TableStyle-vTableSymbol-BodyB-Column1-">
                                        <p class="Table">
                                            <img src="../../../Resources/vImages/vExample.png" style="width: 48px;height: 45px;" title="Example" alt="Example" />
                                        </p>
                                    </td>
                                    <td class="TableStyle-vTableSymbol-BodyA-Column2-">
                                        <p class="TableSymbolHead">Example</p>
                                        <p class="TableSourceCode"><span class="blue">// Close the relay</span>
                                            <br />vt2004Ch1.RelayBusBar2A.Value = true;</p>
                                        <p class="TableSourceCode"><span class="blue">// Set the high and low PWM voltage</span>
                                            <br />vt2516Ch3.PWMVoltageHigh.Value = 5.0;<br />vt2516Ch3.PWMVoltageLow.Value = 0.0;</p>
                                    </td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                </div>
                <div>
                    <h2 class="SectionSub">Query of availability of values</h2>
                    <p>Some of the system variables of the <span class="Product">VT System</span> can be enabled or disabled in <span class="Product">CANoe</span>. In order to determine which variables are available during the test runtime, the property <span class="bold">IsAvailable</span> can be used.</p>
                    <div>
                        <table style="width: 100%;mc-table-style: url('../../../Resources/Stylesheets/vTableSymbol.css');" class="TableStyle-vTableSymbol" cellspacing="0">
                            <col class="TableStyle-vTableSymbol-Column-Column1" />
                            <col class="TableStyle-vTableSymbol-Column-Column2" />
                            <tbody>
                                <tr>
                                    <td class="TableStyle-vTableSymbol-BodyB-Column1-">
                                        <p class="Table">
                                            <img src="../../../Resources/vImages/vExample.png" style="width: 48px;height: 45px;" title="Example" alt="Example" />
                                        </p>
                                    </td>
                                    <td class="TableStyle-vTableSymbol-BodyA-Column2-">
                                        <p class="TableSymbolHead">Example</p>
                                        <p class="SourceCode">if (vt1004Ch4.Avg.IsAvailable)<br />{<br />&#160;&#160;<span class="blue">// ToDo: Use value</span><br />}</p>
                                    </td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                </div>
                <div>
                    <h2 class="SectionSub">Additional information and code examples</h2>
                    <p>In the documentation of the <span class="bold">Vector.CANoe .NET API</span>, all available interfaces are described in detail. In addition, you will find numerous code examples there that illustrate the use of frequently used functions of the <span class="Product">VT System</span>.</p>
                </div>
                <p class="LinkList"><a href="VTSystemSetup.htm" class="LinkList">VT System: Setup</a>
                </p>
            </div>
        </div>
        <div class="Footer">
            <div class="FooterWhite">
                <table class="FooterWhite" style="border-collapse: collapse;margin-left: auto;margin-right: auto;">
                    <col style="width: 70px;" data-mc-conditions="vConditions.HTML5Link" />
                    <col style="width: 16px;" data-mc-conditions="vConditions.HTML5Link" />
                    <col />
                    <tbody>
                        <tr>
                            <td>
                                <div class="buttons popup-container clearfix topicToolbarProxy topicToolbarProxyFooter _Skins_HTML5TopicToolbar mc-component nocontent">
                                    <div class="button-group-container-left">
                                        <button class="button needs-pie expand-all-button" data-state1-class="expand-all-button" data-state2-class="collapse-all-button" data-state2-title="Collapse all" title="Expand all" data-state1-title="Expand all">
                                            <div>
                                                <div role="img" class="button-icon-wrapper" aria-label="Expand all">
                                                    <div class="button-icon"> </div>
                                                </div>
                                            </div>
                                        </button>
                                        <button class="button needs-pie remove-highlight-button" title="Remove Highlights">
                                            <div>
                                                <div role="img" class="button-icon-wrapper">
                                                    <div class="button-icon"> </div>
                                                </div>
                                            </div>
                                        </button>
                                    </div>
                                </div>
                            </td>
                            <td>
                                <p class="vec_BuildInfo"><a href="../../Shared/HowToUseOnlineHelp.htm" title="Tips for using the help" alt="Tips for using the help"><img src="../../../Resources/vImages/vBackstage/vHelpInfo.png" /></a>
                                </p>
                            </td>
                            <td>
                                <p class="vec_BuildInfo" style="text-align: right;"><span class="mc-variable Vector.BuildTime variable">2023-09-26T19:49:32</span>
                                </p>
                            </td>
                        </tr>
                    </tbody>
                </table>
            </div>
            <table style="width: 100%;border-collapse: separate;border-spacing: 3px 0px;margin-left: auto;margin-right: auto;caption-side: top;">
                <col />
                <col />
                <col />
                <col data-mc-conditions="vConditions.HTML5Link" />
                <tbody>
                    <tr>
                        <td style="background-color: #b70032;padding-left: 5pt;padding-right: 5pt;padding-top: 5pt;padding-bottom: 5pt;">
                            <p class="vec_Footer">Â©&#160;Vector Informatik GmbH</p>
                        </td>
                        <td style="background-color: #b70032;padding-left: 5pt;padding-right: 5pt;padding-top: 5pt;padding-bottom: 5pt;text-align: right;">
                            <p class="vec_FooterBold">
                                <MadCap:conditionalText data-mc-conditions="vConditions.vTESTstudioExcluded,vConditions.TestDataEditorExcluded">CANoe</MadCap:conditionalText> Version <MadCap:conditionalText data-mc-conditions="vConditions.vTESTstudioExcluded">17 SP3</MadCap:conditionalText></p>
                        </td>
                        <td style="background-color: #b70032;padding-left: 5pt;padding-right: 5pt;padding-top: 5pt;padding-bottom: 0pt;text-align: right;">
                            <p class="vec_Footer"><a href="../../Shared/ContactCopyrightLicense.htm" class="vec_Footer MCXref xref xrefvec_Footer">Contact/Copyright/License</a>
                            </p>
                        </td>
                        <td style="background-color: #b70032;padding-left: 5pt;padding-right: 5pt;padding-top: 5pt;padding-bottom: 0pt;text-align: right;">
                            <p class="vec_Footer"><a href="https://www.vector.com/int/en/company/get-info/privacy-policy/" target="_blank" class="vec_Footer">Data Privacy Notice</a>
                            </p>
                        </td>
                    </tr>
                </tbody>
            </table>
        </div>
    </body>
</html>