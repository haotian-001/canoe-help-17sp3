<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en-us" xml:lang="en-us" class="" data-mc-search-type="Stem" data-mc-help-system-file-name="CANoeCANalyzer.xml" data-mc-path-to-help-system="../../../../" data-mc-conditions="vConditions.CANalyzerExclude" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic" data-mc-preload-images="false" data-mc-in-preview-mode="false">
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta charset="utf-8" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
        <meta name="msapplication-config" content="../../../../Skins/Favicons/browserconfig.xml" />
        <link rel="apple-touch-icon" sizes="180x180" href="../../../../Skins/Favicons/apple-touch-icon.png" />
        <link rel="shortcut icon" href="../../../../Skins/Favicons/favicon-32x32.png" />
        <link rel="icon" sizes="96x96" href="../../../../Skins/Favicons/favicon-96x96.png" />
        <link rel="icon" sizes="32x32" href="../../../../Skins/Favicons/favicon-32x32.png" />
        <link rel="icon" sizes="16x16" href="../../../../Skins/Favicons/favicon-16x16.png" /><title>Trigger (VT System)</title>
        <link href="../../../../Skins/Default/Stylesheets/Slideshow.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../Skins/Default/Stylesheets/Components/Styles.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../Skins/Default/Stylesheets/Components/Tablet.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../Skins/Default/Stylesheets/Components/Mobile.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../Skins/Default/Stylesheets/Components/Print.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../Resources/Stylesheets/vTableMasterPageHeader.css" rel="stylesheet" data-mc-stylesheet-type="table" />
        <link href="../../../Resources/Stylesheets/vStylesheet.css" rel="stylesheet" type="text/css" />
        <style>/*&lt;meta /&gt;*/

.button.expand-all-button
{
	-pie-background: linear-gradient(#ffffff, #ffffff);
}

.button.remove-highlight-button
{
	-pie-background: linear-gradient(#ffffff, #ffffff);
}

.button.collapse-all-button
{
	-pie-background: linear-gradient(#ffffff, #ffffff);
}

.needs-pie
{
	behavior: url('../../../../Resources/Scripts/PIE-no-motw.htc');
}

</style>
        <link href="../../../Resources/Stylesheets/vTableSymbol.css" rel="stylesheet" data-mc-stylesheet-type="table" />
        <link rel="apple-touch-icon" sizes="180x180" href="../../../../Skins/Favicons/apple-touch-icon.png" />
        <link rel="shortcut icon" href="../../../../Skins/Favicons/favicon-32x32.png" />
        <link rel="icon" sizes="96x96" href="../../../../Skins/Favicons/favicon-96x96.png" />
        <link rel="icon" sizes="32x32" href="../../../../Skins/Favicons/favicon-32x32.png" />
        <link rel="icon" sizes="16x16" href="../../../../Skins/Favicons/favicon-16x16.png" />
        <script src="../../../../Resources/Scripts/jquery.min.js" type="text/javascript">
        </script>
        <script src="../../../../Resources/Scripts/purify.min.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/require.min.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/require.config.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/foundation.min.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/plugins.min.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapGlobal.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapDom.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapUtilities.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapXhr.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapTextEffects.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapSlideshow.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapMessageBus.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapMessageBus.CrossFrame.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapDefault.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapMediaQueries.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapAccessibility.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapHelpSystem.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapAliasFile.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapTopicFeedback.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapFeedbackHelper.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapSkinHelper.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapToc.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapToc.Breadcrumbs.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapToc.MiniToc.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapToc.SideMenu.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapIndex.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapGlossary.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapParser.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapSearch.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapNavigateTopics.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapLms.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapELearning.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapTopic.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapFeedback.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapMicroContentComponent.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapSearchHelper.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapTopicElements.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapTriPane.js" type="text/javascript" defer="defer">
        </script>
        <script type="text/jscript" src="../../../Resources/vScripts/SyntaxHighlighting.js">
        </script>
        <script type="text/jscript" src="../../../Resources/vScripts/TabSwitch.js">
        </script>
        <script type="text/javascript" src="../../../Resources/vScripts/Vector.js">
        </script>
    </head>
    <body>
        <p class="MCWebHelpFramesetLink MCWebHelpFramesetLinkTop"><a href="../../../../CANoeCANalyzer.htm#Topics/CANoeCANalyzer/VTSystem/VTSystemTrigger.htm">Open topic with navigation</a>
        </p>
        <div class="Body">
            <div role="main" id="mc-main-content">
                <div>
                    <p class="StructurePath"><a href="VTSystem.htm" class="StructurePath">VT System</a> Â» Trigger</p>
                    <h1>Trigger</h1>
                    <p class="MenuPath">&#160;</p>
                    <p class="AutoSearchFilterConcepts"><a name="aanchor1211"></a>
                        <MadCap:concept term="SFCore" />
                    </p>
                    <p class="IndexConcept"><a name="kanchor966"></a>
                    </p>
                </div>
                <p>Triggers make it possible to measure a signal with higher accuracy than is possible when using the system variables with measured values. In concrete you can get more accurate time stamps for edges and you can thus also calculate the distance between edges with higher accuracy. Triggers can be configured with manifold settings to cover a wide spectrum of applications. Every <a href="VT1004/VT1004.htm">VT1004/VT1104 module</a> provides 8 triggers.</p>
                <div>
                    <h2>Basic Configuration of the Input Channels</h2>
                    <p>Triggers are working on a digital input signal. Hence the threshold between low and high voltage levels must be set on every input channel that is to be used in combination with triggers. The value of the threshold must be selected according to the signal that is being analyzed of course. The threshold can be set e.g. using the CAPL command <a href="../../CAPLFunctions/VTSystem/Functions/CAPLfunctionVTSSetPWMThreshold.htm">SetPWMThreshold</a>.</p>
                </div>
                <div>
                    <h2>Configuration of Triggers</h2>
                    <p>For CAPL nodes and test modules you can use the functions <a href="../../CAPLFunctions/VTSystem/Functions/CAPLfunctionVTSSetTriggerParams.htm">SetTriggerParams</a> and <a href="../../CAPLFunctions/VTSystem/Functions/CAPLfunctionVTSSetTriggerParamsEx.htm">SetTriggerParamsEx</a> to configure triggers. The parameters of the function <a href="../../CAPLFunctions/VTSystem/Functions/CAPLfunctionVTSSetTriggerParams.htm">SetTriggerParams</a> are sufficient to cover simple applications like getting a time stamp for the next rising edge. It sets the input channel of the module that is used and whether the trigger detects rising or falling edges. The additional parameters of <a href="../../CAPLFunctions/VTSystem/Functions/CAPLfunctionVTSSetTriggerParamsEx.htm">SetTriggerParamsEx</a> make it possible to detect and measure more complex sequence of edges or pulses by combining multiple triggers.</p>
                </div>
                <div>
                    <h2>Activating Triggers</h2>
                    <p>A trigger must be activated explicitly before it can be used. In CAPL test modules you can use the command <a href="../../CAPLFunctions/VTSystem/Functions/CAPLfunctionVTSStartTrigger.htm">StartTrigger</a> for this purpose.</p>
                </div>
                <div>
                    <h2>Trigger System Variables</h2>
                    <p>Two system variables are assigned to each trigger. The system variable <span class="bold">Trigger1EventCount</span> shows the number of detected trigger events for trigger <span class="bold">1</span> for example. Additionally the system variable <span class="bold">Trigger1Event</span> shows the occurrence of an event and can be used to get a time stamp for the event. The event system variable is set to <span class="bold">1</span> when a trigger event occurs. After a trigger is explicitly activated using e.g. <a href="../../CAPLFunctions/VTSystem/Functions/CAPLfunctionVTSStartTrigger.htm">StartTrigger</a> this happens exactly one time without further measures however. Apart from activating the trigger anew using <a href="../../CAPLFunctions/VTSystem/Functions/CAPLfunctionVTSStartTrigger.htm">StartTrigger</a> you can configure that a trigger event of another trigger reactivates the trigger using the parameter <span class="bold">RestartTriggers</span> of function <a href="../../CAPLFunctions/VTSystem/Functions/CAPLfunctionVTSSetTriggerParamsEx.htm">SetTriggerParamsEx</a>. It is even possible that a trigger reactivates itself. Thus it is possible that every trigger event is shown by the trigger <span class="bold">Event</span> system variable in principle. However you have to consider that trigger events can still only be transferred once a millisecond. This means that trigger events that have a distance of less than 1&#160;ms can possibly not be told apart. The <span class="bold">EventCount</span> system variable is incremented continuously every time a trigger event occurs after the activation of the trigger. Unlike for the <span class="bold">Event</span> system variable reactivation is not necessary here. The event count system variable is reset to <span class="bold">0</span> when <a href="../../CAPLFunctions/VTSystem/Functions/CAPLfunctionVTSStartTrigger.htm">StartTrigger</a> is called for the trigger.</p>
                    <p>Triggers are not assigned to a particular channel but can be configured to work on each of the input channels of the same module. Hence the system variables can be found in the system variable namespace that belongs to the entire module. As is the case with all <span class="Product">VT System</span> measured values the system variables have to be enabled in the <a href="VTSystemConfiguration.htm">VT System configuration dialog</a>.</p>
                </div>
                <div>
                    <table style="width: 100%;mc-table-style: url('../../../Resources/Stylesheets/vTableSymbol.css');" class="TableStyle-vTableSymbol" cellspacing="0">
                        <col class="TableStyle-vTableSymbol-Column-Column1" />
                        <col class="TableStyle-vTableSymbol-Column-Column2" />
                        <tbody>
                            <tr>
                                <td class="TableStyle-vTableSymbol-BodyB-Column1-">
                                    <p class="Table">
                                        <img src="../../../Resources/vImages/vExample.png" style="width: 48px;height: 45px;" title="Example" alt="Example" />
                                    </p>
                                </td>
                                <td class="TableStyle-vTableSymbol-BodyA-Column2-">
                                    <div>
                                        <p class="TableSymbolHead">Example: Getting the Time Stamp of the Next Rising Edge</p>
                                        <p>In the following CAPL sample code the time stamp of the next rising edge is determined and output to the <a href="../Windows/Write/WriteWindow.htm">Write Window</a>. For this purpose only basic trigger parameters are set using the command <a href="../../CAPLFunctions/VTSystem/Functions/CAPLfunctionVTSSetTriggerParams.htm">SetTriggerParams</a> and afterwards the trigger is started. After waiting for 1&#160;s the <span class="bold">EventCount</span> system variable is checked to find out whether an edge was detected. The function <a href="../../CAPLFunctions/SystemVariables/Functions/CAPLfunctionSysGetVariableTimeNS.htm">sysGetVariableTimeNS</a> must be used to get an accurate time stamp for the trigger event.</p>
                                        <p class="SourceCode">variables<br />{<br />&#160;&#160;int64 gRiseTime = 0;<br />}<br /><br />void MainTest ()<br />{<br />&#160;&#160;GetEdgeTimestamp();<br />}<br /><br />void GetEdgeTimestamp()<br />{<br />&#160;&#160;dword trigger1EventCount&#160;= 0;<br /><br />&#160;&#160;enum eVTSTrigger trigger &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;= eVTSTrigger1;<br />&#160;&#160;enum eVTSTriggerSourceChannel sourceChannel = eVTSTriggerSourceChannel1;<br />&#160;&#160;enum eVTSTriggerEdgeType edgeType &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;= eVTSTriggerEdgeTypeRising;<br /><br />&#160;&#160;<span class="CodeComment">// set threshold for digital signals on analyzed channel to 2.5V</span><br />&#160;&#160;sysvar::VTS::Ignition1.SetPWMThreshold( 2.5);<br /><br />&#160;&#160;<span class="CodeComment">// configure trigger</span><br /><br />&#160;&#160;trigger&#160;&#160;&#160;&#160;&#160;&#160;&#160;= VTSTrigger1;<br />&#160;&#160;sourceChannel&#160;= eVTSTriggerSourceChannel1;<br />&#160;&#160;edgeType&#160;&#160;&#160;&#160;&#160;&#160;= eVTSTriggerEdgeTypeRising;&#160;&#160;<span class="CodeComment">// rising edge</span><br /><br />&#160;&#160;sysvar::VTS::IgnitionChannels.SetTriggerParams( trigger, sourceChannel, edgeType);<br /><br />&#160;&#160;TestWaitForTimeout( 10);<br /><br />&#160;&#160;<span class="CodeComment">// start trigger</span><br />&#160;&#160;sysvar::VTS::IgnitionChannels.StartTrigger( trigger);<br /><br />&#160;&#160;<span class="CodeComment">// wait some time until a edge has occured</span><br />&#160;&#160;TestWaitForTimeout( 1000);<br /><br />&#160;&#160;<span class="CodeComment">// check if edge was detected and output time stamp</span><br />&#160;&#160;trigger1EventCount = @sysvar::VTS::IgnitionChannels::Trigger1EventCount;<br /><br />&#160;&#160;if (trigger1EventCount &gt; 0)<br />&#160;&#160;{<br />&#160;&#160;&#160;&#160;Write( "Edge timestamp: %.3f Âµs", (gRiseTime/1000.0));<br />&#160;&#160;}<br />&#160;&#160;else<br />&#160;&#160;{<br />&#160;&#160;&#160;&#160;Write("No edge detected!");<br />&#160;&#160;}<br />}<br /><br />on sysvar_update sysvar::VTS::IgnitionChannels::Trigger1Event<br />{<br />&#160;&#160;<span class="CodeComment">// save time stamp of rising edge when event occurs</span><br />&#160;&#160;gRiseTime = sysGetVariableTimeNS( this);<br />}</p>
                                        <div>
                                            <p class="Bold">Extension: Cyclic Measurement</p>
                                            <p>You can configure the trigger to reactivate itself after every trigger event so that every trigger event is shown by the event system variable instead of the first one only. Set the trigger as its own reactivation trigger in a call of <a href="../../CAPLFunctions/VTSystem/Functions/CAPLfunctionVTSSetTriggerParamsEx.htm">SetTriggerParamsEx</a> to achieve this. Do this call before starting the trigger:</p>
                                            <p class="SourceCode">restartTriggers&#160;= 0x1;&#160;&#160;<span class="CodeComment">// bit 1 set: trigger 1 restarts the trigger</span><br />restartTime&#160;&#160;&#160;&#160;&#160;= 0.0;&#160;&#160;<span class="CodeComment">// trigger is restarted without delay</span><br /><br />sysvar::VTS::IgnitionChannels.SetTriggerParamsEx( trigger, 0.0, restartTime, 0, restartTriggers, 0, 0);</p>
                                        </div>
                                        <div>
                                            <p class="Bold">Measuring the Second Edge</p>
                                            <p>Instead of determining the time stamp of the first rising edge you can also get the time stamp of the second time stamp through small modifications. Set the parameter <span class="bold">ThresholdEventCount</span> to <span class="bold">1</span> using the <a href="../../CAPLFunctions/VTSystem/Functions/CAPLfunctionVTSSetTriggerParamsEx.htm">SetTriggerParamsEx</a> function:</p>
                                            <p class="SourceCode">eventCountThreshold = 1;&#160;&#160;<span class="CodeComment">// trigger only at every 2nd event</span><br /><br />sysvar::VTS::IgnitionChannels.SetTriggerParamsEx( trigger, 0.0, 0.0, 0, 0, eventCountThreshold, 0);</p>
                                            <p>The trigger fires only when the number of events is higher than the set threshold value.</p>
                                        </div>
                                        <div>
                                            <p class="Bold">Example: Measuring a Pulse</p>
                                            <p>In the following case we determine the width of a pulse between a rising and falling edge that is at least 100Âµs wide. Additionally the signal shall have a low level for 10 ms before the pulse. To achieve this we combine three triggers. The first trigger detects a low level that is constant for at least 10ms. It is used as a precondition for trigger 2 that detects the rising edge. Trigger 3 is used as precondition for the third trigger which detects the falling edge:</p>
                                            <p class="TableSourceCode"><span class="CodeComment">// configure first trigger</span>
                                                <br />
                                                <br />trigger&#160;&#160;&#160;&#160;&#160;&#160;&#160;= eVTSTrigger1;<br />sourceChannel&#160;= eVTSTriggerSourceChannel1;<br />levelType&#160;&#160;&#160;&#160;&#160;= 0;&#160;&#160;&#160;&#160;&#160;<span class="CodeComment">// low level</span><br />preTriggers&#160;&#160;&#160;= 0;&#160;&#160;&#160;&#160;&#160;<span class="CodeComment">// no other trigger as precondition</span><br />minPulseWidth&#160;= 0.01;&#160;&#160;<span class="CodeComment">// at least 10ms low level before trigger</span><br />extSettings&#160;&#160;&#160;= 1;&#160;&#160;&#160;&#160;&#160;<span class="CodeComment">// first bit set: level trigger instead of edge trigger</span><br /><br />sysvar::VTS::IgnitionChannels.SetTriggerParams( trigger, sourceChannel, levelType);<br />sysvar::VTS::IgnitionChannels.SetTriggerParamsEx( trigger, minPulseWidth, 0.0, preTriggers, 0, 0, extSettings);<br /><br /><span class="CodeComment">// configure second trigger</span><br />trigger&#160;&#160;&#160;&#160;&#160;&#160;&#160;= eVTSTrigger2;<br />sourceChannel&#160;= eVTSTriggerSourceChannel1;<br />edgeType&#160;&#160;&#160;&#160;&#160;&#160;= eVTSTriggerEdgeTypeRising;&#160;&#160;<span class="CodeComment">// rising edge</span><br />preTriggers&#160;&#160;&#160;= 1;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<span class="CodeComment">// bit 1 set: trigger 1 as precondition</span><br />minPulseWidth&#160;= 0.0001;&#160;&#160;<span class="CodeComment">// detect only pulses of at least 100Âµs width</span><br />extSettings&#160;&#160;&#160;= 0;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<span class="CodeComment">// no extended settings set</span><br /><br />sysvar::VTS::IgnitionChannels.SetTriggerParams( trigger, sourceChannel, edgeType);<br />sysvar::VTS::IgnitionChannels.SetTriggerParamsEx( trigger, minPulseWidth, 0.0, preTriggers, 0, 0, extSettings);<br /><br /><span class="CodeComment">// configure third trigger</span><br />trigger&#160;&#160;&#160;&#160;&#160;&#160;&#160;= eVTSTrigger3;<br />sourceChannel = eVTSTriggerSourceChannel1;<br />edgeType&#160;&#160;&#160;&#160;&#160;&#160;= eVTSTriggerEdgeTypeRising;&#160;&#160;<span class="CodeComment">// falling edge</span><br />preTriggers&#160;&#160;&#160;= 2;&#160;&#160;&#160;&#160;<span class="CodeComment">// bit 2 set: trigger 2 as precondition</span><br />minPulseWidth&#160;= 0.0;&#160;&#160;<span class="CodeComment">// no pulse width restriction after falling edge</span><br />extSettings&#160;&#160;&#160;= 0;&#160;&#160;&#160;&#160;<span class="CodeComment">// no extended settings set</span><br /><br />sysvar::VTS::IgnitionChannels.SetTriggerParams( trigger, sourceChannel, edgeType);<br />sysvar::VTS::IgnitionChannels.SetTriggerParamsEx( trigger, minPulseWidth, 0.0, preTriggers, 0, 0, extSettings);<br /><br />TestWaitForTimeout( 50);&#160;&#160;<span class="CodeComment">// wait some time to make sure the settings are transferred</span><br /><br /><span class="CodeComment">// start triggers</span><br />trigger = eVTSTrigger1;<br />sysvar::VTS::IgnitionChannels.StartTrigger( trigger);<br />trigger = eVTSTrigger2;<br />sysvar::VTS::IgnitionChannels.StartTrigger( trigger);<br />trigger = eVTSTrigger3;<br />sysvar::VTS::IgnitionChannels.StartTrigger( trigger);<br /><br /><span class="CodeComment">// wait some time</span><br />TestWaitForTimeout( 1000);<br /><br /><span class="CodeComment">// check if pulse was detected and output pulse width</span><br />if (@sysvar::VTS::IgnitionChannels::Trigger3EventCount &gt; 0)<br />{<br />&#160;&#160;pulseWidth = sysGetVariableTimeNS( sysvar::VTS::IgnitionChannels::Trigger3Event) - sysGetVariableTimeNS( sysvar::VTS::IgnitionChannels::Trigger2Event);<br />&#160;&#160;Write( "Pulse width: %.3f Âµs", (pulseWidth/1000.0));<br />}<br />else <br />{<br />&#160;&#160;Write("No pulse detected!");<br />}</p>
                                        </div>
                                    </div>
                                </td>
                            </tr>
                        </tbody>
                    </table>
                </div>
                <p class="LinkList"><a href="VTSystemControl/VTSControlConfigurationTrigger.htm" class="LinkList">VT System Control: Trigger Configuration</a>
                </p>
            </div>
        </div>
        <div class="Footer">
            <div class="FooterWhite">
                <table class="FooterWhite" style="border-collapse: collapse;margin-left: auto;margin-right: auto;">
                    <col style="width: 70px;" data-mc-conditions="vConditions.HTML5Link" />
                    <col style="width: 16px;" data-mc-conditions="vConditions.HTML5Link" />
                    <col />
                    <tbody>
                        <tr>
                            <td>
                                <div class="buttons popup-container clearfix topicToolbarProxy topicToolbarProxyFooter _Skins_HTML5TopicToolbar mc-component nocontent">
                                    <div class="button-group-container-left">
                                        <button class="button needs-pie expand-all-button" data-state1-class="expand-all-button" data-state2-class="collapse-all-button" data-state2-title="Collapse all" title="Expand all" data-state1-title="Expand all">
                                            <div>
                                                <div role="img" class="button-icon-wrapper" aria-label="Expand all">
                                                    <div class="button-icon"> </div>
                                                </div>
                                            </div>
                                        </button>
                                        <button class="button needs-pie remove-highlight-button" title="Remove Highlights">
                                            <div>
                                                <div role="img" class="button-icon-wrapper">
                                                    <div class="button-icon"> </div>
                                                </div>
                                            </div>
                                        </button>
                                    </div>
                                </div>
                            </td>
                            <td>
                                <p class="vec_BuildInfo"><a href="../../Shared/HowToUseOnlineHelp.htm" title="Tips for using the help" alt="Tips for using the help"><img src="../../../Resources/vImages/vBackstage/vHelpInfo.png" /></a>
                                </p>
                            </td>
                            <td>
                                <p class="vec_BuildInfo" style="text-align: right;"><span class="mc-variable Vector.BuildTime variable">2023-09-26T19:49:32</span>
                                </p>
                            </td>
                        </tr>
                    </tbody>
                </table>
            </div>
            <table style="width: 100%;border-collapse: separate;border-spacing: 3px 0px;margin-left: auto;margin-right: auto;caption-side: top;">
                <col />
                <col />
                <col />
                <col data-mc-conditions="vConditions.HTML5Link" />
                <tbody>
                    <tr>
                        <td style="background-color: #b70032;padding-left: 5pt;padding-right: 5pt;padding-top: 5pt;padding-bottom: 5pt;">
                            <p class="vec_Footer">Â©&#160;Vector Informatik GmbH</p>
                        </td>
                        <td style="background-color: #b70032;padding-left: 5pt;padding-right: 5pt;padding-top: 5pt;padding-bottom: 5pt;text-align: right;">
                            <p class="vec_FooterBold">
                                <MadCap:conditionalText data-mc-conditions="vConditions.vTESTstudioExcluded,vConditions.TestDataEditorExcluded">CANoe</MadCap:conditionalText> Version <MadCap:conditionalText data-mc-conditions="vConditions.vTESTstudioExcluded">17 SP3</MadCap:conditionalText></p>
                        </td>
                        <td style="background-color: #b70032;padding-left: 5pt;padding-right: 5pt;padding-top: 5pt;padding-bottom: 0pt;text-align: right;">
                            <p class="vec_Footer"><a href="../../Shared/ContactCopyrightLicense.htm" class="vec_Footer MCXref xref xrefvec_Footer">Contact/Copyright/License</a>
                            </p>
                        </td>
                        <td style="background-color: #b70032;padding-left: 5pt;padding-right: 5pt;padding-top: 5pt;padding-bottom: 0pt;text-align: right;">
                            <p class="vec_Footer"><a href="https://www.vector.com/int/en/company/get-info/privacy-policy/" target="_blank" class="vec_Footer">Data Privacy Notice</a>
                            </p>
                        </td>
                    </tr>
                </tbody>
            </table>
        </div>
    </body>
</html>