<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en-us" xml:lang="en-us" data-mc-search-type="Stem" data-mc-help-system-file-name="CANoeCANalyzer.xml" data-mc-path-to-help-system="../../../../../" data-mc-conditions="vConditions.CANoe4SWExcluded" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic" data-mc-preload-images="false" data-mc-in-preview-mode="false">
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta charset="utf-8" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
        <meta name="msapplication-config" content="../../../../../Skins/Favicons/browserconfig.xml" />
        <link rel="apple-touch-icon" sizes="180x180" href="../../../../../Skins/Favicons/apple-touch-icon.png" />
        <link rel="shortcut icon" href="../../../../../Skins/Favicons/favicon-32x32.png" />
        <link rel="icon" sizes="96x96" href="../../../../../Skins/Favicons/favicon-96x96.png" />
        <link rel="icon" sizes="32x32" href="../../../../../Skins/Favicons/favicon-32x32.png" />
        <link rel="icon" sizes="16x16" href="../../../../../Skins/Favicons/favicon-16x16.png" /><title>Test Module Configuration Dialog</title>
        <link href="../../../../../Skins/Default/Stylesheets/Slideshow.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../../Skins/Default/Stylesheets/Components/Styles.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../../Skins/Default/Stylesheets/Components/Tablet.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../../Skins/Default/Stylesheets/Components/Mobile.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../../Skins/Default/Stylesheets/Components/Print.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../Resources/Stylesheets/vTableMasterPageHeader.css" rel="stylesheet" data-mc-stylesheet-type="table" />
        <link href="../../../../Resources/Stylesheets/vStylesheet.css" rel="stylesheet" type="text/css" />
        <style>/*&lt;meta /&gt;*/

.button.expand-all-button
{
	-pie-background: linear-gradient(#ffffff, #ffffff);
}

.button.remove-highlight-button
{
	-pie-background: linear-gradient(#ffffff, #ffffff);
}

.button.collapse-all-button
{
	-pie-background: linear-gradient(#ffffff, #ffffff);
}

.needs-pie
{
	behavior: url('../../../../../Resources/Scripts/PIE-no-motw.htc');
}

</style>
        <link href="../../../../Resources/Stylesheets/vTableSymbol.css" rel="stylesheet" data-mc-stylesheet-type="table" />
        <link rel="apple-touch-icon" sizes="180x180" href="../../../../../Skins/Favicons/apple-touch-icon.png" />
        <link rel="shortcut icon" href="../../../../../Skins/Favicons/favicon-32x32.png" />
        <link rel="icon" sizes="96x96" href="../../../../../Skins/Favicons/favicon-96x96.png" />
        <link rel="icon" sizes="32x32" href="../../../../../Skins/Favicons/favicon-32x32.png" />
        <link rel="icon" sizes="16x16" href="../../../../../Skins/Favicons/favicon-16x16.png" />
        <script src="../../../../../Resources/Scripts/jquery.min.js" type="text/javascript">
        </script>
        <script src="../../../../../Resources/Scripts/purify.min.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/require.min.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/require.config.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/foundation.min.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/plugins.min.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapGlobal.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapDom.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapUtilities.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapXhr.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapTextEffects.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapSlideshow.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapMessageBus.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapMessageBus.CrossFrame.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapDefault.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapMediaQueries.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapAccessibility.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapHelpSystem.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapAliasFile.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapTopicFeedback.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapFeedbackHelper.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapSkinHelper.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapToc.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapToc.Breadcrumbs.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapToc.MiniToc.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapToc.SideMenu.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapIndex.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapGlossary.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapParser.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapSearch.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapNavigateTopics.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapLms.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapELearning.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapTopic.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapFeedback.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapMicroContentComponent.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapSearchHelper.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapTopicElements.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapTriPane.js" type="text/javascript" defer="defer">
        </script>
        <script type="text/jscript" src="../../../../Resources/vScripts/SyntaxHighlighting.js">
        </script>
        <script type="text/jscript" src="../../../../Resources/vScripts/TabSwitch.js">
        </script>
        <script type="text/javascript" src="../../../../Resources/vScripts/Vector.js">
        </script>
    </head>
    <body>
        <p class="MCWebHelpFramesetLink MCWebHelpFramesetLinkTop"><a href="../../../../../CANoeCANalyzer.htm#Topics/CANoeCANalyzer/Test/TestFeatureSet/TFSTestModuleConfiguration.htm">Open topic with navigation</a>
        </p>
        <div class="Body">
            <div role="main" id="mc-main-content">
                <div data-mc-conditions="vConditions.CANoeOnly">
                    <div>
                        <p class="StructurePath"><a href="../TestFeatures.htm" class="StructurePath">Test Feature Set</a> » <a href="TFSTestModuleSetup.htm" class="StructurePath">Test Module</a> » Configuration</p>
                        <h1><span class="mc-variable System.Title variable">Test Module Configuration Dialog</span>
                        </h1>
                        <p class="MenuPath">Context Menu: Configuration…</p>
                        <p class="AutoSearchFilterConcepts"><a name="aanchor3910"></a>
                            <MadCap:concept term="SFCore" />
                        </p>
                        <p class="IndexConcept"><a name="kanchor3026"></a>
                        </p>
                    </div>
                    <p>You open the <span class="GUI">XML Test Modul Configuration</span> dialog via the <span class="GUI">Test Setup for Test Modules</span> window with a right click on a test module and the context menu command <span class="GUI">Configuration...</span>.</p>
                    <p>Here you can configure a test module in the <a href="../../Windows/SimulationSetup/SimulationSetupWindow.htm">Simulation Setup</a> or in the <a href="../../Windows/TestEnvironments/TestEnvironments.htm">Test Setup for Test Modules</a>.</p>
                    <div>
                        <h2 class="NavigationS"><a targets="TOGt8" href="javascript:void(0)" class="MCToggler MCTogglerHead MCTogglerHotSpot MCToggler_Open toggler MCTogglerHotSpot_ MCHotSpotImage" data-mc-targets="TOGt8"><img class="MCToggler_Image_Icon" src="../../../../../Skins/Default/Stylesheets/Images/transparent.gif" height="11" width="16" alt="Closed" data-mc-alt2="Open" />Common</a>
                        </h2>
                        <div style="display: none;" data-mc-target-name="TOGt8">
                            <p><a name="Common" id="Common"></a>Enter the name of the test module into the <span class="bold">Module name</span> field. To prevent mistakes, <span class="bold">&lt;&lt;default&gt;&gt;</span> is set as the default module name. Click <span class="bold">[File…]</span> to open a file request dialog in which you can select the file (CAPL or XML) that describes the functionality of the test module.</p>
                            <p>Use <span class="bold">[Edit]</span> to open the CAPL browser or XML editor with which you can edit the selected program.</p>
                            <p>All CAPL programs must be compiled before a measurement is started. You can do this either by clicking <span class="bold">[Compile]</span> or by selecting <span class="bold">Compile All Nodes</span> on the <a href="../../Ribbon/RibbonEnvironment.htm"><span class="GUI">Environment</span> Ribbon Tab</a>.</p>
                            <p>This is not necessary for XML files. Use <span class="bold">[Compile]</span> to start the integrated XML parser, to read the XML file or to display potential errors.</p>
                            <p>Use the <span class="bold">State on</span>/<span class="bold">State off</span> options to activate/deactivate the test module. In the test setup, you can use the check box on the left of each line to do this.</p>
                            <p>Use <span class="bold">Start</span> to define when the test module is to be started:</p>
                            <ul>
                                <li><span class="bold">Immediately</span> after start of measurement.</li>
                                <li>When the defined <span class="bold">environment variable</span> switches to a value unequal to 0 during measurement.</li>
                                <li>When the defined <span class="bold">system variable</span> switches to a value unequal to 0 during measurement.</li>
                                <li>When a defined <span class="bold">key</span> is pressed during measurement.</li>
                            </ul>
                            <p>You can start the test modules manually in the execution dialog, in the test module's context menu or by using the arrow button on the test module block in the Simulation Setup. Test modules can be started several times during a measurement. You can therefore define (and use) several start conditions. During the runtime of a test module it is not possible to start it again.</p>
                            <div>
                                <table style="width: 100%;mc-table-style: url('../../../../Resources/Stylesheets/vTableSymbol.css');" class="TableStyle-vTableSymbol" cellspacing="0">
                                    <col class="TableStyle-vTableSymbol-Column-Column1" />
                                    <col class="TableStyle-vTableSymbol-Column-Column2" />
                                    <tbody>
                                        <tr>
                                            <td class="TableStyle-vTableSymbol-BodyB-Column1-">
                                                <p class="Table">
                                                    <img src="../../../../Resources/vImages/vInfo.png" style="width: 48px;height: 45px;" title="Info" alt="Info" />
                                                </p>
                                            </td>
                                            <td class="TableStyle-vTableSymbol-BodyA-Column2-">
                                                <p class="TableSymbolHead">Note</p>
                                                <p class="Table">A test module isn't accessible until 1 ms after finishing a test.</p>
                                                <p class="Table">Start events are ignored until processing of the test report has finished.</p>
                                            </td>
                                        </tr>
                                    </tbody>
                                </table>
                            </div>
                            <p>You can use the analysis windows (e.g. <a href="../../Windows/StateTracker/StateTracker.htm">State Tracker</a>) to display the "test module state". You just have to select a predefined system variable of type integer. For improved visualization you can configure a value table. The following values are predefined:</p>
                            <ul>
                                <li><span class="bold">0</span>: <span class="bold">Idle</span> – is set at the start of measurement until the test module is started for the first time</li>
                                <li><span class="bold">1</span>: <span class="bold">RunningPassed</span> – test module is active; the current verdict is <span class="bold">pass</span></li>
                                <li><span class="bold">2</span>: <span class="bold">RunningFailed</span> – test module is active; the current verdict is <span class="bold">fail</span></li>
                                <li><span class="bold">3</span>: <span class="bold">FinishedPassed</span> – test module has finished; the verdict is <span class="bold">pass</span></li>
                                <li><span class="bold">4</span>: <span class="bold">FinishedFailed</span> – test module has finished; the verdict is <span class="bold">fail</span></li>
                            </ul>
                        </div>
                    </div>
                    <div>
                        <h2 class="NavigationS"><a targets="TOGt7" href="javascript:void(0)" class="MCToggler MCTogglerHead MCTogglerHotSpot MCToggler_Open toggler MCTogglerHotSpot_ MCHotSpotImage" data-mc-targets="TOGt7"><img class="MCToggler_Image_Icon" src="../../../../../Skins/Default/Stylesheets/Images/transparent.gif" height="11" width="16" alt="Closed" data-mc-alt2="Open" />Test Report</a>
                        </h2>
                        <div style="display: none;" data-mc-target-name="TOGt7">
                            <p><a name="Report" id="Report"></a>When you activate the <span class="bold">Enable test report generation</span> check box, a test report will be generated during the runtime of the test module.</p>
                            <p>Enter the name of the test report in the <span class="bold">XML test report</span> input box. You can open a file request dialog using <span class="bold">[...]</span>. Existing files will be overwritten during test module execution.</p>
                            <p>If you activate <span class="bold">Increment filename of test report automatically</span>, the filename is then extended by a four digit number. This number is generated automatically; therefore existing files will not be overwritten.</p>
                            <div>
                                <h3>Test Report in CANoe Test Report Viewer Format</h3>
                                <p>If you selected the recommended <a href="../TestReport/TestReportOutputFormat.htm" class="GUI">Test Report Viewer Format</a> in the global <a href="../../Ribbon/File/Options/General/GeneralTestFeatureSet.htm"><span class="Product">CANoe</span> options</a>, <span class="bold">User Data</span> is available under <span class="GUI">Test Report Filter</span>. Hereby you can decide whether user-specific data will be written to the test report, e.g. if tester-related information must not be revealed to others due to data privacy reasons. Using the filter feature of <span class="Product">CANoe Test Report Viewer</span> you can use further filter criteria. Therefore you don't have to define these criteria in advance.</p>
                            </div>
                            <div>
                                <h3>Test Report in XML/HTML Format</h3>
                                <p>If you selected the <a href="../TestReport/TestReportOutputFormat.htm">XML/HTML</a> test report format in the global <a href="../../Ribbon/File/Options/General/GeneralTestFeatureSet.htm"><span class="Product">CANoe</span> options</a>, you can activate an additional test report in HTML format by selecting <span class="bold">Create HTML test report using the following XSLT stylesheet</span>. For that purpose the <a href="../TestReport/TestReportXSLTStylesheets.htm">XML test report file is transformed into an HTML test report file</a> after the test has been performed. This HTML test report has the same filename as the XML test report, except that the extension is <span class="bold">HTML</span> instead of <span class="bold">XML</span>.</p>
                                <p>If you don't want to use the standard transformation script, you can select a different <a href="../TestReport/TestReportXSLTStylesheets.htm">XSLT transformation stylesheet</a> by clicking the <span class="bold">[...]</span> button.</p>
                                <p>If you want to used a different XSLT stylesheet once, you can select the XSLT file in the <a href="TFSTestModuleExecutionDialog.htm">execution dialog</a> in the <span class="bold">Test Report</span> menu and used it for an immediate transformation of the last generated XML file.</p>
                            </div>
                        </div>
                    </div>
                    <div>
                        <h2 class="NavigationS"><a targets="TOGt6" href="javascript:void(0)" class="MCToggler MCTogglerHead MCTogglerHotSpot MCToggler_Open toggler MCTogglerHotSpot_ MCHotSpotImage" data-mc-targets="TOGt6"><img class="MCToggler_Image_Icon" src="../../../../../Skins/Default/Stylesheets/Images/transparent.gif" height="11" width="16" alt="Closed" data-mc-alt2="Open" />Test Report Filter</a>
                        </h2>
                        <div style="display: none;" data-mc-target-name="TOGt6">
                            <p><a name="ReportFilter" id="ReportFilter"></a>This page is only displayed if you selected the <a href="../TestReport/TestReportOutputFormat.htm" class="GUI">XML/HTML</a> test report format in the global <a href="../../Ribbon/File/Options/General/GeneralTestFeatureSet.htm"><span class="Product">CANoe</span> options</a>.</p>
                            <p>If you selected the <a href="../TestReport/TestReportOutputFormat.htm" class="GUI">Test Report Viewer</a> format in the global <a href="../../Ribbon/File/Options/General/GeneralTestFeatureSet.htm"><span class="Product">CANoe</span> options</a> you can set the filters directly in the <span class="Product">CANoe Test Report Viewer</span>.</p>
                            <p>On the page <span class="GUI">Test Report Filter</span> you can specify which information is written into the test report. By default, all information that is generated is included in the test report.</p>
                            <p>You can select whether <span class="GUI">all</span> or <span class="GUI">failed only</span> test cases shall be included in the report details. In <span class="GUI">failed only</span> mode successful (passed) test cases are shown only in the overview table.</p>
                            <p>You can select whether <span class="bold">none</span>, <span class="bold">all</span> or <span class="bold">failed only</span> test steps or output of test/control functions shall be included in the test report. In <span class="bold">failed only</span> mode all belonging test steps of the failed test/control function are output.</p>
                            <p>For CAPL and .NET test modules, you can also select to what test step level the test steps shall be reported. If you select <span class="bold">2</span> as the maximum test step level, then test steps having a test step level of <span class="bold">0</span> (no entry), <span class="bold">1</span> and <span class="bold">2</span> are included in the test report.</p>
                            <p>Selecting a test step level less than <span class="bold">2</span> means that even test steps that are inserted by <span class="Product">CANoe</span> (not by the user) will not be included. With test step level <span class="bold">1</span> all test steps that are just informative will be ignored. Error messages, warnings and other important information will be included. Test step level <span class="bold">0</span> only shows test steps that provide error-related information.</p>
                            <ul>
                                <li><span class="bold">Test module information</span>
                                    <br />Here, general information on test modules will be documented in the test report; e.g. Description, Misc Info, Extended Info and test module file.</li>
                                <li><span class="bold">System Under Test, test setup</span>
                                    <br />Here, the properties of the System Under Test and the test setup are documented in the test report.</li>
                                <li><span class="bold">Test engineer</span>
                                    <br />Here, information on the test engineer are documented in the test report.</li>
                                <li><span class="bold">Information from test structure elements</span>
                                    <br />Here, general information from test groups and test cases is documented in the test report.</li>
                                <li class="Bold">Description, engineer, Test Setup, environment, information</li>
                                <li><span class="bold">Commentary and details</span>
                                    <br />If you select this property, comments and additional information such as signal value stimulations (&lt;initialize&gt;, &lt;statechange&gt; …) are documented in the test report.</li>
                                <li><span class="bold">Variable definition, configuration</span>
                                    <br />If you select this property, variable definitions (for XML test modules) and configuration details are documented in the test report.</li>
                                <li><span class="bold">Resolving simple timeout wait conditions:</span>
                                    <br />Simple timeout wait conditions are wait operations that are dependent on a single time value, i.e. they are independent of other conditions (e.g. signal conditions). Such simple wait conditions are used e.g. in CAPL with <a href="../../../CAPLFunctions/Test/Functions/CAPLfunctionTestWaitForTimeout.htm" class="SourceCode">TestWaitForTimeout</a> and in XML with &lt;initialize&gt; or &lt;wait&gt;.</li>
                                <li><span class="bold">Resolving complex wait conditions:</span>
                                    <br />Complex wait conditions involve several criteria, usually a timeout plus certain events or states. The test report always documents the reason the wait condition was resolved (condition met or timeout).</li>
                                <li><span class="bold">Report only first condition/constraint violation:</span>
                                    <br />If you select this property, only the first violation of a check object (that is set as a condition or constraint) is documented in detail for each test case. Further violations are recorded only as statistics. If you want each violation to be documented in detail, you should deactivate this property.</li>
                                <li><span class="bold">Results and statistics for conditions/constraints:</span>
                                    <br />During the test period, check objects in the <a href="../TestServiceLibrary.htm">Test Service Library</a> generate statistics that are output for each test case (while the check is active). Depending on the test problem, these describe e.g. maximum and minimum values, frequency or distribution.</li>
                                <li><span class="bold">Show hardware information</span>
                                    <br />If this property is selected, hardware information on the configured <a href="../../VTSystem/VTSystemModules.htm">VT System modules</a> and on connected network interfaces will be included in the test report.</li>
                                <li><span class="bold">Start and end of background check</span>
                                    <br />If this property is selected, the start and end of a background check with time stamp will be documented in the test run details of the test report.</li>
                            </ul>
                        </div>
                    </div>
                    <div>
                        <h2 class="NavigationS"><a targets="TOGt4" href="javascript:void(0)" class="MCToggler MCTogglerHead MCTogglerHotSpot MCToggler_Open toggler MCTogglerHotSpot_ MCHotSpotImage" data-mc-targets="TOGt4"><img class="MCToggler_Image_Icon" src="../../../../../Skins/Default/Stylesheets/Images/transparent.gif" height="11" width="16" alt="Closed" data-mc-alt2="Open" />Specification</a>
                        </h2>
                        <div style="display: none;" data-mc-target-name="TOGt4">
                            <p><a name="Specification" id="Specification"></a>This page is only available for XML test modules.</p>
                            <p>Here you can specify the XSLT stylesheet to be used for transforming the XML test module into a more readable HTML format. This transformation is executed when you click the button for displaying the test specification in the <a href="TFSTestModuleExecutionDialog.htm">Execution dialog</a>.</p>
                            <p>You can use the <span class="bold">[...]</span> button to open a file selection dialog with which you can select the relevant XSLT transformation stylesheet.</p>
                        </div>
                    </div>
                    <div>
                        <h2 class="NavigationS"><a targets="TOGComponents" href="javascript:void(0)" class="MCToggler MCTogglerHead MCTogglerHotSpot MCToggler_Open toggler MCTogglerHotSpot_ MCHotSpotImage" data-mc-targets="TOGComponents"><img class="MCToggler_Image_Icon" src="../../../../../Skins/Default/Stylesheets/Images/transparent.gif" height="11" width="16" alt="Closed" data-mc-alt2="Open" />Components</a>
                        </h2>
                        <div style="display: none;" data-mc-target-name="TOGComponents">
                            <p><a name="Components" id="Components"></a>You can extend the functionality of test modules by various types of components. Depending on the type of the test module (XML, .NET or CAPL) you can add different components.<br />The following types of components are possible:</p>
                            <ul>
                                <li>Node layer modules</li>
                                <li><a href="../TestLibraries.htm">Test Libraries</a>
                                </li>
                                <li class="Indent">CAPL test libraries (for XML and .NET test modules)</li>
                                <li class="Indent">.NET test libraries (for XML and .NET test modules)<br />In special cases you may assign references to .NET test libraries; these references will be used for compilation.</li>
                            </ul>
                            <p>You can see which <span class="bold">bus</span> the modules are available on, the <span class="bold">names</span> of the modules and <span class="bold">path</span> where the module file is stored.</p>
                        </div>
                    </div>
                    <div>
                        <h2 class="NavigationS"><a targets="TOGt2" href="javascript:void(0)" class="MCToggler MCTogglerHead MCTogglerHotSpot MCToggler_Open toggler MCTogglerHotSpot_ MCHotSpotImage" data-mc-targets="TOGt2"><img class="MCToggler_Image_Icon" src="../../../../../Skins/Default/Stylesheets/Images/transparent.gif" height="11" width="16" alt="Closed" data-mc-alt2="Open" />Buses</a>
                        </h2>
                        <div style="display: none;" data-mc-target-name="TOGt2">
                            <p><a name="Buses" id="Buses"></a>All available and assigned buses are shown here.</p>
                            <p>You can select an entry with the left mouse button and move it with the <span class="bold">[&gt;&gt;]</span> and <span class="bold">[&lt;&lt;]</span> buttons to change its state to assigned or available.</p>
                        </div>
                    </div>
                    <div>
                        <h2 class="SectionMain"><a targets="TOGt1" class="MCToggler MCTogglerHead MCTogglerHotSpot MCToggler_Open toggler togglerTogglerWhite MCTogglerHotSpot_ MCTogglerHotSpot_TogglerWhite MCHotSpotImage" href="javascript:void(0)" data-mc-targets="TOGt1"><img class="MCToggler_Image_Icon" src="../../../../../Skins/Default/Stylesheets/Images/transparent.gif" height="11" width="16" alt="Closed" data-mc-alt2="Open" />Advanced Settings in CAN.INI</a>
                        </h2>
                        <div style="display: none;" data-mc-target-name="TOGt1">
                            <p><a name="CANini" id="CANini"></a>If you are experiencing problems with the execution of large test modules (overloading of <span class="Product">CANoe</span>), it is possible to insert automatic synchronization points between the test cases using a CAN.INI setting. This is particularly advisable if <span class="Product">CANoe</span> reports a message queue overrun. The synchronization points cause the execution time for a test module to be slightly longer. This is because test cases are no longer executed directly after one another; instead, the system waits after each test case until <span class="Product">CANoe</span> has processed the data generated by the preceding test case. This guarantees full logging and reporting. You can use the following entry in the CAN.INI file to specify which test modules the optimization applies in:</p>
                            <p class="SourceCode">[TestFeatureSet]<br />; Enables/Disables performance optimization for test modules<br />; 0: no performance optimization<br />, 1: performance optimization only for CAPL test modules<br />; 2: performance optimization only for XML test modules<br />; 3: performance optimization for CAPL and XML test modules<br />SmoothPerformancePeaksAfterTestCases=0</p>
                        </div>
                    </div>
                    <p class="LinkList"><a href="TFSTestModuleSetup.htm" class="LinkList">Creating a Test Module</a>&#160;&#160;•&#160;&#160;Configuring the Test Report&#160;&#160;•&#160;&#160;<a href="../../../Shared/Glossary.htm" class="LinkList">Glossary</a></p>
                </div>
            </div>
        </div>
        <div class="Footer">
            <div class="FooterWhite">
                <table class="FooterWhite" style="border-collapse: collapse;margin-left: auto;margin-right: auto;">
                    <col style="width: 70px;" data-mc-conditions="vConditions.HTML5Link" />
                    <col style="width: 16px;" data-mc-conditions="vConditions.HTML5Link" />
                    <col />
                    <tbody>
                        <tr>
                            <td>
                                <div class="buttons popup-container clearfix topicToolbarProxy topicToolbarProxyFooter _Skins_HTML5TopicToolbar mc-component nocontent">
                                    <div class="button-group-container-left">
                                        <button class="button needs-pie expand-all-button" data-state1-class="expand-all-button" data-state2-class="collapse-all-button" data-state2-title="Collapse all" title="Expand all" data-state1-title="Expand all">
                                            <div>
                                                <div role="img" class="button-icon-wrapper" aria-label="Expand all">
                                                    <div class="button-icon"> </div>
                                                </div>
                                            </div>
                                        </button>
                                        <button class="button needs-pie remove-highlight-button" title="Remove Highlights">
                                            <div>
                                                <div role="img" class="button-icon-wrapper">
                                                    <div class="button-icon"> </div>
                                                </div>
                                            </div>
                                        </button>
                                    </div>
                                </div>
                            </td>
                            <td>
                                <p class="vec_BuildInfo"><a href="../../../Shared/HowToUseOnlineHelp.htm" title="Tips for using the help" alt="Tips for using the help"><img src="../../../../Resources/vImages/vBackstage/vHelpInfo.png" /></a>
                                </p>
                            </td>
                            <td>
                                <p class="vec_BuildInfo" style="text-align: right;"><span class="mc-variable Vector.BuildTime variable">2023-09-26T19:49:32</span>
                                </p>
                            </td>
                        </tr>
                    </tbody>
                </table>
            </div>
            <table style="width: 100%;border-collapse: separate;border-spacing: 3px 0px;margin-left: auto;margin-right: auto;caption-side: top;">
                <col />
                <col />
                <col />
                <col data-mc-conditions="vConditions.HTML5Link" />
                <tbody>
                    <tr>
                        <td style="background-color: #b70032;padding-left: 5pt;padding-right: 5pt;padding-top: 5pt;padding-bottom: 5pt;">
                            <p class="vec_Footer">©&#160;Vector Informatik GmbH</p>
                        </td>
                        <td style="background-color: #b70032;padding-left: 5pt;padding-right: 5pt;padding-top: 5pt;padding-bottom: 5pt;text-align: right;">
                            <p class="vec_FooterBold">
                                <MadCap:conditionalText data-mc-conditions="vConditions.vTESTstudioExcluded,vConditions.TestDataEditorExcluded">CANoe</MadCap:conditionalText> Version <MadCap:conditionalText data-mc-conditions="vConditions.vTESTstudioExcluded">17 SP3</MadCap:conditionalText></p>
                        </td>
                        <td style="background-color: #b70032;padding-left: 5pt;padding-right: 5pt;padding-top: 5pt;padding-bottom: 0pt;text-align: right;">
                            <p class="vec_Footer"><a href="../../../Shared/ContactCopyrightLicense.htm" class="vec_Footer MCXref xref xrefvec_Footer">Contact/Copyright/License</a>
                            </p>
                        </td>
                        <td style="background-color: #b70032;padding-left: 5pt;padding-right: 5pt;padding-top: 5pt;padding-bottom: 0pt;text-align: right;">
                            <p class="vec_Footer"><a href="https://www.vector.com/int/en/company/get-info/privacy-policy/" target="_blank" class="vec_Footer">Data Privacy Notice</a>
                            </p>
                        </td>
                    </tr>
                </tbody>
            </table>
        </div>
    </body>
</html>