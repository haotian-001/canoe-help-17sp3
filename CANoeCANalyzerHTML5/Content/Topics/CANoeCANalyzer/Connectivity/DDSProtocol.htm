<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en-us" xml:lang="en-us" data-mc-search-type="Stem" data-mc-help-system-file-name="CANoeCANalyzer.xml" data-mc-path-to-help-system="../../../../" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic" data-mc-preload-images="false" data-mc-in-preview-mode="false">
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta charset="utf-8" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
        <meta name="msapplication-config" content="../../../../Skins/Favicons/browserconfig.xml" />
        <link rel="apple-touch-icon" sizes="180x180" href="../../../../Skins/Favicons/apple-touch-icon.png" />
        <link rel="shortcut icon" href="../../../../Skins/Favicons/favicon-32x32.png" />
        <link rel="icon" sizes="96x96" href="../../../../Skins/Favicons/favicon-96x96.png" />
        <link rel="icon" sizes="32x32" href="../../../../Skins/Favicons/favicon-32x32.png" />
        <link rel="icon" sizes="16x16" href="../../../../Skins/Favicons/favicon-16x16.png" /><title>DDS Protocol (Connectivity)</title>
        <link href="../../../../Skins/Default/Stylesheets/Slideshow.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../Skins/Default/Stylesheets/Components/Styles.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../Skins/Default/Stylesheets/Components/Tablet.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../Skins/Default/Stylesheets/Components/Mobile.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../Skins/Default/Stylesheets/Components/Print.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../Resources/Stylesheets/vTableMasterPageHeader.css" rel="stylesheet" data-mc-stylesheet-type="table" />
        <link href="../../../Resources/Stylesheets/vStylesheet.css" rel="stylesheet" type="text/css" />
        <style>/*&lt;meta /&gt;*/

.button.expand-all-button
{
	-pie-background: linear-gradient(#ffffff, #ffffff);
}

.button.remove-highlight-button
{
	-pie-background: linear-gradient(#ffffff, #ffffff);
}

.button.collapse-all-button
{
	-pie-background: linear-gradient(#ffffff, #ffffff);
}

.needs-pie
{
	behavior: url('../../../../Resources/Scripts/PIE-no-motw.htc');
}

</style>
        <link href="../../../Resources/Stylesheets/vTableSymbol.css" rel="stylesheet" data-mc-stylesheet-type="table" />
        <link rel="apple-touch-icon" sizes="180x180" href="../../../../Skins/Favicons/apple-touch-icon.png" />
        <link rel="shortcut icon" href="../../../../Skins/Favicons/favicon-32x32.png" />
        <link rel="icon" sizes="96x96" href="../../../../Skins/Favicons/favicon-96x96.png" />
        <link rel="icon" sizes="32x32" href="../../../../Skins/Favicons/favicon-32x32.png" />
        <link rel="icon" sizes="16x16" href="../../../../Skins/Favicons/favicon-16x16.png" />
        <script src="../../../../Resources/Scripts/jquery.min.js" type="text/javascript">
        </script>
        <script src="../../../../Resources/Scripts/purify.min.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/require.min.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/require.config.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/foundation.min.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/plugins.min.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapGlobal.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapDom.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapUtilities.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapXhr.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapTextEffects.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapSlideshow.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapMessageBus.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapMessageBus.CrossFrame.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapDefault.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapMediaQueries.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapAccessibility.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapHelpSystem.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapAliasFile.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapTopicFeedback.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapFeedbackHelper.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapSkinHelper.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapToc.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapToc.Breadcrumbs.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapToc.MiniToc.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapToc.SideMenu.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapIndex.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapGlossary.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapParser.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapSearch.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapNavigateTopics.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapLms.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapELearning.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapTopic.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapFeedback.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapMicroContentComponent.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapSearchHelper.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapTopicElements.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapTriPane.js" type="text/javascript" defer="defer">
        </script>
        <script type="text/jscript" src="../../../Resources/vScripts/SyntaxHighlighting.js">
        </script>
        <script type="text/jscript" src="../../../Resources/vScripts/TabSwitch.js">
        </script>
        <script type="text/javascript" src="../../../Resources/vScripts/Vector.js">
        </script>
    </head>
    <body>
        <p class="MCWebHelpFramesetLink MCWebHelpFramesetLinkTop"><a href="../../../../CANoeCANalyzer.htm#Topics/CANoeCANalyzer/Connectivity/DDSProtocol.htm">Open topic with navigation</a>
        </p>
        <div class="Body">
            <div role="main" id="mc-main-content">
                <div>
                    <p class="StructurePath"><a href="../CANoeCANalyzer.htm" class="StructurePath" data-mc-conditions="vConditions.CANalyzerExclude,vConditions.CANoe4ServerExcluded,vConditions.CANoe4SWExcluded,vConditions.TestDataEditorExcluded,vConditions.vTESTstudioExcluded,vConditions.TestUnitRunnerExcluded,vConditions.CANoeNMExcluded"><img src="../../../Resources/vImages/vToolIcons/CANoe_Icon16.png" alt="" />&#160;CANoe</a> » <a href="Connectivity.htm" class="StructurePath">Connectivity</a> » DDS Protocol</p>
                    <h1>DDS Protocol</h1>
                    <p class="MenuPath">&#160;</p>
                    <p class="AutoSearchFilterConcepts"><a name="aanchor3926"></a>
                        <MadCap:concept term="SFCore" />
                    </p>
                    <p class="IndexConcept"><a name="kanchor3034"></a>
                    </p>
                </div>
                <p>The standard <a href="https://www.omg.org/spec/DDS/" target="_blank" class="ExternalLink">Data Distribution Service (DDS)</a> published by the Object Management Group describes a protocol for transmitting data in distributed systems. The Object Management Group sees the purpose of the DDS specification in enabling the <span class="bold">efficient and robust transmission of the right information to the right place at the right time</span>. Thus, DDS is a protocol for communication on the (Industrial) Internet of Things, which focuses on reliable data transmission.</p>
                <div>
                    <h2 class="SectionMain">Quick Overview</h2>
                    <p>In the DDS protocol, different participants (so-called <span class="bold">DomainParticipants</span>) communicate with each other. A network can be divided into several areas (<span class="bold">domains</span>) whose participants communicate separately. Here, the affiliation to the respective domain is determined by means of the domain ID. DDS is a decentralized protocol that establishes the connection between the various participants at runtime. UDP or shared memory is usually used as the transport channel; TCP is also used less frequently.</p>
                    <p>A domain can contain any number of <span class="bold">DomainParticipants</span>, and each <span class="bold">DomainParticipant</span> can have multiple publishers and subscribers with <span class="bold">DataWriters</span> and <span class="bold">DataReaders</span>, respectively. These <span class="bold">DataWriters</span> publish data to one Topic at a time. The <span class="bold">DataReaders</span> can listen to multiple Topics.</p>
                </div>
                <div>
                    <h2 class="SectionMain">Communication Principle</h2>
                    <div>
                        <h3 class="SectionSub">Publish Subscribe</h3>
                        <p>DDS works according to the <span class="bold">Publish Subscribe</span> scheme. In a network, there are publishers who transmit data to the network and subscribers who express their interest in a certain topic in order to receive the corresponding data. The structure of the data is particularly important in DDS.</p>
                        <p>In concrete terms, this means that publishers and subscribers define topics to which they publish or subscribe. When a new subscriber joins the network, DDS checks whether there is already a publisher for the topic, and vice versa.  (More details can be found below in the section <a href="#BMDiscoveryProtocol" class="bold">Discovery Protocol</a>). If a matching pair of publisher and subscriber is found, DDS establishes a data exchange channel between the two. This allows publishers and subscribers to be added to the network at any time. Since the data exchange channel is established directly between the publisher and the subscriber, communication is robust even in large, dynamic systems and can meet realtime requirements.</p>
                        <div>
                            <table style="width: 100%;margin-left: 0;margin-right: auto;mc-table-style: url('../../../Resources/Stylesheets/vTableSymbol.css');" class="TableStyle-vTableSymbol" cellspacing="0">
                                <col class="TableStyle-vTableSymbol-Column-Column1" />
                                <col class="TableStyle-vTableSymbol-Column-Column2" />
                                <tbody>
                                    <tr>
                                        <td class="TableStyle-vTableSymbol-BodyB-Column1-">
                                            <p class="Table">
                                                <img src="../../../Resources/vImages/vExample.png" style="width: 48px;height: 45px;" title="Example" alt="Example" />
                                            </p>
                                        </td>
                                        <td class="TableStyle-vTableSymbol-BodyA-Column2-">
                                            <p class="TableSymbolHead">Example - Communication Channels</p>
                                            <p>In the following, data transmission in a hospital is considered as an example. In the sample configuration <a href="../../SampConf/Connectivity/CANoe/DDSBasic/DDSBasic.htm">DDS Basic</a>, a pair of sensor and monitor for health data is considered. The sensor measures a patient's heart rate and oxygen saturation and transmits this data to the monitor via DDS. Sensors are used in many patient rooms to monitor patients' vital signs. Each of these sensors regularly sends the detected data to the network in a specific format (the data type <span class="bold">healthdata</span>). So, such a sensor in the patient room here is a publisher that publishes to a topic named <span class="bold">patientHealth</span> and with the data type <span class="bold">healthdata</span>.</p>
                                            <p>The monitor in the patient's room or the computer in the doctor's room needs this data. Therefore, these participants will listen to the Topic <span class="bold">patientHealth</span> as subscribers. The DDS middleware takes care of transmitting the data from sensor to monitor and computer.</p>
                                            <p class="Table">
                                                <img src="../../../Resources/Images/CANoeCANalyzer/Connectivity/DDSProtPublishSubscribe.png" style="height: auto;width: 50%;" />
                                            </p>
                                        </td>
                                    </tr>
                                </tbody>
                            </table>
                        </div>
                    </div>
                    <div>
                        <h3 class="SectionSub">DDS is Data Centric</h3>
                        <p>The data-centeredness is shown, among other things, in the fact that a topic always corresponds to exactly one data type.</p>
                        <div>
                            <table style="width: 100%;margin-left: 0;margin-right: auto;mc-table-style: url('../../../Resources/Stylesheets/vTableSymbol.css');" class="TableStyle-vTableSymbol" cellspacing="0">
                                <col class="TableStyle-vTableSymbol-Column-Column1" />
                                <col class="TableStyle-vTableSymbol-Column-Column2" />
                                <tbody>
                                    <tr>
                                        <td class="TableStyle-vTableSymbol-BodyB-Column1-">
                                            <p class="Table">
                                                <img src="../../../Resources/vImages/vExample.png" style="width: 48px;height: 45px;" title="Example" alt="Example" />
                                            </p>
                                        </td>
                                        <td class="TableStyle-vTableSymbol-BodyA-Column2-">
                                            <p class="TableSymbolHead">Example - Topics, Instances, Samples</p>
                                            <p>Several instances of a topic can be created by means of a key. For example, in a hospital one instance of the topic <span class="bold">patientHealth</span> would be used for each patient. Each individual message sent on a topic is called a <span class="bold">Sample</span>.</p>
                                            <p>So the monitor in the patient's room would listen to the Topic <span class="bold">patientHealth</span> with the key of the corresponding patient and regularly receives a sample of the health data, which is then illustrated in a diagram.</p>
                                            <p>The computer in the doctor's office receives a data stream of samples, sorted by patient, across all instances of the Topics <span class="bold">patientHealth</span>.</p>
                                        </td>
                                    </tr>
                                </tbody>
                            </table>
                        </div>
                        <p>When specifying a topic, each participant also specifies the <span class="bold">Quality of Service (QoS)</span> offered or expected. <span class="bold">Quality of Service</span> is a set of configuration options, such as the lifetime of the message or the reliability of delivery. Only between publishers and subscribers with compatible <span class="bold">Quality of Service</span> is a connection established by the middleware. Therefore, it can be said that the middleware understands the data structure. It not only enables the technical exchange of data, but also connects only those subscribers with each other who actually send and expect suitable data.</p>
                        <p>The <span class="bold">Quality of Service</span> options available in <span class="Product">CANoe</span> can be found on this page: <a href="DDSModelingDOs.htm">Distributed objects (DOs) for Data Distribution Service (DDS)</a>.</p>
                        <div>
                            <table style="width: 100%;margin-left: 0;margin-right: auto;mc-table-style: url('../../../Resources/Stylesheets/vTableSymbol.css');" class="TableStyle-vTableSymbol" cellspacing="0">
                                <col class="TableStyle-vTableSymbol-Column-Column1" />
                                <col class="TableStyle-vTableSymbol-Column-Column2" />
                                <tbody>
                                    <tr>
                                        <td class="TableStyle-vTableSymbol-BodyB-Column1-">
                                            <p class="Table">
                                                <img src="../../../Resources/vImages/vExample.png" style="width: 48px;height: 45px;" title="Example" alt="Example" />
                                            </p>
                                        </td>
                                        <td class="TableStyle-vTableSymbol-BodyA-Column2-">
                                            <p class="TableSymbolHead">Example - Quality of Service</p>
                                            <p class="Table">For the sensor, the Quality of Service specifies the reliability with which data is provided; for the monitor and the computer, it specifies the reliability they expect. No connection is established with a sensor that does not fulfill the requirements (QosPolicy RELIABILITY). To enable good monitoring in the hospital, the RELIABLE value is selected for the reliability. This means that the sensor will try to transmit all data and, if necessary, resend previous samples. The QosPolicy HISTORY can be used to define how many past values should be stored and sent again accordingly.</p>
                                        </td>
                                    </tr>
                                </tbody>
                            </table>
                        </div>
                    </div>
                    <div>
                        <h3 class="SectionSub">Global Data Space</h3>
                        <p>DDS stores all data decentrally. The exchanged data is stored locally at the various participants. A publisher writes the data for a particular topic to its own storage for publication. The DDS middleware then transmits this data to all subscribers who have subscribed to the Topic. A subscriber, in turn, accesses its own memory to receive data for a particular Topic. The aggregate local storage of all subscribers is referred to as the <span class="bold">Global Data Space</span>. Conceptually, each subscriber considers its local memory to be the <span class="bold">Global Data Space</span>. In reality, however, each subscriber only has the data that is relevant for that subscriber.</p>
                        <p>The following illustration shows the communication from the point of view of the communication participants, with the arrows representing write and read data access.</p>
                        <p class="Table">
                            <img src="../../../Resources/Images/CANoeCANalyzer/Connectivity/DDSProtGlobalDataSpace.png" style="height: auto;width: 50%;" />
                        </p>
                        <p>This hiding of the infrastructure directs the focus on the data and allows a user of DDS to concentrate exclusively on the data structure. It is then a matter of <span class="bold">WHAT do I want to send</span> and no longer <span class="bold">HOW</span>. The middleware takes over the transport of the data.</p>
                    </div>
                </div>
                <div>
                    <h2 class="SectionMain">Structure of the Communication Participants</h2>
                    <p>So far, publishers and subscribers have been referred to as if they were each a single subscriber. However, this is not quite correct. The DDS specification describes the communication participants as <span class="bold">DomainParticipants</span>. Each <span class="bold">DomainParticipant</span> may have one or more Publishers and/or Subscribers. Each Publisher in turn has one or more <span class="bold">DataWriters</span>. Each <span class="bold">DataWriter</span> publishes on exactly one topic. Similarly, a Subscriber has one or more <span class="bold">DataReaders</span>. A <span class="bold">DataReader</span> listens to one or more Topics.</p>
                    <p>Within a network there are one or more domains, whereby the participants define by means of Domain ID to which domain they belong. Each domain has a Global Data Space.</p>
                    <div>
                        <table style="width: 100%;margin-left: 0;margin-right: auto;mc-table-style: url('../../../Resources/Stylesheets/vTableSymbol.css');" class="TableStyle-vTableSymbol" cellspacing="0">
                            <col class="TableStyle-vTableSymbol-Column-Column1" />
                            <col class="TableStyle-vTableSymbol-Column-Column2" />
                            <tbody>
                                <tr>
                                    <td class="TableStyle-vTableSymbol-BodyB-Column1-">
                                        <p class="Table">
                                            <img src="../../../Resources/vImages/vExample.png" style="width: 48px;height: 45px;" title="Example" alt="Example" />
                                        </p>
                                    </td>
                                    <td class="TableStyle-vTableSymbol-BodyA-Column2-">
                                        <p class="TableSymbolHead">Example - Communication Participants</p>
                                        <p>In the above example, the sensor was referred to as the Publisher. More exactly, however, the sensor as a whole device corresponds to a <span class="bold">DomainParticipant</span>. This <span class="bold">DomainParticipant</span> has a Publisher and this Publisher has a <span class="bold">DataWriter</span> that publishes to the topic <span class="bold">patientHealth</span>. The same applies to the two Subscribers, but we expand the example a bit here. The monitor in the patient's room displays other values in addition to the oxygen saturation and heart rate values, depending on the patient. For this purpose, other measuring devices are used, which publish to the respective topics. We now consider the case where a blood pressure monitor is used in addition to the sensor for the basic data. The patient monitor uses both data to display them together graphically and to raise an alarm if necessary. The subscriber of the monitor therefore receives two different types of data. This is realized by means of several <span class="bold">DataReaders</span>.</p>
                                        <p>The computer interacts with further data. E.g., it can make the patient's personal data available so that it can be accessed by a doctor in the patient's room. Therefore, this participant has both a subscriber and a publisher.</p>
                                        <p>
                                            <img src="../../../Resources/Images/CANoeCANalyzer/Connectivity/DDSProtDomainParticipant.png" style="height: auto;width: 50%;" />
                                        </p>
                                    </td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                </div>
                <div>
                    <h2 class="SectionMain"><a name="BMDiscoveryProtocol" id="BMDiscoveryProtocol"></a>Discovery Protocol</h2>
                    <p>The discovery protocol in DDS is divided into two phases: <span class="bold">Participant Discovery</span> and <span class="bold">Endpoint Discovery</span>. Two independent protocols are used for this purpose.</p>
                    <p>The first phase is executed using a <span class="bold">Participant Discovery Protocol (PDP)</span>. In this phase, the individual participants of a domain get to know each other. Details such as a unique participant ID, the address information and quality of service of the respective <span class="bold">domainParticipants</span> are exchanged. For this purpose, messages are periodically sent to a set of known participants. These messages continue to be exchanged periodically after the <span class="bold">Participant Discovery</span> phase has been completed, allowing changes or departures of participants to be detected. When a new participant joins a domain, it registers with a set of initially known participants (Initial Peer List). This list can contain multicast addresses as well as unicast addresses. A requested subscriber that is reachable then responds with available <span class="bold">Endpoint Discovery Protocols (EDP)</span> that are supported.</p>
                    <p>When two communication participants have found each other, information about the endpoints of the participants is exchanged in the second phase using an <span class="bold">EDP</span>. The goal here is to assign <span class="bold">DataReader</span> and <span class="bold">DataWriter</span> of different participants. The two communication participants exchange information about their entities (<span class="bold">DataReader</span> and <span class="bold">DataWriter</span>). If the configuration of two entities match, they are assigned and can communicate with each other. Both sides must agree to the mapping. A <span class="bold">DataReader</span> and <span class="bold">DataWriter</span> match if they have the same topic, data type, and compatible QoS. All participants exchange until everyone has the current state.</p>
                    <p>Implementations of the discovery protocol can support multiple PDPs or EDPs. However, at least the following two protocols must be implemented for interoperability:</p>
                    <ol>
                        <li value="1">
                            <p>Simple Participant Discovery Protocol (SPDP)</p>
                        </li>
                        <li value="2">
                            <p>Simple Endpoint Discovery Protocol (SEDP)</p>
                        </li>
                    </ol>
                    <p>Both protocols use standardized <span class="bold">built-in</span> topics to transmit the necessary information. This means that each participant knows which topics must be written to and read from.</p>
                </div>
                <p class="LinkList"><a href="DDSModelingDOs.htm" class="LinkList">Distributed Objects (DOs) for Data Distribution Service (DDS)</a>&#160;&#160;•&#160;&#160;<a href="DDSMonitoring.htm" class="LinkList">DDS Monitoring</a></p>
            </div>
        </div>
        <div class="Footer">
            <div class="FooterWhite">
                <table class="FooterWhite" style="border-collapse: collapse;margin-left: auto;margin-right: auto;">
                    <col style="width: 70px;" data-mc-conditions="vConditions.HTML5Link" />
                    <col style="width: 16px;" data-mc-conditions="vConditions.HTML5Link" />
                    <col />
                    <tbody>
                        <tr>
                            <td>
                                <div class="buttons popup-container clearfix topicToolbarProxy topicToolbarProxyFooter _Skins_HTML5TopicToolbar mc-component nocontent">
                                    <div class="button-group-container-left">
                                        <button class="button needs-pie expand-all-button" data-state1-class="expand-all-button" data-state2-class="collapse-all-button" data-state2-title="Collapse all" title="Expand all" data-state1-title="Expand all">
                                            <div>
                                                <div role="img" class="button-icon-wrapper" aria-label="Expand all">
                                                    <div class="button-icon"> </div>
                                                </div>
                                            </div>
                                        </button>
                                        <button class="button needs-pie remove-highlight-button" title="Remove Highlights">
                                            <div>
                                                <div role="img" class="button-icon-wrapper">
                                                    <div class="button-icon"> </div>
                                                </div>
                                            </div>
                                        </button>
                                    </div>
                                </div>
                            </td>
                            <td>
                                <p class="vec_BuildInfo"><a href="../../Shared/HowToUseOnlineHelp.htm" title="Tips for using the help" alt="Tips for using the help"><img src="../../../Resources/vImages/vBackstage/vHelpInfo.png" /></a>
                                </p>
                            </td>
                            <td>
                                <p class="vec_BuildInfo" style="text-align: right;"><span class="mc-variable Vector.BuildTime variable">2023-09-26T19:49:32</span>
                                </p>
                            </td>
                        </tr>
                    </tbody>
                </table>
            </div>
            <table style="width: 100%;border-collapse: separate;border-spacing: 3px 0px;margin-left: auto;margin-right: auto;caption-side: top;">
                <col />
                <col />
                <col />
                <col data-mc-conditions="vConditions.HTML5Link" />
                <tbody>
                    <tr>
                        <td style="background-color: #b70032;padding-left: 5pt;padding-right: 5pt;padding-top: 5pt;padding-bottom: 5pt;">
                            <p class="vec_Footer">©&#160;Vector Informatik GmbH</p>
                        </td>
                        <td style="background-color: #b70032;padding-left: 5pt;padding-right: 5pt;padding-top: 5pt;padding-bottom: 5pt;text-align: right;">
                            <p class="vec_FooterBold">
                                <MadCap:conditionalText data-mc-conditions="vConditions.vTESTstudioExcluded,vConditions.TestDataEditorExcluded">CANoe</MadCap:conditionalText> Version <MadCap:conditionalText data-mc-conditions="vConditions.vTESTstudioExcluded">17 SP3</MadCap:conditionalText></p>
                        </td>
                        <td style="background-color: #b70032;padding-left: 5pt;padding-right: 5pt;padding-top: 5pt;padding-bottom: 0pt;text-align: right;">
                            <p class="vec_Footer"><a href="../../Shared/ContactCopyrightLicense.htm" class="vec_Footer MCXref xref xrefvec_Footer">Contact/Copyright/License</a>
                            </p>
                        </td>
                        <td style="background-color: #b70032;padding-left: 5pt;padding-right: 5pt;padding-top: 5pt;padding-bottom: 0pt;text-align: right;">
                            <p class="vec_Footer"><a href="https://www.vector.com/int/en/company/get-info/privacy-policy/" target="_blank" class="vec_Footer">Data Privacy Notice</a>
                            </p>
                        </td>
                    </tr>
                </tbody>
            </table>
        </div>
    </body>
</html>