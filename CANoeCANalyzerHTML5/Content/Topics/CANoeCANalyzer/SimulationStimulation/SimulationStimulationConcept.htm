<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en-us" xml:lang="en-us" class="" data-mc-search-type="Stem" data-mc-help-system-file-name="CANoeCANalyzer.xml" data-mc-path-to-help-system="../../../../" data-mc-toc-path="CANoe|Simulation/Stimulation" data-mc-conditions="vConditions.CANoe4SWExcluded" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic" data-mc-preload-images="false" data-mc-in-preview-mode="false">
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta charset="utf-8" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
        <meta name="msapplication-config" content="../../../../Skins/Favicons/browserconfig.xml" />
        <link rel="apple-touch-icon" sizes="180x180" href="../../../../Skins/Favicons/apple-touch-icon.png" />
        <link rel="shortcut icon" href="../../../../Skins/Favicons/favicon-32x32.png" />
        <link rel="icon" sizes="96x96" href="../../../../Skins/Favicons/favicon-96x96.png" />
        <link rel="icon" sizes="32x32" href="../../../../Skins/Favicons/favicon-32x32.png" />
        <link rel="icon" sizes="16x16" href="../../../../Skins/Favicons/favicon-16x16.png" /><title>Simulation/Stimulation | Concept</title>
        <link href="../../../../Skins/Default/Stylesheets/Slideshow.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../Skins/Default/Stylesheets/Components/Styles.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../Skins/Default/Stylesheets/Components/Tablet.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../Skins/Default/Stylesheets/Components/Mobile.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../Skins/Default/Stylesheets/Components/Print.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../Resources/Stylesheets/vTableMasterPageHeader.css" rel="stylesheet" data-mc-stylesheet-type="table" />
        <link href="../../../Resources/Stylesheets/vStylesheet.css" rel="stylesheet" type="text/css" />
        <style>/*&lt;meta /&gt;*/

.button.expand-all-button
{
	-pie-background: linear-gradient(#ffffff, #ffffff);
}

.button.remove-highlight-button
{
	-pie-background: linear-gradient(#ffffff, #ffffff);
}

.button.collapse-all-button
{
	-pie-background: linear-gradient(#ffffff, #ffffff);
}

.needs-pie
{
	behavior: url('../../../../Resources/Scripts/PIE-no-motw.htc');
}

</style>
        <link href="../../../Resources/Stylesheets/vTable.css" rel="stylesheet" data-mc-stylesheet-type="table" />
        <link rel="apple-touch-icon" sizes="180x180" href="../../../../Skins/Favicons/apple-touch-icon.png" />
        <link rel="shortcut icon" href="../../../../Skins/Favicons/favicon-32x32.png" />
        <link rel="icon" sizes="96x96" href="../../../../Skins/Favicons/favicon-96x96.png" />
        <link rel="icon" sizes="32x32" href="../../../../Skins/Favicons/favicon-32x32.png" />
        <link rel="icon" sizes="16x16" href="../../../../Skins/Favicons/favicon-16x16.png" />
        <script src="../../../../Resources/Scripts/jquery.min.js" type="text/javascript">
        </script>
        <script src="../../../../Resources/Scripts/purify.min.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/require.min.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/require.config.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/foundation.min.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/plugins.min.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapGlobal.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapDom.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapUtilities.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapXhr.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapTextEffects.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapSlideshow.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapMessageBus.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapMessageBus.CrossFrame.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapDefault.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapMediaQueries.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapAccessibility.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapHelpSystem.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapAliasFile.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapTopicFeedback.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapFeedbackHelper.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapSkinHelper.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapToc.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapToc.Breadcrumbs.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapToc.MiniToc.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapToc.SideMenu.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapIndex.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapGlossary.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapParser.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapSearch.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapNavigateTopics.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapLms.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapELearning.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapTopic.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapFeedback.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapMicroContentComponent.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapSearchHelper.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapTopicElements.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapTriPane.js" type="text/javascript" defer="defer">
        </script>
        <script type="text/jscript" src="../../../Resources/vScripts/SyntaxHighlighting.js">
        </script>
        <script type="text/jscript" src="../../../Resources/vScripts/TabSwitch.js">
        </script>
        <script type="text/javascript" src="../../../Resources/vScripts/Vector.js">
        </script>
    </head>
    <body>
        <p class="MCWebHelpFramesetLink MCWebHelpFramesetLinkTop"><a href="../../../../CANoeCANalyzer.htm#Topics/CANoeCANalyzer/SimulationStimulation/SimulationStimulationConcept.htm">Open topic with navigation</a>
        </p>
        <div class="Body">
            <div role="main" id="mc-main-content">
                <div>
                    <p class="StructurePath"><a href="../CANoeCANalyzer.htm" class="StructurePath" data-mc-conditions="vConditions.CANalyzerExclude,vConditions.CANoe4ServerExcluded,vConditions.CANoe4SWExcluded,vConditions.TestDataEditorExcluded,vConditions.vTESTstudioExcluded,vConditions.TestUnitRunnerExcluded,vConditions.CANoeNMExcluded"><img src="../../../Resources/vImages/vToolIcons/CANoe_Icon16.png" alt="" />&#160;CANoe</a> » <a href="../Analysis/AnalysisConcept.htm" class="StructurePath"><MadCap:conditionalText data-mc-conditions="vConditions.CANalyzerExclude">Simulation/</MadCap:conditionalText>Stimulation</a> » Concept</p>
                    <h1>
                        <MadCap:conditionalText data-mc-conditions="vConditions.CANalyzerExclude">Simulation/</MadCap:conditionalText>Stimulation | Concept</h1>
                    <p class="MenuPath">&#160;</p>
                    <p class="AutoSearchFilterConcepts"><a name="aanchor4925"></a>
                        <MadCap:concept term="SFCore" />
                    </p>
                    <p class="IndexConcept"><a name="kanchor3691"></a><a name="aanchor4926"></a>
                        <MadCap:concept term="DomainConcept" />
                    </p>
                </div>
                <div>
                    <table style="margin-left: 0;margin-right: auto;width: 100%;">
                        <col style="width: 135px;" />
                        <col />
                        <tbody>
                            <tr data-mc-conditions="">
                                <td>
                                    <p>
                                        <img src="../../../Resources/vImages/vArea/vAreaSimulation_Icon256.svg" style="width: 128px;height: auto;" />
                                    </p>
                                </td>
                                <td style="vertical-align: middle;padding-left: 5pt;padding-right: 5pt;padding-top: 5pt;padding-bottom: 0pt;">
                                    <p class="TableSymbolHead"><a href="../../Shared/Glossary.htm">Glossary</a>: <a href="../../Shared/Glossary.htm#Simulation" class="Glossary">»Simulation</a></p>
                                    <ul>
                                        <li><span class="bold">Simulation</span>
                                            <br />A simulation includes all software components that can occur in the real control unit and the basic <span class="bold">transmission behavior</span> of the control unit. The control unit behavior is thus fully simulated.</li>
                                        <li><span class="bold">Remaining bus simulation</span>
                                            <br />When a real control unit is tested, the communication of the other control units in the network design is reproduced in a remaining bus simulation.</li>
                                        <li><span class="bold">Transmission models</span>
                                            <br />Transmission models describe the transmission behavior of messages and signals. Transmission models are integrated in the configuration as databases (e.g. DBC or XML files). The transmission is carried out, e.g. via a schedule table or the interaction layer.</li>
                                    </ul>
                                </td>
                            </tr>
                        </tbody>
                    </table>
                </div>
                <div>
                    <table style="margin-left: 0;margin-right: auto;width: 100%;">
                        <col style="width: 135px;" />
                        <col />
                        <tbody>
                            <tr>
                                <td>
                                    <p>
                                        <img src="../../../Resources/vImages/vArea/vAreaStimulation_Icon256.svg" style="width: 128px;height: auto;" />
                                    </p>
                                </td>
                                <td style="vertical-align: middle;padding-left: 5pt;padding-right: 5pt;padding-top: 5pt;padding-bottom: 0pt;">
                                    <p class="TableSymbolHead"><a href="../../Shared/Glossary.htm">Glossary</a>: <a href="../../Shared/Glossary.htm#Stimulation" class="Glossary">»Stimulation</a></p>
                                    <ul>
                                        <li><span class="bold">Stimulation</span>
                                            <br />The purpose of stimulation is to induce reactions of control units in the network. Here, for example, messages only may simply be sent, or <span class="bold">signal values set</span> and their corresponding message sent.</li>
                                    </ul>
                                </td>
                            </tr>
                        </tbody>
                    </table>
                </div>
                <div>
                    <table style="width: 100%;caption-side: top;margin-left: 0;margin-right: auto;mc-table-style: url('../../../Resources/Stylesheets/vTable.css');" class="TableStyle_vTable" cellspacing="0">
                        <col style="width: 50%;" />
                        <thead>
                            <tr>
                                <th colspan="2" class="TableStyle_vTable_Head_0_0_RowSep_ColSep">
                                    <p class="TableHead">Overview</p>
                                </th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr data-mc-conditions="vConditions.CANalyzerExclude">
                                <td colspan="2" class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p><span class="Product">CANoe</span> supports the three phases of the development process, ranging from simulation of the entire network and remaining bus simulation to analysis of a real network. This requires all ECUs in the network to be integrated as network nodes in the <span class="bold">Simulation Setup</span>. The bus communication is defined via integrated databases (e.g., DBC, XML).</p>
                                    <p class="TableBold"><a targets="TOG3Phases" href="javascript:void(0)" class="MCToggler MCTogglerHead MCTogglerHotSpot MCToggler_Open toggler MCTogglerHotSpot_ MCHotSpotImage" data-mc-targets="TOG3Phases"><img class="MCToggler_Image_Icon" src="../../../../Skins/Default/Stylesheets/Images/transparent.gif" height="11" width="16" alt="Closed" data-mc-alt2="Open" />The 3-Phases Development Process</a>
                                    </p>
                                    <div style="display: none;" data-mc-target-name="TOG3Phases">
                                        <table style="width: 100%;mc-table-style: url('../../../Resources/Stylesheets/vTable.css');" class="TableStyle_vTable" cellspacing="0">
                                            <col />
                                            <col />
                                            <tbody>
                                                <tr>
                                                    <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                                        <p class="Table"><span class="bold">Phase 1</span>
                                                            <br />Requirements analysis and network design</p>
                                                        <p class="Table">
                                                            <img src="../../../Resources/Images/CANoeCANalyzer/ConceptSimulationProcessPhase1_234x151.png" style="width: 234;height: 151;" />
                                                        </p>
                                                    </td>
                                                    <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd">
                                                        <p class="Table">A system manager initially specifies the network topology and refines the design down to the level of the network nodes. For this, the system manager defines the messages, chooses the baudrate of the bus, and specifies the communication behavior and the functional description of the individual network nodes. As a result, the <span class="bold">network can be fully simulated</span>. <br />Statistical data and initial indications about the busload and the expected latency times at the specified baudrate are then possible.</p>
                                                        <p class="Table">The simulation results serve to verify the design and can be used subsequently as a reference.</p>
                                                    </td>
                                                </tr>
                                                <tr>
                                                    <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                                        <p class="Table"><span class="bold">Phase 2</span>
                                                            <br />Realization of components with remaining bus simulation</p>
                                                        <p class="Table">
                                                            <img src="../../../Resources/Images/CANoeCANalyzer/ConceptSimulationProcessPhase2_234x151.png" style="width: 234;height: 151;" />
                                                        </p>
                                                    </td>
                                                    <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd">
                                                        <p class="Table">In phase 2, the individual network nodes are usually designed and developed independently and in parallel by the parties involved. To test a real network node, models of the other network nodes in the Simulation Setup can now be used for <span class="bold">remaining bus simulation</span>, in which the real node is deactivated in the Simulation Setup. The simulation is performed in realtime.</p>
                                                    </td>
                                                </tr>
                                                <tr>
                                                    <td class="TableStyle_vTable_Body_0_0_RowEnd_ColSep">
                                                        <p class="Table"><span class="bold">Phase 3</span>
                                                            <br />Commissioning</p>
                                                        <p class="Table">
                                                            <img src="../../../Resources/Images/CANoeCANalyzer/ConceptSimulationProcessPhase3_234x151.png" style="width: 234;height: 151;" />
                                                        </p>
                                                    </td>
                                                    <td class="TableStyle_vTable_Body_0_0_RowEnd_ColEnd">
                                                        <p class="Table">In phase 3, all real network nodes are connected to the real bus step by step. All network node models can now be deactivated in the Simulation Setup. <span class="Product">CANoe</span> is then used as an intelligent analysis tool to monitor the message traffic between the real network nodes on the bus and to compare the results with the specified requirements.</p>
                                                    </td>
                                                </tr>
                                            </tbody>
                                        </table>
                                    </div>
                                    <p class="Table">Two <span class="bold">working modes</span> are available for simulation:</p>
                                    <ul>
                                        <li>Real bus</li>
                                        <li>Simulated bus</li>
                                    </ul>
                                    <p class="Table">A full simulation can be run in both working modes. With a remaining bus simulation, the <span class="bold">real bus</span> working mode must be selected. The real network node and the remaining simulated network nodes are interconnected via an interface (e.g., VN family).</p>
                                </td>
                            </tr>
                            <tr data-mc-conditions="vConditions.CANalyzerExclude">
                                <th colspan="2" class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="TableHead">Simulation of an ECU</p>
                                </th>
                            </tr>
                            <tr data-mc-conditions="vConditions.CANalyzerExclude">
                                <td colspan="2" class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">The basis for a ECU simulation is the simulating of its full transmission behavior (transmission times and transmission conditions for each message). Various possibilities are available for this, in which <span class="bold">OEM-specific transmission models</span> can be taken into consideration.</p>
                                    <p class="Table">The main purpose of the <span class="bold">application</span> is to evaluate, process, and set signal and variable values. However, a full simulation of its functions is not always necessary.</p>
                                    <p class="Table">The actual signal access can occur on an application-specific basis, e.g., with a <span class="bold">Signal Generator</span>. In so doing, the <span class="bold">Signal Server</span> provides for easy signal access. All signals defined for communication are available in this server. Alternatively, the Signal Generator can also be used to change system and environment variables.</p>
                                    <p>The receiving of a message is always possible. A reaction, e.g., to a particular message, must be programmed (e.g., in CAPL with <span class="SourceCode">on message</span>).</p>
                                    <p class="TableBold">Example of a Simulated ECU in CANoe</p>
                                    <p colspan="2">
                                        <img src="../../../Resources/Images/CANoeCANalyzer/ConceptSimulationStimulation.png" />
                                    </p>
                                    <p colspan="2" class="TableBold"><a targets="TOGDevice" href="javascript:void(0)" class="MCToggler MCTogglerHead MCTogglerHotSpot MCToggler_Open toggler MCTogglerHotSpot_ MCHotSpotImage" data-mc-targets="TOGDevice"><img class="MCToggler_Image_Icon" src="../../../../Skins/Default/Stylesheets/Images/transparent.gif" height="11" width="16" alt="Closed" data-mc-alt2="Open" />Options for Implementation in CANoe</a>
                                    </p>
                                    <div style="display: none;" data-mc-target-name="TOGDevice">
                                        <p>The following table provides an overview of the components in the ECU and how they can be implemented in <span class="Product">CANoe</span>:</p>
                                        <table style="width: 100%;margin-left: 0;margin-right: auto;mc-table-style: url('../../../Resources/Stylesheets/vTable.css');" class="TableStyle_vTable" cellspacing="0">
                                            <col style="width: 50%;" />
                                            <col style="width: 50%;" />
                                            <thead>
                                                <tr>
                                                    <th class="TableStyle_vTable_Head_0_0_RowSep_ColSep">
                                                        <p class="TableHead">ECU Component/Task</p>
                                                    </th>
                                                    <th class="TableStyle_vTable_Head_0_0_RowSep_ColEnd">
                                                        <p class="TableHead">Reproduction in CANoe</p>
                                                    </th>
                                                </tr>
                                            </thead>
                                            <tbody>
                                                <tr>
                                                    <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                                        <p class="TableBold">Application</p>
                                                        <p class="Table">The application contains the implemented functions and algorithms in an ECU (intelligence of the ECU).</p>
                                                    </td>
                                                    <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd">
                                                        <ul>
                                                            <li><span class="bold">Panels</span>
                                                                <br />
                                                            </li>
                                                            <li><span class="bold">CAPL programs</span>
                                                                <br />
                                                            </li>
                                                            <li><span class="bold">MATLAB model</span>
                                                                <br />
                                                            </li>
                                                            <li><span class="bold">Signal Generators</span>
                                                                <br />
                                                            </li>
                                                            <li><span class="bold">Interactive Generator (IG)</span>
                                                                <br />
                                                            </li>
                                                        </ul>
                                                    </td>
                                                </tr>
                                                <tr>
                                                    <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                                        <p class="TableBold">Interaction Layer</p>
                                                        <p class="Table">The interaction layer contains the signal view for the application (Rx and Tx) and assigns the signals to a message in accordance with the transmission model, checks the transmission type, and causes the message to be sent.</p>
                                                        <p class="Table">In addition to controlling transmission behavior, the interaction layer also supports CRCs (cyclic redundancy checks) and message counters and controls the interaction with the network management and transport layers.</p>
                                                    </td>
                                                    <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd">
                                                        <ul>
                                                            <li><span class="bold">CANoe interaction layer + interaction layer DLL</span>(CAN)<br />The <span class="Product">CANoe</span> interaction layer DLL can be replaced by OEM-specific DLLs.</li>
                                                            <li><span class="bold">Schedule table</span> (LIN, FlexRay)<br /></li>
                                                            <li><span class="bold">CAPL programs</span>
                                                            </li>
                                                        </ul>
                                                    </td>
                                                </tr>
                                                <tr>
                                                    <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                                        <p class="TableBold">Transport Layer</p>
                                                        <p class="Table">Provides for the dividing of information into multiple messages when it does not fit into a single message (segmenting and assembling of data blocks).</p>
                                                    </td>
                                                    <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd">
                                                        <ul>
                                                            <li><span class="bold">Transport protocol DLL</span>
                                                                <br />The TP DLL can be replaced by OEM-specific DLLs. It contains a CAPL interface and diagnostic interface.</li>
                                                        </ul>
                                                    </td>
                                                </tr>
                                                <tr>
                                                    <td class="TableStyle_vTable_Body_0_0_RowEnd_ColSep">
                                                        <p class="TableBold">Network Management (NM)</p>
                                                        <p class="Table">Responsible for the changeover of ECUs from standard operating mode to sleep mode. In addition, network management is also used to monitor the availability of the individual network nodes.</p>
                                                    </td>
                                                    <td class="TableStyle_vTable_Body_0_0_RowEnd_ColEnd">
                                                        <ul>
                                                            <li><span class="bold">Network management DLL</span>
                                                                <br />The OSEK standard is supported automatically for network management.</li>
                                                        </ul>
                                                    </td>
                                                </tr>
                                            </tbody>
                                        </table>
                                    </div>
                                </td>
                            </tr>
                            <tr data-mc-conditions="">
                                <th colspan="2" class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p colspan="2" class="TableHead">Stimulating by Changing Signal and Variable Values</p>
                                </th>
                            </tr>
                            <tr data-mc-conditions="">
                                <td colspan="2" class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p colspan="2" class="Table">There are various possibilities in <span class="Product">CANoe</span> for setting signal and variable values.
</p>
                                    <ul>
                                        <li colspan="2"><span class="bold">Programs</span>
                                            <br />CAPL<MadCap:conditionalText data-mc-conditions="vConditions.CANalyzerExclude"> and .NET</MadCap:conditionalText> programs can be used to set signal and variable values. In addition to programming, <span class="Product">CANoe</span> also provides predefined programming steps for easy creation of command sequences in the <span class="bold">Visual Sequencer</span> for the configuration.</li>
                                        <li colspan="2" data-mc-conditions="vConditions.CANalyzerExclude"><span class="bold">Models</span>
                                            <br />Other possibilities exist besides programming to realize complex ECU functions. For example, programming can be graphically modeled in <span class="Product">MATLAB</span> and a <span class="Product">CANoe</span> compatible model can be created. This model can, in turn, be integrated in <span class="Product">CANoe</span>.</li>
                                        <li colspan="2"><span class="bold">Configurable User Interfaces</span>
                                            <br /><span class="Product">CANoe</span> provides a configurable user interface that is used to set values for variables and signals and to generate value patterns. Besides these predefined user interfaces, you can also generate your own <MadCap:conditionalText data-mc-conditions="vConditions.CANalyzerExclude">control and </MadCap:conditionalText>display interfaces, i.e., so-called <span class="bold">panels</span>.</li>
                                        <li colspan="2" data-mc-conditions="vConditions.CANalyzerExclude"><span class="bold">Test Modules / Test Units</span>
                                            <br />Test modules (CAPL, .NET, XML) and test units allow various test cases for a ECU to be executed one after the other. Value changes are possible according to the test scenario.</li>
                                    </ul>
                                    <p colspan="2" class="Table">These options enable any signal and variable values to be specified. Additional steps are required for <span class="bold">transmitting</span> these values on the bus. For example, transmitting can occur via a button in the same user interface or by means of programs or automatic transmission means.</p>
                                </td>
                            </tr>
                            <tr>
                                <th colspan="2" class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="TableHead">
                                        <MadCap:conditionalText data-mc-conditions="vConditions.CANalyzerExclude">Simulation of the Transmission Behavior</MadCap:conditionalText>
                                    </p>
                                </th>
                            </tr>
                            <tr>
                                <td colspan="2" class="TableStyle_vTable_Body_0_0_RowEnd_ColSep">
                                    <p>There are various possibilities in <span class="Product">CANoe</span> for <MadCap:conditionalText data-mc-conditions="vConditions.CANalyzerExclude">simulating the transmission behavior of an ECU</MadCap:conditionalText> :</p>
                                    <p class="TableBold">With or Without Database</p>
                                    <ul>
                                        <li><span class="bold">Programs</span>
                                            <br />CAPL<MadCap:conditionalText data-mc-conditions="vConditions.CANalyzerExclude"> and .NET</MadCap:conditionalText> programs can be used to reproduce any transmission behavior of messages. Additional functions, such as the programming of CRCs or message counters, are also possible.<br />With this procedure, every individual step must be programmed manually, and if a change of the database occurs, the programs must be individually adapted.</li>
                                        <li><span class="bold">Configurable User Interfaces</span>
                                            <br /><span class="Product">CANoe</span> provides interactive user interfaces that allow messages to be easily and quickly selected and transmitted.<br />For example, the <span class="bold">Interactive Generator</span> can be used to transmit messages cyclically or at the press of a button. <br />This type of transmission does not require your own programming, but it is limited to the pre-assigned functionality (e.g., cyclic transmitting only) of the user interface.<br /></li>
                                        <li data-mc-conditions="vConditions.CANalyzerExclude"><span class="bold">Test Modules / Test Units</span>
                                            <br />Test modules (CAPL, .NET, XML) and test units allow various test cases for an ECU to be executed one after the other. Value changes can also be transmitted according to the test scenario.</li>
                                        <li><span class="bold">Replay of Recorded Data</span>
                                            <br />Data traffic can also be generated by replaying a recorded logging file.</li>
                                    </ul>
                                    <p class="TableBold" data-mc-conditions="vConditions.CANalyzerExclude">With Database<br /></p>
                                    <ul data-mc-conditions="vConditions.CANalyzerExclude">
                                        <li><span class="bold">Automatic Transmission Means</span>
                                            <br />The transmission behavior of messages and signals is described in an integrated database.<br />The time behavior and the assignment of signals to their messages are dependent on the bus system.<br />In the case of LIN and FlexRay, the schedule table takes over the transmitting of messages. In the case of CAN, the interaction layer (<span class="bold">IL</span>) takes over the transmitting of messages in conjunction with function libraries (<span class="bold">DLLs</span>), which must be integrated in the network node. The network management (<span class="bold">NM</span>) and the transport protocol (<span class="bold">TP</span>) also access your own function libraries.<br /><br />These automatic means only come into effect if the attributes provided for them by the OEM exist in the corresponding database. The transmission model is thereby defined by a group of several attributes. Additional functions, such as CRCs and message counters, are supported by the interaction layer for CAN and FlexRay.</li>
                                    </ul>
                                </td>
                            </tr>
                        </tbody>
                    </table>
                    <p class="LinkList"><a href="SimulationStimulationFeatures.htm" class="LinkList"><MadCap:conditionalText data-mc-conditions="vConditions.CANalyzerExclude">Simulation/</MadCap:conditionalText>Stimulation Functional Overview</a>&#160;&#160;•&#160;&#160;Further Concept Pages: <a class="MCHelpControl MCHelpControl-Concept conceptLink" data-mc-concepts="DomainConcept" href="javascript:void(0);" data-mc-topics="A429 for CANoe/CANalyzer | Concept|../A429/A429Concept.htm#aanchor11855||AFDX for CANoe/CANalyzer | Concept|../AFDX/AFDXconcept.htm#aanchor4826||Analysis | Concept|../Analysis/AnalysisConcept.htm#aanchor8600||ARINC-825 | Concept|../ARINC825/ARINC825Concept.htm#aanchor7284||CANoe/CANalyzer | Concept|../CANoeCANalyzerConcept.htm#aanchor5188||Car2x for CANoe/CANalyzer | Concept|../Car2x/Car2xConcept.htm#aanchor4971||Database Concept|../Car2x/c2xConceptDB.htm#aanchor2534||Diagnostics | Concept|../Diagnostics/DiagnosticsConcept.htm#aanchor4668||Ethernet | Concept|../Ethernet/EthernetConcept.htm#aanchor2619||ISO11783 for CANoe | Concept|../ISO11783/conceptISO11783.htm#aanchor9602||J1939 for CANoe/CANalyzer | Concept|../J1939/conceptJ1939.htm#aanchor10849||Simulation Concept (MOST)|../MOST/SimulationConcept/most_simulation-concept.htm#aanchor2416||Simulation/Stimulation | Concept|#aanchor4926||Testing | Concept|../Test/TestConcept.htm#aanchor4938"><span class="MCHelpControl-ConceptHotSpot_"><img class="MCHelpControl_Image_Icon" src="../../../../Skins/Default/Stylesheets/Images/transparent.gif" height="14" width="16" alt="Concept Link Icon" />See Also</span></a></p>
                </div>
            </div>
        </div>
        <div class="Footer">
            <div class="FooterWhite">
                <table class="FooterWhite" style="border-collapse: collapse;margin-left: auto;margin-right: auto;">
                    <col style="width: 70px;" data-mc-conditions="vConditions.HTML5Link" />
                    <col style="width: 16px;" data-mc-conditions="vConditions.HTML5Link" />
                    <col />
                    <tbody>
                        <tr>
                            <td>
                                <div class="buttons popup-container clearfix topicToolbarProxy topicToolbarProxyFooter _Skins_HTML5TopicToolbar mc-component nocontent">
                                    <div class="button-group-container-left">
                                        <button class="button needs-pie expand-all-button" data-state1-class="expand-all-button" data-state2-class="collapse-all-button" data-state2-title="Collapse all" title="Expand all" data-state1-title="Expand all">
                                            <div>
                                                <div role="img" class="button-icon-wrapper" aria-label="Expand all">
                                                    <div class="button-icon"> </div>
                                                </div>
                                            </div>
                                        </button>
                                        <button class="button needs-pie remove-highlight-button" title="Remove Highlights">
                                            <div>
                                                <div role="img" class="button-icon-wrapper">
                                                    <div class="button-icon"> </div>
                                                </div>
                                            </div>
                                        </button>
                                    </div>
                                </div>
                            </td>
                            <td>
                                <p class="vec_BuildInfo"><a href="../../Shared/HowToUseOnlineHelp.htm" title="Tips for using the help" alt="Tips for using the help"><img src="../../../Resources/vImages/vBackstage/vHelpInfo.png" /></a>
                                </p>
                            </td>
                            <td>
                                <p class="vec_BuildInfo" style="text-align: right;"><span class="mc-variable Vector.BuildTime variable">2023-09-26T19:49:32</span>
                                </p>
                            </td>
                        </tr>
                    </tbody>
                </table>
            </div>
            <table style="width: 100%;border-collapse: separate;border-spacing: 3px 0px;margin-left: auto;margin-right: auto;caption-side: top;">
                <col />
                <col />
                <col />
                <col data-mc-conditions="vConditions.HTML5Link" />
                <tbody>
                    <tr>
                        <td style="background-color: #b70032;padding-left: 5pt;padding-right: 5pt;padding-top: 5pt;padding-bottom: 5pt;">
                            <p class="vec_Footer">©&#160;Vector Informatik GmbH</p>
                        </td>
                        <td style="background-color: #b70032;padding-left: 5pt;padding-right: 5pt;padding-top: 5pt;padding-bottom: 5pt;text-align: right;">
                            <p class="vec_FooterBold">
                                <MadCap:conditionalText data-mc-conditions="vConditions.vTESTstudioExcluded,vConditions.TestDataEditorExcluded">CANoe</MadCap:conditionalText> Version <MadCap:conditionalText data-mc-conditions="vConditions.vTESTstudioExcluded">17 SP3</MadCap:conditionalText></p>
                        </td>
                        <td style="background-color: #b70032;padding-left: 5pt;padding-right: 5pt;padding-top: 5pt;padding-bottom: 0pt;text-align: right;">
                            <p class="vec_Footer"><a href="../../Shared/ContactCopyrightLicense.htm" class="vec_Footer MCXref xref xrefvec_Footer">Contact/Copyright/License</a>
                            </p>
                        </td>
                        <td style="background-color: #b70032;padding-left: 5pt;padding-right: 5pt;padding-top: 5pt;padding-bottom: 0pt;text-align: right;">
                            <p class="vec_Footer"><a href="https://www.vector.com/int/en/company/get-info/privacy-policy/" target="_blank" class="vec_Footer">Data Privacy Notice</a>
                            </p>
                        </td>
                    </tr>
                </tbody>
            </table>
        </div>
    </body>
</html>