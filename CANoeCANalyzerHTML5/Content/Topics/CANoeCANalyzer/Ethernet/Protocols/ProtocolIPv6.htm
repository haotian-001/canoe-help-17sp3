<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en-us" xml:lang="en-us" class="" data-mc-search-type="Stem" data-mc-help-system-file-name="CANoeCANalyzer.xml" data-mc-path-to-help-system="../../../../../" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic" data-mc-preload-images="false" data-mc-in-preview-mode="false">
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta charset="utf-8" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
        <meta name="msapplication-config" content="../../../../../Skins/Favicons/browserconfig.xml" />
        <link rel="apple-touch-icon" sizes="180x180" href="../../../../../Skins/Favicons/apple-touch-icon.png" />
        <link rel="shortcut icon" href="../../../../../Skins/Favicons/favicon-32x32.png" />
        <link rel="icon" sizes="96x96" href="../../../../../Skins/Favicons/favicon-96x96.png" />
        <link rel="icon" sizes="32x32" href="../../../../../Skins/Favicons/favicon-32x32.png" />
        <link rel="icon" sizes="16x16" href="../../../../../Skins/Favicons/favicon-16x16.png" /><title>IPv6</title>
        <link href="../../../../../Skins/Default/Stylesheets/Slideshow.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../../Skins/Default/Stylesheets/Components/Styles.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../../Skins/Default/Stylesheets/Components/Tablet.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../../Skins/Default/Stylesheets/Components/Mobile.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../../Skins/Default/Stylesheets/Components/Print.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../Resources/Stylesheets/vTableMasterPageHeader.css" rel="stylesheet" data-mc-stylesheet-type="table" />
        <link href="../../../../Resources/Stylesheets/vStylesheet.css" rel="stylesheet" type="text/css" />
        <style>/*&lt;meta /&gt;*/

.button.expand-all-button
{
	-pie-background: linear-gradient(#ffffff, #ffffff);
}

.button.remove-highlight-button
{
	-pie-background: linear-gradient(#ffffff, #ffffff);
}

.button.collapse-all-button
{
	-pie-background: linear-gradient(#ffffff, #ffffff);
}

.needs-pie
{
	behavior: url('../../../../../Resources/Scripts/PIE-no-motw.htc');
}

</style>
        <link href="../../../../Resources/Stylesheets/vTableSymbol.css" rel="stylesheet" data-mc-stylesheet-type="table" />
        <link href="../../../../Resources/Stylesheets/vTable.css" rel="stylesheet" data-mc-stylesheet-type="table" />
        <link rel="apple-touch-icon" sizes="180x180" href="../../../../../Skins/Favicons/apple-touch-icon.png" />
        <link rel="shortcut icon" href="../../../../../Skins/Favicons/favicon-32x32.png" />
        <link rel="icon" sizes="96x96" href="../../../../../Skins/Favicons/favicon-96x96.png" />
        <link rel="icon" sizes="32x32" href="../../../../../Skins/Favicons/favicon-32x32.png" />
        <link rel="icon" sizes="16x16" href="../../../../../Skins/Favicons/favicon-16x16.png" />
        <script src="../../../../../Resources/Scripts/jquery.min.js" type="text/javascript">
        </script>
        <script src="../../../../../Resources/Scripts/purify.min.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/require.min.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/require.config.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/foundation.min.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/plugins.min.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapGlobal.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapDom.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapUtilities.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapXhr.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapTextEffects.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapSlideshow.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapMessageBus.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapMessageBus.CrossFrame.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapDefault.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapMediaQueries.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapAccessibility.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapHelpSystem.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapAliasFile.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapTopicFeedback.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapFeedbackHelper.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapSkinHelper.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapToc.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapToc.Breadcrumbs.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapToc.MiniToc.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapToc.SideMenu.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapIndex.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapGlossary.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapParser.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapSearch.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapNavigateTopics.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapLms.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapELearning.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapTopic.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapFeedback.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapMicroContentComponent.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapSearchHelper.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapTopicElements.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapTriPane.js" type="text/javascript" defer="defer">
        </script>
        <script type="text/jscript" src="../../../../Resources/vScripts/SyntaxHighlighting.js">
        </script>
        <script type="text/jscript" src="../../../../Resources/vScripts/TabSwitch.js">
        </script>
        <script type="text/javascript" src="../../../../Resources/vScripts/Vector.js">
        </script>
    </head>
    <body>
        <p class="MCWebHelpFramesetLink MCWebHelpFramesetLinkTop"><a href="../../../../../CANoeCANalyzer.htm#Topics/CANoeCANalyzer/Ethernet/Protocols/ProtocolIPv6.htm">Open topic with navigation</a>
        </p>
        <div class="Body">
            <div role="main" id="mc-main-content">
                <p class="StructurePath"><a href="../Ethernet.htm" class="StructurePath">Ethernet</a> » <a href="Protocol.htm" class="StructurePath">Protocol Overview</a> » <span class="mc-variable System.Title variable">IPv6</span></p>
                <h1><a name="kanchor9800"></a><a name="aanchor12279"></a>
                    <MadCap:concept term="Protocols" /><span class="mc-variable System.Title variable">IPv6</span>
                </h1>
                <p class="MenuPath">&#160;</p>
                <p class="AutoSearchFilterConcepts"><a name="aanchor12280"></a>
                    <MadCap:concept term="SFCore" />
                </p>
                <div>
                    <table style="mc-table-style: url('../../../../Resources/Stylesheets/vTable.css');" class="TableStyle_vTable" cellspacing="0">
                        <col />
                        <thead>
                            <tr>
                                <th class="TableStyle_vTable_Head_0_0_RowSep_ColEnd">
                                    <p class="TableHead"><a name="Shortcuts" id="Shortcuts"></a>Quick Access</p>
                                </th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd">
                                    <p class="Table"><a href="#ProtocolInfo">Protocol Information</a>
                                    </p>
                                </td>
                            </tr>
                            <tr>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd">
                                    <p class="Table"><a href="#ProtocolDependencies">Protocol Dependencies</a>
                                    </p>
                                </td>
                            </tr>
                            <tr>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd">
                                    <p class="Table"><a href="#HeaderFormat">Header Format</a>
                                    </p>
                                </td>
                            </tr>
                            <tr>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd">
                                    <p class="Table"><a href="#ProtocolValidation">Protocol Validation</a>
                                    </p>
                                </td>
                            </tr>
                            <tr data-mc-conditions="vConditions.CANoeOnly">
                                <td class="TableStyle_vTable_Body_0_0_RowEnd_ColEnd">
                                    <p class="Table"><a href="#PacketAPI">Programming</a>
                                    </p>
                                </td>
                            </tr>
                        </tbody>
                    </table>
                </div>
                <h2 class="SectionSub"><a name="ProtocolInfo" id="ProtocolInfo"></a>Protocol Information <a href="#Shortcuts" class="TopOfPage">[▲ back]</a></h2>
                <p>In contrast to <a href="ProtocolIPv4.htm">IPv4</a> the IPv6 header has a defined length of 40 bytes (320 bits). Optional information are embedded in the so called extension headers between the IPv6 header and the payload.</p>
                <h2 class="SectionSub"><a name="ProtocolDependencies" id="ProtocolDependencies"></a>Protocol Dependencies <a href="#Shortcuts" class="TopOfPage">[▲ back]</a></h2>
                <div>
                    <table style="mc-table-style: url('../../../../Resources/Stylesheets/vTable.css');margin-left: 0;margin-right: auto;" class="TableStyle_vTable" cellspacing="0">
                        <col class="TableStyle-vTable-Column-Column1" />
                        <col class="TableStyle-vTable-Column-Column1" />
                        <col />
                        <col />
                        <tbody>
                            <tr class="TableStyle-vTable-Body-Body1">
                                <th class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">Application layer</p>
                                </th>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep" colspan="2">
                                    <p class="Table" style="text-align: center;">DHCPv6</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep" colspan="3">
                                    <p>&#160;</p>
                                </td>
                            </tr>
                            <tr class="TableStyle-vTable-Body-Body1">
                                <th class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">Transport layer</p>
                                </th>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep" style="text-align: center;padding-left: 5pt;padding-right: 5pt;padding-top: 5pt;padding-bottom: 0pt;border-right-style: solid;border-right-width: 1px;border-right-color: #909090;border-bottom-style: solid;border-bottom-width: 1px;border-bottom-color: #909090;" colspan="2">
                                    <p class="Table" style="text-align: center;">UDP</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep" style="text-align: center;" colspan="2">
                                    <p class="Table" style="text-align: center;">TCP</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd">&#160;</td>
                            </tr>
                            <tr class="TableStyle-vTable-Body-Body1">
                                <th class="TableStyle_vTable_Body_0_0_RowSep_ColSep" rowspan="3">
                                    <p class="Table">Internet layer</p>
                                </th>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep" style="text-align: center;background-color: #b70032;padding-left: 5pt;padding-right: 5pt;padding-top: 5pt;padding-bottom: 0pt;border-right-style: solid;border-right-width: 1px;border-right-color: #909090;border-bottom-style: solid;border-bottom-width: 1px;border-bottom-color: #909090;" colspan="4" rowspan="3">
                                    <p class="Table" style="text-align: center;">&#160;</p>
                                    <p class="TableBoldWhite">IPv6</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd">
                                    <p class="Table" style="text-align: center;">NDP</p>
                                </td>
                            </tr>
                            <tr class="TableStyle-vTable-Body-Body1">
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd">
                                    <p class="Table">ICMPv6</p>
                                </td>
                            </tr>
                            <tr class="TableStyle-vTable-Body-Body1">
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd" style="background-color: #b70032;padding-left: 5pt;padding-right: 5pt;padding-top: 5pt;padding-bottom: 0pt;border-right-style: solid;border-right-width: 1px;border-right-color: #909090;border-bottom-style: solid;border-bottom-width: 1px;border-bottom-color: #909090;">
                                    <p class="Table">&#160;</p>
                                </td>
                            </tr>
                            <tr class="TableStyle-vTable-Body-Body1">
                                <th class="TableStyle_vTable_Body_0_0_RowEnd_ColSep">
                                    <p class="Table">Link layer</p>
                                </th>
                                <td class="TableStyle_vTable_Body_0_0_RowEnd_ColSep" colspan="5" style="text-align: center;">
                                    <p class="Table">Ethernet</p>
                                </td>
                            </tr>
                        </tbody>
                    </table>
                </div>
                <h2 class="SectionSub"><a name="HeaderFormat" id="HeaderFormat"></a>Header Format <a href="#Shortcuts" class="TopOfPage">[▲ back]</a></h2>
                <p>
                    <img src="../../../../Resources/Images/CANoeCANalyzer/EthernetIpv6.png" />
                </p>
                <div>
                    <table style="width: 100%;caption-side: top;margin-left: 0;margin-right: auto;mc-table-style: url('../../../../Resources/Stylesheets/vTable.css');" class="TableStyle_vTable" cellspacing="0">
                        <col style="width: 130px;" />
                        <col />
                        <col />
                        <col data-mc-conditions="vConditions.CANoeOnly" />
                        <col data-mc-conditions="vConditions.CANoeOnly" />
                        <col data-mc-conditions="vConditions.CANoeOnly" />
                        <thead>
                            <tr>
                                <th rowspan="2" class="TableStyle_vTable_Head_0_0_RowSep_ColSep">
                                    <p class="TableHead">Protocol Field</p>
                                </th>
                                <th class="TableStyle_vTable_Head_0_0_RowSep_ColSep" rowspan="2">
                                    <p class="TableHead">Offset<br />[byte.bit]</p>
                                </th>
                                <th class="TableStyle_vTable_Head_0_0_RowSep_ColSep" rowspan="2">
                                    <p class="TableHead">Length<br />[bit]</p>
                                </th>
                                <th class="TableStyle_vTable_Head_0_0_RowSep_ColEnd" colspan="3">
                                    <p class="TableHead"><a href="../Procedures/ProgrammingEthernetPacket.htm" class="red">Programming</a>
                                    </p>
                                </th>
                            </tr>
                            <tr>
                                <th class="TableStyle_vTable_Head_0_0_RowSep_ColSep">
                                    <p class="TableHead"><a href="../../../CAPLFunctions/IP/Selectors/CAPLfunctionProtocolField.htm" class="red">Designator</a>
                                    </p>
                                </th>
                                <th class="TableStyle_vTable_Head_0_0_RowSep_ColSep">
                                    <p class="TableSyntax"><a href="../../../CAPLFunctions/IP/Methods/CAPLfunctionProtocolInit.htm" class="SourceCode">ethernetPacket.<br></br>&lt;protocol&gt;.Init</a>
                                    </p>
                                </th>
                                <th class="TableStyle_vTable_Head_0_0_RowSep_ColEnd">
                                    <p class="TableHead"><a href="../../../CAPLFunctions/IP/Methods/CAPLfunctionCompletePacket.htm" class="SourceCode">ethernetPacket.<br></br>CompletePacket</a>
                                    </p>
                                </th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr>
                                <td rowspan="2" class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">IP Version</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">0</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">4</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">Version</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">6</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd">
                                    <p class="Table">—</p>
                                </td>
                            </tr>
                            <tr>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd" colspan="5">
                                    <p class="Table">IP version, here  = 6</p>
                                </td>
                            </tr>
                            <tr>
                                <td rowspan="2" class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">Traffic Class</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">0.4</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">8</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">Cass</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">0</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd">
                                    <p class="Table">—</p>
                                </td>
                            </tr>
                            <tr>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd" colspan="5">
                                    <p colspan="5" class="Table">Identifies and distinguish between different classes or priorities of IPv6 packets.</p>
                                </td>
                            </tr>
                            <tr>
                                <td rowspan="2" class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">Flow Label</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">1.4</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">20</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">Flow</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">0</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd">
                                    <p class="Table">—</p>
                                </td>
                            </tr>
                            <tr>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd" colspan="5">
                                    <p colspan="3" class="Table">Labels sequences of packets for which it requests special handling by the routers, such as non-default quality of service or realtime service.</p>
                                </td>
                            </tr>
                            <tr>
                                <td rowspan="2" class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">Payload Length</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">4</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">16</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">Length</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">0</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd">
                                    <p class="TableBold">•</p>
                                </td>
                            </tr>
                            <tr>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd" colspan="5">
                                    <p colspan="3" class="Table">Length of the IPv6 payload (without header but with the extension headers)</p>
                                </td>
                            </tr>
                            <tr>
                                <td rowspan="2" class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">Next Header</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">6</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">8</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">Next</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">59 (IPv6-NoExt)</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd">
                                    <p class="Table">with the next protocol</p>
                                </td>
                            </tr>
                            <tr>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd" colspan="5">
                                    <p colspan="3" class="Table">Identifies the type of the next header, this can also be an extension header. The same values as in the <a href="ProtocolIPv4.htm">IPv4</a> protocol field are used.</p>
                                </td>
                            </tr>
                            <tr>
                                <td rowspan="2" class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">Hop Limit</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">7</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">8</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">HopLimit</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">64</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd">
                                    <p class="Table">—</p>
                                </td>
                            </tr>
                            <tr>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd" colspan="5">
                                    <p class="Table">Maximum number of steps through routers that a packet is allowed to cover.</p>
                                    <p class="Table">It is decremented by one on passing a router (hops). Packets with a hop limit of 0 are discarded.</p>
                                </td>
                            </tr>
                            <tr>
                                <td rowspan="2" class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">Source Address</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">8</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">128</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">Source</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">0</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd">
                                    <p class="Table">—</p>
                                </td>
                            </tr>
                            <tr>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd" colspan="5">
                                    <p colspan="3" class="Table">Sender address of the packet</p>
                                </td>
                            </tr>
                            <tr>
                                <td rowspan="2" class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">Destination Address</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">24</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">128</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">Destination</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">0</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd">
                                    <p class="Table">—</p>
                                </td>
                            </tr>
                            <tr>
                                <td class="TableStyle_vTable_Body_0_0_RowEnd_ColEnd" colspan="5">
                                    <p colspan="3" class="Table">Receiver address of the packet.</p>
                                    <p colspan="3" class="Table">The receiver is possibly not the final receiver, if a routing header is present.</p>
                                </td>
                            </tr>
                        </tbody>
                    </table>
                </div>
                <h2><a targets="TOGExtensionHeader" href="javascript:void(0)" class="MCToggler MCTogglerHead MCTogglerHotSpot MCToggler_Open toggler MCTogglerHotSpot_ MCHotSpotImage" data-mc-targets="TOGExtensionHeader"><img class="MCToggler_Image_Icon" src="../../../../../Skins/Default/Stylesheets/Images/transparent.gif" height="11" width="16" alt="Closed" data-mc-alt2="Open" />Extension Header</a>
                </h2>
                <div style="display: none;" data-mc-target-name="TOGExtensionHeader">
                    <p>Additional to the standard header the following extension headers are possible.</p>
                    <p>Each extension header should occur once except the Destination Options Header which should occur at most twice (once before a Routing Header and once before the upper-layer header)</p>
                    <table style="width: 100%;caption-side: top;margin-left: 0;margin-right: auto;mc-table-style: url('../../../../Resources/Stylesheets/vTable.css');" class="TableStyle_vTable" cellspacing="0">
                        <col style="width: 130px;" />
                        <col />
                        <col />
                        <col data-mc-conditions="vConditions.CANoeOnly" />
                        <col data-mc-conditions="vConditions.CANoeOnly" />
                        <col data-mc-conditions="vConditions.CANoeOnly" />
                        <thead>
                            <tr>
                                <th rowspan="2" class="TableStyle_vTable_Head_0_0_RowSep_ColSep">
                                    <p class="TableHead"><a name="ExtensionHeader" id="ExtensionHeader"></a>Protocol Fields</p>
                                </th>
                                <th class="TableStyle_vTable_Head_0_0_RowSep_ColSep" rowspan="2">
                                    <p class="TableHead">Offset<br />[byte.bit]</p>
                                </th>
                                <th class="TableStyle_vTable_Head_0_0_RowSep_ColSep" rowspan="2">
                                    <p class="TableHead">Length<br />[bit]</p>
                                </th>
                                <th class="TableStyle_vTable_Head_0_0_RowSep_ColEnd" colspan="3">
                                    <p class="TableHead"><a href="../Procedures/ProgrammingEthernetPacket.htm" class="red">Programming</a>
                                    </p>
                                </th>
                            </tr>
                            <tr>
                                <th class="TableStyle_vTable_Head_0_0_RowSep_ColSep">
                                    <p class="TableHead"><a href="../../../CAPLFunctions/IP/Selectors/CAPLfunctionProtocolField.htm" class="red">Designator</a>
                                    </p>
                                </th>
                                <th class="TableStyle_vTable_Head_0_0_RowSep_ColSep">
                                    <p class="TableSyntax"><a href="../../../CAPLFunctions/IP/Methods/CAPLfunctionProtocolOptionalStructureInit.htm" class="SourceCode">ethernetPacket.&lt;protocol&gt;.<br />&lt;optional-structure&gt;.Init</a>
                                    </p>
                                </th>
                                <th class="TableStyle_vTable_Head_0_0_RowSep_ColEnd">
                                    <p class="TableHead"><a href="../../../CAPLFunctions/IP/Methods/CAPLfunctionCompletePacket.htm" class="SourceCode">ethernetPacket.<br></br>CompletePacket</a>
                                    </p>
                                </th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd" colspan="6">
                                    <p class="TableBold">IPv6 Hop-By-Hop Options (Designator: HopByHopOptions)</p>
                                </td>
                            </tr>
                            <tr>
                                <td rowspan="2" class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p rowspan="2" class="Table">Next Header</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">0</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">8</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">HopByHopOptions.Next</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">59 (IPv6-NoExt)</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd">
                                    <p class="Table">with the next protocol</p>
                                </td>
                            </tr>
                            <tr>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd" colspan="5">
                                    <p colspan="6" class="Table">Identifies the type of the next header.</p>
                                </td>
                            </tr>
                            <tr>
                                <td rowspan="2" class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p rowspan="2" class="Table">Header Length</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">1</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">8</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">HopByHopOptions.Length</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">—</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd">
                                    <p class="Table">—</p>
                                </td>
                            </tr>
                            <tr>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd" colspan="5">
                                    <p colspan="6" class="Table">Length of the Hop-By-Hop options header in 8-byte units, the first eight byte are not part of that length.</p>
                                </td>
                            </tr>
                            <tr>
                                <td rowspan="2" class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p rowspan="2" class="Table">Options</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">2</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">8 (+ 8+ n)</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">HopByHopOptions.Options</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p>[1, 4, 0, 0, 0, 0]</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd">
                                    <p class="Table">—</p>
                                </td>
                            </tr>
                            <tr>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd" colspan="5">
                                    <p class="Table">Contains one or more options, each option starts with the type (eight bit).</p>
                                    <p class="Table">If the option is more than a byte, the length (eight bit) and the option data follow.</p>
                                </td>
                            </tr>
                            <tr>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep" rowspan="2">
                                    <p class="Table">Option Code</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">2</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">8</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">HopByHopOptions.OptionCode</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">1 (PadN)</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd">
                                    <p class="Table">—</p>
                                </td>
                            </tr>
                            <tr>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd" colspan="5">
                                    <p class="Table">Option type</p>
                                </td>
                            </tr>
                            <tr>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep" rowspan="2">
                                    <p class="Table">Option Length</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">3</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">8</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">HopByHopOptions.OptionLength</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">4</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd">
                                    <p class="Table">—</p>
                                </td>
                            </tr>
                            <tr>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd" colspan="5">
                                    <p class="Table">Option length</p>
                                </td>
                            </tr>
                            <tr>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep" rowspan="2">
                                    <p class="Table">Option Data</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">4</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">n</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">HopByHopOptions.OptionData</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">[0, 0, 0, 0]</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd">
                                    <p class="Table">—</p>
                                </td>
                            </tr>
                            <tr>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd" colspan="5">
                                    <p class="Table">Data of the option.</p>
                                </td>
                            </tr>
                            <tr>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd" colspan="6">
                                    <p class="TableBold">IPv6 Routing Header (Designator: Routing)</p>
                                </td>
                            </tr>
                            <tr>
                                <td rowspan="2" class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p rowspan="2" class="Table">Next Header</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">0</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">8</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">Routing.Next</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">59 (IPv6-NoExt)</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd">
                                    <p class="Table">with the next protocol</p>
                                </td>
                            </tr>
                            <tr>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd" colspan="5">
                                    <p colspan="6" class="Table">Identifies the type of the next header.</p>
                                </td>
                            </tr>
                            <tr>
                                <td rowspan="2" class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p rowspan="2" class="Table">Header Length</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">1</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">8</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">Routing.Length</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">0</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd">
                                    <p class="Table">—</p>
                                </td>
                            </tr>
                            <tr>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd" colspan="5">
                                    <p class="Table">Length of the header in 8-byte units, the first eight byte are not part of that length.</p>
                                </td>
                            </tr>
                            <tr>
                                <td rowspan="2" class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p rowspan="2" class="Table">Routing Type</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">2</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">8</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">Routing.Type</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">0</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd">
                                    <p class="Table">—</p>
                                </td>
                            </tr>
                            <tr>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd" colspan="5">
                                    <p colspan="6" class="Table">Routing header type</p>
                                </td>
                            </tr>
                            <tr>
                                <td rowspan="2" class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p rowspan="2" class="Table">Segments Left</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">3</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">8</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">Routing.SegmentsLeft</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">0</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd">
                                    <p class="Table">—</p>
                                </td>
                            </tr>
                            <tr>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd" colspan="5">
                                    <p class="Table">Number of left route segments.</p>
                                </td>
                            </tr>
                            <tr>
                                <td rowspan="2" class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p rowspan="2" class="Table">Routing Data</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">4</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">n</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">Routing.Data</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">[0, 0, 0, 0]</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd">
                                    <p class="Table">—</p>
                                </td>
                            </tr>
                            <tr>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd" colspan="5">
                                    <p class="Table">Data, dependent on routing type.</p>
                                </td>
                            </tr>
                            <tr>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd" colspan="6">
                                    <p class="TableBold">IPv6 Fragment Header (Designator: Fragment)</p>
                                </td>
                            </tr>
                            <tr>
                                <td rowspan="2" class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p rowspan="2" class="Table">Next Header</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">0</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">8</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">Fragment.Next</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">59 (IPv6-NoExt)</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd">
                                    <p class="Table">with the next protocol</p>
                                </td>
                            </tr>
                            <tr>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd" colspan="5">
                                    <p colspan="6" class="Table">Identifies the type of the next header.</p>
                                </td>
                            </tr>
                            <tr>
                                <td rowspan="2" class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p rowspan="2" class="Table">Fragment Offset</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">2</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">13</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">Fragment.Offset</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">0</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd">
                                    <p class="Table">—</p>
                                </td>
                            </tr>
                            <tr>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd" colspan="5">
                                    <p class="Table">Offset of data in 8-byte units that follow the header; related to the start of that part of the original packet that can be fragmented.</p>
                                </td>
                            </tr>
                            <tr>
                                <td rowspan="2" class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p rowspan="2" class="Table">M Flag</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">3.7</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">1</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">Fragment.MFlag</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">0</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd">
                                    <p class="Table">—</p>
                                </td>
                            </tr>
                            <tr>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd" colspan="5">
                                    <p class="Table">1 = more fragments<br />0 = last fragment</p>
                                </td>
                            </tr>
                            <tr>
                                <td rowspan="2" class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p rowspan="2" class="Table">Identification</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">4</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">32</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">Fragment.Identification</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">0</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd">
                                    <p class="Table">—</p>
                                </td>
                            </tr>
                            <tr>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd" colspan="5">
                                    <p colspan="6" class="Table">Fragments of one packet have the same identifier.</p>
                                </td>
                            </tr>
                            <tr>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd" colspan="6">
                                    <p class="TableBold">IPv6 Authentication Header (Designator: Authentication)</p>
                                </td>
                            </tr>
                            <tr>
                                <td rowspan="2" class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p rowspan="2" class="Table">Next Header</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">0</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">8</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">Authentication.Next</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">59 (IPv6-NoExt)</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd">
                                    <p class="Table">with the next protocol</p>
                                </td>
                            </tr>
                            <tr>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd" colspan="5">
                                    <p colspan="6" class="Table">Identifies the type of the next header</p>
                                </td>
                            </tr>
                            <tr>
                                <td rowspan="2" class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p rowspan="2" class="Table">Payload Length</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">1</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">8</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">Authentication.Length</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">2</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd">
                                    <p class="Table">—</p>
                                </td>
                            </tr>
                            <tr>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd" colspan="5">
                                    <p colspan="6" class="Table">Length of the authentication headers in 4-byte units minus 2&#160;x&#160;4-byte units.</p>
                                    <p colspan="6" class="Table">If <span class="SourceCode">ICV</span> has a length of 12 byte, the value of the payload length has to be 4. That means a header length of 6&#160;x&#160;4 byte.</p>
                                </td>
                            </tr>
                            <tr>
                                <td rowspan="2" class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p rowspan="2" class="Table">Security Parameters Index (SPI)</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">4</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">32</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">Authentication.Spi</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">0</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd">
                                    <p class="Table">—</p>
                                </td>
                            </tr>
                            <tr>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd" colspan="5">
                                    <p class="Table">Identifies the unique security association (SA) for this packet together with the destination address.</p>
                                </td>
                            </tr>
                            <tr>
                                <td rowspan="2" class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p rowspan="2" class="Table">Sequence Number</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">8</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">32</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">Authentication.Sequence</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">0</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd">
                                    <p class="Table">—</p>
                                </td>
                            </tr>
                            <tr>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd" colspan="5">
                                    <p class="Table">Is used as antireplay value and is incremented each time the packet is sent.</p>
                                </td>
                            </tr>
                            <tr>
                                <td rowspan="2" class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p rowspan="2" class="Table">Integrity Check Value (ICV)</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">12</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">n</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">Authentication.Icv</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">[0, 0, 0, 0]</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd">
                                    <p class="Table">—</p>
                                </td>
                            </tr>
                            <tr>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd" colspan="5">
                                    <p class="Table">Identifies the complete packet, the length must be a multiple of 32.</p>
                                </td>
                            </tr>
                            <tr>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd" colspan="6">
                                    <p class="TableBold">IPv6 Encapsulating Security Payload (Designator: Esp)</p>
                                </td>
                            </tr>
                            <tr>
                                <td rowspan="2" class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p rowspan="2" class="Table">Security Parameters Index (SPI)</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">0</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">32</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">Esp.Spi</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">59 (IPv6-NoExt)</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd">
                                    <p class="Table">with the next protocol</p>
                                </td>
                            </tr>
                            <tr>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd" colspan="5">
                                    <p class="Table">Identifies the unique security association (SA) for this packet together with the destination address.</p>
                                </td>
                            </tr>
                            <tr>
                                <td rowspan="2" class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p rowspan="2" class="Table">Sequence Number</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">4</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">32</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">Esp.Sequence</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">0</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd">
                                    <p class="Table">—</p>
                                </td>
                            </tr>
                            <tr>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd" colspan="5">
                                    <p colspan="6" class="Table">Is used as antireplay value and is incremented each time the packet is sent.</p>
                                </td>
                            </tr>
                            <tr>
                                <td rowspan="2" class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p rowspan="2" class="Table">Encrypted Data</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">8</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">n</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">Esp.Data</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">0</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd">
                                    <p class="Table">—</p>
                                </td>
                            </tr>
                            <tr>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd" colspan="5">
                                    <p class="Table">Encrypted data (contains encrypted payload, type of the payload and optional authentication data).</p>
                                </td>
                            </tr>
                            <tr>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd" colspan="6">
                                    <p class="TableBold">IPv6 Destination Options Header (Designator: DestinationOptions)</p>
                                </td>
                            </tr>
                            <tr>
                                <td rowspan="2" class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p rowspan="2" class="Table">Next Header</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">0</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">8</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">DestinationOptions.Next</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">59 (IPv6-NoExt)</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd">
                                    <p class="Table">with the next protocol</p>
                                </td>
                            </tr>
                            <tr>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd" colspan="5">
                                    <p colspan="6" class="Table">Identifies the type of the next header.</p>
                                </td>
                            </tr>
                            <tr>
                                <td rowspan="2" class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p rowspan="2" class="Table">Header Length</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">1</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">8</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">DestinationOptions.Length</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">0</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd">
                                    <p class="Table">—</p>
                                </td>
                            </tr>
                            <tr>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd" colspan="5">
                                    <p class="Table">Length of the header in 8-byte units, the first eight byte are not part of that length.</p>
                                </td>
                            </tr>
                            <tr>
                                <td rowspan="2" class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p rowspan="2" class="Table">Options</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">2</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">8 (+ 8+ n)</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">DestinationOptions.Options</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p>[1, 4, 0, 0, 0, 0]</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd">
                                    <p class="Table">—</p>
                                </td>
                            </tr>
                            <tr>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd" colspan="5">
                                    <p class="Table">Contains one or more options, each option starts with the type (eight bit).</p>
                                    <p class="Table">If the option is more than a byte, the length (eight bit) and the option data follow.</p>
                                </td>
                            </tr>
                            <tr>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep" rowspan="2">
                                    <p class="Table">Option Code</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">2</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">8</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">DestinationOptions.OptionCode</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">1 (PadN)</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd">
                                    <p class="Table">—</p>
                                </td>
                            </tr>
                            <tr>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd" colspan="5">
                                    <p class="Table">Option type</p>
                                </td>
                            </tr>
                            <tr>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep" rowspan="2">
                                    <p class="Table">Option Length</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">3</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">8</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">DestinationOptions.OptionLength</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">4</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd">
                                    <p class="Table">—</p>
                                </td>
                            </tr>
                            <tr>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd" colspan="5">
                                    <p class="Table">Option length</p>
                                </td>
                            </tr>
                            <tr>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep" rowspan="2">
                                    <p class="Table">Option Data</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">4</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">n</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">DestinationOptions.OptionData</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">[0, 0, 0, 0]</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd">
                                    <p class="Table">—</p>
                                </td>
                            </tr>
                            <tr>
                                <td class="TableStyle_vTable_Body_0_0_RowEnd_ColEnd" colspan="5">
                                    <p class="Table">Data of the option.</p>
                                </td>
                            </tr>
                        </tbody>
                    </table>
                    <div>
                        <table style="width: 100%;margin-left: 0;margin-right: auto;mc-table-style: url('../../../../Resources/Stylesheets/vTableSymbol.css');" class="TableStyle-vTableSymbol" cellspacing="0">
                            <col class="TableStyle-vTableSymbol-Column-Column1" />
                            <col class="TableStyle-vTableSymbol-Column-Column2" />
                            <tbody>
                                <tr>
                                    <td class="TableStyle-vTableSymbol-BodyB-Column1-">
                                        <p class="Table">
                                            <img src="../../../../Resources/vImages/vExample.png" style="width: 48px;height: 45px;" title="Example" alt="Example" />
                                        </p>
                                    </td>
                                    <td class="TableStyle-vTableSymbol-BodyA-Column2-">
                                        <p class="TableSymbolHead">Example</p>
                                        <p>When more than one extension header is used in the same packet, the RFC 2460 recommends that those headers appear in the following order</p>
                                        <ul>
                                            <li>IPv6 header</li>
                                            <li>Hop-by-Hop Options Header</li>
                                            <li>Destination Options Header</li>
                                            <li>Routing Header</li>
                                            <li>Fragment Header</li>
                                            <li>Authentication Header</li>
                                            <li>Encapsulating Security Payload Header</li>
                                            <li>Destination Options Header</li>
                                            <li>Header of the next upper-layer protocol</li>
                                        </ul>
                                    </td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                </div>
                <h2 class="SectionSub"><a name="ProtocolValidation" id="ProtocolValidation"></a>Protocol Validation <a href="#Shortcuts" class="TopOfPage">[▲ back]</a></h2>
                <p>Ethernet packets containing the IPv6 protocol are analyzed and checked for consistency. Observed irregularities are displayed in the <span class="bold">Protocol Validation</span> column of the <a href="../../Windows/Trace/TraceWindow.htm">Trace Window</a>.</p>
                <div>
                    <table style="width: 100%;mc-table-style: url('../../../../Resources/Stylesheets/vTable.css');" class="TableStyle_vTable" cellspacing="0">
                        <col />
                        <col />
                        <col />
                        <thead>
                            <tr>
                                <th class="TableStyle_vTable_Head_0_0_RowSep_ColSep">
                                    <p class="TableHead">Protocol Validation ID</p>
                                </th>
                                <th class="TableStyle_vTable_Head_0_0_RowSep_ColSep">
                                    <p class="TableHead">Message</p>
                                </th>
                                <th class="TableStyle_vTable_Head_0_0_RowSep_ColEnd">
                                    <p class="TableHead">Description</p>
                                </th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">[IPv6-001]</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">IPv6 header version invalid, must be 6
</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd">
                                    <p class="Table">The IPv6 protocol version (<span class="bold">Version</span> field) must be 6.</p>
                                </td>
                            </tr>
                            <tr>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">[IPv6-002]</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">IPv6 payload length is bigger than available data
</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd">
                                    <p class="Table">The payload length specified in the header (<span class="bold">Payload Length</span> field) is bigger than the present packet.</p>
                                </td>
                            </tr>
                            <tr>
                                <td class="TableStyle_vTable_Body_0_0_RowEnd_ColSep">
                                    <p class="Table">[IPv6-003]</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowEnd_ColSep">
                                    <p class="Table">IPv6 packet length is too small. Must be at least 40 bytes
</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowEnd_ColEnd">
                                    <p class="Table">The present packet is too short. An IPv6 packet must consist of at least 40 bytes to be able to contain the header completely.</p>
                                </td>
                            </tr>
                        </tbody>
                    </table>
                </div>
                <h2 class="SectionSub" data-mc-conditions="vConditions.CANoeOnly"><a name="PacketAPI" id="PacketAPI"></a>Programming <a href="#Shortcuts" class="TopOfPage">[▲ back]</a></h2>
                <div data-mc-conditions="vConditions.CANoeOnly">
                    <h2>Initialization</h2>
                    <p>During the initialization of the IPv6 protocol, the field <span class="bold">Ethertype</span>=86DDh in the <a href="ProtocolEthernet.htm#HeaderFormat">Ethernet</a> header is also set.</p>
                    <div>
                        <table style="width: 100%;margin-left: 0;margin-right: auto;mc-table-style: url('../../../../Resources/Stylesheets/vTableSymbol.css');" class="TableStyle-vTableSymbol" cellspacing="0">
                            <col class="TableStyle-vTableSymbol-Column-Column1" />
                            <col class="TableStyle-vTableSymbol-Column-Column2" />
                            <tbody>
                                <tr>
                                    <td class="TableStyle-vTableSymbol-BodyB-Column1-">
                                        <p class="Table">
                                            <img src="../../../../Resources/vImages/vExample.png" style="width: 48px;height: 45px;" title="Example" alt="Example" />
                                        </p>
                                    </td>
                                    <td class="TableStyle-vTableSymbol-BodyA-Column2-">
                                        <p class="TableSymbolHead">Example</p>
                                        <p class="Table">In this example an Ethernet packet with IPv6 protocol is created and sent. The Ethertype is output in the Write Window before sending.</p>
                                        <table style="width: 100%;">
                                            <col style="width: 90px;" />
                                            <col />
                                            <tbody>
                                                <tr>
                                                    <td>
                                                        <p class="TableBold">CAPL</p>
                                                    </td>
                                                    <td>
                                                        <p class="TableSourceCode">ethernetPacket pkt;<br /><br /><span class="CodeComment">// initialize packet IPv6</span><br />pkt.ipv6.Init();<br /><br /><span class="CodeComment">// print ethertype ("IPv6 has ethertype 0x86DD")</span><br />write( "IPv6 has ethertype 0x%04X", pkt.type );<br /><br /><span class="CodeComment">// send Ethernet packet</span><br />output( pkt );</p>
                                                    </td>
                                                </tr>
                                                <tr>
                                                    <td>
                                                        <p class="TableBold">C#</p>
                                                    </td>
                                                    <td>
                                                        <p class="TableSourceCode">EthernetPacket pkt = new EthernetPacket();<br /><br /><span class="CodeComment">// initialize packet IPv6</span><br />pkt.IPv6.Init();<br /><br /><span class="CodeComment">// print ethertype ("IPv6 has ethertype 0x86DD")</span><br />Output.WriteLine("IPv6 has ethertype 0x{0:X4}", pkt.Ethertype);<br /><br /><span class="CodeComment">// send Ethernet packet</span><br />pkt.Send();</p>
                                                    </td>
                                                </tr>
                                            </tbody>
                                        </table>
                                    </td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                    <h2>Header Access</h2>
                    <p>The read and write access to the protocol fields of the header is done by means of <a href="../../../CAPLFunctions/IP/Selectors/CAPLfunctionProtocolOptionalStructureField.htm">selectors</a> (CAPL) or properties (.NET) which have been named according to their designators.</p>
                    <div>
                        <table style="width: 100%;margin-left: 0;margin-right: auto;mc-table-style: url('../../../../Resources/Stylesheets/vTableSymbol.css');" class="TableStyle-vTableSymbol" cellspacing="0">
                            <col class="TableStyle-vTableSymbol-Column-Column1">
                            </col>
                            <col class="TableStyle-vTableSymbol-Column-Column2">
                            </col>
                            <tbody>
                                <tr>
                                    <td class="TableStyle-vTableSymbol-BodyB-Column1-">
                                        <p class="Table">
                                            <img src="../../../../Resources/vImages/vInfo.png" style="width: 48px;height: 45px;" title="Note" alt="Note">
                                            </img>
                                        </p>
                                    </td>
                                    <td class="TableStyle-vTableSymbol-BodyA-Column2-">
                                        <p class="TableSymbolHead">Note</p>
                                        <p class="Table">If a higher layer protocol is initialized in an empty packet which does not explicitly require IPv6, the initialization of IPv4 takes place by default on the internet layer.</p>
                                    </td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                    <div>
                        <table style="width: 100%;margin-left: 0;margin-right: auto;mc-table-style: url('../../../../Resources/Stylesheets/vTableSymbol.css');" class="TableStyle-vTableSymbol" cellspacing="0">
                            <col class="TableStyle-vTableSymbol-Column-Column1">
                            </col>
                            <col class="TableStyle-vTableSymbol-Column-Column2">
                            </col>
                            <tbody>
                                <tr>
                                    <td class="TableStyle-vTableSymbol-BodyB-Column1-">
                                        <p class="Table">
                                            <img src="../../../../Resources/vImages/vExample.png" style="width: 48px;height: 45px;" title="Example" alt="Example">
                                            </img>
                                        </p>
                                    </td>
                                    <td class="TableStyle-vTableSymbol-BodyA-Column2-">
                                        <p class="TableSymbolHead">Example</p>
                                        <p class="Table">In this example, a new packet is generated and sent with IPv6 and several protocol fields are filled with specific values.</p>
                                        <p class="Table">By this, two variants for the assignment of IP addresses are demonstrated:</p>
                                        <ul>
                                            <li>Direct parsing of an address from a string</li>
                                            <li>The assignment via objects of the type <a href="../../../CAPLFunctions/IP/Objects/CAPLfunctionIPAdredress.htm" class="SourceCode">ip_Address</a> (CAPL) or <span class="SourceCode">System.Net.IPAddress</span> (.NET)</li>
                                        </ul>
                                        <table style="width: 100%;">
                                            <col style="width: 90px;">
                                            </col>
                                            <col>
                                            </col>
                                            <tbody>
                                                <tr>
                                                    <td>
                                                        <p class="TableBold">CAPL</p>
                                                    </td>
                                                    <td>
                                                        <p class="TableSourceCode">ip_Address 2001:DB8::C5 destinationAddress;<br />byte addressBytes[16];<br />ethernetPacket pkt;<br /><br /><span class="CodeComment">// initialize packet with IPv6 protocol</span><br />pkt.ipv6.Init();<br /><br /><span class="CodeComment">// set IPv6 addresses</span><br />pkt.ipv6.source.ParseAddress( "2001:DB8::CA87" );<br />pkt.SetDestinationIPAddress( receiverAddress );<br /><br /><span class="CodeComment">// set hop limit</span><br />pkt.ipv6.hopLimit = 32;<br /><br /><span class="CodeComment">// add extension header DestinationOptions</span><br />pkt.ipv6.DestinationOptions.Init();<br /><br /><span class="CodeComment">// calculate IPv6 checksum and send Ethernet packet</span><br />pkt.CompletePacket();<br />output( pkt );</p>
                                                    </td>
                                                </tr>
                                                <tr>
                                                    <td>
                                                        <p class="TableBold">C#</p>
                                                    </td>
                                                    <td>
                                                        <p class="TableSourceCode">using System.Net; <span class="CodeComment">// for type IPAddress</span><br />...<br />IPAddress destinationAddress = IPAddress.Parse("2001:DB8::C5");<br />EthernetPacket pkt = new EthernetPacket();<br /><br /><span class="CodeComment">// initialize packet with IPv6 protocol</span><br />pkt.IPv6.Init();<br /><br /><span class="CodeComment">// set IPv6 addresses</span><br />pkt.IPv6.Source.ParseAddress("2001:DB8::CA87");<br />pkt.IPv6.Destination.Value = destinationAddress;<br /><br /><span class="CodeComment">// set hop limit</span><br />pkt.IPv6.HopLimit.Value = 32;<br /><br /><span class="CodeComment">// add extension header DestinationOptions</span><br />pkt.IPv6.DestinationOptions.Init();<br /><br /><span class="CodeComment">// calculate IPv6 checksum and send Ethernet packet</span><br />pkt.CompletePacket();<br />pkt.Send();</p>
                                                    </td>
                                                </tr>
                                            </tbody>
                                        </table>
                                    </td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                    <h2>Options</h2>
                    <p>The IPv6 protocol specifies several extension headers (see above <span class="bold">Extension Headers</span> section), which can follow the standard header. With <a href="../../../CAPLFunctions/IP/Methods/CAPLfunctionProtocolFieldIsAvailable.htm" class="SourceCode">ethernetPacket.&lt;protocol&gt;.&lt;field&gt;.IsAvailable</a> you can check if the extension header is present, with <a href="../../../CAPLFunctions/IP/Methods/CAPLfunctionProtocolOptionalStructureInit.htm" class="SourceCode">ethernetPacket.&lt;protocol&gt;.&lt;optional-structure&gt;.Init</a> you can add the extension header and with <a href="../../../CAPLFunctions/IP/Methods/CAPLfunctionProtocolOptionalStructureClear.htm" class="SourceCode">ethernetPacket.&lt;protocol&gt;.&lt;optional-structure&gt;.Clear</a> you can delete it if necessary. When initializing an extension header, the <span class="bold">Next Header</span> field of the previous header is automatically set correctly.</p>
                    <div>
                        <table style="width: 100%;margin-left: 0;margin-right: auto;mc-table-style: url('../../../../Resources/Stylesheets/vTableSymbol.css');" class="TableStyle-vTableSymbol" cellspacing="0">
                            <col class="TableStyle-vTableSymbol-Column-Column1">
                            </col>
                            <col class="TableStyle-vTableSymbol-Column-Column2">
                            </col>
                            <tbody>
                                <tr>
                                    <td class="TableStyle-vTableSymbol-BodyB-Column1-">
                                        <p class="Table">
                                            <img src="../../../../Resources/vImages/vExample.png" style="width: 48px;height: 45px;" title="Example" alt="Example">
                                            </img>
                                        </p>
                                    </td>
                                    <td class="TableStyle-vTableSymbol-BodyA-Column2-">
                                        <p class="TableSymbolHead">Example</p>
                                        <p class="Table">In this example, the extension headers <span class="bold">HopByHopOptions</span> and <span class="bold">Authentication</span> are appended to each IPv6 packet sent from the node's TCP/IP stack if they are not already present in the packet.</p>
                                        <table style="width: 100%;">
                                            <col style="width: 90px;">
                                            </col>
                                            <col>
                                            </col>
                                            <tbody>
                                                <tr>
                                                    <td>
                                                        <p class="TableBold">CAPL</p>
                                                    </td>
                                                    <td>
                                                        <p class="TableSourceCode">long OnIpSendPrepare(dword socket, ethernetPacket * packet)<br />{<br />&#160;&#160;if ( packet.ipv6.IsAvailable() )<br />&#160;&#160;{<br />&#160;&#160;&#160;&#160;if ( !packet.ipv6.hopByHopOptions.IsAvailable() ) packet.ipv6.hopByHopOptions.Init();<br />&#160;&#160;&#160;&#160;if ( !packet.ipv6.authentication.IsAvailable() ) packet.ipv6.authentication.Init();<br />&#160;&#160;&#160;&#160;packet.CompletePacket();<br />&#160;&#160;}<br />&#160;&#160;return 1;<br />}</p>
                                                    </td>
                                                </tr>
                                                <tr>
                                                    <td>
                                                        <p class="TableBold">C#</p>
                                                    </td>
                                                    <td>
                                                        <p class="TableSourceCode">[OnIpSendPrepare]<br />public bool AddHopByHopOptions(Socket socket, EthernetPacket pkt)<br />{<br />&#160;&#160;if (pkt.IPv6.IsAvailable)<br />&#160;&#160;{<br />&#160;&#160;&#160;&#160;if (!pkt.IPv6.HopByHopOptions.IsAvailable) pkt.IPv6.HopByHopOptions.Init();<br />&#160;&#160;&#160;&#160;if (!pkt.IPv6.Authentication.IsAvailable) pkt.IPv6.Authentication.Init();<br />&#160;&#160;&#160;&#160;pkt.CompletePacket();<br />&#160;&#160;}<br />&#160;&#160;return true;<br />}</p>
                                                    </td>
                                                </tr>
                                            </tbody>
                                        </table>
                                    </td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                </div>
                <p class="LinkList">&#160;</p>
            </div>
        </div>
        <div class="Footer">
            <div class="FooterWhite">
                <table class="FooterWhite" style="border-collapse: collapse;margin-left: auto;margin-right: auto;">
                    <col style="width: 70px;" data-mc-conditions="vConditions.HTML5Link" />
                    <col style="width: 16px;" data-mc-conditions="vConditions.HTML5Link" />
                    <col />
                    <tbody>
                        <tr>
                            <td>
                                <div class="buttons popup-container clearfix topicToolbarProxy topicToolbarProxyFooter _Skins_HTML5TopicToolbar mc-component nocontent">
                                    <div class="button-group-container-left">
                                        <button class="button needs-pie expand-all-button" data-state1-class="expand-all-button" data-state2-class="collapse-all-button" data-state2-title="Collapse all" title="Expand all" data-state1-title="Expand all">
                                            <div>
                                                <div role="img" class="button-icon-wrapper" aria-label="Expand all">
                                                    <div class="button-icon"> </div>
                                                </div>
                                            </div>
                                        </button>
                                        <button class="button needs-pie remove-highlight-button" title="Remove Highlights">
                                            <div>
                                                <div role="img" class="button-icon-wrapper">
                                                    <div class="button-icon"> </div>
                                                </div>
                                            </div>
                                        </button>
                                    </div>
                                </div>
                            </td>
                            <td>
                                <p class="vec_BuildInfo"><a href="../../../Shared/HowToUseOnlineHelp.htm" title="Tips for using the help" alt="Tips for using the help"><img src="../../../../Resources/vImages/vBackstage/vHelpInfo.png" /></a>
                                </p>
                            </td>
                            <td>
                                <p class="vec_BuildInfo" style="text-align: right;"><span class="mc-variable Vector.BuildTime variable">2023-09-26T19:49:32</span>
                                </p>
                            </td>
                        </tr>
                    </tbody>
                </table>
            </div>
            <table style="width: 100%;border-collapse: separate;border-spacing: 3px 0px;margin-left: auto;margin-right: auto;caption-side: top;">
                <col />
                <col />
                <col />
                <col data-mc-conditions="vConditions.HTML5Link" />
                <tbody>
                    <tr>
                        <td style="background-color: #b70032;padding-left: 5pt;padding-right: 5pt;padding-top: 5pt;padding-bottom: 5pt;">
                            <p class="vec_Footer">©&#160;Vector Informatik GmbH</p>
                        </td>
                        <td style="background-color: #b70032;padding-left: 5pt;padding-right: 5pt;padding-top: 5pt;padding-bottom: 5pt;text-align: right;">
                            <p class="vec_FooterBold">
                                <MadCap:conditionalText data-mc-conditions="vConditions.vTESTstudioExcluded,vConditions.TestDataEditorExcluded">CANoe</MadCap:conditionalText> Version <MadCap:conditionalText data-mc-conditions="vConditions.vTESTstudioExcluded">17 SP3</MadCap:conditionalText></p>
                        </td>
                        <td style="background-color: #b70032;padding-left: 5pt;padding-right: 5pt;padding-top: 5pt;padding-bottom: 0pt;text-align: right;">
                            <p class="vec_Footer"><a href="../../../Shared/ContactCopyrightLicense.htm" class="vec_Footer MCXref xref xrefvec_Footer">Contact/Copyright/License</a>
                            </p>
                        </td>
                        <td style="background-color: #b70032;padding-left: 5pt;padding-right: 5pt;padding-top: 5pt;padding-bottom: 0pt;text-align: right;">
                            <p class="vec_Footer"><a href="https://www.vector.com/int/en/company/get-info/privacy-policy/" target="_blank" class="vec_Footer">Data Privacy Notice</a>
                            </p>
                        </td>
                    </tr>
                </tbody>
            </table>
        </div>
    </body>
</html>