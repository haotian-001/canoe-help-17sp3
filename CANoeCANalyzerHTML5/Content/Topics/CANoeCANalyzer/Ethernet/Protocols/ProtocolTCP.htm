<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en-us" xml:lang="en-us" class="" data-mc-search-type="Stem" data-mc-help-system-file-name="CANoeCANalyzer.xml" data-mc-path-to-help-system="../../../../../" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic" data-mc-preload-images="false" data-mc-in-preview-mode="false">
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta charset="utf-8" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
        <meta name="msapplication-config" content="../../../../../Skins/Favicons/browserconfig.xml" />
        <link rel="apple-touch-icon" sizes="180x180" href="../../../../../Skins/Favicons/apple-touch-icon.png" />
        <link rel="shortcut icon" href="../../../../../Skins/Favicons/favicon-32x32.png" />
        <link rel="icon" sizes="96x96" href="../../../../../Skins/Favicons/favicon-96x96.png" />
        <link rel="icon" sizes="32x32" href="../../../../../Skins/Favicons/favicon-32x32.png" />
        <link rel="icon" sizes="16x16" href="../../../../../Skins/Favicons/favicon-16x16.png" /><title>TCP</title>
        <link href="../../../../../Skins/Default/Stylesheets/Slideshow.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../../Skins/Default/Stylesheets/Components/Styles.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../../Skins/Default/Stylesheets/Components/Tablet.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../../Skins/Default/Stylesheets/Components/Mobile.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../../Skins/Default/Stylesheets/Components/Print.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../Resources/Stylesheets/vTableMasterPageHeader.css" rel="stylesheet" data-mc-stylesheet-type="table" />
        <link href="../../../../Resources/Stylesheets/vStylesheet.css" rel="stylesheet" type="text/css" />
        <style>/*&lt;meta /&gt;*/

.button.expand-all-button
{
	-pie-background: linear-gradient(#ffffff, #ffffff);
}

.button.remove-highlight-button
{
	-pie-background: linear-gradient(#ffffff, #ffffff);
}

.button.collapse-all-button
{
	-pie-background: linear-gradient(#ffffff, #ffffff);
}

.needs-pie
{
	behavior: url('../../../../../Resources/Scripts/PIE-no-motw.htc');
}

</style>
        <link href="../../../../Resources/Stylesheets/vTableSymbol.css" rel="stylesheet" data-mc-stylesheet-type="table" />
        <link href="../../../../Resources/Stylesheets/vTable.css" rel="stylesheet" data-mc-stylesheet-type="table" />
        <link rel="apple-touch-icon" sizes="180x180" href="../../../../../Skins/Favicons/apple-touch-icon.png" />
        <link rel="shortcut icon" href="../../../../../Skins/Favicons/favicon-32x32.png" />
        <link rel="icon" sizes="96x96" href="../../../../../Skins/Favicons/favicon-96x96.png" />
        <link rel="icon" sizes="32x32" href="../../../../../Skins/Favicons/favicon-32x32.png" />
        <link rel="icon" sizes="16x16" href="../../../../../Skins/Favicons/favicon-16x16.png" />
        <script src="../../../../../Resources/Scripts/jquery.min.js" type="text/javascript">
        </script>
        <script src="../../../../../Resources/Scripts/purify.min.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/require.min.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/require.config.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/foundation.min.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/plugins.min.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapGlobal.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapDom.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapUtilities.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapXhr.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapTextEffects.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapSlideshow.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapMessageBus.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapMessageBus.CrossFrame.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapDefault.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapMediaQueries.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapAccessibility.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapHelpSystem.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapAliasFile.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapTopicFeedback.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapFeedbackHelper.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapSkinHelper.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapToc.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapToc.Breadcrumbs.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapToc.MiniToc.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapToc.SideMenu.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapIndex.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapGlossary.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapParser.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapSearch.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapNavigateTopics.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapLms.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapELearning.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapTopic.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapFeedback.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapMicroContentComponent.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapSearchHelper.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapTopicElements.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapTriPane.js" type="text/javascript" defer="defer">
        </script>
        <script type="text/jscript" src="../../../../Resources/vScripts/SyntaxHighlighting.js">
        </script>
        <script type="text/jscript" src="../../../../Resources/vScripts/TabSwitch.js">
        </script>
        <script type="text/javascript" src="../../../../Resources/vScripts/Vector.js">
        </script>
    </head>
    <body>
        <p class="MCWebHelpFramesetLink MCWebHelpFramesetLinkTop"><a href="../../../../../CANoeCANalyzer.htm#Topics/CANoeCANalyzer/Ethernet/Protocols/ProtocolTCP.htm">Open topic with navigation</a>
        </p>
        <div class="Body">
            <div role="main" id="mc-main-content">
                <p class="StructurePath"><a href="../Ethernet.htm" class="StructurePath">Ethernet</a> » <a href="Protocol.htm" class="StructurePath">Protocol Overview</a> » <span class="mc-variable System.Title variable">TCP</span></p>
                <h1><a name="kanchor681"></a><a name="aanchor798"></a>
                    <MadCap:concept term="Protocols" /><span class="mc-variable System.Title variable">TCP</span>
                </h1>
                <p class="MenuPath">&#160;</p>
                <p class="AutoSearchFilterConcepts"><a name="aanchor799"></a>
                    <MadCap:concept term="SFCore" />
                </p>
                <div>
                    <table style="mc-table-style: url('../../../../Resources/Stylesheets/vTable.css');" class="TableStyle_vTable" cellspacing="0">
                        <col />
                        <thead>
                            <tr>
                                <th class="TableStyle_vTable_Head_0_0_RowSep_ColEnd">
                                    <p class="TableHead"><a name="Shortcuts" id="Shortcuts"></a>Quick Access</p>
                                </th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd">
                                    <p class="Table"><a href="#ProtocolInfo">Protocol Information</a>
                                    </p>
                                </td>
                            </tr>
                            <tr>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd">
                                    <p class="Table"><a href="#ProtocolDependencies">Protocol Dependencies</a>
                                    </p>
                                </td>
                            </tr>
                            <tr>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd">
                                    <p class="Table"><a href="#HeaderFormat">Header Format</a>
                                    </p>
                                </td>
                            </tr>
                            <tr>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd">
                                    <p class="Table"><a href="#ProtocolValidation">Protocol Validation</a>
                                    </p>
                                </td>
                            </tr>
                            <tr data-mc-conditions="vConditions.CANoeOnly">
                                <td class="TableStyle_vTable_Body_0_0_RowEnd_ColEnd">
                                    <p class="Table"><a href="#PacketAPI">Programming</a>
                                    </p>
                                </td>
                            </tr>
                        </tbody>
                    </table>
                </div>
                <h2 class="SectionSub"><a name="ProtocolInfo" id="ProtocolInfo"></a>Protocol Information <a href="#Shortcuts" class="TopOfPage">[▲ back]</a></h2>
                <p><span class="bold">TCP </span>(<span class="bold">T</span>ransmission <span class="bold">C</span>ontrol <span class="bold">P</span>rotocol) is a connection-oriented protocol and establishes bidirectional connections. There are three phases:</p>
                <ul>
                    <li>establish the connection</li>
                    <li>transmit data</li>
                    <li>close connection</li>
                </ul>
                <p>For each connection a Transmission Control Block (<span class="MCExpanding MCExpanding_Open expanding"><a href="javascript:void(0)" class="MCExpandingHead MCExpandingHotSpot expandingHead MCExpandingHotSpot_ MCHotSpotImage">TCB<img class="MCExpanding_Image_Icon" src="../../../../../Skins/Default/Stylesheets/Images/transparent.gif" height="11" width="16" alt="Closed" data-mc-alt2="Open" /></a><span class="MCExpandingBody expandingBody"> Transmission Control Block</span></span>) is available to observe the current state of the TCP connection. This block is created during the establishment phase, modified during the data transmission and deleted if the connection is closed.</p>
                <p>The complete transport address is built of IP address and port number.</p>
                <h2 class="SectionSub"><a name="ProtocolDependencies" id="ProtocolDependencies"></a>Protocol Dependencies <a href="#Shortcuts" class="TopOfPage">[▲ back]</a></h2>
                <div>
                    <table style="mc-table-style: url('../../../../Resources/Stylesheets/vTable.css');border-left-style: solid;border-left-width: 1px;border-left-color: #909090;border-right-style: solid;border-right-width: 1px;border-right-color: #909090;border-top-style: solid;border-top-width: 1px;border-top-color: #909090;border-bottom-style: solid;border-bottom-width: 1px;border-bottom-color: #909090;margin-left: 0;margin-right: auto;" class="TableStyle_vTable" cellspacing="0">
                        <col class="TableStyle-vTable-Column-Column1" />
                        <col class="TableStyle-vTable-Column-Column1" />
                        <col class="TableStyle-vTable-Column-Column1" />
                        <tbody>
                            <tr class="TableStyle-vTable-Body-Body1">
                                <th class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">Transport layer</p>
                                </th>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd" colspan="2" style="text-align: center;background-color: #b70032;padding-left: 5pt;padding-right: 5pt;padding-top: 5pt;padding-bottom: 0pt;border-bottom-style: solid;border-bottom-width: 1px;border-bottom-color: #909090;">
                                    <p class="TableBoldWhite">TCP</p>
                                </td>
                            </tr>
                            <tr class="TableStyle-vTable-Body-Body1">
                                <th class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">Internet layer</p>
                                </th>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep" style="text-align: center;">
                                    <p class="Table">IPv4</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd" style="text-align: center;">
                                    <p class="Table">IPv6</p>
                                </td>
                            </tr>
                            <tr class="TableStyle-vTable-Body-Body1">
                                <th class="TableStyle_vTable_Body_0_0_RowEnd_ColSep">
                                    <p class="Table">Link layer</p>
                                </th>
                                <td class="TableStyle_vTable_Body_0_0_RowEnd_ColEnd" colspan="2" style="text-align: center;">
                                    <p class="Table">Ethernet</p>
                                </td>
                            </tr>
                        </tbody>
                    </table>
                </div>
                <h2 class="SectionSub"><a name="HeaderFormat" id="HeaderFormat"></a>Header Format <a href="#Shortcuts" class="TopOfPage">[▲ back]</a></h2>
                <p>
                    <img src="../../../../Resources/Images/CANoeCANalyzer/EthernetTcp.png" />
                </p>
                <div>
                    <table style="width: 100%;caption-side: top;margin-left: 0;margin-right: auto;mc-table-style: url('../../../../Resources/Stylesheets/vTable.css');" class="TableStyle_vTable" cellspacing="0">
                        <col style="width: 130px;" />
                        <col />
                        <col />
                        <col data-mc-conditions="vConditions.CANoeOnly" />
                        <col data-mc-conditions="vConditions.CANoeOnly" />
                        <col data-mc-conditions="vConditions.CANoeOnly" />
                        <thead>
                            <tr>
                                <th rowspan="2" class="TableStyle_vTable_Head_0_0_RowSep_ColSep">
                                    <p class="TableHead">Protocol Field</p>
                                </th>
                                <th class="TableStyle_vTable_Head_0_0_RowSep_ColSep" rowspan="2">
                                    <p class="TableHead">Offset<br />[byte.bit]</p>
                                </th>
                                <th class="TableStyle_vTable_Head_0_0_RowSep_ColSep" rowspan="2">
                                    <p class="TableHead">Length<br />[bit]</p>
                                </th>
                                <th class="TableStyle_vTable_Head_0_0_RowSep_ColEnd" colspan="3">
                                    <p class="TableHead"><a href="../Procedures/ProgrammingEthernetPacket.htm" class="red">Programming</a>
                                    </p>
                                </th>
                            </tr>
                            <tr>
                                <th class="TableStyle_vTable_Head_0_0_RowSep_ColSep">
                                    <p class="TableHead"><a href="../../../CAPLFunctions/IP/Selectors/CAPLfunctionProtocolField.htm" class="red">Designator</a>
                                    </p>
                                </th>
                                <th class="TableStyle_vTable_Head_0_0_RowSep_ColSep">
                                    <p class="TableSyntax"><a href="../../../CAPLFunctions/IP/Methods/CAPLfunctionProtocolInit.htm" class="SourceCode">ethernetPacket.<br></br>&lt;protocol&gt;.Init</a>
                                    </p>
                                </th>
                                <th class="TableStyle_vTable_Head_0_0_RowSep_ColEnd">
                                    <p class="TableHead"><a href="../../../CAPLFunctions/IP/Methods/CAPLfunctionCompletePacket.htm" class="SourceCode">ethernetPacket.<br></br>CompletePacket</a>
                                    </p>
                                </th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr>
                                <td rowspan="2" class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">Source Port</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">0</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">16</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">Source</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">0</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd">
                                    <p class="Table">—</p>
                                </td>
                            </tr>
                            <tr>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd" colspan="5">
                                    <p class="Table">Source port number</p>
                                </td>
                            </tr>
                            <tr>
                                <td rowspan="2" class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">Destination Port</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">2</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">16</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">Destination</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">0</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd">
                                    <p class="Table">—</p>
                                </td>
                            </tr>
                            <tr>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd" colspan="5">
                                    <p colspan="3" class="Table">Destination port number</p>
                                </td>
                            </tr>
                            <tr>
                                <td rowspan="2" class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">Sequence Number</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">4</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">32</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">Sequence</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">0</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd">
                                    <p class="Table">—</p>
                                </td>
                            </tr>
                            <tr>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd" colspan="5">
                                    <p class="Table">Sequence number of the first data byte of the TCP packet.</p>
                                    <p class="Table">If the SYN flag is set, this corresponds to the initialization sequence number.</p>
                                </td>
                            </tr>
                            <tr>
                                <td rowspan="2" class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">Acknowledge Number</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">8</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">32</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">AckNumber</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">0</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd">
                                    <p class="Table">—</p>
                                </td>
                            </tr>
                            <tr>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd" colspan="5">
                                    <p colspan="3" class="Table">If the ACK control bit is set this field contains the value of the next sequence number the sender of the segment is expecting to receive. Once a connection is established this is always sent.</p>
                                </td>
                            </tr>
                            <tr>
                                <td rowspan="2" class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">Data Offset</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">12</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">4</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">Offset</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">5</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd">
                                    <p class="Table">
                                        <p class="TableBold">•</p>
                                    </p>
                                </td>
                            </tr>
                            <tr>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd" colspan="5">
                                    <p colspan="3" class="Table">Defines the start address of the payload.</p>
                                </td>
                            </tr>
                            <tr>
                                <td rowspan="2" class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">Flags</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">13</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">8</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">Flags</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">0</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd">
                                    <p class="Table">—</p>
                                </td>
                            </tr>
                            <tr>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd" colspan="5">
                                    <p colspan="3" class="Table">8 bits (from lsb to msb)
</p>
                                    <p colspan="3" class="Table">FIN - No more data from sender<br />SYN - Synchronize sequence numbers<br />RST -  Reset the connection<br />PSH - Push function<br />ACK -  Acknowledgment field significant<br />URG -  Urgent Pointer field significant<br />ECE - ECN-Echo<br />CWR - Congestion Window Reduced<br /></p>
                                </td>
                            </tr>
                            <tr>
                                <td rowspan="2" class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">Window</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">14</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">16</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">Window</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">0</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd">
                                    <p class="Table">—</p>
                                </td>
                            </tr>
                            <tr>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd" colspan="5">
                                    <p colspan="3" class="Table">The number of data bytes beginning with the one indicated in the field which the sender of this segment is willing to accept.</p>
                                </td>
                            </tr>
                            <tr>
                                <td rowspan="2" class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">Checksum</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">16</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">16</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">Checksum</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">0</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd">
                                    <p class="TableBold">•</p>
                                </td>
                            </tr>
                            <tr>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd" colspan="5">
                                    <p colspan="3" class="Table">The 16 bit one's complement of the one's complement sum of all 16 bit words in the header and text</p>
                                    <p colspan="3" class="Table">If a segment contains an odd number of header and text bytes to be checksummed, the last byte is padded on the right with zeros to form a 16 bit word for checksum purposes. The pad is not transmitted as part of the segment. While computing the checksum, the checksum field itself is replaced with zeros.</p>
                                </td>
                            </tr>
                            <tr>
                                <td rowspan="2" class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">Urgent Pointer</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">18</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">16</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">Pointer</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">0</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd">
                                    <p class="Table">—</p>
                                </td>
                            </tr>
                            <tr>
                                <td class="TableStyle_vTable_Body_0_0_RowEnd_ColEnd" colspan="5">
                                    <p colspan="3" class="Table">16 bit offset from the sequence number indicating the last urgent data byte</p>
                                </td>
                            </tr>
                        </tbody>
                    </table>
                </div>
                <h2 class="SectionSub"><a name="ProtocolValidation" id="ProtocolValidation"></a>Protocol Validation <a href="#Shortcuts" class="TopOfPage">[▲ back]</a></h2>
                <p>Ethernet packets containing the TCP protocol are analyzed and checked for consistency. Observed irregularities are displayed in the <span class="bold">Protocol Validation</span> column of the <a href="../../Windows/Trace/TraceWindow.htm">Trace Window</a>.</p>
                <div>
                    <table style="width: 100%;mc-table-style: url('../../../../Resources/Stylesheets/vTable.css');" class="TableStyle_vTable" cellspacing="0">
                        <col />
                        <col />
                        <col />
                        <thead>
                            <tr>
                                <th class="TableStyle_vTable_Head_0_0_RowSep_ColSep">
                                    <p class="TableHead">Protocol Validation ID</p>
                                </th>
                                <th class="TableStyle_vTable_Head_0_0_RowSep_ColSep">
                                    <p class="TableHead">Message</p>
                                </th>
                                <th class="TableStyle_vTable_Head_0_0_RowSep_ColEnd">
                                    <p class="TableHead">Description</p>
                                </th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">[TCP-001]</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">TCP length is too small. Must be at least 20 bytes</td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd">
                                    <p class="Table">The packet length specified in the header (<span class="bold">Data Offset</span> field) is smaller than the smallest possible length of a TCP packet (20 bytes).</p>
                                </td>
                            </tr>
                            <tr>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">[TCP-002]</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">TCP length is bigger than available data</td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd">
                                    <p class="Table">The packet length specified in the header (<span class="bold">Data Offset</span> field) is bigger that the present packet.</p>
                                </td>
                            </tr>
                            <tr>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">[TCP-003]</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">TCP packet length is too small. Must be at least 20 bytes</td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd">
                                    <p class="Table">The present packet is too short. A TCP packet must consist of at least 20 bytes to be able to contain the header completely.</p>
                                </td>
                            </tr>
                            <tr>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">[TCP-004]</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p>TCP sequence error</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd">
                                    <p class="Table">A packet with an unexpected sequence number (<span class="bold">Sequence Number</span> field) was received. It is possible that a packet of the TCP stream has been lost.</p>
                                </td>
                            </tr>
                            <tr>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">[TCP-005]</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p>Checksum is not correct</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd">
                                    <p class="Table">The checksum (<span class="bold">Checksum</span> field) of the TCP layer is not correct.</p>
                                </td>
                            </tr>
                            <tr>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">[TCP-006]</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">TCP retransmit</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd">
                                    <p class="Table">A TCP stream packet with the same sequence number was sent multiple times.</p>
                                </td>
                            </tr>
                            <tr>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">[TCP-007]</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">TCP spurious retransmit</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd">
                                    <p class="Table">A packet was received whose sequence number is smaller than the last acknowledge number received from the remote station.</p>
                                </td>
                            </tr>
                            <tr>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">[TCP-1001]</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">Previous TCP packet not seen</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd">
                                    <p class="Table">The sequence number of a received packet was larger than expected.</p>
                                </td>
                            </tr>
                            <tr>
                                <td class="TableStyle_vTable_Body_0_0_RowEnd_ColSep">
                                    <p class="Table">[TCP-1002]</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowEnd_ColSep">
                                    <p class="Table">TCP ACKed unseen segment</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowEnd_ColEnd">
                                    <p class="Table">The acknowledge number of a packet was larger than expected.</p>
                                </td>
                            </tr>
                        </tbody>
                    </table>
                </div>
                <h2 class="SectionSub" data-mc-conditions="vConditions.CANoeOnly"><a name="PacketAPI" id="PacketAPI"></a>Programming <a href="#Shortcuts" class="TopOfPage">[▲ back]</a></h2>
                <div data-mc-conditions="vConditions.CANoeOnly">
                    <h2>Initialization</h2>
                    <p>During initialization of the TCP protocol, the field <span class="bold">Protocol</span>=6 in the <a href="ProtocolIPv4.htm#HeaderFormat">IPv4</a> header, or <span class="bold">NextHeader</span>=6 in the <a href="ProtocolIPv6.htm#HeaderFormat">IPv6</a> header, is also set.</p>
                    <div>
                        <table style="width: 100%;margin-left: 0;margin-right: auto;mc-table-style: url('../../../../Resources/Stylesheets/vTableSymbol.css');" class="TableStyle-vTableSymbol" cellspacing="0">
                            <col class="TableStyle-vTableSymbol-Column-Column1" />
                            <col class="TableStyle-vTableSymbol-Column-Column2" />
                            <tbody>
                                <tr>
                                    <td class="TableStyle-vTableSymbol-BodyB-Column1-">
                                        <p class="Table">
                                            <img src="../../../../Resources/vImages/vInfo.png" style="width: 48px;height: 45px;" title="Note" alt="Note" />
                                        </p>
                                    </td>
                                    <td class="TableStyle-vTableSymbol-BodyA-Column2-">
                                        <p class="TableSymbolHead">Note</p>
                                        <p class="Table">If the TCP protocol is initialized in an empty packet, the initialization of IPv4 takes place as standard on the internet layer.</p>
                                    </td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                    <div>
                        <table style="width: 100%;margin-left: 0;margin-right: auto;mc-table-style: url('../../../../Resources/Stylesheets/vTableSymbol.css');" class="TableStyle-vTableSymbol" cellspacing="0">
                            <col class="TableStyle-vTableSymbol-Column-Column1" />
                            <col class="TableStyle-vTableSymbol-Column-Column2" />
                            <tbody>
                                <tr>
                                    <td class="TableStyle-vTableSymbol-BodyB-Column1-">
                                        <p class="Table">
                                            <img src="../../../../Resources/vImages/vExample.png" style="width: 48px;height: 45px;" title="Example" alt="Example" />
                                        </p>
                                    </td>
                                    <td class="TableStyle-vTableSymbol-BodyA-Column2-">
                                        <p class="TableSymbolHead">Example 1</p>
                                        <p class="Table">In this example, a new Ethernet packet is generated to which the TCP protocol with its default initialization is added and which is sent afterwards. During the initialization of the TCP protocol, the IPv4 protocol is automatically added to the packet and the <span class="bold">Protocol</span> field of the IPv4 protocol is output in the Write Window before sending.</p>
                                        <table style="width: 100%;">
                                            <col style="width: 90px;" />
                                            <col />
                                            <tbody>
                                                <tr>
                                                    <td>
                                                        <p class="TableBold">CAPL</p>
                                                    </td>
                                                    <td>
                                                        <p class="TableSourceCode">ethernetPacket pkt;<br /><br /><span class="CodeComment">// initialize packet with IPv4 and TCP protocols</span><br />pkt.tcp.Init();<br /><br /><span class="CodeComment">// print protocol type ("TCP has protocol type 6")</span><br />write( "TCP has protocol type %d", pkt.ipv4.protocol);<br /><br /><span class="CodeComment">// send Ethernet packet</span><br />output( pkt );</p>
                                                    </td>
                                                </tr>
                                                <tr>
                                                    <td>
                                                        <p class="TableBold">C#</p>
                                                    </td>
                                                    <td>
                                                        <p class="TableSourceCode">EthernetPacket pkt = new EthernetPacket();<br /><br /><span class="CodeComment">// initialize packet with IPv4 and TCP protocols</span><br />pkt.TCP.Init();<br /><br /><span class="CodeComment">// print protocol type ("TCP has protocol type 6")</span><br />Output.WriteLine("TCP has protocol type {0}", pkt.IPv4.Protocol.Value);<br /><br /><span class="CodeComment">// send Ethernet packet</span><br />pkt.Send();</p>
                                                    </td>
                                                </tr>
                                            </tbody>
                                        </table>
                                    </td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                    <div>
                        <table style="width: 100%;margin-left: 0;margin-right: auto;mc-table-style: url('../../../../Resources/Stylesheets/vTableSymbol.css');" class="TableStyle-vTableSymbol" cellspacing="0">
                            <col class="TableStyle-vTableSymbol-Column-Column1" />
                            <col class="TableStyle-vTableSymbol-Column-Column2" />
                            <tbody>
                                <tr>
                                    <td class="TableStyle-vTableSymbol-BodyB-Column1-">
                                        <p class="Table">
                                            <img src="../../../../Resources/vImages/vExample.png" style="width: 48px;height: 45px;" title="Example" alt="Example" />
                                        </p>
                                    </td>
                                    <td class="TableStyle-vTableSymbol-BodyA-Column2-">
                                        <p class="TableSymbolHead">Example 2</p>
                                        <p class="Table">In this example, a new packet is initialized and sent with the TCP protocol as shown in example 1. Since the IPv6 protocol, which is compatible with TCP, is already available in the packet on the internet layer, IPv4 is not initialized.</p>
                                        <table style="width: 100%;">
                                            <col style="width: 90px;" />
                                            <col />
                                            <tbody>
                                                <tr>
                                                    <td>
                                                        <p class="TableBold">CAPL</p>
                                                    </td>
                                                    <td>
                                                        <p class="TableSourceCode">ethernetPacket pkt;<br /><br /><span class="CodeComment">// initialize packet with IPv6 and TCP protocols</span><br />pkt.ipv6.Init();<br />pkt.tcp.Init();<br /><br /><span class="CodeComment">// print protocol type ("TCP has protocol type 6")</span><br />write( "TCP has protocol type %d", pkt.ipv6.next);<br /><br /><span class="CodeComment">// send Ethernet packet</span><br />output( pkt );</p>
                                                    </td>
                                                </tr>
                                                <tr>
                                                    <td>
                                                        <p class="TableBold">C#</p>
                                                    </td>
                                                    <td>
                                                        <p class="TableSourceCode">EthernetPacket pkt = new EthernetPacket();<br /><br /><span class="CodeComment">// initialize packet with IPv6 and TCP protocols</span><br />pkt.IPv6.Init();<br />pkt.TCP.Init();<br /><br /><span class="CodeComment">// print protocol type ("TCP has protocol type 6")</span><br />Output.WriteLine("TCP has protocol type {0}", pkt.IPv6.Next.Value);<br /><br /><span class="CodeComment">// send Ethernet packet</span><br />pkt.Send();</p>
                                                    </td>
                                                </tr>
                                            </tbody>
                                        </table>
                                    </td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                    <h2>Header Access</h2>
                    <p>The read and write access to the protocol fields of the header is done by means of <a href="../../../CAPLFunctions/IP/Selectors/CAPLfunctionProtocolOptionalStructureField.htm">selectors</a> (CAPL) or properties (.NET) which have been named according to their designators.</p>
                    <div>
                        <table style="width: 100%;margin-left: 0;margin-right: auto;mc-table-style: url('../../../../Resources/Stylesheets/vTableSymbol.css');" class="TableStyle-vTableSymbol" cellspacing="0">
                            <col class="TableStyle-vTableSymbol-Column-Column1">
                            </col>
                            <col class="TableStyle-vTableSymbol-Column-Column2">
                            </col>
                            <tbody>
                                <tr>
                                    <td class="TableStyle-vTableSymbol-BodyB-Column1-">
                                        <p class="Table">
                                            <img src="../../../../Resources/vImages/vExample.png" style="width: 48px;height: 45px;" title="Example" alt="Example">
                                            </img>
                                        </p>
                                    </td>
                                    <td class="TableStyle-vTableSymbol-BodyA-Column2-">
                                        <p class="TableSymbolHead">Example</p>
                                        <p class="Table">In this example, a new packet is generated and sent with TCP and IPv4 and several protocol fields are filled with specific values.</p>
                                        <p class="Table">By this, two variants for the assignment of IP addresses are demonstrated:</p>
                                        <ul>
                                            <li>Direct parsing of an address from a string</li>
                                            <li>The setting of an endpoint using an object of the type <a href="../../../CAPLFunctions/IP/Objects/CAPLfunctionIPEndpoint.htm" class="SourceCode">ip_Endpoint</a> (CAPL) or the assignment via an object of the type <span class="SourceCode">System.Net.IPAddress</span> (.NET)</li>
                                        </ul>
                                        <table style="width: 100%;">
                                            <col style="width: 90px;">
                                            </col>
                                            <col>
                                            </col>
                                            <tbody>
                                                <tr>
                                                    <td>
                                                        <p class="TableBold">CAPL</p>
                                                    </td>
                                                    <td>
                                                        <p class="TableSourceCode">ip_Endpoint 192.168.1.2:40002 destinationEndpoint;<br />ethernetPacket pkt;<br /><br /><span class="CodeComment">// initialize packet with IPv4 and TCP protocols</span><br />pkt.tcp.Init();<br /><br /><span class="CodeComment">// add optionTimestamp, resize and calculate checksum of IPv4</span><br />pkt.ipv4.optionTimeStamp.Init();<br />pkt.CompletePacket();<br /><br /><span class="CodeComment">// set IPv4 addresses and TCP ports</span><br />pkt.ipv4.source.ParseAddress( "192.168.1.1" );<br />pkt.tcp.source = 40001;<br />pkt.SetDestinationIPEndpoint( destinationEndpoint );<br /><br /><span class="CodeComment">// set TCP payload</span><br />pkt.tcp.SetData( 0, "Hello receiver", 14 );<br /><br /><span class="CodeComment">// calculate TCP and IPv4 checksum and send Ethernet packet</span><br />pkt.CompletePacket();<br />output( pkt );</p>
                                                    </td>
                                                </tr>
                                                <tr>
                                                    <td>
                                                        <p class="TableBold">C#</p>
                                                    </td>
                                                    <td>
                                                        <p class="TableSourceCode">using System.Net; <span class="CodeComment">// for type IPAddress</span><br />IPAddress destinationAddress = IPAddress.Parse("192.168.1.2");<br />EthernetPacket pkt = new EthernetPacket();<br /><br /><span class="CodeComment">// initialize packet with IPv4 and TCP protocols</span><br />pkt.TCP.Init();<br /><br /><span class="CodeComment">// add optionTimestamp, resize and calculate checksum of IPv4</span><br />pkt.IPv4.OptionTimeStamp.Init();<br />pkt.CompletePacket();<br /><br /><span class="CodeComment">// set IPv4 addresses and TCP ports</span><br />pkt.IPv4.Source.ParseAddress("192.168.1.1");<br />pkt.TCP.Source.Value = 40001;<br />pkt.IPv4.Destination.Value = destinationAddress;<br />pkt.TCP.Destination.Value = 40002;<br /><br /><span class="CodeComment">// set TCP payload</span><br />pkt.TCP.SetRawData(System.Text.Encoding.ASCII.GetBytes("Hello receiver"));<br /><br /><span class="CodeComment">// calculate TCP and IPv4 checksum and send Ethernet packet</span><br />pkt.CompletePacket();<br />pkt.Send();</p>
                                                    </td>
                                                </tr>
                                            </tbody>
                                        </table>
                                    </td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                </div>
                <p class="LinkList">&#160;</p>
            </div>
        </div>
        <div class="Footer">
            <div class="FooterWhite">
                <table class="FooterWhite" style="border-collapse: collapse;margin-left: auto;margin-right: auto;">
                    <col style="width: 70px;" data-mc-conditions="vConditions.HTML5Link" />
                    <col style="width: 16px;" data-mc-conditions="vConditions.HTML5Link" />
                    <col />
                    <tbody>
                        <tr>
                            <td>
                                <div class="buttons popup-container clearfix topicToolbarProxy topicToolbarProxyFooter _Skins_HTML5TopicToolbar mc-component nocontent">
                                    <div class="button-group-container-left">
                                        <button class="button needs-pie expand-all-button" data-state1-class="expand-all-button" data-state2-class="collapse-all-button" data-state2-title="Collapse all" title="Expand all" data-state1-title="Expand all">
                                            <div>
                                                <div role="img" class="button-icon-wrapper" aria-label="Expand all">
                                                    <div class="button-icon"> </div>
                                                </div>
                                            </div>
                                        </button>
                                        <button class="button needs-pie remove-highlight-button" title="Remove Highlights">
                                            <div>
                                                <div role="img" class="button-icon-wrapper">
                                                    <div class="button-icon"> </div>
                                                </div>
                                            </div>
                                        </button>
                                    </div>
                                </div>
                            </td>
                            <td>
                                <p class="vec_BuildInfo"><a href="../../../Shared/HowToUseOnlineHelp.htm" title="Tips for using the help" alt="Tips for using the help"><img src="../../../../Resources/vImages/vBackstage/vHelpInfo.png" /></a>
                                </p>
                            </td>
                            <td>
                                <p class="vec_BuildInfo" style="text-align: right;"><span class="mc-variable Vector.BuildTime variable">2023-09-26T19:49:32</span>
                                </p>
                            </td>
                        </tr>
                    </tbody>
                </table>
            </div>
            <table style="width: 100%;border-collapse: separate;border-spacing: 3px 0px;margin-left: auto;margin-right: auto;caption-side: top;">
                <col />
                <col />
                <col />
                <col data-mc-conditions="vConditions.HTML5Link" />
                <tbody>
                    <tr>
                        <td style="background-color: #b70032;padding-left: 5pt;padding-right: 5pt;padding-top: 5pt;padding-bottom: 5pt;">
                            <p class="vec_Footer">©&#160;Vector Informatik GmbH</p>
                        </td>
                        <td style="background-color: #b70032;padding-left: 5pt;padding-right: 5pt;padding-top: 5pt;padding-bottom: 5pt;text-align: right;">
                            <p class="vec_FooterBold">
                                <MadCap:conditionalText data-mc-conditions="vConditions.vTESTstudioExcluded,vConditions.TestDataEditorExcluded">CANoe</MadCap:conditionalText> Version <MadCap:conditionalText data-mc-conditions="vConditions.vTESTstudioExcluded">17 SP3</MadCap:conditionalText></p>
                        </td>
                        <td style="background-color: #b70032;padding-left: 5pt;padding-right: 5pt;padding-top: 5pt;padding-bottom: 0pt;text-align: right;">
                            <p class="vec_Footer"><a href="../../../Shared/ContactCopyrightLicense.htm" class="vec_Footer MCXref xref xrefvec_Footer">Contact/Copyright/License</a>
                            </p>
                        </td>
                        <td style="background-color: #b70032;padding-left: 5pt;padding-right: 5pt;padding-top: 5pt;padding-bottom: 0pt;text-align: right;">
                            <p class="vec_Footer"><a href="https://www.vector.com/int/en/company/get-info/privacy-policy/" target="_blank" class="vec_Footer">Data Privacy Notice</a>
                            </p>
                        </td>
                    </tr>
                </tbody>
            </table>
        </div>
    </body>
</html>