<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en-us" xml:lang="en-us" class="" data-mc-search-type="Stem" data-mc-help-system-file-name="CANoeCANalyzer.xml" data-mc-path-to-help-system="../../../../../" data-mc-conditions="vConditions.CANoe4SWExcluded" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic" data-mc-preload-images="false" data-mc-in-preview-mode="false">
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta charset="utf-8" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
        <meta name="msapplication-config" content="../../../../../Skins/Favicons/browserconfig.xml" />
        <link rel="apple-touch-icon" sizes="180x180" href="../../../../../Skins/Favicons/apple-touch-icon.png" />
        <link rel="shortcut icon" href="../../../../../Skins/Favicons/favicon-32x32.png" />
        <link rel="icon" sizes="96x96" href="../../../../../Skins/Favicons/favicon-96x96.png" />
        <link rel="icon" sizes="32x32" href="../../../../../Skins/Favicons/favicon-32x32.png" />
        <link rel="icon" sizes="16x16" href="../../../../../Skins/Favicons/favicon-16x16.png" /><title>Service Discovery</title>
        <link href="../../../../../Skins/Default/Stylesheets/Slideshow.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../../Skins/Default/Stylesheets/Components/Styles.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../../Skins/Default/Stylesheets/Components/Tablet.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../../Skins/Default/Stylesheets/Components/Mobile.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../../Skins/Default/Stylesheets/Components/Print.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../Resources/Stylesheets/vTableMasterPageHeader.css" rel="stylesheet" data-mc-stylesheet-type="table" />
        <link href="../../../../Resources/Stylesheets/vStylesheet.css" rel="stylesheet" type="text/css" />
        <style>/*&lt;meta /&gt;*/

.button.expand-all-button
{
	-pie-background: linear-gradient(#ffffff, #ffffff);
}

.button.remove-highlight-button
{
	-pie-background: linear-gradient(#ffffff, #ffffff);
}

.button.collapse-all-button
{
	-pie-background: linear-gradient(#ffffff, #ffffff);
}

.needs-pie
{
	behavior: url('../../../../../Resources/Scripts/PIE-no-motw.htc');
}

</style>
        <link href="../../../../Resources/Stylesheets/vTable.css" rel="stylesheet" data-mc-stylesheet-type="table" />
        <link href="../../../../Resources/Stylesheets/vTableMiniTOC.css" rel="stylesheet" data-mc-stylesheet-type="table" />
        <link rel="apple-touch-icon" sizes="180x180" href="../../../../../Skins/Favicons/apple-touch-icon.png" />
        <link rel="shortcut icon" href="../../../../../Skins/Favicons/favicon-32x32.png" />
        <link rel="icon" sizes="96x96" href="../../../../../Skins/Favicons/favicon-96x96.png" />
        <link rel="icon" sizes="32x32" href="../../../../../Skins/Favicons/favicon-32x32.png" />
        <link rel="icon" sizes="16x16" href="../../../../../Skins/Favicons/favicon-16x16.png" />
        <script src="../../../../../Resources/Scripts/jquery.min.js" type="text/javascript">
        </script>
        <script src="../../../../../Resources/Scripts/purify.min.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/require.min.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/require.config.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/foundation.min.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/plugins.min.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapGlobal.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapDom.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapUtilities.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapXhr.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapTextEffects.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapSlideshow.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapMessageBus.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapMessageBus.CrossFrame.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapDefault.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapMediaQueries.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapAccessibility.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapHelpSystem.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapAliasFile.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapTopicFeedback.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapFeedbackHelper.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapSkinHelper.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapToc.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapToc.Breadcrumbs.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapToc.MiniToc.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapToc.SideMenu.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapIndex.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapGlossary.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapParser.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapSearch.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapNavigateTopics.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapLms.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapELearning.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapTopic.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapFeedback.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapMicroContentComponent.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapSearchHelper.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapTopicElements.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapTriPane.js" type="text/javascript" defer="defer">
        </script>
        <script type="text/jscript" src="../../../../Resources/vScripts/SyntaxHighlighting.js">
        </script>
        <script type="text/jscript" src="../../../../Resources/vScripts/TabSwitch.js">
        </script>
        <script type="text/javascript" src="../../../../Resources/vScripts/Vector.js">
        </script>
    </head>
    <body>
        <p class="MCWebHelpFramesetLink MCWebHelpFramesetLinkTop"><a href="../../../../../CANoeCANalyzer.htm#Topics/CANoeCANalyzer/CommunicationConcept/Programming/CCPServiceDiscovery.htm">Open topic with navigation</a>
        </p>
        <div class="Body">
            <div role="main" id="mc-main-content">
                <div>
                    <p class="StructurePath"><a href="../../CANoeCANalyzer.htm" class="StructurePath" data-mc-conditions="vConditions.CANalyzerExclude,vConditions.CANoe4ServerExcluded,vConditions.CANoe4SWExcluded,vConditions.TestDataEditorExcluded,vConditions.vTESTstudioExcluded,vConditions.TestUnitRunnerExcluded,vConditions.CANoeNMExcluded"><img src="../../../../Resources/vImages/vToolIcons/CANoe_Icon16.png" alt="" />&#160;CANoe</a> » <a href="../CC.htm" class="StructurePath MCXref xref xrefStructurePath">Communication Concept</a> » <a href="CCP.htm" class="StructurePath">Programming</a> » <span class="mc-variable System.Title variable">Service Discovery</span></p>
                    <h1><span class="mc-variable System.Title variable">Service Discovery</span>
                    </h1>
                    <p class="MenuPath">&#160;</p>
                    <p class="AutoSearchFilterConcepts"><a name="aanchor1912"></a>
                        <MadCap:concept term="SFCore" />
                    </p>
                    <p class="IndexConcept"><a name="kanchor1499"></a>
                    </p>
                </div>
                <div>
                    <p><a name="Shortcuts" id="Shortcuts"></a><a targets="TOGContents" href="javascript:void(0)" class="MCToggler MCTogglerHead MCTogglerHotSpot MCToggler_Open toggler MCTogglerHotSpot_ MCHotSpotImage" data-mc-targets="TOGContents"><img class="MCToggler_Image_Icon" src="../../../../../Skins/Default/Stylesheets/Images/transparent.gif" height="11" width="16" alt="Closed" data-mc-alt2="Open" />Table of Contents</a>
                    </p>
                    <div style="display: none;" data-mc-target-name="TOGContents">
                        <table style="margin-left: 0;margin-right: auto;mc-table-style: url('../../../../Resources/Stylesheets/vTableMiniTOC.css');" class="TableStyle-vTableMiniTOC" cellspacing="2">
                            <col class="TableStyle-vTableMiniTOC-Column-Column1" />
                            <tbody>
                                <tr class="TableStyle-vTableMiniTOC-Body-Body1">
                                    <td style="background-color: #f0f5f5;padding-left: 5pt;padding-right: 5pt;padding-top: 5pt;padding-bottom: 0pt;" class="TableStyle-vTableMiniTOC-BodyD-Column1-Body1">
                                        <p class="TableTextSmall"><a href="#HelpModels" class="Tab">Auxiliary Models</a>
                                        </p>
                                    </td>
                                </tr>
                                <tr class="TableStyle-vTableMiniTOC-Body-Body1">
                                    <td style="background-color: #f0f5f5;padding-left: 5pt;padding-right: 5pt;padding-top: 5pt;padding-bottom: 0pt;" class="TableStyle-vTableMiniTOC-BodyD-Column1-Body1">
                                        <p class="TableTextSmall"><a href="#DirectInteraction" class="Tab">Direct Influence</a>
                                        </p>
                                    </td>
                                </tr>
                                <tr class="TableStyle-vTableMiniTOC-Body-Body1">
                                    <td style="background-color: #f0f5f5;padding-left: 5pt;padding-right: 5pt;padding-top: 5pt;padding-bottom: 0pt;" class="TableStyle-vTableMiniTOC-BodyD-Column1-Body1">
                                        <p class="TableTextSmall"><a href="#Handler" class="Tab">Handlers</a>
                                        </p>
                                    </td>
                                </tr>
                                <tr class="TableStyle-vTableMiniTOC-Body-Body1">
                                    <td style="background-color: #f0f5f5;padding-left: 5pt;padding-right: 5pt;padding-top: 5pt;padding-bottom: 0pt;" class="TableStyle-vTableMiniTOC-BodyA-Column1-Body1">
                                        <p class="TableTextSmall"><a href="#WaitFunctions" class="Tab">Wait Functions</a>
                                        </p>
                                    </td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                </div>
                <h2 class="SectionMain"><a name="HelpModels" id="HelpModels"></a>Auxiliary Models <a href="#Shortcuts" class="TopOfPageWhite">[▲ back]</a></h2>
                <p>Auxiliary models are offered in <span class="Product">CANoe</span> to simplify the use of the complex Service Discovery sequence. They can be used to interact at the Service CO via special methods.</p>
                <h2>Auxiliary Model Is Assigned to Provider Endpoints</h2>
                <p>The model reacts to first requests of consumers, takes care of Service Announcement and accepts connection request of consumers.</p>
                <ul>
                    <li>The status of the simulated service provider is indicated in the <span class="bold">ServiceState</span> value which can assume values <span class="bold">Unavailable</span>, <span class="bold">Initializing</span>, and <span class="bold">Available</span>.</li>
                    <li>You can use <span class="SourceCode">ProvideService()</span> to say to the model that the service should be available.</li>
                    <li>You can use <span class="SourceCode">ReleaseService()</span> to say to the model that the service should not be available.</li>
                    <li>You can use <span class="SourceCode">IsServiceProvided()</span> to query the state of the model.</li>
                </ul>
                <div>
                    <table style="margin-left: 0;margin-right: auto;">
                        <col />
                        <col />
                        <tbody>
                            <tr>
                                <td>
                                    <p class="TableBold">C#</p>
                                </td>
                                <td>
                                    <p class="TableSourceCode"><span class="CodeComment">// On provider side</span>
                                        <br />for (uint i = 0; i &lt; MirrorAdjustment.ProviderCount; ++i)<br />{<br />&#160;&#160;MirrorAdjustment.SelectProvider(i);<br />&#160;&#160;if (MirrorAdjustment.IsSelectionValid) MirrorAdjustment.ProvideService();<br />}</p>
                                </td>
                            </tr>
                            <tr>
                                <td>
                                    <p class="TableBold">CAPL</p>
                                </td>
                                <td>
                                    <p class="TableSourceCode">dword i;<br />for (i = 0; i &lt; getNrOfCOProviders(MirrorAdjustment); ++i)<br />{<br />&#160;&#160;MirrorAdjustment.providerSide[i].ProvideService();<br />}</p>
                                </td>
                            </tr>
                        </tbody>
                    </table>
                </div>
                <h2>Auxiliary Model Is Assigned to Consumer Endpoints and Exists Once per Provider</h2>
                <p>The model sends Service Discovery requests, reacts to answers of the desired provider and establishes a connection to it.</p>
                <ul>
                    <li>You can use <span class="SourceCode">RequestService()</span> to say to the model that the provider should be searched for and a connection should be established.</li>
                    <li>You can use <span class="SourceCode">ReleaseService()</span> to say to the model that the provider should not be searched for and no connection should be established.</li>
                    <li>You can use <span class="SourceCode">IsServiceRequested()</span> to query the state of the model.</li>
                </ul>
                <div>
                    <table style="margin-left: 0;margin-right: auto;">
                        <col />
                        <col />
                        <tbody>
                            <tr>
                                <td>
                                    <p class="TableBold">C#</p>
                                </td>
                                <td>
                                    <p class="TableSourceCode"><span class="CodeComment">// On consumer side</span>
                                        <br />for (uint i = 0; i &lt; MirrorAdjustment.ProviderCount; ++i)<br />{<br />&#160;&#160;MirrorAdjustment.SelectProvider(i);<br />&#160;&#160;for (uint j = 0; j &lt; MirrorAdjustment.ConsumerCount; ++j)<br />&#160;&#160;{<br />&#160;&#160;&#160;&#160;MirrorAdjustment.SelectConsumer(j);<br />&#160;&#160;&#160;&#160;if (MirrorAdjustment.IsSelectionValid) MirrorAdjustment.RequestService();<br />&#160;&#160;}<br />}</p>
                                </td>
                            </tr>
                            <tr>
                                <td>
                                    <p class="TableBold">CAPL</p>
                                </td>
                                <td>
                                    <p class="TableSourceCode">dword i, j;<br />for (i = 0; i &lt; getNrOfCOProviders(MirrorAdjustment); ++i)<br />{<br />&#160;&#160;for (j = 0; j &lt; getNrOfCOConsumers(MirrorAdjustment); ++j)<br />&#160;&#160;{<br />&#160;&#160;&#160;&#160;MirrorAdjustment.consumerSide[i,j].RequestService();<br />&#160;&#160;}<br />}</p>
                                </td>
                            </tr>
                        </tbody>
                    </table>
                </div>
                <h2 class="SectionMain"><a name="DirectInteraction" id="DirectInteraction"></a>Direct Influence<a href="#Shortcuts" class="TopOfPageWhite">[▲ back]</a></h2>
                <ul>
                    <li>The connection state between consumer and provider is indicated at the corresponding endpoints with the <span class="bold">ConnectionState</span> value which can assume values <span class="bold">Unavailable</span>, <span class="bold">Connectable</span>, and <span class="bold">Connected</span> (provider side) or <span class="bold">Available</span> (consumer side).</li>
                    <li>There are functions which you can use to add new endpoints to a communication object and remove them again (the object must be released for it in the communication description).</li>
                    <li>The <span class="SourceCode">DiscoverProviders</span> function which receives a consumer endpoint can be used to initiate Service Discovery.</li>
                    <li>You can use the <span class="SourceCode">SetAddress</span> function to assign an address to an endpoint. The addresses are binding-specific. A binding-specific API allows you to generate addresses which you can use to query an ID of the participant and a name that is suitable for display.</li>
                    <li>For provider endpoints, there are functions <span class="SourceCode">AnnounceProvider</span> and <span class="SourceCode">UnannounceProvider</span> which influence the state of the provider related to the binding.</li>
                    <li>Per consumer endpoint, for each provider there is also an <span class="SourceCode">AnnounceProvider</span> function which sends an answer to a Service Discovery request of a concrete consumer.</li>
                    <li>On provider and consumer endpoints, there are functions <span class="SourceCode">ConnectAsync</span> and <span class="SourceCode">Disconnect</span> to establish or disconnect a (logical) connection between the endpoints.<br /><span class="bold">Note</span>: A connection at the binding level (e.g. sockets) can be managed by binding irrespective of this.</li>
                </ul>
                <p>The above-mentioned functions can be found in C# in the <span class="bold">ServiceDiscovery</span> class. In CAPL, they have the <span class="GUI">SD_</span> prefix.</p>
                <div>
                    <table style="margin-left: 0;margin-right: auto;">
                        <col />
                        <col />
                        <tbody>
                            <tr>
                                <td>
                                    <p class="TableBold">C#</p>
                                </td>
                                <td>
                                    <p class="TableSourceCode"><span class="CodeComment">// add new car</span>
                                        <br />IServiceConsumer newCar;<br />ServiceDiscovery.AddConsumer(TrafficControllers.Instance, "TestCar", true, out newCar);<br />var address = Vector.CANoe.Runtime.SomeIP.ServiceDiscovery.CreateAddress(udpEndPoint, tcpEndPoint);<br />ServiceDiscovery.SetAddress(newCar, address);</p>
                                </td>
                            </tr>
                            <tr>
                                <td>
                                    <p class="TableBold">CAPL</p>
                                </td>
                                <td>
                                    <p class="TableSourceCode"><span class="CodeComment">// add new car</span>
                                        <br />serviceConsumerRef ITrafficController newCar;<br />SD_AddConsumer(TrafficControllers, "TestCar", 1, newCar);<br />SD_SetAddress(newCar, Abstract_CreateAddress(TrafficControllers, "TestCar"), TrafficControllers.providerSide[Bridge1]);</p>
                                </td>
                            </tr>
                        </tbody>
                    </table>
                </div>
                <h2 class="SectionMain"><a name="Handler" id="Handler"></a>Handlers<a href="#Shortcuts" class="TopOfPageWhite">[▲ back]</a></h2>
                <p>You can use handlers to directly influence or observe Service Discovery:</p>
                <div>
                    <table style="mc-table-style: url('../../../../Resources/Stylesheets/vTable.css');margin-left: 0;margin-right: auto;" class="TableStyle_vTable" cellspacing="0">
                        <col />
                        <col />
                        <col />
                        <thead>
                            <tr>
                                <th class="TableStyle_vTable_Head_0_0_RowSep_ColSep">
                                    <p class="TableHead">When</p>
                                </th>
                                <th class="TableStyle_vTable_Head_0_0_RowSep_ColSep">
                                    <p class="TableHead">C#</p>
                                </th>
                                <th class="TableStyle_vTable_Head_0_0_RowSep_ColEnd">
                                    <p class="TableHead">CAPL</p>
                                </th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep" rowspan="2">
                                    <p class="Table">When adding new endpoints</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table"><span class="SourceCode">[OnProviderDiscovered]</span> or <span class="SourceCode">[OnConsumerDiscovered]</span></p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd">
                                    <p class="Table"><a href="../../../CAPLFunctions/CommunicationObjects/EventProcedures/CAPLfunctionOnSDProviderDiscovered.htm" class="MCXref xref">on SD_provider_discovered</a> or <a href="../../../CAPLFunctions/CommunicationObjects/EventProcedures/CAPLfunctionOnSDConsumerDiscovered.htm" class="MCXref xref">on SD_consumer_discovered</a></p>
                                </td>
                            </tr>
                            <tr>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd" colspan="2">
                                    <p class="Table">You can also register the handler for individual consumers or providers. Then it will react when the provider or consumer detects an endpoint for the first time.</p>
                                </td>
                            </tr>
                            <tr>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">With every Service Discovery request, independently of the provider</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table"><span class="SourceCode">[OnServiceDiscovery]</span>
                                    </p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd">
                                    <p class="Table"><a href="../../../CAPLFunctions/CommunicationObjects/EventProcedures/CAPLfunctionOnSDServiceDiscovery.htm" class="MCXref xref">on SD_service_discovery</a>
                                    </p>
                                </td>
                            </tr>
                            <tr>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">On provider endpoints when consumers request connection</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table"><span class="SourceCode">[OnConnectionRequested]</span>
                                    </p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd">
                                    <p class="Table"><a href="../../../CAPLFunctions/CommunicationObjects/EventProcedures/CAPLfunctionOnSDConnectionRequested.htm" class="MCXref xref">on SD_connection_requested</a>
                                    </p>
                                </td>
                            </tr>
                            <tr>
                                <td class="TableStyle_vTable_Body_0_0_RowEnd_ColSep">
                                    <p class="Table">CAPL when establishing or canceling a connection (for a combination of provider and consumer endpoints) both on provider and consumer side</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowEnd_ColSep">
                                    <p class="Table">—</p>
                                    <p class="TableTextSmall">In C#, this functionality is implemented by means of <span class="bold">delegates</span> which are transferred to the <span class="SourceCode">ConnectAsync</span> function.</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowEnd_ColEnd">
                                    <p class="Table"><a href="../../../CAPLFunctions/CommunicationObjects/EventProcedures/CAPLfunctionOnSDConnectionEstablished.htm" class="MCXref xref">on SD_connection_established</a> or <a href="../../../CAPLFunctions/CommunicationObjects/EventProcedures/CAPLfunctionOnSDConnectionFailed.htm" class="MCXref xref">on SD_connection_failed</a></p>
                                </td>
                            </tr>
                        </tbody>
                    </table>
                </div>
                <div>
                    <table style="margin-left: 0;margin-right: auto;">
                        <col />
                        <col />
                        <tbody>
                            <tr>
                                <td>
                                    <p class="TableBold">C#</p>
                                </td>
                                <td>
                                    <p class="TableSourceCode">[OnProviderDiscovered(typeof(TrafficControllers.Car1))]<br />public void ProviderDiscovered(IAddressHandle providerAddress)<br />{<br />&#160;&#160;<span class="CodeComment">// provider discovered, establish connection</span><br />&#160;&#160;var provider = TrafficControllers.Providers.FirstOrDefault(p =&gt;<br />&#160;&#160;&#160;&#160;Vector.CANoe.Runtime.SomeIP.ServiceDiscovery.GetDisplayName(providerAddress) == p.Name);<br />&#160;&#160;TrafficControllers.SelectProvider(provider);<br />&#160;&#160;ServiceDiscovery.ConnectAsync(TrafficControllers.SelectedConsumedService,() =&gt;<br />&#160;&#160;{<br />&#160;&#160;&#160;&#160;<span class="CodeComment">// connection established, request information</span><br />&#160;&#160;&#160;&#160;TrafficControllers.SelectProvider(provider);<br />&#160;&#160;&#160;&#160;TrafficControllers.GetInfo.CallAsync();<br />&#160;&#160;},<br />&#160;&#160;(string errorMessage) =&gt;<br />&#160;&#160;{<br />&#160;&#160;Output.WriteLine("Connection failed: " + errorMessage);<br />&#160;&#160;});<br />}</p>
                                </td>
                            </tr>
                            <tr>
                                <td>
                                    <p class="TableBold">CAPL</p>
                                </td>
                                <td>
                                    <p class="TableSourceCode">on SD_provider_discovered TrafficControllers.consumerSide[Car1]<br />{<br />&#160;&#160;<span class="CodeComment">// provider discovered, establish connection</span><br />&#160;&#160;dword i;<br />&#160;&#160;serviceProviderRef * provider;<br />&#160;&#160;char name[50];<br />&#160;&#160;Abstract_GetDisplayName(this.address, name);<br />&#160;&#160;for (i = 0; i &lt; getNrOfCOProviders(TrafficControllers); ++i)<br />&#160;&#160;{<br />&#160;&#160;&#160;&#160;provider = TrafficControllers.providerSide[i];<br />&#160;&#160;&#160;&#160;if (mbstrncmp(name, provider.Name, elcount(name)) == 0)<br />&#160;&#160;&#160;&#160;{<br />&#160;&#160;&#160;&#160;&#160;&#160;SD_ConnectAsync(TrafficControllers.consumerSide[Car1, i]);<br />&#160;&#160;&#160;&#160;&#160;&#160;break;<br />&#160;&#160;&#160;&#160;}<br />&#160;&#160;}<br />}<br /><br />on SD_connection_established TrafficControllers.consumerSide[Car1]<br />{<br />&#160;&#160;<span class="CodeComment">// connection established, request information</span><br />&#160;&#160;TrafficControllers.consumerSide[Car1,this.service.ProviderIndex].GetInfo.CallAsync();<br />}</p>
                                </td>
                            </tr>
                        </tbody>
                    </table>
                </div>
                <h2 class="SectionMain"><a name="WaitFunctions" id="WaitFunctions"></a>Wait Functions<a href="#Shortcuts" class="TopOfPageWhite">[▲ back]</a></h2>
                <p>You can wait for values which, for example indicate the states of the Service Discovery. Other <span class="bold">low-level</span> wait functions, for example waiting for a Service Discovery request or for discovering a new provider are currently not provided.</p>
                <div>
                    <table style="margin-left: 0;margin-right: auto;">
                        <col />
                        <col />
                        <tbody>
                            <tr>
                                <td>
                                    <p class="TableBold">C#</p>
                                </td>
                                <td>
                                    <p class="TableSourceCode">TrafficControllers.SelectSide(ServiceSide.Consumer);<br />TrafficControllers.SelectProvider(NetworkDB.Bridge1.Instance);<br />ServiceDiscovery.ConnectAsync(TrafficControllers.SelectedConsumedService,<br />&#160;&#160;() =&gt; { }, (error) =&gt; { });<br /><br />var ret = Execution.Wait(<br />&#160;&#160;TrafficControllers.SelectedConsumedService.ConnectionState,<br />&#160;&#160;ConnectionStateConsumer.Available, 500);</p>
                                </td>
                            </tr>
                            <tr>
                                <td>
                                    <p class="TableBold">CAPL</p>
                                </td>
                                <td>
                                    <p class="TableSourceCode">SD_ConnectAsync(TrafficControllers.consumerSide[Car1,Bridge1]);<br />ret = testWaitForValueUInt(TrafficControllers.consumerSide[Car1,Bridge1].ConnectionState,<br />&#160;&#160;_SystemDataTypes::SDStates::ServiceAtConsumer::Available, 500);</p>
                                </td>
                            </tr>
                        </tbody>
                    </table>
                </div>
                <p class="LinkList">&#160;</p>
            </div>
        </div>
        <div class="Footer">
            <div class="FooterWhite">
                <table class="FooterWhite" style="border-collapse: collapse;margin-left: auto;margin-right: auto;">
                    <col style="width: 70px;" data-mc-conditions="vConditions.HTML5Link" />
                    <col style="width: 16px;" data-mc-conditions="vConditions.HTML5Link" />
                    <col />
                    <tbody>
                        <tr>
                            <td>
                                <div class="buttons popup-container clearfix topicToolbarProxy topicToolbarProxyFooter _Skins_HTML5TopicToolbar mc-component nocontent">
                                    <div class="button-group-container-left">
                                        <button class="button needs-pie expand-all-button" data-state1-class="expand-all-button" data-state2-class="collapse-all-button" data-state2-title="Collapse all" title="Expand all" data-state1-title="Expand all">
                                            <div>
                                                <div role="img" class="button-icon-wrapper" aria-label="Expand all">
                                                    <div class="button-icon"> </div>
                                                </div>
                                            </div>
                                        </button>
                                        <button class="button needs-pie remove-highlight-button" title="Remove Highlights">
                                            <div>
                                                <div role="img" class="button-icon-wrapper">
                                                    <div class="button-icon"> </div>
                                                </div>
                                            </div>
                                        </button>
                                    </div>
                                </div>
                            </td>
                            <td>
                                <p class="vec_BuildInfo"><a href="../../../Shared/HowToUseOnlineHelp.htm" title="Tips for using the help" alt="Tips for using the help"><img src="../../../../Resources/vImages/vBackstage/vHelpInfo.png" /></a>
                                </p>
                            </td>
                            <td>
                                <p class="vec_BuildInfo" style="text-align: right;"><span class="mc-variable Vector.BuildTime variable">2023-09-26T19:49:32</span>
                                </p>
                            </td>
                        </tr>
                    </tbody>
                </table>
            </div>
            <table style="width: 100%;border-collapse: separate;border-spacing: 3px 0px;margin-left: auto;margin-right: auto;caption-side: top;">
                <col />
                <col />
                <col />
                <col data-mc-conditions="vConditions.HTML5Link" />
                <tbody>
                    <tr>
                        <td style="background-color: #b70032;padding-left: 5pt;padding-right: 5pt;padding-top: 5pt;padding-bottom: 5pt;">
                            <p class="vec_Footer">©&#160;Vector Informatik GmbH</p>
                        </td>
                        <td style="background-color: #b70032;padding-left: 5pt;padding-right: 5pt;padding-top: 5pt;padding-bottom: 5pt;text-align: right;">
                            <p class="vec_FooterBold">
                                <MadCap:conditionalText data-mc-conditions="vConditions.vTESTstudioExcluded,vConditions.TestDataEditorExcluded">CANoe</MadCap:conditionalText> Version <MadCap:conditionalText data-mc-conditions="vConditions.vTESTstudioExcluded">17 SP3</MadCap:conditionalText></p>
                        </td>
                        <td style="background-color: #b70032;padding-left: 5pt;padding-right: 5pt;padding-top: 5pt;padding-bottom: 0pt;text-align: right;">
                            <p class="vec_Footer"><a href="../../../Shared/ContactCopyrightLicense.htm" class="vec_Footer MCXref xref xrefvec_Footer">Contact/Copyright/License</a>
                            </p>
                        </td>
                        <td style="background-color: #b70032;padding-left: 5pt;padding-right: 5pt;padding-top: 5pt;padding-bottom: 0pt;text-align: right;">
                            <p class="vec_Footer"><a href="https://www.vector.com/int/en/company/get-info/privacy-policy/" target="_blank" class="vec_Footer">Data Privacy Notice</a>
                            </p>
                        </td>
                    </tr>
                </tbody>
            </table>
        </div>
    </body>
</html>