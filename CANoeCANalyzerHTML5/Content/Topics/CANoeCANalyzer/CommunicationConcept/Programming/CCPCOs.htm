<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en-us" xml:lang="en-us" class="" data-mc-search-type="Stem" data-mc-help-system-file-name="CANoeCANalyzer.xml" data-mc-path-to-help-system="../../../../../" data-mc-conditions="vConditions.CANoe4SWExcluded" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic" data-mc-preload-images="false" data-mc-in-preview-mode="false">
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta charset="utf-8" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
        <meta name="msapplication-config" content="../../../../../Skins/Favicons/browserconfig.xml" />
        <link rel="apple-touch-icon" sizes="180x180" href="../../../../../Skins/Favicons/apple-touch-icon.png" />
        <link rel="shortcut icon" href="../../../../../Skins/Favicons/favicon-32x32.png" />
        <link rel="icon" sizes="96x96" href="../../../../../Skins/Favicons/favicon-96x96.png" />
        <link rel="icon" sizes="32x32" href="../../../../../Skins/Favicons/favicon-32x32.png" />
        <link rel="icon" sizes="16x16" href="../../../../../Skins/Favicons/favicon-16x16.png" /><title>API of the Different Communication Object Types</title>
        <link href="../../../../../Skins/Default/Stylesheets/Slideshow.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../../Skins/Default/Stylesheets/Components/Styles.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../../Skins/Default/Stylesheets/Components/Tablet.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../../Skins/Default/Stylesheets/Components/Mobile.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../../Skins/Default/Stylesheets/Components/Print.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../Resources/Stylesheets/vTableMasterPageHeader.css" rel="stylesheet" data-mc-stylesheet-type="table" />
        <link href="../../../../Resources/Stylesheets/vStylesheet.css" rel="stylesheet" type="text/css" />
        <style>/*&lt;meta /&gt;*/

.button.expand-all-button
{
	-pie-background: linear-gradient(#ffffff, #ffffff);
}

.button.remove-highlight-button
{
	-pie-background: linear-gradient(#ffffff, #ffffff);
}

.button.collapse-all-button
{
	-pie-background: linear-gradient(#ffffff, #ffffff);
}

.needs-pie
{
	behavior: url('../../../../../Resources/Scripts/PIE-no-motw.htc');
}

</style>
        <link href="../../../../Resources/Stylesheets/vTableSymbol.css" rel="stylesheet" data-mc-stylesheet-type="table" />
        <link href="../../../../Resources/Stylesheets/vTableMiniTOC.css" rel="stylesheet" data-mc-stylesheet-type="table" />
        <link rel="apple-touch-icon" sizes="180x180" href="../../../../../Skins/Favicons/apple-touch-icon.png" />
        <link rel="shortcut icon" href="../../../../../Skins/Favicons/favicon-32x32.png" />
        <link rel="icon" sizes="96x96" href="../../../../../Skins/Favicons/favicon-96x96.png" />
        <link rel="icon" sizes="32x32" href="../../../../../Skins/Favicons/favicon-32x32.png" />
        <link rel="icon" sizes="16x16" href="../../../../../Skins/Favicons/favicon-16x16.png" />
        <script src="../../../../../Resources/Scripts/jquery.min.js" type="text/javascript">
        </script>
        <script src="../../../../../Resources/Scripts/purify.min.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/require.min.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/require.config.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/foundation.min.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/plugins.min.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapGlobal.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapDom.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapUtilities.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapXhr.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapTextEffects.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapSlideshow.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapMessageBus.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapMessageBus.CrossFrame.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapDefault.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapMediaQueries.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapAccessibility.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapHelpSystem.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapAliasFile.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapTopicFeedback.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapFeedbackHelper.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapSkinHelper.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapToc.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapToc.Breadcrumbs.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapToc.MiniToc.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapToc.SideMenu.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapIndex.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapGlossary.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapParser.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapSearch.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapNavigateTopics.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapLms.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapELearning.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapTopic.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapFeedback.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapMicroContentComponent.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapSearchHelper.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapTopicElements.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapTriPane.js" type="text/javascript" defer="defer">
        </script>
        <script type="text/jscript" src="../../../../Resources/vScripts/SyntaxHighlighting.js">
        </script>
        <script type="text/jscript" src="../../../../Resources/vScripts/TabSwitch.js">
        </script>
        <script type="text/javascript" src="../../../../Resources/vScripts/Vector.js">
        </script>
    </head>
    <body>
        <p class="MCWebHelpFramesetLink MCWebHelpFramesetLinkTop"><a href="../../../../../CANoeCANalyzer.htm#Topics/CANoeCANalyzer/CommunicationConcept/Programming/CCPCOs.htm">Open topic with navigation</a>
        </p>
        <div class="Body">
            <div role="main" id="mc-main-content">
                <div>
                    <p class="StructurePath"><a href="../../CANoeCANalyzer.htm" class="StructurePath" data-mc-conditions="vConditions.CANalyzerExclude,vConditions.CANoe4ServerExcluded,vConditions.CANoe4SWExcluded,vConditions.TestDataEditorExcluded,vConditions.vTESTstudioExcluded,vConditions.TestUnitRunnerExcluded,vConditions.CANoeNMExcluded"><img src="../../../../Resources/vImages/vToolIcons/CANoe_Icon16.png" alt="" />&#160;CANoe</a> » <a href="../CC.htm" class="StructurePath MCXref xref xrefStructurePath">Communication Concept</a> » <a href="CCP.htm" class="StructurePath">Programming</a> » <span class="mc-variable System.Title variable">API of the Different Communication Object Types</span></p>
                    <h1><span class="mc-variable System.Title variable">API of the Different Communication Object Types</span>
                    </h1>
                    <p class="MenuPath">&#160;</p>
                    <p class="AutoSearchFilterConcepts"><a name="aanchor6722"></a>
                        <MadCap:concept term="SFCore" />
                    </p>
                    <p class="IndexConcept"><a name="kanchor5092"></a>
                    </p>
                </div>
                <div>
                    <p><a name="Shortcuts" id="Shortcuts"></a><a targets="TOGContents" href="javascript:void(0)" class="MCToggler MCTogglerHead MCTogglerHotSpot MCToggler_Open toggler MCTogglerHotSpot_ MCHotSpotImage" data-mc-targets="TOGContents"><img class="MCToggler_Image_Icon" src="../../../../../Skins/Default/Stylesheets/Images/transparent.gif" height="11" width="16" alt="Closed" data-mc-alt2="Open" />Table of Contents</a>
                    </p>
                    <div style="display: none;" data-mc-target-name="TOGContents">
                        <table style="margin-left: 0;margin-right: auto;mc-table-style: url('../../../../Resources/Stylesheets/vTableMiniTOC.css');" class="TableStyle-vTableMiniTOC" cellspacing="2">
                            <col class="TableStyle-vTableMiniTOC-Column-Column1" />
                            <tbody>
                                <tr class="TableStyle-vTableMiniTOC-Body-Body1">
                                    <td style="background-color: #f0f5f5;padding-left: 5pt;padding-right: 5pt;padding-top: 5pt;padding-bottom: 0pt;" class="TableStyle-vTableMiniTOC-BodyD-Column1-Body1">
                                        <p class="TableTextSmall"><a href="#Services" class="Tab">Services</a>
                                        </p>
                                    </td>
                                </tr>
                                <tr class="TableStyle-vTableMiniTOC-Body-Body1">
                                    <td style="background-color: #f0f5f5;padding-left: 5pt;padding-right: 5pt;padding-top: 5pt;padding-bottom: 0pt;" class="TableStyle-vTableMiniTOC-BodyD-Column1-Body1">
                                        <p class="TableTextSmall"><a href="#Methods" class="Tab">Methods</a>
                                        </p>
                                    </td>
                                </tr>
                                <tr class="TableStyle-vTableMiniTOC-Body-Body1">
                                    <td style="background-color: #f0f5f5;padding-left: 5pt;padding-right: 5pt;padding-top: 5pt;padding-bottom: 0pt;" class="TableStyle-vTableMiniTOC-BodyD-Column1-Body1">
                                        <p class="TableTextSmall"><a href="#Events" class="Tab">Events and Fields</a>
                                        </p>
                                    </td>
                                </tr>
                                <tr class="TableStyle-vTableMiniTOC-Body-Body1">
                                    <td style="background-color: #f0f5f5;padding-left: 5pt;padding-right: 5pt;padding-top: 5pt;padding-bottom: 0pt;" class="TableStyle-vTableMiniTOC-BodyD-Column1-Body1">
                                        <p class="TableTextSmall"><a href="#PDUs" class="Tab">PDUs</a>
                                        </p>
                                    </td>
                                </tr>
                                <tr class="TableStyle-vTableMiniTOC-Body-Body1">
                                    <td style="background-color: #f0f5f5;padding-left: 5pt;padding-right: 5pt;padding-top: 5pt;padding-bottom: 0pt;" class="TableStyle-vTableMiniTOC-BodyA-Column1-Body1">
                                        <p class="TableTextSmall"><a href="#Signals" class="Tab">Signals</a>
                                        </p>
                                    </td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                </div>
                <h2 class="SectionMain"><a name="Services" id="Services"></a>Services <a href="#Shortcuts" class="TopOfPageWhite">[▲ back]</a></h2>
                <p>A service allows you to access individual elements (fields, events, methods and PDUs) with a '.' and their name.</p>
                <p>You can query the state of a provider with <span class="bold">ServiceState</span> at the provider endpoint.</p>
                <p>You can query the state of the connection between a consumer and a provider with <span class="SourceCode">ConnectionState</span> both on the consumer side and on the provider side.</p>
                <h2 class="SectionMain"><a name="Methods" id="Methods"></a>Methods<a href="#Shortcuts" class="TopOfPageWhite">[▲ back]</a></h2>
                <p>The APIs of methods are described in detail on the <a href="CCPFunctions.htm" class="MCXref xref">Function Calls</a> page.</p>
                <h2 class="SectionMain"><a name="Events" id="Events"></a>Events and Fields <a href="#Shortcuts" class="TopOfPageWhite">[▲ back]</a></h2>
                <h2 class="SectionSub">Values</h2>
                <p>You can access several values for events and fields in a service:</p>
                <ul>
                    <li>The last received value on the consumer side, specifically for each provider that sends the value (consumer value).</li>
                    <li>The last sent value or the value to be sent next on the provider side, specifically for each consumer to which the value is sent (send value).</li>
                    <li>The last sent value or the value to be sent next on the provider side for all subscribed consumers. This value is also called provider value; there is a predefined subscription model for each simulated provider which uses this value. If data is written on the provider value, the subscription model distributes the new value to the send values for all consumers subscribed at that time.</li>
                </ul>
                <p>The following picture illustrates different values using the sample event <span class="bold">ObjectRecognized</span>. The <span class="bold">MainDisplay</span> consumer has not subscribed for the event, therefore, the provider value (when set) will not be copied to the send value for <span class="bold">[MainDisplay,SensorFusion]</span>.</p>
                <p>
                    <img src="../../../../Resources/Images/CANoeCANalyzer/ComSetup/CCPCOs_630x385.png" style="width: 630;height: 385;" />
                </p>
                <p>If on the provider side there was a further endpoint (e.g. <span class="bold">Car2XClient</span>), besides the <span class="bold">SensorFusion</span>, there would be a separate provider value for it, and a consumer value and a send value for each consumer.</p>
                <p>If you have selected the provider side at the communication object (CO), the provider value is addressed when accessing the event or field. If you want to explicitly address the sender value for a certain consumer, you must do it with <span class="bold">SelectedProvidedService</span> (see also <a href="CCPVariables.htm" class="MCXref xref">Reuse of Code with Variables and Parameters</a>).</p>
                <div>
                    <table style="margin-left: 0;margin-right: auto;">
                        <col />
                        <col />
                        <tbody>
                            <tr>
                                <td>
                                    <p class="TableBold">C#</p>
                                </td>
                                <td>
                                    <p class="TableSourceCode"><span class="CodeComment">// sets provider value, i.e. the value for all subscribed consumers:</span>
                                        <br />MirrorAdjustment.CurrentPosition.ImplValue = newPos;<br /><span class="CodeComment">// sets value only for the currently selected consumer (send value)</span><br />MirrorAdjustment.SelectedProvidedService.CurrentPosition.ImplValue = newPos;</p>
                                </td>
                            </tr>
                            <tr>
                                <td>
                                    <p class="TableBold">CAPL</p>
                                </td>
                                <td>
                                    <p class="TableSourceCode"><span class="CodeComment">// sets provider value, i.e. the value for all subscribed consumers:</span>
                                        <br />$MirrorAdjustment[LeftMirror].CurrentPosition = newPos;<br /><span class="CodeComment">// sets value only for the currently selected consumer (send value)</span><br />$MirrorAdjustment.providerSide[currentConsumer,LeftMirror].CurrentPosition = newPos;</p>
                                </td>
                            </tr>
                        </tbody>
                    </table>
                </div>
                <div>
                    <table style="width: 100%;margin-left: 0;margin-right: auto;mc-table-style: url('../../../../Resources/Stylesheets/vTableSymbol.css');" class="TableStyle-vTableSymbol" cellspacing="0">
                        <col class="TableStyle-vTableSymbol-Column-Column1" />
                        <col class="TableStyle-vTableSymbol-Column-Column2" />
                        <tbody>
                            <tr>
                                <td class="TableStyle-vTableSymbol-BodyB-Column1-">
                                    <p class="Table">
                                        <img src="../../../../Resources/vImages/vInfo.png" style="width: 48px;height: 45px;" title="Note" alt="Note" />
                                    </p>
                                </td>
                                <td class="TableStyle-vTableSymbol-BodyA-Column2-">
                                    <p class="TableSymbolHead">Note</p>
                                    <p class="Table">Notification is defined not for all fields. The three values (consumer/send/provider value), however, are always available.</p>
                                </td>
                            </tr>
                        </tbody>
                    </table>
                </div>
                <h2 class="SectionSub">Subscription</h2>
                <p>You can query the current subscription state both on the consumer and provider side using the value with the name <span class="bold">SubscriptionState</span>. Please note that this value also exists once for each consumer on the provider side. You can manually set the status, for example of fault injection without triggering a communication; the corresponding function is called <a href="../../../CAPLFunctions/CommunicationObjects/Functions/CAPLfunctionSetSubscriptionStateIsolated.htm" class="MCXref xref">SetSubscriptionStateIsolated</a> (in C#, it belongs to the <span class="bold">ServiceDiscovery</span> class).</p>
                <p>On the provider side, you can iterate over the currently subscribed consumers.</p>
                <div>
                    <table style="margin-left: 0;margin-right: auto;">
                        <col />
                        <col />
                        <tbody>
                            <tr>
                                <td>
                                    <p class="TableBold">C#</p>
                                </td>
                                <td>
                                    <p class="TableSourceCode">foreach (var consumer in MirrorAdjustment.CurrentPosition.GetSubscribedConsumers())<br />{<br />&#160;&#160;Output.WriteLine("Subscribed consumer: " +consumer.Name);<br />}</p>
                                </td>
                            </tr>
                            <tr>
                                <td>
                                    <p class="TableBold">CAPL</p>
                                </td>
                                <td>
                                    <p class="TableSourceCode">serviceConsumerRef * consumer;<br />for (i = 0; i &lt; MirrorAdjustment[LeftMirror].CurrentPosition.GetNrOfSubscribedConsumers(); ++i)<br />{<br />&#160;&#160;consumer = MirrorAdjustment[LeftMirror].CurrentPosition.GetSubscribedConsumer(i);<br />&#160;&#160;write("Subscribed consumer: %s", consumer.Name);<br />}</p>
                                </td>
                            </tr>
                        </tbody>
                    </table>
                </div>
                <p>The API for the subscription of an event or field from the consumer side depends on the binding of the server, as some bindings use event groups and some don't.</p>
                <div>
                    <table style="width: 100%;margin-left: 0;margin-right: auto;mc-table-style: url('../../../../Resources/Stylesheets/vTableSymbol.css');" class="TableStyle-vTableSymbol" cellspacing="0">
                        <col class="TableStyle-vTableSymbol-Column-Column1" />
                        <col class="TableStyle-vTableSymbol-Column-Column2" />
                        <tbody>
                            <tr>
                                <td class="TableStyle-vTableSymbol-BodyB-Column1-">
                                    <p class="Table">
                                        <img src="../../../../Resources/vImages/vInfo.png" style="width: 48px;height: 45px;" title="Note" alt="Note" />
                                    </p>
                                </td>
                                <td class="TableStyle-vTableSymbol-BodyA-Column2-">
                                    <p class="TableSymbolHead">Note</p>
                                    <p class="Table">Notification is defined not for all fields. The subscription API for fields is available only if there is a notification.</p>
                                </td>
                            </tr>
                        </tbody>
                    </table>
                </div>
                <h2>Subscription with SOME/IP</h2>
                <p>With SOME/IP, you subscribe event groups instead of individual events or fields. This is done with <span class="SourceCode">RequestEventGroup</span> or <span class="SourceCode">ReleaseEventGroup</span>.</p>
                <div>
                    <table style="margin-left: 0;margin-right: auto;">
                        <col />
                        <col />
                        <tbody>
                            <tr>
                                <td>
                                    <p class="TableBold">C#</p>
                                </td>
                                <td>
                                    <p class="TableSourceCode">CDPlayer.SomeIP.TrackSelectionEvents.RequestEventGroup();</p>
                                </td>
                            </tr>
                            <tr>
                                <td>
                                    <p class="TableBold">CAPL</p>
                                </td>
                                <td>
                                    <p class="TableSourceCode">CDPlayer.consumerSide[Display,CDChanger].TrackSelectionEvents.SOMEIPRequestEventGroup();</p>
                                </td>
                            </tr>
                        </tbody>
                    </table>
                </div>
                <p>You can also use <span class="SourceCode">IsEventGroupRequested</span> to query whether an event group is requested.</p>
                <p>Request and Release are a rather high-level API. Internally, the request state is monitored by a model which carries out subscription as soon as a connection to the provider is stablished. Alternatively, you can directly initiate communication for subscription by using <span class="SourceCode">SubscribeEventGroup</span> and <span class="SourceCode">UnsubscribeEventGroup</span>. In C#, these methods are in the <span class="bold">SomeIP.ServiceDiscovery</span> class. In CAPL, you have the <span class="bold">SOMEIP_</span> prefix, for example <a href="../../../CAPLFunctions/CommunicationObjects/Functions/CAPLfunctionSOMEIPSubscribeEventGroup.htm" class="MCXref xref">SOMEIP_SubscribeEventGroup</a>.</p>
                <p>In addition, the attributes [SomeIP.OnEventGroupSubscribed] and [SomeIP.OnEventGroupUnsubscribed] can be used in C# to react to a change of the subscription state on the provider side. In CAPL, the corresponding handlers are called <a href="../../../CAPLFunctions/CommunicationObjects/EventProcedures/CAPLfunctionOnSOMEIPEventGroupSubscribed.htm" class="MCXref xref">on SOMEIP_EventGroupSubscribed</a> and <a href="../../../CAPLFunctions/CommunicationObjects/EventProcedures/CAPLfunctionOnSOMEIPEventGroupUnsubscribed.htm" class="MCXref xref">on SOMEIP_EventGroupUnsubscribed</a>.</p>
                <h2>Subscription with Abstract Binding</h2>
                <p>With abstract binding, individual events or fields are subscribed by means of RequestEvent/Field or ReleaseEvent/Field.</p>
                <div>
                    <table style="margin-left: 0;margin-right: auto;">
                        <col />
                        <col />
                        <tbody>
                            <tr>
                                <td>
                                    <p class="TableBold">C#</p>
                                </td>
                                <td>
                                    <p class="TableSourceCode">MirrorAdjustment.Abstract.CurrentPosition.RequestEvent();</p>
                                </td>
                            </tr>
                            <tr>
                                <td>
                                    <p class="TableBold">CAPL</p>
                                </td>
                                <td>
                                    <p class="TableSourceCode">MirrorAdjustment.consumerSide[CANoe,LeftMirror].CurrentPosition.AbstractRequestEvent();</p>
                                </td>
                            </tr>
                        </tbody>
                    </table>
                </div>
                <p>You can also use <span class="SourceCode">IsEventRequested</span> or <span class="SourceCode">IsFieldRequested</span> to query whether an event / field is requested.</p>
                <p>Request and Release are a rather high-level API. Internally, the request state is monitored by a model which carries out subscription as soon as a connection to the provider is stablished. Alternatively, you can directly initiate communication for subscription by using <span class="SourceCode">SubscribeEvent</span> and <span class="SourceCode">UnsubscribeEvent</span> or field. In C#, these methods are in the <span class="bold">Abstract.ServiceDiscovery</span> class. In CAPL, you have the <span class="bold">Abstract</span> prefix, for example <a href="../../../CAPLFunctions/CommunicationObjects/Functions/CAPLfunctionAbstractSubscribeEvent.htm" class="MCXref xref">Abstract_SubscribeEvent</a>.</p>
                <p>In addition, the attributes [Abstract.OnEventSubscribed], [Abstract.OnFieldSubscribed], [Abstract.OnEventUnsubscribed] and [Abstract.OnFieldUnsubscribed] can be used in C# to react to a change of the subscription state on the provider side. In CAPL, the corresponding handlers are called, for example <a href="../../../CAPLFunctions/CommunicationObjects/EventProcedures/CAPLfunctionOnAbstractEventSubscribed.htm" class="MCXref xref">on Abstract_EventSubscribed</a>.</p>
                <h2 class="SectionSub">Event Trigger</h2>
                <p>An event on the provider side can also be triggered without setting a value. This is particularly relevant for events of the void data type. For this, you simply call the <span class="SourceCode">Trigger()</span> function on the provider endpoint.</p>
                <h2 class="SectionSub">Field Getter and Setter</h2>
                <p>Getters and setters of fields are always accessed by means of <span class="SourceCode">.Get</span> or <span class="SourceCode">.Set</span>. The API is the same as with all other methods (see <a href="CCPFunctions.htm" class="MCXref xref">Function Calls</a>).</p>
                <p>A special feature is the call answering machine in the <span class="bold">AutoField</span> mode. When calling the getter, it returns the current provider value; when calling the setter, it also writes the provider value and sends it back (depending on the signature of the setter) as a return value. Delay until the return of the calls can be set as usual.</p>
                <h2 class="SectionMain"><a name="PDUs" id="PDUs"></a>PDUs <a href="#Shortcuts" class="TopOfPageWhite">[▲ back]</a></h2>
                <p>For the most part, PDUs function in the same way as structs to whose members the signals on the PDU correspond. This means that the values of the signals transmitted with the PDU can be addressed via the name of the signal and if the binary layout of the PDU is specified, the bytes of the PDU can also be queried.</p>
                <p>PDUs in services contain a provider value and subscription APIs as events and fields.</p>
                <p>In CAPL, <a href="../../../CAPLFunctions/CommunicationObjects/EventProcedures/CAPLfunctionOnPDUChange.htm">on pdu_change</a> is used instead of <a href="../../../CAPLFunctions/CommunicationObjects/EventProcedures/CAPLfunctionOnValueChange.htm">on value_change</a> to react to PDU values.</p>
                <h2 class="SectionMain"><a name="Signals" id="Signals"></a>Signals <a href="#Shortcuts" class="TopOfPageWhite">[▲ back]</a></h2>
                <p>On signals, the value can be queried and set (on the sender side) only directly.</p>
                <p>With service-oriented communication, signals as independent communication objects are only used at a "higher" semantic level with mapping for (usually several) PDU signals. A new value is assigned to such a "semantic" signal at a consumer endpoint if any of the mapped PDU consumer endpoints receives a PDU. If a value is written to a provider endpoint of such a signal, the value is written to all PDUs of the mapped provider endpoints. Therefore, these "semantic" signals have broadcast semantics in relation to the APIs.</p>
                <p class="LinkList">&#160;</p>
            </div>
        </div>
        <div class="Footer">
            <div class="FooterWhite">
                <table class="FooterWhite" style="border-collapse: collapse;margin-left: auto;margin-right: auto;">
                    <col style="width: 70px;" data-mc-conditions="vConditions.HTML5Link" />
                    <col style="width: 16px;" data-mc-conditions="vConditions.HTML5Link" />
                    <col />
                    <tbody>
                        <tr>
                            <td>
                                <div class="buttons popup-container clearfix topicToolbarProxy topicToolbarProxyFooter _Skins_HTML5TopicToolbar mc-component nocontent">
                                    <div class="button-group-container-left">
                                        <button class="button needs-pie expand-all-button" data-state1-class="expand-all-button" data-state2-class="collapse-all-button" data-state2-title="Collapse all" title="Expand all" data-state1-title="Expand all">
                                            <div>
                                                <div role="img" class="button-icon-wrapper" aria-label="Expand all">
                                                    <div class="button-icon"> </div>
                                                </div>
                                            </div>
                                        </button>
                                        <button class="button needs-pie remove-highlight-button" title="Remove Highlights">
                                            <div>
                                                <div role="img" class="button-icon-wrapper">
                                                    <div class="button-icon"> </div>
                                                </div>
                                            </div>
                                        </button>
                                    </div>
                                </div>
                            </td>
                            <td>
                                <p class="vec_BuildInfo"><a href="../../../Shared/HowToUseOnlineHelp.htm" title="Tips for using the help" alt="Tips for using the help"><img src="../../../../Resources/vImages/vBackstage/vHelpInfo.png" /></a>
                                </p>
                            </td>
                            <td>
                                <p class="vec_BuildInfo" style="text-align: right;"><span class="mc-variable Vector.BuildTime variable">2023-09-26T19:49:32</span>
                                </p>
                            </td>
                        </tr>
                    </tbody>
                </table>
            </div>
            <table style="width: 100%;border-collapse: separate;border-spacing: 3px 0px;margin-left: auto;margin-right: auto;caption-side: top;">
                <col />
                <col />
                <col />
                <col data-mc-conditions="vConditions.HTML5Link" />
                <tbody>
                    <tr>
                        <td style="background-color: #b70032;padding-left: 5pt;padding-right: 5pt;padding-top: 5pt;padding-bottom: 5pt;">
                            <p class="vec_Footer">©&#160;Vector Informatik GmbH</p>
                        </td>
                        <td style="background-color: #b70032;padding-left: 5pt;padding-right: 5pt;padding-top: 5pt;padding-bottom: 5pt;text-align: right;">
                            <p class="vec_FooterBold">
                                <MadCap:conditionalText data-mc-conditions="vConditions.vTESTstudioExcluded,vConditions.TestDataEditorExcluded">CANoe</MadCap:conditionalText> Version <MadCap:conditionalText data-mc-conditions="vConditions.vTESTstudioExcluded">17 SP3</MadCap:conditionalText></p>
                        </td>
                        <td style="background-color: #b70032;padding-left: 5pt;padding-right: 5pt;padding-top: 5pt;padding-bottom: 0pt;text-align: right;">
                            <p class="vec_Footer"><a href="../../../Shared/ContactCopyrightLicense.htm" class="vec_Footer MCXref xref xrefvec_Footer">Contact/Copyright/License</a>
                            </p>
                        </td>
                        <td style="background-color: #b70032;padding-left: 5pt;padding-right: 5pt;padding-top: 5pt;padding-bottom: 0pt;text-align: right;">
                            <p class="vec_Footer"><a href="https://www.vector.com/int/en/company/get-info/privacy-policy/" target="_blank" class="vec_Footer">Data Privacy Notice</a>
                            </p>
                        </td>
                    </tr>
                </tbody>
            </table>
        </div>
    </body>
</html>