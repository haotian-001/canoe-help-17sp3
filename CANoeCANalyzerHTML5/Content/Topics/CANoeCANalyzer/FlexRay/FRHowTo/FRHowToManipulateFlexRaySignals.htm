<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en-us" xml:lang="en-us" class="" data-mc-search-type="Stem" data-mc-help-system-file-name="CANoeCANalyzer.xml" data-mc-path-to-help-system="../../../../../" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic" data-mc-preload-images="false" data-mc-in-preview-mode="false">
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta charset="utf-8" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
        <meta name="msapplication-config" content="../../../../../Skins/Favicons/browserconfig.xml" />
        <link rel="apple-touch-icon" sizes="180x180" href="../../../../../Skins/Favicons/apple-touch-icon.png" />
        <link rel="shortcut icon" href="../../../../../Skins/Favicons/favicon-32x32.png" />
        <link rel="icon" sizes="96x96" href="../../../../../Skins/Favicons/favicon-96x96.png" />
        <link rel="icon" sizes="32x32" href="../../../../../Skins/Favicons/favicon-32x32.png" />
        <link rel="icon" sizes="16x16" href="../../../../../Skins/Favicons/favicon-16x16.png" /><title>FlexRay: How to send FlexRay bus signals?</title>
        <link href="../../../../../Skins/Default/Stylesheets/Slideshow.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../../Skins/Default/Stylesheets/Components/Styles.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../../Skins/Default/Stylesheets/Components/Tablet.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../../Skins/Default/Stylesheets/Components/Mobile.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../../Skins/Default/Stylesheets/Components/Print.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../Resources/Stylesheets/vTableMasterPageHeader.css" rel="stylesheet" data-mc-stylesheet-type="table" />
        <link href="../../../../Resources/Stylesheets/vStylesheet.css" rel="stylesheet" type="text/css" />
        <style>/*&lt;meta /&gt;*/

.button.expand-all-button
{
	-pie-background: linear-gradient(#ffffff, #ffffff);
}

.button.remove-highlight-button
{
	-pie-background: linear-gradient(#ffffff, #ffffff);
}

.button.collapse-all-button
{
	-pie-background: linear-gradient(#ffffff, #ffffff);
}

.needs-pie
{
	behavior: url('../../../../../Resources/Scripts/PIE-no-motw.htc');
}

</style>
        <link href="../../../../Resources/Stylesheets/vTableSymbol.css" rel="stylesheet" data-mc-stylesheet-type="table" />
        <link rel="apple-touch-icon" sizes="180x180" href="../../../../../Skins/Favicons/apple-touch-icon.png" />
        <link rel="shortcut icon" href="../../../../../Skins/Favicons/favicon-32x32.png" />
        <link rel="icon" sizes="96x96" href="../../../../../Skins/Favicons/favicon-96x96.png" />
        <link rel="icon" sizes="32x32" href="../../../../../Skins/Favicons/favicon-32x32.png" />
        <link rel="icon" sizes="16x16" href="../../../../../Skins/Favicons/favicon-16x16.png" />
        <script src="../../../../../Resources/Scripts/jquery.min.js" type="text/javascript">
        </script>
        <script src="../../../../../Resources/Scripts/purify.min.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/require.min.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/require.config.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/foundation.min.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/plugins.min.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapGlobal.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapDom.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapUtilities.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapXhr.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapTextEffects.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapSlideshow.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapMessageBus.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapMessageBus.CrossFrame.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapDefault.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapMediaQueries.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapAccessibility.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapHelpSystem.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapAliasFile.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapTopicFeedback.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapFeedbackHelper.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapSkinHelper.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapToc.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapToc.Breadcrumbs.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapToc.MiniToc.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapToc.SideMenu.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapIndex.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapGlossary.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapParser.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapSearch.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapNavigateTopics.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapLms.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapELearning.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapTopic.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapFeedback.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapMicroContentComponent.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapSearchHelper.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapTopicElements.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapTriPane.js" type="text/javascript" defer="defer">
        </script>
        <script type="text/jscript" src="../../../../Resources/vScripts/SyntaxHighlighting.js">
        </script>
        <script type="text/jscript" src="../../../../Resources/vScripts/TabSwitch.js">
        </script>
        <script type="text/javascript" src="../../../../Resources/vScripts/Vector.js">
        </script>
    </head>
    <body>
        <p class="MCWebHelpFramesetLink MCWebHelpFramesetLinkTop"><a href="../../../../../CANoeCANalyzer.htm#Topics/CANoeCANalyzer/FlexRay/FRHowTo/FRHowToManipulateFlexRaySignals.htm">Open topic with navigation</a>
        </p>
        <div class="Body">
            <div role="main" id="mc-main-content">
                <p class="StructurePath">FlexRay » <a href="FRHowTo.htm" class="StructurePath">How to...</a> » How to send FlexRay bus signals?</p>
                <h1>How to send FlexRay bus signals?</h1>
                <p class="MenuPath">&#160;</p>
                <p class="AutoSearchFilterConcepts"><a name="aanchor10025"></a>
                    <MadCap:concept term="SFCore" />
                </p>
                <p><a name="kanchor8085"></a>
                </p>
                <p>Manipulating a FlexRay bus signal means to send a FlexRay frame or a PDU (with valid Update Bit) that contains this signal. Before you send a FlexRay frame/PDU you sometimes have to reserve a Tx buffer inside the communication controller.</p>
                <div>
                    <table style="width: 100%;margin-left: 0;margin-right: auto;mc-table-style: url('../../../../Resources/Stylesheets/vTableSymbol.css');" class="TableStyle-vTableSymbol" cellspacing="0">
                        <col class="TableStyle-vTableSymbol-Column-Column1" />
                        <col class="TableStyle-vTableSymbol-Column-Column2" />
                        <tbody>
                            <tr>
                                <td class="TableStyle-vTableSymbol-BodyB-Column1-">
                                    <p class="Table">
                                        <img src="../../../../Resources/vImages/vInfo.png" style="width: 48px;height: 45px;" title="Note" alt="Note" />
                                    </p>
                                </td>
                                <td class="TableStyle-vTableSymbol-BodyA-Column2-">
                                    <p class="TableSymbolHead">Notes</p>
                                    <ul>
                                        <li>Whether your network interface hardware requires reserving send buffers and how this can be achieved please refer to <MadCap:conditionalText data-mc-conditions="vConditions.CANoeOnly">the <a href="../Configuration/FlexRay_Configuration_Tx_Buffer.htm">Tx Buffer dialog</a>  (if not available, then it is not required for the selected hardware type) or </MadCap:conditionalText>the CAPL functions <a href="../../../CAPLFunctions/FlexRay/Functions/CAPLfunctionFrSetSendFrame.htm" class="SourceCode">FRSetSendFrame</a> / <a href="../../../CAPLFunctions/FlexRay/Functions/CAPLfunctionFRSetSendPDU.htm" class="SourceCode">FRSetSendPDU</a>. Defining a frame in the <a href="../../FunctionBlocks/IG/FlexRayFramePanel.htm">Frame Panel</a> or a PDU in the <a href="../../FunctionBlocks/FlexRayPDUPanel/FlexRayPDUPanel.htm">PDU Panel</a> automatically declares a Tx buffer.</li>
                                        <li>You must assure, according to the FlexRay standard that a frame in a specific slot of the static segment is either sent only by <MadCap:conditionalText data-mc-conditions="vConditions.CANoeOnly"><span class="Product">CANoe </span></MadCap:conditionalText>or one other external node. A static frame of a specific slot must not be sent (and must not even be declared as a Tx buffer) from <MadCap:conditionalText data-mc-conditions="vConditions.CANoeOnly"><span class="Product">CANoe </span></MadCap:conditionalText>and in addition of another external node!</li>
                                    </ul>
                                </td>
                            </tr>
                        </tbody>
                    </table>
                </div>
                <div>
                    <h2><a targets="TOGFramePDUPanel" href="javascript:void(0)" class="MCToggler MCTogglerHead MCTogglerHotSpot MCToggler_Open toggler MCTogglerHotSpot_ MCHotSpotImage" data-mc-targets="TOGFramePDUPanel"><img class="MCToggler_Image_Icon" src="../../../../../Skins/Default/Stylesheets/Images/transparent.gif" height="11" width="16" alt="Closed" data-mc-alt2="Open" />Using the FlexRay Frame or PDU Panel</a>
                    </h2>
                    <div style="display: none;" data-mc-target-name="TOGFramePDUPanel">
                        <ol>
                            <li value="1">Insert the FlexRay <a href="../../FunctionBlocks/IG/FlexRayFramePanel.htm">Frame Panel</a> or the FlexRay <a href="../../FunctionBlocks/FlexRayPDUPanel/FlexRayPDUPanel.htm">PDU Panel</a> into the <a href="../../Windows/SimulationSetup/SimulationSetupWindow.htm" data-mc-conditions="vConditions.CANoeOnly">Simulation Setup</a> and open it by double-click.</li>
                            <li value="2">To update the signals of a FlexRay frame/PDU, simple press <span class="bold">[Add Row]</span> and insert a FlexRay frame/PDU (before measurement).</li>
                            <li value="3">During the measurement you can now interactively manipulate this frame’s payload area using edit boxes in the bottom half of the dialog.</li>
                        </ol>
                    </div>
                </div>
                <div data-mc-conditions="vConditions.CANoeOnly">
                    <h2><a targets="TOGPanels" href="javascript:void(0)" class="MCToggler MCTogglerHead MCTogglerHotSpot MCToggler_Open toggler MCTogglerHotSpot_ MCHotSpotImage" data-mc-targets="TOGPanels"><img class="MCToggler_Image_Icon" src="../../../../../Skins/Default/Stylesheets/Images/transparent.gif" height="11" width="16" alt="Closed" data-mc-alt2="Open" />Using Panels</a>
                    </h2>
                    <div style="display: none;" data-mc-target-name="TOGPanels">
                        <p>You can also create your own panels using the <a href="../../../../../Subsystems/VectorToolsEnvironment/Content/Topics/PanelDesigner/PanelDesigner.htm" data-mc-conditions="vConditions.HTML5Link">Panel Designer</a> utility, which can be started via the <a href="../../Ribbon/RibbonTools.htm"><span class="GUI">Tools</span> ribbon tab</a>|<span class="GUI">Panel&#160;Designer</span>.</p>
                        <p class="StartList">Here is an example:</p>
                        <ol>
                            <li value="1">drag and drop the <span class="bold">Track&#160;Bar</span> from the Toolbox to the opened panel.</li>
                            <li value="2">Select a FlexRay signal to be manipulated via the Symbol Selection in the Properties dialog.</li>
                            <li value="3">Now save your panel (<span class="bold">File|Save</span>).</li>
                            <li value="4">With the <span class="bold">File|Add&#160;Panel&#160;to&#160;Configuration </span>you can add the created panel to your configuration.</li>
                        </ol>
                        <p> After that the panel will be displayed on the currently active desktop.</p>
                        <p>After <span class="bold">[Start&#160;(measurement)]</span> it should now be possible to change the signal’s value using the <span class="bold">Track&#160;Bar</span>.</p>
                    </div>
                </div>
                <div data-mc-conditions="vConditions.CANoeOnly">
                    <h2><a targets="TOGSignalVariables" href="javascript:void(0)" class="MCToggler MCTogglerHead MCTogglerHotSpot MCToggler_Open toggler MCTogglerHotSpot_ MCHotSpotImage" data-mc-targets="TOGSignalVariables"><img class="MCToggler_Image_Icon" src="../../../../../Skins/Default/Stylesheets/Images/transparent.gif" height="11" width="16" alt="Closed" data-mc-alt2="Open" />Using Signal Variables in CAPL</a>
                    </h2>
                    <div style="display: none;" data-mc-target-name="TOGSignalVariables">
                        <ol>
                            <li value="1">Create a FlexRay configuration by following the steps described in "<a href="FRHowToCreateCFGForSimulation.htm">How to create a configuration for simulations?</a>".</li>
                            <li value="2">Select a Network Node (e.g. <span class="SourceCode">GearBox</span>) in the <a href="../../Windows/SimulationSetup/SimulationSetupWindow.htm">Simulation Setup</a> and choose <span class="bold">[Configuration…]</span> of the context menu.</li>
                            <li value="3">Enter a filename for your CAPL program and then press <span class="bold">[Edit]</span> to start the CAPL browser.</li>
                            <li value="4">Now use the appropriate Signal Variable to manipulate a FlexRay signal that is defined in the attached FIBEX database.</li>
                            <li value="5">Now save and compile the CAPL program e.g. by pressing <span class="bold">&lt;F9&gt;</span> and start the measurement.</li>
                            <li value="6">Open the Trace Window via the <a href="../../Ribbon/RibbonAnalysis.htm" data-mc-conditions="vConditions.CANalyzerExclude"><span class="GUI">Analysis</span> ribbon tab</a> and expand the FlexRay frame <span class="SourceCode">GearBoxInfo</span>. On pressing the key &lt;1&gt;, your signal should now increase it’s value by one until it reaches 6.</li>
                        </ol>
                        <h2>Signal Update Example</h2>
                        <div data-mc-target-name="TOGEx1">
                            <div>
                                <table style="width: 100%;margin-left: 0;margin-right: auto;mc-table-style: url('../../../../Resources/Stylesheets/vTableSymbol.css');" class="TableStyle-vTableSymbol" cellspacing="0">
                                    <col class="TableStyle-vTableSymbol-Column-Column1" />
                                    <col class="TableStyle-vTableSymbol-Column-Column2" />
                                    <tbody>
                                        <tr>
                                            <td class="TableStyle-vTableSymbol-BodyB-Column1-">
                                                <p class="Table">
                                                    <img src="../../../../Resources/vImages/vExample.png" style="width: 48px;height: 45px;" title="Example" alt="Example" />
                                                </p>
                                            </td>
                                            <td class="TableStyle-vTableSymbol-BodyA-Column2-">
                                                <p class="TableSymbolHead">Example</p>
                                                <p>Here is a simple example using the event handler for the key &lt;1&gt; assuming the FIBEX database defines a frame GearBoxInfo that contains a signal Gear:</p>
                                                <p class="SourceCode">variables<br />{<br />&#160;&#160;int gGear = 1; // 0 = backwards; 1 = neutral; 2 - 6 = forwards<br />}<br />on preStart<br />{<br />&#160;&#160;// register FlexRay frame for sending:<br />&#160;&#160;FRSetSendFrame( GearBoxInfo, 3 /*flags = startup &amp; sync*/);<br />}<br />on key '1'<br />{<br />&#160;&#160;gGear = $GearBoxInfo::Gear; // reading signal<br />&#160;&#160;if ( ((gGear &gt; 0) &amp;&amp; (gGear &lt; 6)) || ((gGear == 0) &amp;&amp; ($ABSInfo::CarSpeed &lt;= 5)) )<br />&#160;&#160;{<br />&#160;&#160;&#160;&#160;gGear++;<br />&#160;&#160;&#160;&#160;$GearBoxInfo::Gear = gGear; // writing signal<br />&#160;&#160;}<br />}</p>
                                            </td>
                                        </tr>
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>
                </div>
                <div>
                    <h2><a targets="TOGCAPLFunction" href="javascript:void(0)" class="MCToggler MCTogglerHead MCTogglerHotSpot MCToggler_Open toggler MCTogglerHotSpot_ MCHotSpotImage" data-mc-targets="TOGCAPLFunction"><img class="MCToggler_Image_Icon" src="../../../../../Skins/Default/Stylesheets/Images/transparent.gif" height="11" width="16" alt="Closed" data-mc-alt2="Open" />Sending a Frame with a CAPL function</a>
                    </h2>
                    <div style="display: none;" data-mc-target-name="TOGCAPLFunction">
                        <p>You can also update signals using the CAPL functions <a href="../../../CAPLFunctions/FlexRay/Functions/CAPLfunctionFRUpdateStatFrame.htm" class="SourceCode">FRUpdateStatFrame</a> / <a href="../../../CAPLFunctions/FlexRay/Functions/CAPLfunctionFROutputDynFrame.htm" class="SourceCode">FROutputDynFrame</a> / <a href="../../../CAPLFunctions/FlexRay/Functions/CAPLfunctionFRUpdatePDU.htm" class="SourceCode">FRUpdatePDU</a> (see "Frame Update Example" below).</p>
                        <p>Extend, save and recompile your CAPL program from the previous example with signal variables and start the measurement again. With the keys &lt;1&gt; and &lt;2&gt; you can now increment and decrement the signal’s value.</p>
                        <h2>Frame Update Example</h2>
                        <div data-mc-target-name="TOGEx2">
                            <div>
                                <table style="width: 100%;margin-left: 0;margin-right: auto;mc-table-style: url('../../../../Resources/Stylesheets/vTableSymbol.css');" class="TableStyle-vTableSymbol" cellspacing="0">
                                    <col class="TableStyle-vTableSymbol-Column-Column1" />
                                    <col class="TableStyle-vTableSymbol-Column-Column2" />
                                    <tbody>
                                        <tr>
                                            <td class="TableStyle-vTableSymbol-BodyB-Column1-">
                                                <p class="Table">
                                                    <img src="../../../../Resources/vImages/vExample.png" style="width: 48px;height: 45px;" title="Example" alt="Example" />
                                                </p>
                                            </td>
                                            <td class="TableStyle-vTableSymbol-BodyA-Column2-">
                                                <p class="TableSymbolHead">Example</p>
                                                <p>Add a new event handler for the key &lt;2&gt; to your CAPL program with the following code:</p>
                                                <p class="SourceCode">variables<br style="mc-tag-and-class: span;" />{<br style="mc-tag-and-class: span;" />&#160;&#160;int gGear = 1; // 0 = backwards; 1 = neutral; 2 - 6 = forwards<br />&#160;&#160;int gCarSpeed = 0;<br style="mc-tag-and-class: span;" />&#160;&#160;FRFrame GearBoxInfo myframe;<br style="mc-tag-and-class: span;" />}<br style="mc-tag-and-class: span;" />on preStart<br style="mc-tag-and-class: span;" />{<br style="mc-tag-and-class: span;" />&#160;&#160;myframe.MsgChannel = %CHANNEL%;<br style="mc-tag-and-class: span;" />&#160;&#160;myframe.FR_ChannelMask = 1; // send only on A<br style="mc-tag-and-class: span;" />&#160;&#160;myframe.FR_Flags = 0x03; // send as startup/sync<br style="mc-tag-and-class: span;" />&#160;&#160;FRSetPayloadLengthInByte(myframe, 16);<br style="mc-tag-and-class: span;" />&#160;&#160;// register FlexRay frame for sending:<br style="mc-tag-and-class: span;" />&#160;&#160;FRSetSendFrame(myframe);<br style="mc-tag-and-class: span;" />}<br />on FRFrame GearBoxInfo<br />{<br />&#160;&#160;gGear = this.Gear;<br />}<br />on FRFrame ABSInfo<br />{<br />&#160;&#160;gCarSpeed = this.CarSpeed;<br />}<br style="mc-tag-and-class: span;" />on key ’2’<br style="mc-tag-and-class: span;" />{<br style="mc-tag-and-class: span;" />&#160;&#160;if ( ((gGear &gt; 1) &amp;&amp; (gGear &lt;= 6)) || ((gGear == 1) &amp;&amp; (gCarSpeed &lt;= 5)) )<br style="mc-tag-and-class: span;" />&#160;&#160;{<br style="mc-tag-and-class: span;" />&#160;&#160;&#160;&#160;gGear--;<br style="mc-tag-and-class: span;" />&#160;&#160;&#160;&#160;myframe.Gear = gGear;<br style="mc-tag-and-class: span;" />&#160;&#160;&#160;&#160;FRUpdateStatFrame(myframe);<br style="mc-tag-and-class: span;" />&#160;&#160;}<br style="mc-tag-and-class: span;" />}</p>
                                            </td>
                                        </tr>
                                    </tbody>
                                </table>
                            </div>
                            <div>
                                <table style="width: 100%;margin-left: 0;margin-right: auto;mc-table-style: url('../../../../Resources/Stylesheets/vTableSymbol.css');" class="TableStyle-vTableSymbol" cellspacing="0">
                                    <col class="TableStyle-vTableSymbol-Column-Column1" />
                                    <col class="TableStyle-vTableSymbol-Column-Column2" />
                                    <tbody>
                                        <tr>
                                            <td class="TableStyle-vTableSymbol-BodyB-Column1-">
                                                <p class="Table">
                                                    <img src="../../../../Resources/vImages/vInfo.png" style="width: 48px;height: 45px;" title="Note" alt="Note" />
                                                </p>
                                            </td>
                                            <td class="TableStyle-vTableSymbol-BodyA-Column2-">
                                                <p class="TableSymbolHead">Note</p>
                                                <p>If the frame that you want to send by the <a href="../../../CAPLFunctions/FlexRay/Objects/CAPLfunctionFRFrame.htm" class="SourceCode">FRFrame</a> object is a dynamic frame, then you have to use the function <a href="../../../CAPLFunctions/FlexRay/Functions/CAPLfunctionFROutputDynFrame.htm" class="SourceCode">FROutputDynFrame</a> instead of <a href="../../../CAPLFunctions/FlexRay/Functions/CAPLfunctionFRUpdateStatFrame.htm" class="SourceCode">FRUpdateStatFrame</a>! If you have to send PDUs, then use the function <a href="../../../CAPLFunctions/FlexRay/Functions/CAPLfunctionFRUpdatePDU.htm" class="SourceCode">FRUpdatePDU</a> and the <a href="../../../CAPLFunctions/FlexRay/Objects/CAPLfunctionFrPDU.htm" class="SourceCode">FrPDU</a> object.</p>
                                            </td>
                                        </tr>
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>
                </div>
                <div data-mc-conditions="vConditions.CANoeOnly">
                    <h2><a targets="TOGSignalGenerators" href="javascript:void(0)" class="MCToggler MCTogglerHead MCTogglerHotSpot MCToggler_Open toggler MCTogglerHotSpot_ MCHotSpotImage" data-mc-targets="TOGSignalGenerators"><img class="MCToggler_Image_Icon" src="../../../../../Skins/Default/Stylesheets/Images/transparent.gif" height="11" width="16" alt="Closed" data-mc-alt2="Open" />Sending with Signal Generators</a>
                    </h2>
                    <div style="display: none;" data-mc-target-name="TOGSignalGenerators">
                        <p>Via the <a href="../../Ribbon/RibbonStimulationSimulation.htm" data-mc-conditions="vConditions.CANalyzerExclude"><span class="GUI">Simulation</span> ribbon tab</a>|<span class="GUI">Signal Generators and Signal Replay</span> you can define <a href="../../Windows/SignalGenerator/SignalGeneratorOverview.htm">Signal Generators and Replay</a>. Signal generators are used to define a signal's value sequence, which will be transmitted periodically and can be started, paused, and stopped interactively.</p>
                    </div>
                </div>
                <div>
                    <h2><a targets="TOGReplayBlock" href="javascript:void(0)" class="MCToggler MCTogglerHead MCTogglerHotSpot MCToggler_Open toggler MCTogglerHotSpot_ MCHotSpotImage" data-mc-targets="TOGReplayBlock"><img class="MCToggler_Image_Icon" src="../../../../../Skins/Default/Stylesheets/Images/transparent.gif" height="11" width="16" alt="Closed" data-mc-alt2="Open" />Sending with a Replay Block</a>
                    </h2>
                    <div style="display: none;" data-mc-target-name="TOGReplayBlock">
                        <p>A logging file can be replayed into a running simulation. Therefore insert a <a href="../../FunctionBlocks/Replay/idd_rb_flexray_cfg_page.htm">FlexRay Replay Block</a> into the <a href="../../Windows/SimulationSetup/SimulationSetupWindow.htm" data-mc-conditions="vConditions.CANoeOnly">Simulation Setup</a> and configure it by double-click.</p>
                        <p>The Replay Block sends only complete frames. Thus, all signals and PDUs, which are part of the frame according to the current FIBEX database, are replayed.</p>
                        <p>All frames that are sent by a specific ECU can be filtered from the logging. Thus, all frames that are sent by any selected ECU are replayed.</p>
                    </div>
                </div>
                <p class="LinkList"><a href="FRHowToCreateCFGForSimulation.htm" class="LinkList" data-mc-conditions="vConditions.CANoeOnly">« Previous Chapter</a>&#160;&#160;•&#160;&#160;<a href="FRHowToSpecificRBSBehavior.htm" class="LinkList" data-mc-conditions="vConditions.CANoeOnly">Next Chapter »</a></p>
                <p class="LinkList"><a href="../FlexRay.htm" class="LinkList">FlexRay</a>&#160;&#160;•&#160;&#160;<a href="../FlexRayFIBEX.htm" class="LinkList">FIBEX Support</a>&#160;&#160;•&#160;&#160;<a href="../FlexRayPDUSupport.htm" class="LinkList">PDU Support</a>&#160;&#160;•&#160;&#160;<a href="../FlexRayMultiChannelSupport.htm" class="LinkList">Multi-Channel Support</a>&#160;&#160;•&#160;&#160;<a href="../../Ribbon/File/Options/BussystemsProtocols/BussystemsProtocolsBussystems.htm" class="LinkList">FlexRay Settings</a>&#160;&#160;•&#160;&#160;<a href="../../../CAPLFunctions/FlexRay/CAPLfunctionsFlexrayOverview.htm" class="LinkList">FlexRay CAPL Functionality</a>&#160;&#160;•&#160;&#160;<a href="FRHowTo.htm" class="LinkList">FlexRay: How-tos...</a><br /></p>
            </div>
        </div>
        <div class="Footer">
            <div class="FooterWhite">
                <table class="FooterWhite" style="border-collapse: collapse;margin-left: auto;margin-right: auto;">
                    <col style="width: 70px;" data-mc-conditions="vConditions.HTML5Link" />
                    <col style="width: 16px;" data-mc-conditions="vConditions.HTML5Link" />
                    <col />
                    <tbody>
                        <tr>
                            <td>
                                <div class="buttons popup-container clearfix topicToolbarProxy topicToolbarProxyFooter _Skins_HTML5TopicToolbar mc-component nocontent">
                                    <div class="button-group-container-left">
                                        <button class="button needs-pie expand-all-button" data-state1-class="expand-all-button" data-state2-class="collapse-all-button" data-state2-title="Collapse all" title="Expand all" data-state1-title="Expand all">
                                            <div>
                                                <div role="img" class="button-icon-wrapper" aria-label="Expand all">
                                                    <div class="button-icon"> </div>
                                                </div>
                                            </div>
                                        </button>
                                        <button class="button needs-pie remove-highlight-button" title="Remove Highlights">
                                            <div>
                                                <div role="img" class="button-icon-wrapper">
                                                    <div class="button-icon"> </div>
                                                </div>
                                            </div>
                                        </button>
                                    </div>
                                </div>
                            </td>
                            <td>
                                <p class="vec_BuildInfo"><a href="../../../Shared/HowToUseOnlineHelp.htm" title="Tips for using the help" alt="Tips for using the help"><img src="../../../../Resources/vImages/vBackstage/vHelpInfo.png" /></a>
                                </p>
                            </td>
                            <td>
                                <p class="vec_BuildInfo" style="text-align: right;"><span class="mc-variable Vector.BuildTime variable">2023-09-26T19:49:32</span>
                                </p>
                            </td>
                        </tr>
                    </tbody>
                </table>
            </div>
            <table style="width: 100%;border-collapse: separate;border-spacing: 3px 0px;margin-left: auto;margin-right: auto;caption-side: top;">
                <col />
                <col />
                <col />
                <col data-mc-conditions="vConditions.HTML5Link" />
                <tbody>
                    <tr>
                        <td style="background-color: #b70032;padding-left: 5pt;padding-right: 5pt;padding-top: 5pt;padding-bottom: 5pt;">
                            <p class="vec_Footer">©&#160;Vector Informatik GmbH</p>
                        </td>
                        <td style="background-color: #b70032;padding-left: 5pt;padding-right: 5pt;padding-top: 5pt;padding-bottom: 5pt;text-align: right;">
                            <p class="vec_FooterBold">
                                <MadCap:conditionalText data-mc-conditions="vConditions.vTESTstudioExcluded,vConditions.TestDataEditorExcluded">CANoe</MadCap:conditionalText> Version <MadCap:conditionalText data-mc-conditions="vConditions.vTESTstudioExcluded">17 SP3</MadCap:conditionalText></p>
                        </td>
                        <td style="background-color: #b70032;padding-left: 5pt;padding-right: 5pt;padding-top: 5pt;padding-bottom: 0pt;text-align: right;">
                            <p class="vec_Footer"><a href="../../../Shared/ContactCopyrightLicense.htm" class="vec_Footer MCXref xref xrefvec_Footer">Contact/Copyright/License</a>
                            </p>
                        </td>
                        <td style="background-color: #b70032;padding-left: 5pt;padding-right: 5pt;padding-top: 5pt;padding-bottom: 0pt;text-align: right;">
                            <p class="vec_Footer"><a href="https://www.vector.com/int/en/company/get-info/privacy-policy/" target="_blank" class="vec_Footer">Data Privacy Notice</a>
                            </p>
                        </td>
                    </tr>
                </tbody>
            </table>
        </div>
    </body>
</html>