<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en-us" xml:lang="en-us" data-mc-search-type="Stem" data-mc-help-system-file-name="CANoeCANalyzer.xml" data-mc-path-to-help-system="../../../../../" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic" data-mc-preload-images="false" data-mc-in-preview-mode="false">
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta charset="utf-8" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
        <meta name="msapplication-config" content="../../../../../Skins/Favicons/browserconfig.xml" />
        <link rel="apple-touch-icon" sizes="180x180" href="../../../../../Skins/Favicons/apple-touch-icon.png" />
        <link rel="shortcut icon" href="../../../../../Skins/Favicons/favicon-32x32.png" />
        <link rel="icon" sizes="96x96" href="../../../../../Skins/Favicons/favicon-96x96.png" />
        <link rel="icon" sizes="32x32" href="../../../../../Skins/Favicons/favicon-32x32.png" />
        <link rel="icon" sizes="16x16" href="../../../../../Skins/Favicons/favicon-16x16.png" /><title>Reset of the FlexRay Communication Controller by its POC</title>
        <link href="../../../../../Skins/Default/Stylesheets/Slideshow.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../../Skins/Default/Stylesheets/Components/Styles.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../../Skins/Default/Stylesheets/Components/Tablet.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../../Skins/Default/Stylesheets/Components/Mobile.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../../Skins/Default/Stylesheets/Components/Print.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../Resources/Stylesheets/vTableMasterPageHeader.css" rel="stylesheet" data-mc-stylesheet-type="table" />
        <link href="../../../../Resources/Stylesheets/vStylesheet.css" rel="stylesheet" type="text/css" />
        <style>/*&lt;meta /&gt;*/

.button.expand-all-button
{
	-pie-background: linear-gradient(#ffffff, #ffffff);
}

.button.remove-highlight-button
{
	-pie-background: linear-gradient(#ffffff, #ffffff);
}

.button.collapse-all-button
{
	-pie-background: linear-gradient(#ffffff, #ffffff);
}

.needs-pie
{
	behavior: url('../../../../../Resources/Scripts/PIE-no-motw.htc');
}

</style>
        <link href="../../../../Resources/Stylesheets/vTableSymbol.css" rel="stylesheet" data-mc-stylesheet-type="table" />
        <link rel="apple-touch-icon" sizes="180x180" href="../../../../../Skins/Favicons/apple-touch-icon.png" />
        <link rel="shortcut icon" href="../../../../../Skins/Favicons/favicon-32x32.png" />
        <link rel="icon" sizes="96x96" href="../../../../../Skins/Favicons/favicon-96x96.png" />
        <link rel="icon" sizes="32x32" href="../../../../../Skins/Favicons/favicon-32x32.png" />
        <link rel="icon" sizes="16x16" href="../../../../../Skins/Favicons/favicon-16x16.png" />
        <script src="../../../../../Resources/Scripts/jquery.min.js" type="text/javascript">
        </script>
        <script src="../../../../../Resources/Scripts/purify.min.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/require.min.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/require.config.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/foundation.min.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/plugins.min.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapGlobal.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapDom.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapUtilities.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapXhr.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapTextEffects.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapSlideshow.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapMessageBus.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapMessageBus.CrossFrame.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapDefault.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapMediaQueries.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapAccessibility.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapHelpSystem.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapAliasFile.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapTopicFeedback.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapFeedbackHelper.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapSkinHelper.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapToc.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapToc.Breadcrumbs.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapToc.MiniToc.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapToc.SideMenu.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapIndex.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapGlossary.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapParser.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapSearch.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapNavigateTopics.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapLms.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapELearning.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapTopic.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapFeedback.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapMicroContentComponent.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapSearchHelper.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapTopicElements.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapTriPane.js" type="text/javascript" defer="defer">
        </script>
        <script type="text/jscript" src="../../../../Resources/vScripts/SyntaxHighlighting.js">
        </script>
        <script type="text/jscript" src="../../../../Resources/vScripts/TabSwitch.js">
        </script>
        <script type="text/javascript" src="../../../../Resources/vScripts/Vector.js">
        </script>
    </head>
    <body>
        <p class="MCWebHelpFramesetLink MCWebHelpFramesetLinkTop"><a href="../../../../../CANoeCANalyzer.htm#Topics/CANoeCANalyzer/FlexRay/CAPL_Functions/FlexRay_CAPL_Reset_FlexRay-CC_by_POC.htm">Open topic with navigation</a>
        </p>
        <div class="Body">
            <div role="main" id="mc-main-content">
                <p class="StructurePath"><a href="../FlexRay.htm" class="StructurePath">FlexRay</a> » <a href="../FlexRayCAPLUsage.htm" class="StructurePath">Exemplary 
 Usage of FlexRay Functions in CAPL</a> » 
 Reset of the FlexRay Communication 
 Controller by its POC</p>
                <h1>Reset of the FlexRay Communication 
 Controller by its POC</h1>
                <p class="MenuPath">&#160;</p>
                <p class="AutoSearchFilterConcepts"><a name="aanchor5411"></a>
                    <MadCap:concept term="SFCore" />
                </p>
                <p><a name="kanchor4096"></a>
                </p>
                <p>The resetting of the FlexRay communication controller by the functions <a href="../../../CAPLFunctions/FlexRay/Functions/CAPLfunctionResetFlexrayCC.htm">ResetFlexRayCC</a> or <a href="../../../CAPLFunctions/FlexRay/Functions/CAPLfunctionResetFlexrayCCEX.htm">ResetFlexRayCCEx</a> takes considerable time. During this time the complete execution of <span class="Product">CANoe</span> (including any remaining bus simulation) is halted/suspended.</p>
                <p>In order to prevent this suspension the reset can be executed asynchronously by manipulating the <span class="bold">Protocol Operation Control</span> (POC) state machine of the FlexRay Communication Controller directly.</p>
                <p>An example is given is the CAPL&#160;include file below. The example can be configured to use the original reset functions or to use the POC handling (default). Instead of <span class="Product">CANoe's</span> functions <a href="../../../CAPLFunctions/FlexRay/Functions/CAPLfunctionResetFlexrayCC.htm">ResetFlexRayCC</a> and <a href="../../../CAPLFunctions/FlexRay/Functions/CAPLfunctionResetFlexrayCCEX.htm">ResetFlexRayCCEx</a> the CAPL&#160;function <span class="bold">FRRestart</span> should globally be used in all other CAPL programs.</p>
                <p class="StartList">The manipulation of the POC is done by calling the function</p>
                <ul>
                    <li><a href="../../../CAPLFunctions/FlexRay/Functions/CAPLfunctionFRSetPocState.htm">FRSetPOCState</a>
                    </li>
                </ul>
                <p class="StartList">The example below makes use of the following additional helper function in order to read the reset settings for an eventual wake-up:</p>
                <ul>
                    <li><a href="../../../CAPLFunctions/FlexRay/Functions/CAPLfunctionFRGetConfiguration.htm">FRGetConfiguration</a>
                    </li>
                </ul>
                <p class="StartList">The current POC state of the controller is traced by the following event handler</p>
                <ul>
                    <li><a href="../../../CAPLFunctions/FlexRay/EventProcedures/CAPLfunctionOnFRPocState.htm">on FRPOCState</a>
                    </li>
                </ul>
                <div>
                    <table style="width: 100%;margin-left: 0;margin-right: auto;mc-table-style: url('../../../../Resources/Stylesheets/vTableSymbol.css');" class="TableStyle-vTableSymbol" cellspacing="0">
                        <col class="TableStyle-vTableSymbol-Column-Column1" />
                        <col class="TableStyle-vTableSymbol-Column-Column2" />
                        <tbody>
                            <tr>
                                <td class="TableStyle-vTableSymbol-BodyB-Column1-">
                                    <p class="Table">
                                        <img src="../../../../Resources/vImages/vExample.png" style="width: 48px;height: 45px;" title="Example" alt="Example" />
                                    </p>
                                </td>
                                <td class="TableStyle-vTableSymbol-BodyA-Column2-">
                                    <p class="TableSymbolHead">Example</p>
                                    <p>The following CAPL&#160;include file does an automatic "reset with loss of synchronization" and "reset with wake-up" 
 by pressing the &lt;w&gt; key.</p>
                                    <p>&#160;</p>
                                    <p class="SourceCode">variables<br />{<br />&#160;&#160;// The function 'FRRestart' replaces 'ResetFlexRayCC' and 'ResetFlexRayCCEx'.<br />&#160;&#160;// The new function uses the asynchronous function 'FRSetPOCState' instead.<br /><br />&#160;&#160;// Remember to call the herein defined callback '_observeFRPOCStateForRestart' in<br />&#160;&#160;// the 'on FrPocState' event handler. (Already done in this include file)<br /><br />&#160;&#160;// ATTENTION: if gDoAutomaticRestart == 1 or gUseResetOrPOCState == 1,<br />&#160;&#160;//            then disable the 'Automatic Restart' for the appropriate FlexRay interface<br />&#160;&#160;//            in the network interface configuration dialog of CANoe/CANalyzer!<br /><br />&#160;&#160;// Version 1.1, Vector Informatik GmbH, 2009<br /><br />&#160;&#160;const int cMaxObservedClusters = 2;<br /><br />&#160;&#160;// Observed state of cluster by interpretation of interface's POC state:<br />&#160;&#160;int gClusterSleeps[cMaxObservedClusters]      = { -1, -1 }; // -1 = state unknown, 0 = cluster is active, 1 = cluster is not active<br /><br />&#160;&#160;// Configuration of behavior:<br />&#160;&#160;int gUseResetOrPOCState[cMaxObservedClusters] = { 1, 1 }; // 1 = use setting POC state explicitely, 0 = use 'ResetFlexRayCC' function<br />&#160;&#160;int gDoAutomaticRestart[cMaxObservedClusters] = { 0, 0 }; // 1 = do restart if sync lost (automatic), 0 = do nothing on sync lost<br />&#160;&#160;int gConsider2ndCC[cMaxObservedClusters]      = { 1, 1 }; // 1 = set POC state also for 2nd CC (coldstart helper)<br /><br />&#160;&#160;// The following variables are used internally:<br />&#160;&#160;int gWaitForRestart[cMaxObservedClusters] = { 0, 0 };<br />&#160;&#160;int gDoWakeUpDuringRestart[cMaxObservedClusters] = { 0, 0 };<br />}<br /><br />void FRRestart (byte channel, int doWakeUp)<br />{<br />&#160;&#160;// Execute reset of interface (in order to gain new synchronization):<br />&#160;&#160;// This function replaces 'ResetFlexRayCC' and 'ResetFlexRayCCEx'.<br /><br />&#160;&#160;byte idx;<br /><br />&#160;&#160;idx = channel - 1;<br />&#160;&#160;if ((idx &gt;= cMaxObservedClusters) || (gUseResetOrPOCState[idx] == 0))<br />&#160;&#160;{<br />&#160;&#160;&#160;&#160;_FRReset(channel, doWakeUp);<br />&#160;&#160;}<br />&#160;&#160;else<br />&#160;&#160;{<br />&#160;&#160;&#160;&#160;gWaitForRestart[idx] = 1;<br />&#160;&#160;&#160;&#160;gDoWakeUpDuringRestart[idx] = (doWakeUp == 0) ? 0 : 1;<br /><br />&#160;&#160;&#160;&#160;if (gClusterSleeps[idx] == 0)<br />&#160;&#160;&#160;&#160;{<br />&#160;&#160;&#160;&#160;&#160;&#160;write("### Stopping channel FR %d", channel);<br /><br />&#160;&#160;&#160;&#160;&#160;&#160;FRSetPOCState(channel, 1, 2); // Goto Halt<br />&#160;&#160;&#160;&#160;&#160;&#160;if (gConsider2ndCC[idx] == 1)<br />&#160;&#160;&#160;&#160;&#160;&#160;{<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;FRSetPOCState(channel, 2, 2); // Goto Halt<br />&#160;&#160;&#160;&#160;&#160;&#160;}<br />&#160;&#160;&#160;&#160;}<br />&#160;&#160;&#160;&#160;else<br />&#160;&#160;&#160;&#160;{<br />&#160;&#160;&#160;&#160;&#160;&#160;write("### Prepare restart on channel FR %d", channel);<br /><br />&#160;&#160;&#160;&#160;&#160;&#160;FRSetPOCState(channel, 1, 3); // Goto Ready<br />&#160;&#160;&#160;&#160;}<br />&#160;&#160;}<br />}<br /><br />on key 'r'<br />{<br />&#160;&#160;// do a restart for FlexRay channel 1 without sending a wakeup:<br />&#160;&#160;FRRestart(1, 0);<br />}<br /><br />on key 'w'<br />{<br />&#160;&#160;// do a restart for FlexRay channel 1 with sending a wakeup:<br />&#160;&#160;FRRestart(1, 1);<br />}<br /><br />on FrPocState<br />{<br />&#160;&#160;_observeFRPOCStateForRestart(this.MsgChannel, this.FR_POCState);<br />}<br /><br />void _FRReset (byte channel, int doWakeUp)<br />{<br />&#160;&#160;// This function is only used internally!<br /><br />&#160;&#160;byte idx;<br /><br />&#160;&#160;idx = channel - 1;<br />&#160;&#160;if ((idx &gt;= cMaxObservedClusters) || (gUseResetOrPOCState[idx] == 0))<br />&#160;&#160;{<br />&#160;&#160;&#160;&#160;if ((idx &lt; cMaxObservedClusters) &amp;&amp; (gUseResetOrPOCState[idx] != 0)) return;<br /><br />&#160;&#160;&#160;&#160;if (doWakeUp == 1)<br />&#160;&#160;&#160;&#160;{<br />&#160;&#160;&#160;&#160;&#160;&#160;FRConfiguration clusterParams;<br />&#160;&#160;&#160;&#160;&#160;&#160;FRGetConfiguration(channel, clusterParams);<br /><br />&#160;&#160;&#160;&#160;&#160;&#160;write("### Reset of channel FR %d with possible WakeUp", channel);<br /><br />&#160;&#160;&#160;&#160;&#160;&#160;ResetFlexRayCCEx(channel, clusterParams.pWakeupChannel, clusterParams.pWakeupPattern, clusterParams.gdWakeupSymbolTxIdle, clusterParams.gdWakeupSymbolTxLow, "");<br />&#160;&#160;&#160;&#160;}<br />&#160;&#160;&#160;&#160;else<br />&#160;&#160;&#160;&#160;{<br />&#160;&#160;&#160;&#160;&#160;&#160;write("### Reset of channel FR %d", channel);<br /><br />&#160;&#160;&#160;&#160;&#160;&#160;ResetFlexRayCC(channel);<br />&#160;&#160;&#160;&#160;}<br />&#160;&#160;}<br />}<br /><br />void _observeFRPOCStateForRestart (byte channel, dword thePOCState)<br />{<br />&#160;&#160;// This callback function must be called within the POC state event handler:<br />&#160;&#160;//&#160;&#160;   on FrPocState<br />&#160;&#160;//&#160;&#160;   {<br />&#160;&#160;//&#160;&#160;&#160;&#160;&#160;    _observeFRPOCStateForRestart(this.MsgChannel, this.FR_POCState);<br />&#160;&#160;//&#160;&#160;   }<br /><br />&#160;&#160;byte idx;<br /><br />&#160;&#160;idx = channel - 1;<br />&#160;&#160;if (idx &gt;= cMaxObservedClusters) return;<br /><br />&#160;&#160;if (((gClusterSleeps[idx] == -1) || (gClusterSleeps[idx] == 0)) &amp;&amp; ((thePOCState == 4) || (thePOCState == -2)))<br />&#160; {<br />&#160;&#160;&#160;&#160;// POC Halt or not synced<br /><br />&#160;&#160;&#160;&#160;//write("### entered POC HALT on channel FR %d", channel);<br /><br />&#160;&#160;&#160;&#160;if (gUseResetOrPOCState[idx] == 1)<br />&#160;&#160;&#160;&#160;{<br />&#160;&#160;&#160;&#160;&#160;&#160;if (gWaitForRestart[idx] &gt; 0 || ((gDoAutomaticRestart[idx] &gt; 0) &amp;&amp; (gClusterSleeps[idx] == 0)))<br />&#160;&#160;&#160;&#160;&#160;&#160;{<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;FRSetPOCState(channel, 1, 3); // Goto Ready<br /><br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;write("### Prepare restart on channel FR %d", channel);<br />&#160;&#160;&#160;&#160;&#160;&#160;}<br />&#160;&#160;&#160;&#160;}<br />&#160;&#160;&#160;&#160;else<br />&#160;&#160;&#160;&#160;{<br />&#160;&#160;&#160;&#160;&#160;&#160;if ((gDoAutomaticRestart[idx] &gt; 0) &amp;&amp; (gClusterSleeps[idx] == 0))<br />&#160;&#160;&#160;&#160;&#160;&#160;{<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;_FRReset(channel, gDoWakeUpDuringRestart[idx]);<br />&#160;&#160;&#160;&#160;&#160;&#160;}<br />&#160;&#160;&#160;&#160;}<br /><br />&#160;&#160;&#160;&#160;// Remember non active interface mode:<br />&#160;&#160;&#160;&#160;gClusterSleeps[idx] = 1;<br />&#160;&#160;}<br />&#160;&#160;if (((gClusterSleeps[idx] == -1) || (gClusterSleeps[idx] == 1)) &amp;&amp; (thePOCState == 1))<br />&#160; {<br />&#160;&#160;&#160;&#160;// POC Ready<br /><br />&#160;&#160;&#160;&#160;//write("### entered POC READY on channel FR %d", channel);<br /><br />&#160;&#160;&#160;&#160;if (gUseResetOrPOCState[idx] == 1)<br />&#160;&#160;&#160;&#160;{<br />&#160;&#160;&#160;&#160;&#160;&#160;if (gDoWakeUpDuringRestart[idx] &gt; 0)<br />&#160;&#160;&#160;&#160;&#160;&#160;{<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;FRSetPOCState(channel, 1, 0); // Goto WakeUp<br /><br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;write("### Possible WakeUp on channel FR %d", channel);<br /><br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;gDoWakeUpDuringRestart[idx] = 0;<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;return;<br />&#160;&#160;&#160;&#160;&#160;&#160;}<br />&#160;&#160;&#160;&#160;&#160;&#160;if (gWaitForRestart[idx] &gt; 0 || ((gDoAutomaticRestart[idx] &gt; 0) &amp;&amp; (gClusterSleeps[idx] == 0)))<br />&#160;&#160;&#160;&#160;&#160;&#160;{<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;FRSetPOCState(channel, 1, 1); // Goto Normal Active<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if (gConsider2ndCC[idx] == 1)<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;{<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;FRSetPOCState(channel, 2, 1); // Goto Normal Active<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;}<br /><br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;write("### Restarting channel FR %d", channel);<br /><br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;gWaitForRestart[idx] = 0;<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;return;<br />&#160;&#160;&#160;&#160;&#160;&#160;}<br />&#160;&#160;&#160;&#160;}<br />&#160;&#160;}<br />&#160;&#160;if (((gClusterSleeps[idx] == -1) || (gClusterSleeps[idx] == 1)) &amp;&amp; (thePOCState == 2))<br />&#160;&#160;{<br />&#160;&#160;&#160;&#160;// POC Normal Active<br /><br />&#160;&#160;&#160;&#160;//write("### entered POC NORMAL ACTIVE on channel FR %d", channel);<br /><br />&#160;&#160;&#160;&#160;// Remember active interface mode:<br />&#160;&#160;&#160;&#160;gClusterSleeps[idx] = 0;<br />&#160;&#160;}<br />}</p>
                                </td>
                            </tr>
                        </tbody>
                    </table>
                </div>
                <p class="LinkList">&#160;</p>
            </div>
        </div>
        <div class="Footer">
            <div class="FooterWhite">
                <table class="FooterWhite" style="border-collapse: collapse;margin-left: auto;margin-right: auto;">
                    <col style="width: 70px;" data-mc-conditions="vConditions.HTML5Link" />
                    <col style="width: 16px;" data-mc-conditions="vConditions.HTML5Link" />
                    <col />
                    <tbody>
                        <tr>
                            <td>
                                <div class="buttons popup-container clearfix topicToolbarProxy topicToolbarProxyFooter _Skins_HTML5TopicToolbar mc-component nocontent">
                                    <div class="button-group-container-left">
                                        <button class="button needs-pie expand-all-button" data-state1-class="expand-all-button" data-state2-class="collapse-all-button" data-state2-title="Collapse all" title="Expand all" data-state1-title="Expand all">
                                            <div>
                                                <div role="img" class="button-icon-wrapper" aria-label="Expand all">
                                                    <div class="button-icon"> </div>
                                                </div>
                                            </div>
                                        </button>
                                        <button class="button needs-pie remove-highlight-button" title="Remove Highlights">
                                            <div>
                                                <div role="img" class="button-icon-wrapper">
                                                    <div class="button-icon"> </div>
                                                </div>
                                            </div>
                                        </button>
                                    </div>
                                </div>
                            </td>
                            <td>
                                <p class="vec_BuildInfo"><a href="../../../Shared/HowToUseOnlineHelp.htm" title="Tips for using the help" alt="Tips for using the help"><img src="../../../../Resources/vImages/vBackstage/vHelpInfo.png" /></a>
                                </p>
                            </td>
                            <td>
                                <p class="vec_BuildInfo" style="text-align: right;"><span class="mc-variable Vector.BuildTime variable">2023-09-26T19:49:32</span>
                                </p>
                            </td>
                        </tr>
                    </tbody>
                </table>
            </div>
            <table style="width: 100%;border-collapse: separate;border-spacing: 3px 0px;margin-left: auto;margin-right: auto;caption-side: top;">
                <col />
                <col />
                <col />
                <col data-mc-conditions="vConditions.HTML5Link" />
                <tbody>
                    <tr>
                        <td style="background-color: #b70032;padding-left: 5pt;padding-right: 5pt;padding-top: 5pt;padding-bottom: 5pt;">
                            <p class="vec_Footer">©&#160;Vector Informatik GmbH</p>
                        </td>
                        <td style="background-color: #b70032;padding-left: 5pt;padding-right: 5pt;padding-top: 5pt;padding-bottom: 5pt;text-align: right;">
                            <p class="vec_FooterBold">
                                <MadCap:conditionalText data-mc-conditions="vConditions.vTESTstudioExcluded,vConditions.TestDataEditorExcluded">CANoe</MadCap:conditionalText> Version <MadCap:conditionalText data-mc-conditions="vConditions.vTESTstudioExcluded">17 SP3</MadCap:conditionalText></p>
                        </td>
                        <td style="background-color: #b70032;padding-left: 5pt;padding-right: 5pt;padding-top: 5pt;padding-bottom: 0pt;text-align: right;">
                            <p class="vec_Footer"><a href="../../../Shared/ContactCopyrightLicense.htm" class="vec_Footer MCXref xref xrefvec_Footer">Contact/Copyright/License</a>
                            </p>
                        </td>
                        <td style="background-color: #b70032;padding-left: 5pt;padding-right: 5pt;padding-top: 5pt;padding-bottom: 0pt;text-align: right;">
                            <p class="vec_Footer"><a href="https://www.vector.com/int/en/company/get-info/privacy-policy/" target="_blank" class="vec_Footer">Data Privacy Notice</a>
                            </p>
                        </td>
                    </tr>
                </tbody>
            </table>
        </div>
    </body>
</html>