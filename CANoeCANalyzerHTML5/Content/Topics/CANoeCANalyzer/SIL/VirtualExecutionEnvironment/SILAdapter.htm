<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en-us" xml:lang="en-us" class="" data-mc-search-type="Stem" data-mc-help-system-file-name="CANoeCANalyzer.xml" data-mc-path-to-help-system="../../../../../" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic" data-mc-preload-images="false" data-mc-in-preview-mode="false">
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta charset="utf-8" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
        <meta name="msapplication-config" content="../../../../../Skins/Favicons/browserconfig.xml" />
        <link rel="apple-touch-icon" sizes="180x180" href="../../../../../Skins/Favicons/apple-touch-icon.png" />
        <link rel="shortcut icon" href="../../../../../Skins/Favicons/favicon-32x32.png" />
        <link rel="icon" sizes="96x96" href="../../../../../Skins/Favicons/favicon-96x96.png" />
        <link rel="icon" sizes="32x32" href="../../../../../Skins/Favicons/favicon-32x32.png" />
        <link rel="icon" sizes="16x16" href="../../../../../Skins/Favicons/favicon-16x16.png" /><title>SIL Adapter</title>
        <link href="../../../../../Skins/Default/Stylesheets/Slideshow.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../../Skins/Default/Stylesheets/Components/Styles.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../../Skins/Default/Stylesheets/Components/Tablet.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../../Skins/Default/Stylesheets/Components/Mobile.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../../Skins/Default/Stylesheets/Components/Print.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../Resources/Stylesheets/vTableMasterPageHeader.css" rel="stylesheet" data-mc-stylesheet-type="table" />
        <link href="../../../../Resources/Stylesheets/vStylesheet.css" rel="stylesheet" type="text/css" />
        <style>/*&lt;meta /&gt;*/

.button.expand-all-button
{
	-pie-background: linear-gradient(#ffffff, #ffffff);
}

.button.remove-highlight-button
{
	-pie-background: linear-gradient(#ffffff, #ffffff);
}

.button.collapse-all-button
{
	-pie-background: linear-gradient(#ffffff, #ffffff);
}

.needs-pie
{
	behavior: url('../../../../../Resources/Scripts/PIE-no-motw.htc');
}

</style>
        <link href="../../../../Resources/Stylesheets/vTable.css" rel="stylesheet" data-mc-stylesheet-type="table" />
        <link href="../../../../Resources/Stylesheets/vTableSymbol.css" rel="stylesheet" data-mc-stylesheet-type="table" />
        <link rel="apple-touch-icon" sizes="180x180" href="../../../../../Skins/Favicons/apple-touch-icon.png" />
        <link rel="shortcut icon" href="../../../../../Skins/Favicons/favicon-32x32.png" />
        <link rel="icon" sizes="96x96" href="../../../../../Skins/Favicons/favicon-96x96.png" />
        <link rel="icon" sizes="32x32" href="../../../../../Skins/Favicons/favicon-32x32.png" />
        <link rel="icon" sizes="16x16" href="../../../../../Skins/Favicons/favicon-16x16.png" />
        <script src="../../../../../Resources/Scripts/jquery.min.js" type="text/javascript">
        </script>
        <script src="../../../../../Resources/Scripts/purify.min.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/require.min.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/require.config.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/foundation.min.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/plugins.min.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapGlobal.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapDom.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapUtilities.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapXhr.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapTextEffects.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapSlideshow.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapMessageBus.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapMessageBus.CrossFrame.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapDefault.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapMediaQueries.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapAccessibility.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapHelpSystem.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapAliasFile.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapTopicFeedback.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapFeedbackHelper.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapSkinHelper.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapToc.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapToc.Breadcrumbs.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapToc.MiniToc.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapToc.SideMenu.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapIndex.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapGlossary.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapParser.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapSearch.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapNavigateTopics.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapLms.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapELearning.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapTopic.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapFeedback.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapMicroContentComponent.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapSearchHelper.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapTopicElements.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapTriPane.js" type="text/javascript" defer="defer">
        </script>
        <script type="text/jscript" src="../../../../Resources/vScripts/SyntaxHighlighting.js">
        </script>
        <script type="text/jscript" src="../../../../Resources/vScripts/TabSwitch.js">
        </script>
        <script type="text/javascript" src="../../../../Resources/vScripts/Vector.js">
        </script>
    </head>
    <body>
        <p class="MCWebHelpFramesetLink MCWebHelpFramesetLinkTop"><a href="../../../../../CANoeCANalyzer.htm#Topics/CANoeCANalyzer/SIL/VirtualExecutionEnvironment/SILAdapter.htm">Open topic with navigation</a>
        </p>
        <div class="Body">
            <div role="main" id="mc-main-content">
                <div>
                    <p class="StructurePath"><a href="../../CANoeCANalyzer.htm" class="StructurePath" data-mc-conditions="vConditions.CANalyzerExclude,vConditions.CANoe4ServerExcluded,vConditions.CANoe4SWExcluded,vConditions.TestDataEditorExcluded,vConditions.vTESTstudioExcluded,vConditions.TestUnitRunnerExcluded,vConditions.CANoeNMExcluded"><img src="../../../../Resources/vImages/vToolIcons/CANoe_Icon16.png" alt="" />&#160;CANoe</a> » <a href="../SIL.htm" class="StructurePath MCXref xref xrefStructurePath">Software-in-the-Loop</a> » <a href="VirtualExecutionEnvironment.htm" class="StructurePath MCXref xref xrefStructurePath">Virtual Execution Environment</a> » <span class="mc-variable System.Title variable">SIL Adapter</span></p>
                    <h1><span class="mc-variable System.Title variable">SIL Adapter</span>
                    </h1>
                    <p class="MenuPath">&#160;</p>
                    <p class="AutoSearchFilterConcepts"><a name="aanchor10699"></a>
                        <MadCap:concept term="SFCore" />
                    </p>
                    <p class="IndexConcept"><a name="kanchor8621"></a>
                    </p>
                </div>
                <div>
                    <h2 class="SectionSub">Overview</h2>
                    <div>
                        <table style="width: 100%;margin-left: 0;margin-right: auto;mc-table-style: url('../../../../Resources/Stylesheets/vTableSymbol.css');" class="TableStyle-vTableSymbol" cellspacing="0">
                            <col class="TableStyle-vTableSymbol-Column-Column1" />
                            <col class="TableStyle-vTableSymbol-Column-Column2" />
                            <tbody>
                                <tr>
                                    <td class="TableStyle-vTableSymbol-BodyB-Column1-">
                                        <p class="Table">
                                            <img src="../../../../Resources/vImages/vStep.png" style="width: 48px;height: 45px;" title="Procedure" alt="Procedure" />
                                        </p>
                                    </td>
                                    <td class="TableStyle-vTableSymbol-BodyA-Column2-">
                                        <p class="TableSymbolHead">Step by Step Procedure: Workflow for SIL Tests</p>
                                        <ol>
                                            <li value="1">
                                                <p>Describe the functional system interfaces of the software under test as <a href="../../CommunicationConcept/CCDistributedObjects.htm">distributed objects</a> (DO).</p>
                                            </li>
                                            <li value="2">
                                                <p class="Table">For these distributed objects a "<span class="bold">SIL Adapter</span>" for data exchange with <span class="Product">CANoe</span> is generated.</p>
                                                <p>The adapter is provided as a set of source files and libraries.</p>
                                            </li>
                                            <li value="3">
                                                <p>Instrument the SUT source code using the SIL Adapter in the development environment.</p>
                                            </li>
                                            <li value="4">
                                                <p>When you start the instrumented SUT in a virtual execution environment, you can read and write the values of the software under test from <span class="Product">CANoe</span>.</p>
                                            </li>
                                        </ol>
                                    </td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                </div>
                <div>
                    <h2 class="SectionSub"><a name="BMFunctionalSystemInterfaces" id="BMFunctionalSystemInterfaces"></a>Description of the Functional System Interfaces</h2>
                    <p>You can define physical environments and software environments to stimulate the application under test and verify its behavior.</p>
                    <p>You define this environment using distributed objects (DO)<MadCap:conditionalText data-mc-conditions="vConditions.CANoe4SWExcluded">; either with the graphical UI of the Model Editor or</MadCap:conditionalText> in text form with the vCDL Editor.</p>
                    <p>To create the SIL Adapter, you have to set the binding of distributed objects (DO) to <span class="GUI">SilKit</span>.</p>
                    <div>
                        <table style="width: 100%;margin-left: 0;margin-right: auto;mc-table-style: url('../../../../Resources/Stylesheets/vTableSymbol.css');" class="TableStyle-vTableSymbol" cellspacing="0">
                            <col class="TableStyle-vTableSymbol-Column-Column1" />
                            <col class="TableStyle-vTableSymbol-Column-Column2" />
                            <tbody>
                                <tr>
                                    <td class="TableStyle-vTableSymbol-BodyB-Column1-">
                                        <p class="Table">
                                            <img src="../../../../Resources/vImages/vExample.png" style="width: 48px;height: 45px;" title="Example" alt="Example" />
                                        </p>
                                    </td>
                                    <td class="TableStyle-vTableSymbol-BodyA-Column2-">
                                        <p class="TableSymbolHead">Example: vCDL file</p>
                                        <p class="SourceCode"><span class="CodeKeyword">version</span> <span class="CodeNumericalLiteral">1.2</span>;<br /><br /><span class="CodeKeyword">namespace</span> RoomTemperatureControl<br />{<br />&#160;&#160;[<span class="CodeAttributeKey_Namespace">Binding</span>=<span class="CodeStringLiteral">"SilKit"</span>]<br />&#160;&#160;<span class="CodeKeyword">interface</span> ISensor<br />&#160;&#160;{<br />&#160;&#160;&#160;&#160;<span class="CodeKeyword">provided data</span> <span class="CodeDataType">double</span> Temperature;<br />&#160;&#160;}<br /><br />&#160;&#160;[<span class="CodeAttributeKey_Namespace">Binding</span>=<span class="CodeStringLiteral">"SilKit"</span>]<br />&#160;&#160;<span class="CodeKeyword">interface</span> IHeating<br />&#160;&#160;{<br />&#160;&#160;&#160;&#160;<span class="CodeKeyword">consumed data</span> <span class="CodeKeyword">bool</span> IsCooling;<br />&#160;&#160;&#160;&#160;<span class="CodeKeyword">consumed data</span> <span class="CodeKeyword">bool</span> IsHeating;<br />&#160;&#160;}<br /><br />&#160;&#160;<span class="CodeKeyword">object</span> Sensor1 : ISensor;<br />&#160;&#160;<span class="CodeKeyword">object</span> Sensor2 : ISensor;<br />&#160;&#160;<span class="CodeKeyword">object</span> Sensor3 : ISensor;<br /><br />&#160;&#160;<span class="CodeKeyword">object</span> Heating : IHeating;<br /><br />}</p>
                                    </td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                </div>
                <div>
                    <h2 class="SectionSub"><a name="BMSystemSetup" id="BMSystemSetup"></a>System Setup in CANoe</h2>
                    <p>You can import a vCDL file into <span class="Product">CANoe</span> via <a href="../../Windows/CommunicationSetup/CommunicationSetup.htm" class="MCXref xref">Communication Setup</a>. After successful import, the environment objects (e.g. Sensor1) are available in the <span class="Product">CANoe</span> configuration and can be used for panels, models, <a href="../../Windows/WindowsAnalysis.htm" class="MCXref xref">Windows (Analysis)</a> and automated tests.</p>
                </div>
                <div>
                    <h2 class="SectionSub"><a name="BMSILAdapterGeneration" id="BMSILAdapterGeneration"></a>Generating a SIL Adapter</h2>
                    <p>With the SIL Adapter you access the software to be tested. The following describes how to generate the SIL Adapter by the <span class="Product">sil-adapter-builder</span> command line tool.</p>
                    <p>Furthermore, you will find how to set up your <span class="Product">CMake</span> project or <span class="Product">Visual Studio Code</span> project to automatically generate the SIL Adapter whenever the vCDL files have changed.</p>
                    <p>Example configurations can be obtained from the <a href="../../../SampConf/SIL/SILAdapterBasic/SILAdapterBasicCpp.htm">SIL Adapter Basic Demo</a> which is included in <span class="Product">CANoe</span>.</p>
                    <h2>Generating a SIL Adapter via Command Line</h2>
                    <p>The <span class="Product">sil-adapter-builder</span> command line tool is delivered with the <span class="Product">CANoe</span> installation and is located in the <span class="bold">Exec64</span> subdirectory.</p>
                    <div>
                        <table style="width: 100%;margin-left: 0;margin-right: auto;mc-table-style: url('../../../../Resources/Stylesheets/vTableSymbol.css');" class="TableStyle-vTableSymbol" cellspacing="0">
                            <col class="TableStyle-vTableSymbol-Column-Column1" />
                            <col class="TableStyle-vTableSymbol-Column-Column2" />
                            <tbody>
                                <tr>
                                    <td class="TableStyle-vTableSymbol-BodyB-Column1-">
                                        <p class="Table">
                                            <img src="../../../../Resources/vImages/vExample.png" style="width: 48px;height: 45px;" title="Example" alt="Example" />
                                        </p>
                                    </td>
                                    <td class="TableStyle-vTableSymbol-BodyA-Column2-">
                                        <p class="TableSymbolHead">Example for generating SIL Adapter with the <span class="Product">sil-adapter-builder</span> command line tool</p>
                                        <p class="TableSourceCode">.\sil-adapter-builder.exe ‘first.vcdl’ ‘second.vcdl’ -o ‘D:\my\outputfolder’ -l cpp -n MySilAdapter</p>
                                        <p class="Table">You can specify <span class="bold">cpp</span> or <span class="bold">python</span> as the target language.</p>
                                        <p>The following flags have default values and can be omitted:</p>
                                        <ul>
                                            <li><span class="SourceCode">--output-dir / -o</span> (default=current working dir)</li>
                                            <li><span class="SourceCode">--name / -n</span> (default=SilAdapter)</li>
                                            <li><span class="SourceCode">--verbosity-level / -v</span> (default=2 for Info)</li>
                                        </ul>
                                    </td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                    <h2>Include SIL Adapter Generation in a CMake Project</h2>
                    <p>It is possible to automatically regenerate whenever the SIL Adapter does not exist or the input sources have been modified. Therefore copy <span class="SourceCode">&lt;SIL-Adapter-Basics-Demo-Dir&gt;/SUT_Cpp/SilAdapter.cmake</span> to your <span class="Product">CMake</span> project and add the following lines to the top level <span class="SourceCode">CMakeLists.txt</span> of your SUT.</p>
                    <div>
                        <table style="width: 100%;margin-left: 0;margin-right: auto;mc-table-style: url('../../../../Resources/Stylesheets/vTableSymbol.css');" class="TableStyle-vTableSymbol" cellspacing="0">
                            <col class="TableStyle-vTableSymbol-Column-Column1" />
                            <col class="TableStyle-vTableSymbol-Column-Column2" />
                            <tbody>
                                <tr>
                                    <td class="TableStyle-vTableSymbol-BodyB-Column1-">
                                        <p class="Table">
                                            <img src="../../../../Resources/vImages/vExample.png" style="width: 48px;height: 45px;" title="Example" alt="Example" />
                                        </p>
                                    </td>
                                    <td class="TableStyle-vTableSymbol-BodyA-Column2-">
                                        <p class="TableSymbolHead">Example for CMakeLists.txt with automatic SIL Adapter generation</p>
                                        <p class="TableSourceCode">include(SilAdapter.cmake)<br />add_siladapter(<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;INPUT_VCDLS ../first.vcdl ../second.vcdl<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;)</p>
                                        <ul>
                                            <li>Multiple vCDL files are separated by space.</li>
                                            <li>Optionally, you can specify the output directory of the generated SIL Adapter folder by passing the <span class="SourceCode">OUTPUT_DIR</span> argument.</li>
                                            <li>Optionally, you can specify the name of the generated SIL Adapter folder by passing the <span class="SourceCode">NAME</span> argument.</li>
                                            <li>Optionally, you can change the information display on the console by passing the <span class="SourceCode">VERBOSITY_LEVEL</span> argument.</li>
                                            <li>Optionally you can explicitly set the<span class="Product">CANoe</span> installation to be used by passing the argument <span class="SourceCode">SIL_ADAPTER_BUILDER_DIR</span>.</li>
                                        </ul>
                                    </td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                    <h2>Include SIL Adapter Generation in Visual Studio Code Project</h2>
                    <p>The following describes how to set up an <span class="bold">automatic SIL Adapter generation</span> when working with <span class="Product">Visual Studio Code</span>.</p>
                    <p>This integration is suitable for SUTs written in Python and C++ (in case the SIL Adapter generation is not already set up for a <span class="Product">CMake</span> project).</p>
                    <p>First define a task in your <span class="SourceCode">.vscode/tasks.json</span> file that calls the <span class="Product">sil-adapter-builder</span> command line tool. You can either call this task manually or add it as a pre-launch-task to your <span class="SourceCode">.vscode/launch.json</span> file so it will be executed before the SUT is started.</p>
                    <div>
                        <table style="width: 100%;margin-left: 0;margin-right: auto;mc-table-style: url('../../../../Resources/Stylesheets/vTableSymbol.css');" class="TableStyle-vTableSymbol" cellspacing="0">
                            <col class="TableStyle-vTableSymbol-Column-Column1" />
                            <col class="TableStyle-vTableSymbol-Column-Column2" />
                            <tbody>
                                <tr>
                                    <td class="TableStyle-vTableSymbol-BodyB-Column1-">
                                        <p class="Table">
                                            <img src="../../../../Resources/vImages/vExample.png" style="width: 48px;height: 45px;" title="Example" alt="Example" />
                                        </p>
                                    </td>
                                    <td class="TableStyle-vTableSymbol-BodyA-Column2-">
                                        <p class="TableSymbolHead">Example for tasks.json</p>
                                        <p class="TableSourceCode">{<br />&#160;&#160;"version": "2.0.0",<br />&#160;&#160;"tasks": [<br />&#160;&#160;{<br />&#160;&#160;&#160;&#160;"label": "Generate-SilAdapter",<br />&#160;&#160;&#160;&#160;"type": "shell",<br />&#160;&#160;&#160;&#160;"command": ".\<span class="Product">sil-adapter-builder</span>.exe ../../<span class="Product">CANoe</span>_Configuration/DataSources/RoomTemperatureControl.vcdl -l python"<br />&#160;&#160;}<br />&#160;&#160;]<br />}</p>
                                    </td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                </div>
                <div>
                    <h2 class="SectionSub">Instrumentation of the SUT Source Code</h2>
                    <p>In order to use the SIL Adapter, you must first add the generated files to the software project to be tested in the development environment, e.g. via the CMake files that are also generated. Then you can generate all calls of functional system interfaces – for example to access hardware or other software components – by calling the SIL Adapter.</p>
                    <div>
                        <table style="width: 100%;margin-left: 0;margin-right: auto;mc-table-style: url('../../../../Resources/Stylesheets/vTableSymbol.css');" class="TableStyle-vTableSymbol" cellspacing="0">
                            <col class="TableStyle-vTableSymbol-Column-Column1" />
                            <col class="TableStyle-vTableSymbol-Column-Column2" />
                            <tbody>
                                <tr>
                                    <td class="TableStyle-vTableSymbol-BodyB-Column1-">
                                        <p class="Table">
                                            <img src="../../../../Resources/vImages/vExample.png" style="width: 48px;height: 45px;" title="Example" alt="Example" />
                                        </p>
                                    </td>
                                    <td class="TableStyle-vTableSymbol-BodyA-Column2-">
                                        <p class="TableSymbolHead">Example for C++</p><pre xml:space="preserve"><code class="language-cpp">#include"SilAdapter/SilAdapter.hpp"

void InitializeIO() { Vector::CANoe::SilAdapter::Connect(); }
void ShutDownIO() { Vector::CANoe::SilAdapter::Disconnect(); }

double GetSensorValue1() { return RoomTemperatureControl::Sensor1.Temperature; }
double GetSensorValue2() { return RoomTemperatureControl::Sensor2.Temperature; }
double GetSensorValue3() { return RoomTemperatureControl::Sensor3.Temperature; }

void SetHeatingState(const HeatingState&amp; state)
{
&#160;&#160;RoomTemperatureControl::Heating.IsHeating = state.IsHeating;
&#160;&#160;RoomTemperatureControl::Heating.IsCooling = state.IsCooling;
}</code></pre>
                                    </td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                </div>
                <div>
                    <h2 class="SectionSub"><a name="BMSilAdapterRuntime" id="BMSilAdapterRuntime"></a>SIL Adapter Runtime for Python SUT</h2>
                    <p>	In order to use the generated files in a Python SUT you have to install the SIL Adapter runtime which is provided as a Python package. The package is dependent on the version
and the architecture of the used Python interpreter. These packages are shipped with the <span class="Product">CANoe</span> installation and are located below the installation folder <span class="bold">Installer Additional Components\SilAdapter\Python Runtime</span> (<a href="javascript:startDemoLoader('&quot;EXEC:..\\Installer Additional Components\\Siladapter\\Python Runtime&quot;')" class="ExecuteLink">Open Folder</a>). To install the right package for the version and architecture of your Python interpreter, you may run the script <span class="bold">install_runtime.py</span> located in this folder. To run the SUT on a different computer, you may copy that folder to this computer and run the script there.</p>
                    <p>The following table lists the available Python runtime packages:</p>
                    <div>
                        <table style="width: 100%;mc-table-style: url('../../../../Resources/Stylesheets/vTable.css');" class="TableStyle_vTable" cellspacing="0">
                            <col style="width: 25%;" class="TableStyle-vTableSymbol-Column-Column1" />
                            <col style="width: 25%;" class="TableStyle-vTableSymbol-Column-Column2" />
                            <col style="width: 25%;" class="TableStyle-vTableSymbol-Column-Column1" />
                            <col style="width: 25%;" class="TableStyle-vTableSymbol-Column-Column2" />
                            <thead>
                                <tr class="TableStyle-vTableLight-Head-Header1">
                                    <th class="TableStyle_vTable_Head_0_0_RowSep_ColSep">
                                        <p class="TableHead">Architecture</p>
                                    </th>
                                    <th class="TableStyle_vTable_Head_0_0_RowSep_ColSep">
                                        <p class="TableHead">Windows</p>
                                    </th>
                                    <th class="TableStyle_vTable_Head_0_0_RowSep_ColSep">
                                        <p class="TableHead">Linux</p>
                                    </th>
                                    <th class="TableStyle_vTable_Head_0_0_RowSep_ColEnd">
                                        <p>Python Interpreter Version</p>
                                    </th>
                                </tr>
                            </thead>
                            <tbody>
                                <tr class="TableStyle-vTableLight-Body-Body1">
                                    <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                        <p class="TableBold">x86</p>
                                    </td>
                                    <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                        <p>✔</p>
                                    </td>
                                    <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                        <p>✔ (requires libstdc++.so &gt;= 6.0.19)</p>
                                    </td>
                                    <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd">
                                        <p>3.8, 3.9</p>
                                    </td>
                                </tr>
                                <tr class="TableStyle-vTableLight-Body-Body1">
                                    <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                        <p class="TableBold">x64</p>
                                    </td>
                                    <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                        <p>✔</p>
                                    </td>
                                    <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                        <p>✔ (requires libstdc++.so &gt;= 6.0.19)</p>
                                    </td>
                                    <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd">
                                        <p>3.8, 3.9</p>
                                    </td>
                                </tr>
                                <tr class="TableStyle-vTableLight-Body-Body1">
                                    <td class="TableStyle_vTable_Body_0_0_RowEnd_ColSep">
                                        <p class="TableBold">ARM64</p>
                                    </td>
                                    <td class="TableStyle_vTable_Body_0_0_RowEnd_ColSep">
                                        <p>—</p>
                                    </td>
                                    <td class="TableStyle_vTable_Body_0_0_RowEnd_ColSep">
                                        <p>✔ (requires libstdc++.so &gt;= 6.0.28)</p>
                                    </td>
                                    <td class="TableStyle_vTable_Body_0_0_RowEnd_ColEnd">
                                        <p>3.8, 3.9</p>
                                    </td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                </div>
                <div>
                    <h2 class="SectionSub">Establishing Communication with CANoe</h2>
                    <p>To establish a connection with <span class="Product">CANoe</span>, you must start the measurement in <span class="Product">CANoe</span> and run the previously instrumented application. The connection is then established automatically. Using the distributed objects, values of the software to be tested can now be read, written and evaluated in <span class="Product">CANoe</span>.</p>
                </div>
                <div>
                    <h2 class="SectionSub">Technical Notes</h2>
                    <ul>
                        <li>
                            <p class="Table">Any Windows or Linux-based platform is supported.</p>
                        </li>
                        <li>
                            <p class="Table">The software to be tested can be run on the same computer as <span class="Product">CANoe</span>, in a virtual machine or on another computer that is accessible via TCP/IP.</p>
                        </li>
                        <li>
                            <p class="Table">Currently, the programming languages C, C++ and Python are supported.</p>
                        </li>
                    </ul>
                </div>
                <p class="LinkList"><a href="SILAdapterC++.htm" class="LinkList MCXref xref xrefLinkList">C++ SIL Adapter</a>&#160;&#160;•&#160;&#160;<a href="SILAdapterPython.htm" class="LinkList MCXref xref xrefLinkList">Python SIL Adapter</a></p>
            </div>
        </div>
        <div class="Footer">
            <div class="FooterWhite">
                <table class="FooterWhite" style="border-collapse: collapse;margin-left: auto;margin-right: auto;">
                    <col style="width: 70px;" data-mc-conditions="vConditions.HTML5Link" />
                    <col style="width: 16px;" data-mc-conditions="vConditions.HTML5Link" />
                    <col />
                    <tbody>
                        <tr>
                            <td>
                                <div class="buttons popup-container clearfix topicToolbarProxy topicToolbarProxyFooter _Skins_HTML5TopicToolbar mc-component nocontent">
                                    <div class="button-group-container-left">
                                        <button class="button needs-pie expand-all-button" data-state1-class="expand-all-button" data-state2-class="collapse-all-button" data-state2-title="Collapse all" title="Expand all" data-state1-title="Expand all">
                                            <div>
                                                <div role="img" class="button-icon-wrapper" aria-label="Expand all">
                                                    <div class="button-icon"> </div>
                                                </div>
                                            </div>
                                        </button>
                                        <button class="button needs-pie remove-highlight-button" title="Remove Highlights">
                                            <div>
                                                <div role="img" class="button-icon-wrapper">
                                                    <div class="button-icon"> </div>
                                                </div>
                                            </div>
                                        </button>
                                    </div>
                                </div>
                            </td>
                            <td>
                                <p class="vec_BuildInfo"><a href="../../../Shared/HowToUseOnlineHelp.htm" title="Tips for using the help" alt="Tips for using the help"><img src="../../../../Resources/vImages/vBackstage/vHelpInfo.png" /></a>
                                </p>
                            </td>
                            <td>
                                <p class="vec_BuildInfo" style="text-align: right;"><span class="mc-variable Vector.BuildTime variable">2023-09-26T19:49:32</span>
                                </p>
                            </td>
                        </tr>
                    </tbody>
                </table>
            </div>
            <table style="width: 100%;border-collapse: separate;border-spacing: 3px 0px;margin-left: auto;margin-right: auto;caption-side: top;">
                <col />
                <col />
                <col />
                <col data-mc-conditions="vConditions.HTML5Link" />
                <tbody>
                    <tr>
                        <td style="background-color: #b70032;padding-left: 5pt;padding-right: 5pt;padding-top: 5pt;padding-bottom: 5pt;">
                            <p class="vec_Footer">©&#160;Vector Informatik GmbH</p>
                        </td>
                        <td style="background-color: #b70032;padding-left: 5pt;padding-right: 5pt;padding-top: 5pt;padding-bottom: 5pt;text-align: right;">
                            <p class="vec_FooterBold">
                                <MadCap:conditionalText data-mc-conditions="vConditions.vTESTstudioExcluded,vConditions.TestDataEditorExcluded">CANoe</MadCap:conditionalText> Version <MadCap:conditionalText data-mc-conditions="vConditions.vTESTstudioExcluded">17 SP3</MadCap:conditionalText></p>
                        </td>
                        <td style="background-color: #b70032;padding-left: 5pt;padding-right: 5pt;padding-top: 5pt;padding-bottom: 0pt;text-align: right;">
                            <p class="vec_Footer"><a href="../../../Shared/ContactCopyrightLicense.htm" class="vec_Footer MCXref xref xrefvec_Footer">Contact/Copyright/License</a>
                            </p>
                        </td>
                        <td style="background-color: #b70032;padding-left: 5pt;padding-right: 5pt;padding-top: 5pt;padding-bottom: 0pt;text-align: right;">
                            <p class="vec_Footer"><a href="https://www.vector.com/int/en/company/get-info/privacy-policy/" target="_blank" class="vec_Footer">Data Privacy Notice</a>
                            </p>
                        </td>
                    </tr>
                </tbody>
            </table>
        </div>
    </body>
</html>