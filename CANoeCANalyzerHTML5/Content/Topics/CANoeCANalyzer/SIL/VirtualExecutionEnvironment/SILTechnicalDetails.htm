<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en-us" xml:lang="en-us" class="" data-mc-search-type="Stem" data-mc-help-system-file-name="CANoeCANalyzer.xml" data-mc-path-to-help-system="../../../../../" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic" data-mc-preload-images="false" data-mc-in-preview-mode="false">
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta charset="utf-8" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
        <meta name="msapplication-config" content="../../../../../Skins/Favicons/browserconfig.xml" />
        <link rel="apple-touch-icon" sizes="180x180" href="../../../../../Skins/Favicons/apple-touch-icon.png" />
        <link rel="shortcut icon" href="../../../../../Skins/Favicons/favicon-32x32.png" />
        <link rel="icon" sizes="96x96" href="../../../../../Skins/Favicons/favicon-96x96.png" />
        <link rel="icon" sizes="32x32" href="../../../../../Skins/Favicons/favicon-32x32.png" />
        <link rel="icon" sizes="16x16" href="../../../../../Skins/Favicons/favicon-16x16.png" /><title>Technical Details</title>
        <link href="../../../../../Skins/Default/Stylesheets/Slideshow.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../../Skins/Default/Stylesheets/Components/Styles.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../../Skins/Default/Stylesheets/Components/Tablet.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../../Skins/Default/Stylesheets/Components/Mobile.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../../Skins/Default/Stylesheets/Components/Print.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../Resources/Stylesheets/vTableMasterPageHeader.css" rel="stylesheet" data-mc-stylesheet-type="table" />
        <link href="../../../../Resources/Stylesheets/vStylesheet.css" rel="stylesheet" type="text/css" />
        <style>/*&lt;meta /&gt;*/

.button.expand-all-button
{
	-pie-background: linear-gradient(#ffffff, #ffffff);
}

.button.remove-highlight-button
{
	-pie-background: linear-gradient(#ffffff, #ffffff);
}

.button.collapse-all-button
{
	-pie-background: linear-gradient(#ffffff, #ffffff);
}

.needs-pie
{
	behavior: url('../../../../../Resources/Scripts/PIE-no-motw.htc');
}

</style>
        <link href="../../../../Resources/Stylesheets/vTableSymbol.css" rel="stylesheet" data-mc-stylesheet-type="table" />
        <link rel="apple-touch-icon" sizes="180x180" href="../../../../../Skins/Favicons/apple-touch-icon.png" />
        <link rel="shortcut icon" href="../../../../../Skins/Favicons/favicon-32x32.png" />
        <link rel="icon" sizes="96x96" href="../../../../../Skins/Favicons/favicon-96x96.png" />
        <link rel="icon" sizes="32x32" href="../../../../../Skins/Favicons/favicon-32x32.png" />
        <link rel="icon" sizes="16x16" href="../../../../../Skins/Favicons/favicon-16x16.png" />
        <script src="../../../../../Resources/Scripts/jquery.min.js" type="text/javascript">
        </script>
        <script src="../../../../../Resources/Scripts/purify.min.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/require.min.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/require.config.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/foundation.min.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/plugins.min.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapGlobal.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapDom.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapUtilities.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapXhr.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapTextEffects.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapSlideshow.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapMessageBus.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapMessageBus.CrossFrame.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapDefault.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapMediaQueries.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapAccessibility.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapHelpSystem.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapAliasFile.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapTopicFeedback.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapFeedbackHelper.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapSkinHelper.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapToc.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapToc.Breadcrumbs.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapToc.MiniToc.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapToc.SideMenu.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapIndex.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapGlossary.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapParser.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapSearch.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapNavigateTopics.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapLms.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapELearning.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapTopic.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapFeedback.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapMicroContentComponent.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapSearchHelper.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapTopicElements.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapTriPane.js" type="text/javascript" defer="defer">
        </script>
        <script type="text/jscript" src="../../../../Resources/vScripts/SyntaxHighlighting.js">
        </script>
        <script type="text/jscript" src="../../../../Resources/vScripts/TabSwitch.js">
        </script>
        <script type="text/javascript" src="../../../../Resources/vScripts/Vector.js">
        </script>
    </head>
    <body>
        <p class="MCWebHelpFramesetLink MCWebHelpFramesetLinkTop"><a href="../../../../../CANoeCANalyzer.htm#Topics/CANoeCANalyzer/SIL/VirtualExecutionEnvironment/SILTechnicalDetails.htm">Open topic with navigation</a>
        </p>
        <div class="Body">
            <div role="main" id="mc-main-content">
                <div>
                    <p class="StructurePath"><a href="../../CANoeCANalyzer.htm" class="StructurePath" data-mc-conditions="vConditions.CANalyzerExclude,vConditions.CANoe4ServerExcluded,vConditions.CANoe4SWExcluded,vConditions.TestDataEditorExcluded,vConditions.vTESTstudioExcluded,vConditions.TestUnitRunnerExcluded,vConditions.CANoeNMExcluded"><img src="../../../../Resources/vImages/vToolIcons/CANoe_Icon16.png" alt="" />&#160;CANoe</a> » <a href="../SIL.htm" class="StructurePath MCXref xref xrefStructurePath">Software-in-the-Loop</a> » <a href="VirtualExecutionEnvironment.htm" class="StructurePath MCXref xref xrefStructurePath">Virtual Execution Environment</a> » <span class="mc-variable System.Title variable">Technical Details</span></p>
                    <h1><span class="mc-variable System.Title variable">Technical Details</span>
                    </h1>
                    <p class="MenuPath">&#160;</p>
                    <p class="AutoSearchFilterConcepts"><a name="aanchor7317"></a>
                        <MadCap:concept term="SFCore" />
                    </p>
                    <p class="IndexConcept"><a name="kanchor5537"></a>
                    </p>
                </div>
                <div>
                    <h2 class="SectionSub">Execution Environments</h2>
                    <p class="StartList">For a Software SUT with SIL Adapter, the following execution environment requirements apply:</p>
                    <ul>
                        <li>
                            <p class="Table"><span class="Product">Windows</span> or a <span class="Product">POSIX</span>-capable operating system</p>
                        </li>
                        <li>
                            <p class="Table">Support of TCP/IP</p>
                        </li>
                        <li>
                            <p class="ListItem">When running on a remote system (virtual machine, cloud), a configuration file must be created whose path is set via an operating system's environment variable (see <a href="#BMCommunicationWitSUT">Communication with Software SUT</a>).</p>
                        </li>
                    </ul>
                </div>
                <div>
                    <h2 class="SectionSub">Focus on Software System Tests</h2>
                    <p>The Software SUT and <span class="Product">CANoe</span> are two separate processes that run independently of each other. The Software SUT is virtualized and may run on a different system than <span class="Product">CANoe</span>, e.g., in a virtual machine or in the cloud. The measurement in <span class="Product">CANoe</span> and the Software SUT are started and stopped independently of each other. There is no synchronization between the two processes. The communication is done via the <a href="../../Interfaces/SILKit.htm#BMApplicationDataRPC">SIL Kit</a> software library and its application data and remote procedure call services.</p>
                    <p>The following points should be considered:</p>
                    <ul>
                        <li>
                            <p class="Table">
If the measurement in <span class="Product">CANoe</span>  is stopped, the Software SUT continues to run.</p>
                        </li>
                        <li>
                            <p class="Table">If the Software SUT is stopped or paused (e.g. for debugging), the measurement in <span class="Product">CANoe</span> continues. No transmissions to <span class="Product">CANoe</span> take place during this time.</p>
                        </li>
                        <li>
                            <p class="Table">There is a transmission latency between <span class="Product">CANoe</span> and the Software SUT. The latency depends on various factors, e.g. whether the Software SUT is running on the same system as <span class="Product">CANoe</span> or on a remote system, and how powerful these systems are.</p>
                        </li>
                        <li>
                            <p class="Table">
The transmission rate (data throughput) also depends on the systems on which the Software SUT and <span class="Product">CANoe</span> are executed and how powerful these systems are.</p>
                        </li>
                        <li>
                            <p>Time-critical systems can only be tested to a limited extent because the above-mentioned general conditions apply, such as transmission latency, transmission rate and computing power.</p>
                        </li>
                    </ul>
                    <p>
                        <img src="../../../../Resources/Images/CANoeCANalyzer/SIL/SILTechnicalDetails.png" alt="" />
                    </p>
                </div>
                <div>
                    <h2 class="SectionSub">Supported Functions</h2>
                    <p>The SIL Adapter allows communication of a Software SUT with a modeled environment (physical environment or other software components). The modeling is done with the help of <a href="../../CommunicationConcept/CCDistributedObjects.htm">distributed objects</a> in <span class="Product">CANoe</span>. The SIL Adapter supports the following features of distributed objects:</p>
                    <ul>
                        <li>
                            <p class="Table">Data/event/field members</p>
                        </li>
                        <li class="Indent">
                            <p class="Table">Provided and consumed communication direction</p>
                        </li>
                        <li class="Indent">
                            <p class="Table">Notification of value changes or updates</p>
                        </li>
                        <li class="Indent">
                            <p class="Table"><span class="bold">TxTrigger</span> attribute with values <span class="bold">OnUpdate</span> or <span class="bold">OnChange</span> (C++ SIL Adapter only)</p>
                        </li>
                        <li class="Indent">
                            <p class="Table">Initial values</p>
                        </li>
                        <li>
                            <p class="Table">Method members</p>
                        </li>
                        <li class="Indent">
                            <p class="Table">Provided and consumed communication direction</p>
                        </li>
                        <li class="Indent">
                            <p class="Table">Synchronous and asynchronous calls</p>
                        </li>
                        <li class="Indent">
                            <p class="Table">Parameter direction in, out, and inout as well as optional parameters</p>
                        </li>
                        <li>
                            <p class="Table">Data types: As the type of a data/event/field member or as the parameter type/return type of a method member</p>
                        </li>
                        <li class="Indent">
                            <p class="Table">Scalar data types (integer, floating point, boolean)</p>
                        </li>
                        <li class="Indent">
                            <p class="Table">Arrays and lists</p>
                        </li>
                        <li class="Indent">
                            <p class="Table">UTF-8 strings</p>
                        </li>
                        <li class="Indent">
                            <p class="Table">Structures, including optional fields</p>
                        </li>
                        <li class="Indent">
                            <p class="Table">Enumerations</p>
                        </li>
                        <li class="Indent">
                            <p class="Table">Variable length (bytes) byte sequences</p>
                        </li>
                        <li class="Indent">
                            <p class="Table">Void (event member only)</p>
                        </li>
                        <li>
                            <p class="Table">Embedded members</p>
                        </li>
                        <li>
                            <p class="ListItem">Static embedded DO member container</p>
                        </li>
                        <li>
                            <p class="Table">Inversion of interfaces</p>
                        </li>
                        <li>
                            <p class="Table">Inheritance of interfaces</p>
                        </li>
                        <li>
                            <p class="ListItem">Static DO container instances</p>
                        </li>
                        <li>
                            <p>Constants (C++ SIL&#160;Adapter only)</p>
                        </li>
                    </ul>
                </div>
                <div>
                    <h2 class="SectionSub"><a name="BMValueChangesUpdatesDataMember" id="BMValueChangesUpdatesDataMember"></a>Value Changes and Updates for Data/Event Members</h2>
                    <p>The current value of data/event members is kept locally in the Software SUT as well as in <span class="Product">CANoe</span>. In the case of a read access, the local value is read and there is no communication between the SIL Adapter and <span class="Product">CANoe</span>. In the case of a write access, the local value is changed/updated and, according to the send behavior, transmission of the new value and thus updating of the value in the remote station takes place.</p>
                    <p>In <span class="Product">CANoe</span> the transmit behavior can be configured freely via the attributes of the data/event member. See <span class="bold">TxTrigger</span> and <span class="bold">TxCycleTime</span> attribute for the <a href="../../CommunicationConcept/CCDistributedObjects.htm">distributed objects</a>. For the send behavior from Software SUT to <span class="Product">CANoe</span>, the <span class="bold">TxTrigger</span> attribute values <span class="bold">OnUpdate</span> (C++ / Python SIL Adapter) and <span class="bold">OnChange</span> (C++ SIL Adapter only) are supported initially. A cyclic transmission behavior of the Software SUT to <span class="Product">CANoe</span>, which corresponds to the <span class="bold">TxTrigger</span> attribute value <span class="bold">Cyclic</span>, must therefore be implemented manually.</p>
                    <p>The selected <a href="../../../vCDL/Language/vCDLDistributedObjects.htm#BMInitialValues">initial value</a> of a data/event member, which can be set in the vCDL file, are available immediately after initialization of the SIL Adapter. There is no transfer of initial values between <span class="Product">CANoe</span> and the Software SUT. If a different <a href="../../Windows/StartValues/StartValuesWindow.htm">start value</a> was selected in <span class="Product">CANoe</span>, it will be available in the Software SUT only after transmission at the start of measurement. In this case, the transmission latency from <span class="Product">CANoe</span> to the Software SUT must be taken into account.</p>
                </div>
                <div>
                    <h2 class="SectionSub">Synchronous Calls for Method Members</h2>
                    <p>The Software SUT blocks for synchronous method calls until it receives a response from <span class="Product">CANoe</span>. Synchronous method calls should not be made from a callback function that has been registered on the SIL Adapter. This would cause a jam, see section "Concurrency in the Software SUT".</p>
                    <p>The call of a synchronous method by the Software SUT is buffered by the SIL Adapter until <span class="Product">CANoe</span> is active. This prevents jamming during synchronous method calls if <span class="Product">CANoe</span> was not yet active at the time of transmission.</p>
                </div>
                <div>
                    <h2 class="SectionSub"><a name="BMValueChangesUpdatesFieldMember" id="BMValueChangesUpdatesFieldMember"></a>Value Changes and Updates for Field Members</h2>
                    <p>A field member is a combination of two method members (<span class="bold">Getter</span>/<span class="bold">Setter</span> access methods) and one event member (<span class="bold">Notification</span>). Which of these three members is available can be specified by the keywords <span class="CodeKeyword">get</span>, <span class="CodeKeyword">set</span> and <span class="CodeKeyword">notify</span> when declaring the field member. No specification implies the availability of all three members.</p>
                    <div>
                        <table style="width: 100%;margin-left: 0;margin-right: auto;mc-table-style: url('../../../../Resources/Stylesheets/vTableSymbol.css');" class="TableStyle-vTableSymbol" cellspacing="0">
                            <col class="TableStyle-vTableSymbol-Column-Column1" />
                            <col class="TableStyle-vTableSymbol-Column-Column2" />
                            <tbody>
                                <tr>
                                    <td class="TableStyle-vTableSymbol-BodyB-Column1-">
                                        <p class="Table">
                                            <img src="../../../../Resources/vImages/vExample.png" style="width: 48px;height: 45px;" title="Example" alt="Example" />
                                        </p>
                                    </td>
                                    <td class="TableStyle-vTableSymbol-BodyA-Column2-">
                                        <p class="TableSymbolHead">Example — vCDL example: Interface with Field Member</p>
                                        <p class="TableSourceCode"><span class="CodeKeyword">interface</span> IObject {<br />&#160;&#160;<span class="CodeKeyword">consumed</span> <span class="CodeKeyword">field</span> <span class="CodeDataType">int32</span> Field;&#160;&#160;<span class="CodeComment">// Implicit get, set and notify</span><br />&#160;&#160;<span class="CodeKeyword">provided</span> <span class="CodeKeyword">field</span> <span class="CodeDataType">int32</span> Field2 { <span class="CodeKeyword">get</span>; <span class="CodeKeyword">set</span>; <span class="CodeKeyword">notify</span>; }<br />&#160;&#160;<span class="CodeKeyword">consumed</span> <span class="CodeKeyword">field</span> <span class="CodeDataType">int32</span> Field3 { <span class="CodeKeyword">set</span>; }&#160;&#160;<span class="CodeComment">// Setter only</span><br />}</p>
                                    </td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                    <p>If a field member is used in the SIL Adapter, it has a local value in the Software SUT as well as in <span class="Product">CANoe</span>. Read access to the local value is possible. Write access is possible only by the providing side of the field member. The consuming side of the field member can only actively access the local value of the providing side via the <span class="bold">Getter</span> and <span class="bold">Setter</span>. The providing side, on the other hand, is able to implement the <span class="bold">Getter</span> and <span class="bold">Setter</span> accordingly to ensure controlled access to its local value.</p>
                    <p>Value changes or updates of the local value depend on the sending behavior of the field member (see <a href="../../CommunicationConcept/CCDOAttributes.htm"><span class="bold">TxTrigger</span> attribute</a>), as well as on the availability of the <span class="bold">Setter</span>, <span class="bold">Getter</span> and <span class="bold">Notification</span> of the field member.</p>
                    <p>If <span class="bold">Notification</span> is available on a field member, the sending behavior is the same as for a data or event member: an update of the local value on the providing side of the field member automatically transmits it to the consuming side. If no <span class="bold">Notification</span> is available, then an update of the local value of the consuming side is only possible by calling the <span class="bold">Getter</span> and <span class="bold">Setter</span>.</p>
                    <p>If the <span class="bold">Getter</span> is called, this will automatically update the local value of the caller on return.</p>
                    <p>The <span class="bold">Setter</span> can be configured by the <span class="bold">setterHasReturn</span> attributes of the field member. Depending on whether the <span class="bold">Setter</span> has a return value (<span class="bold">setterHasReturn</span> is <span class="SourceCode">true</span>), the local value of the field at the caller is automatically updated on return. The providing side of the field member is free to provide a custom implementation for the <span class="bold">Setter</span>. This may return an arbitrary value, which may be different from the value set by the <span class="bold">Setter</span>. In this case the local value of the caller is set to the custom value.</p>
                </div>
                <div>
                    <h2 class="SectionSub"><a name="BMConcurrencyInSoftwareSUT" id="BMConcurrencyInSoftwareSUT"></a>Concurrency in Software SUT</h2>
                    <p>The SIL Adapter's communication with <span class="Product">CANoe</span> is executed in a separate context and is decoupled from the application logic. In the following cases, the SIL Adapter allows thread-safe access:</p>
                    <ul>
                        <li>
                            <p class="Table">Reading and writing data member values</p>
                        </li>
                        <li>
                            <p class="Table">Calling a method member</p>
                        </li>
                        <li>
                            <p class="Table">Setting callback functions on data and method members</p>
                        </li>
                    </ul>
                    <p>In the following cases, the SIL Adapter accesses the user application concurrently and the Software SUT must synchronize the accesses accordingly, e.g., by using mutexes:</p>
                    <ul>
                        <li>
                            <p class="Table">Notification when data member values are changed or updated</p>
                        </li>
                        <li>
                            <p class="Table">Return of asynchronous calls of provided method members</p>
                        </li>
                        <li>
                            <p class="Table">Calling the implementation of consumed method members by <span class="Product">CANoe</span></p>
                        </li>
                    </ul>
                    <p>Avoid blocking calls in the above cases (e.g. synchronous method calls), since no data is transmitted or received to <span class="Product">CANoe</span> during this time.</p>
                    <p>In the following example in C++, the Software SUT is to output a text via standard output. The output is accessed both by the main thread of the application and concurrently by <span class="Product">CANoe</span> via the SIL Adapter. To avoid a race condition with simultaneous access to the standard output, a mutex is used for synchronization.</p>
                    <div>
                        <table style="width: 100%;margin-left: 0;margin-right: auto;mc-table-style: url('../../../../Resources/Stylesheets/vTableSymbol.css');" class="TableStyle-vTableSymbol" cellspacing="0">
                            <col class="TableStyle-vTableSymbol-Column-Column1" />
                            <col class="TableStyle-vTableSymbol-Column-Column2" />
                            <tbody>
                                <tr>
                                    <td class="TableStyle-vTableSymbol-BodyB-Column1-">
                                        <p class="Table">
                                            <img src="../../../../Resources/vImages/vExample.png" style="width: 48px;height: 45px;" title="Example" alt="Example" />
                                        </p>
                                    </td>
                                    <td class="TableStyle-vTableSymbol-BodyA-Column2-">
                                        <p class="TableSymbolHead">Example: Synchronization of application and SIL Adapter (C++)</p><pre xml:space="preserve">
                                    <code class="language-cpp">std::mutex mutex;

void SayHi(const std::string&amp; from)
{
&#160;&#160;std::lock_guard&lt;std::mutex&gt; lock(mutex);
&#160;&#160;std::cout &lt;&lt; "Say Hi, from " &lt;&lt; from &lt;&lt; std::endl;
}

void main()
{
&#160;&#160;Vector::CANoe::SilAdapter::Connect();
&#160;&#160;Namespace::CANoe.SayHi.SetCallHandler([&amp;]() { SayHi("CANoe"); });

&#160;&#160;while (true)
&#160;&#160;{
&#160;&#160;&#160;&#160;SayHi("Application");
&#160;&#160;&#160;&#160;std::this_thread::sleep_for(std::chrono::milliseconds(100));
&#160;&#160;}

&#160;&#160;Vector::CANoe::SilAdapter::Disconnect();
}</code>
                                </pre>
                                    </td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                    <p>The method called by <span class="Product">CANoe</span> is <span class="bold">SayHi</span> of the distributed object <span class="bold">Namespace::CANoe</span>. The provided method implementation of the Software SUT forwards the call to the free function <span class="bold">SayHi</span>, which is also called by the main thread of the application.</p>
                    <h2 class="SectionSub"><a name="BMCommunicationWitSUT" id="BMCommunicationWitSUT"></a>Communication with Software SUT</h2>
                    <p>To enable communication between Software SUT and <span class="Product">CANoe</span> on the same system, no explicit configuration is required. The SIL Kit transport layer runs on <span class="SourceCode">localhost:8500</span> per default.</p>
                    <p>If the Software SUT is executed in a virtual machine, a container, or on another machine, the following steps are required to enable communication between <span class="Product">CANoe</span> and the Software SUT. A participant that is not running on the same computer in parallel with the SIL Kit Registry is called a "remote system" in the following.</p>
                    <h3>	Starting a SIL Kit Registry</h3>
                    <p>With the installation of <span class="Product">CANoe</span>, the Windows service <span class="SourceCode">SIL Kit Registry</span> is registered, which by default listens on port 8500. This Windows service cannot be used for communication with a Software SUT running on a remote system. A new SIL Kit Registry must be started in parallel to the running registry, which uses an unassigned port. In our example, we choose port 8501 for this purpose. To allow remote systems to find the registry, we must choose the IP address <span class="SourceCode">0.0.0.0</span> for the value of the <span class="SourceCode">--listen-uri</span> argument instead of <span class="SourceCode">localhost</span>.</p>
                    <div>
                        <table style="width: 100%;margin-left: 0;margin-right: auto;mc-table-style: url('../../../../Resources/Stylesheets/vTableSymbol.css');" class="TableStyle-vTableSymbol" cellspacing="0">
                            <col class="TableStyle-vTableSymbol-Column-Column1" />
                            <col class="TableStyle-vTableSymbol-Column-Column2" />
                            <tbody>
                                <tr>
                                    <td class="TableStyle-vTableSymbol-BodyB-Column1-">
                                        <p class="Table">
                                            <img src="../../../../Resources/vImages/vExample.png" style="width: 48px;height: 45px;" title="Example" alt="Example" />
                                        </p>
                                    </td>
                                    <td class="TableStyle-vTableSymbol-BodyA-Column2-">
                                        <p class="TableSymbolHead">Example: Starting the SIL Kit Registry</p>
                                        <p class="SourceCode">“C:\Program Files\Vector SIL Kit 4.0.17\x86_64\bin\sil-kit-registry.exe“ --listen-uri silkit://0.0.0.0:8501<br /> </p>
                                    </td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                    <h3>	Configuration of the SAB Software SUT</h3>
                    <p>In order for the Software SUT on the remote system to connect to the SIL Kit Registry, an explicit SIL Kit configuration must be passed to the Software SUT. This is done via a YAML configuration file whose path is specified in the environment variable <span class="SourceCode">SILKIT_CONFIG_PATH</span>. The YAML configuration file contains the following information: </p>
                    <ul>
                        <li>
                            <p>The <span class="GUI">RegistryUri</span> specifies the URI to the SIL Kit Registry that was started in the previous step. This URI must be specified in the configuration file. In our example, the environment on which the SIL Kit Registry runs has the IP address <span class="SourceCode">192.168.0.83</span>.</p>
                        </li>
                        <li>
                            <p>The unique name of the Software SUT instance can be configured via <span class="GUI">ParticipantName</span>. Assigning a unique name is necessary if several Software SUT instances are to be connected to the same <span class="Product">CANoe</span> instance simultaneously. If only one Software SUT is connected, this parameter is optional.</p>
                        </li>
                    </ul>
                    <div>
                        <table style="width: 100%;margin-left: 0;margin-right: auto;mc-table-style: url('../../../../Resources/Stylesheets/vTableSymbol.css');" class="TableStyle-vTableSymbol" cellspacing="0">
                            <col class="TableStyle-vTableSymbol-Column-Column1" />
                            <col class="TableStyle-vTableSymbol-Column-Column2" />
                            <tbody>
                                <tr>
                                    <td class="TableStyle-vTableSymbol-BodyB-Column1-">
                                        <p class="Table">
                                            <img src="../../../../Resources/vImages/vExample.png" style="width: 48px;height: 45px;" title="Example" alt="Example" />
                                        </p>
                                    </td>
                                    <td class="TableStyle-vTableSymbol-BodyA-Column2-">
                                        <p class="TableSymbolHead">Example: ConfigurationFile.yaml</p>
                                        <p class="SourceCode">SchemaVersion: 1<br />ParticipantName: Participant1<br />Middleware:<br />&#160;&#160;RegistryUri: silkit://192.168.0.83:8501</p>
                                    </td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                    <p>A detailed description of the possible SIL Kit participant configurations is described <a href="https://vectorgrp.github.io/sil-kit-docs/configuration/middleware-configuration.html" class="ExternalLink" target="_blank">here</a>.</p>
                    <h3>	Configuring the SIL Kit Registry</h3>
                    <p>Furthermore, it is necessary to configure <span class="Product">CANoe</span> so that it joins the previously started SIL Kit Registry as a participant. To do this, open the menu path <span class="GUI">File|Options</span> and select the entry <span class="GUI">SIL&#160;Kit</span> under <span class="GUI">Extensions</span>. Enter the <span class="GUI">Registry URI</span> and <span class="GUI">Participant Name</span> for the <span class="Product">CANoe</span> instance. In this example, <span class="Product">CANoe</span> runs on the same device as the SIL Kit Registry, so that <span class="SourceCode"> silkit://localhost:8501</span> is entered. If this is not the case, the corresponding URI must be specified.</p>
                </div>
                <p class="LinkList">&#160;</p>
            </div>
        </div>
        <div class="Footer">
            <div class="FooterWhite">
                <table class="FooterWhite" style="border-collapse: collapse;margin-left: auto;margin-right: auto;">
                    <col style="width: 70px;" data-mc-conditions="vConditions.HTML5Link" />
                    <col style="width: 16px;" data-mc-conditions="vConditions.HTML5Link" />
                    <col />
                    <tbody>
                        <tr>
                            <td>
                                <div class="buttons popup-container clearfix topicToolbarProxy topicToolbarProxyFooter _Skins_HTML5TopicToolbar mc-component nocontent">
                                    <div class="button-group-container-left">
                                        <button class="button needs-pie expand-all-button" data-state1-class="expand-all-button" data-state2-class="collapse-all-button" data-state2-title="Collapse all" title="Expand all" data-state1-title="Expand all">
                                            <div>
                                                <div role="img" class="button-icon-wrapper" aria-label="Expand all">
                                                    <div class="button-icon"> </div>
                                                </div>
                                            </div>
                                        </button>
                                        <button class="button needs-pie remove-highlight-button" title="Remove Highlights">
                                            <div>
                                                <div role="img" class="button-icon-wrapper">
                                                    <div class="button-icon"> </div>
                                                </div>
                                            </div>
                                        </button>
                                    </div>
                                </div>
                            </td>
                            <td>
                                <p class="vec_BuildInfo"><a href="../../../Shared/HowToUseOnlineHelp.htm" title="Tips for using the help" alt="Tips for using the help"><img src="../../../../Resources/vImages/vBackstage/vHelpInfo.png" /></a>
                                </p>
                            </td>
                            <td>
                                <p class="vec_BuildInfo" style="text-align: right;"><span class="mc-variable Vector.BuildTime variable">2023-09-26T19:49:32</span>
                                </p>
                            </td>
                        </tr>
                    </tbody>
                </table>
            </div>
            <table style="width: 100%;border-collapse: separate;border-spacing: 3px 0px;margin-left: auto;margin-right: auto;caption-side: top;">
                <col />
                <col />
                <col />
                <col data-mc-conditions="vConditions.HTML5Link" />
                <tbody>
                    <tr>
                        <td style="background-color: #b70032;padding-left: 5pt;padding-right: 5pt;padding-top: 5pt;padding-bottom: 5pt;">
                            <p class="vec_Footer">©&#160;Vector Informatik GmbH</p>
                        </td>
                        <td style="background-color: #b70032;padding-left: 5pt;padding-right: 5pt;padding-top: 5pt;padding-bottom: 5pt;text-align: right;">
                            <p class="vec_FooterBold">
                                <MadCap:conditionalText data-mc-conditions="vConditions.vTESTstudioExcluded,vConditions.TestDataEditorExcluded">CANoe</MadCap:conditionalText> Version <MadCap:conditionalText data-mc-conditions="vConditions.vTESTstudioExcluded">17 SP3</MadCap:conditionalText></p>
                        </td>
                        <td style="background-color: #b70032;padding-left: 5pt;padding-right: 5pt;padding-top: 5pt;padding-bottom: 0pt;text-align: right;">
                            <p class="vec_Footer"><a href="../../../Shared/ContactCopyrightLicense.htm" class="vec_Footer MCXref xref xrefvec_Footer">Contact/Copyright/License</a>
                            </p>
                        </td>
                        <td style="background-color: #b70032;padding-left: 5pt;padding-right: 5pt;padding-top: 5pt;padding-bottom: 0pt;text-align: right;">
                            <p class="vec_Footer"><a href="https://www.vector.com/int/en/company/get-info/privacy-policy/" target="_blank" class="vec_Footer">Data Privacy Notice</a>
                            </p>
                        </td>
                    </tr>
                </tbody>
            </table>
        </div>
    </body>
</html>