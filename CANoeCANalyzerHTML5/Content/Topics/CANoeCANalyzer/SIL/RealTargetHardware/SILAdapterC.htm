<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en-us" xml:lang="en-us" class="" data-mc-search-type="Stem" data-mc-help-system-file-name="CANoeCANalyzer.xml" data-mc-path-to-help-system="../../../../../" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic" data-mc-preload-images="false" data-mc-in-preview-mode="false">
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta charset="utf-8" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
        <meta name="msapplication-config" content="../../../../../Skins/Favicons/browserconfig.xml" />
        <link rel="apple-touch-icon" sizes="180x180" href="../../../../../Skins/Favicons/apple-touch-icon.png" />
        <link rel="shortcut icon" href="../../../../../Skins/Favicons/favicon-32x32.png" />
        <link rel="icon" sizes="96x96" href="../../../../../Skins/Favicons/favicon-96x96.png" />
        <link rel="icon" sizes="32x32" href="../../../../../Skins/Favicons/favicon-32x32.png" />
        <link rel="icon" sizes="16x16" href="../../../../../Skins/Favicons/favicon-16x16.png" /><title>C SIL Adapter</title>
        <link href="../../../../../Skins/Default/Stylesheets/Slideshow.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../../Skins/Default/Stylesheets/Components/Styles.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../../Skins/Default/Stylesheets/Components/Tablet.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../../Skins/Default/Stylesheets/Components/Mobile.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../../Skins/Default/Stylesheets/Components/Print.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../Resources/Stylesheets/vTableMasterPageHeader.css" rel="stylesheet" data-mc-stylesheet-type="table" />
        <link href="../../../../Resources/Stylesheets/vStylesheet.css" rel="stylesheet" type="text/css" />
        <style>/*&lt;meta /&gt;*/

.button.expand-all-button
{
	-pie-background: linear-gradient(#ffffff, #ffffff);
}

.button.remove-highlight-button
{
	-pie-background: linear-gradient(#ffffff, #ffffff);
}

.button.collapse-all-button
{
	-pie-background: linear-gradient(#ffffff, #ffffff);
}

.needs-pie
{
	behavior: url('../../../../../Resources/Scripts/PIE-no-motw.htc');
}

</style>
        <link href="../../../../Resources/Stylesheets/vTableSymbol.css" rel="stylesheet" data-mc-stylesheet-type="table" />
        <link rel="apple-touch-icon" sizes="180x180" href="../../../../../Skins/Favicons/apple-touch-icon.png" />
        <link rel="shortcut icon" href="../../../../../Skins/Favicons/favicon-32x32.png" />
        <link rel="icon" sizes="96x96" href="../../../../../Skins/Favicons/favicon-96x96.png" />
        <link rel="icon" sizes="32x32" href="../../../../../Skins/Favicons/favicon-32x32.png" />
        <link rel="icon" sizes="16x16" href="../../../../../Skins/Favicons/favicon-16x16.png" />
        <script src="../../../../../Resources/Scripts/jquery.min.js" type="text/javascript">
        </script>
        <script src="../../../../../Resources/Scripts/purify.min.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/require.min.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/require.config.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/foundation.min.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/plugins.min.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapGlobal.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapDom.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapUtilities.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapXhr.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapTextEffects.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapSlideshow.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapMessageBus.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapMessageBus.CrossFrame.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapDefault.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapMediaQueries.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapAccessibility.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapHelpSystem.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapAliasFile.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapTopicFeedback.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapFeedbackHelper.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapSkinHelper.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapToc.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapToc.Breadcrumbs.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapToc.MiniToc.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapToc.SideMenu.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapIndex.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapGlossary.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapParser.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapSearch.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapNavigateTopics.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapLms.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapELearning.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapTopic.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapFeedback.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapMicroContentComponent.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapSearchHelper.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapTopicElements.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapTriPane.js" type="text/javascript" defer="defer">
        </script>
        <script type="text/jscript" src="../../../../Resources/vScripts/SyntaxHighlighting.js">
        </script>
        <script type="text/jscript" src="../../../../Resources/vScripts/TabSwitch.js">
        </script>
        <script type="text/javascript" src="../../../../Resources/vScripts/Vector.js">
        </script>
    </head>
    <body>
        <p class="MCWebHelpFramesetLink MCWebHelpFramesetLinkTop"><a href="../../../../../CANoeCANalyzer.htm#Topics/CANoeCANalyzer/SIL/RealTargetHardware/SILAdapterC.htm">Open topic with navigation</a>
        </p>
        <div class="Body">
            <div role="main" id="mc-main-content">
                <div>
                    <p class="StructurePath"><a href="../../CANoeCANalyzer.htm" class="StructurePath" data-mc-conditions="vConditions.CANalyzerExclude,vConditions.CANoe4ServerExcluded,vConditions.CANoe4SWExcluded,vConditions.TestDataEditorExcluded,vConditions.vTESTstudioExcluded,vConditions.TestUnitRunnerExcluded,vConditions.CANoeNMExcluded"><img src="../../../../Resources/vImages/vToolIcons/CANoe_Icon16.png" alt="" />&#160;CANoe</a> » <a href="../SIL.htm" class="StructurePath MCXref xref xrefStructurePath">Software-in-the-Loop</a> » <a href="RealTargetHardware.htm" class="StructurePath MCXref xref xrefStructurePath">Real Target Hardware</a> » <span class="mc-variable System.Title variable">C SIL Adapter</span></p>
                    <h1><span class="mc-variable System.Title variable">C SIL Adapter</span>
                    </h1>
                    <p class="MenuPath">&#160;</p>
                    <p class="AutoSearchFilterConcepts"><a name="aanchor11334"></a>
                        <MadCap:concept term="SFCore" />
                    </p>
                    <p class="IndexConcept"><a name="kanchor9085"></a>
                    </p>
                </div>
                <div>
                    <h2 class="SectionMain">General</h2>
                    <p class="StartList">To enable the System Under Test (SUT) to communicate with <span class="Product">CANoe</span>  via a hardware debugger, the provided SIL Adapter must be integrated. This integration is done in three steps:</p>
                    <ol>
                        <li value="1">
                            <p class="ListItem">Generation of the SIL Adapter source code.</p>
                        </li>
                        <li value="2">
                            <p class="ListItem">Integration of the generated source code into the build system of the SUT.</p>
                        </li>
                        <li value="3">
                            <p class="ListItem">Usage of the SIL Adapter by the SUT (instrumentation).</p>
                        </li>
                    </ol>
                    <p>Each step is described in detail below.</p>
                </div>
                <h2 class="SectionMain"><a targets="TOGSILAdapterGeneration" href="javascript:void(0)" class="MCToggler MCTogglerHead MCTogglerHotSpot MCToggler_Open toggler MCTogglerHotSpot_ MCHotSpotImage" data-mc-targets="TOGSILAdapterGeneration"><img class="MCToggler_Image_Icon" src="../../../../../Skins/Default/Stylesheets/Images/transparent.gif" height="11" width="16" alt="Closed" data-mc-alt2="Open" />Generation of the SIL Adapter</a>
                </h2>
                <div style="display: none;" data-mc-target-name="TOGSILAdapterGeneration">
                    <p>The SIL Adapter is generated using the <span class="Product">sil-adapter-builder</span> command line tool. The <span class="Product">sil-adapter-builder</span> is delivered with the <span class="Product">CANoe</span> installation and is located in the <span class="bold">Exec64</span> subdirectory.</p>
                    <div>
                        <table style="width: 100%;margin-left: 0;margin-right: auto;mc-table-style: url('../../../../Resources/Stylesheets/vTableSymbol.css');" class="TableStyle-vTableSymbol" cellspacing="0">
                            <col class="TableStyle-vTableSymbol-Column-Column1" />
                            <col class="TableStyle-vTableSymbol-Column-Column2" />
                            <tbody>
                                <tr>
                                    <td class="TableStyle-vTableSymbol-BodyB-Column1-">
                                        <p class="Table">
                                            <img src="../../../../Resources/vImages/vExample.png" style="width: 48px;height: 45px;" title="Example" alt="Example" />
                                        </p>
                                    </td>
                                    <td class="TableStyle-vTableSymbol-BodyA-Column2-">
                                        <p class="TableSymbolHead">Example for Generating SIL Adapter with the <span class="Product">sil-adapter-builder</span> command line tool</p>
                                        <p class="TableSourceCode">.\sil-adapter-builder.exe ‚first.vcdl‘ ‘second.vcdl’ -o ‘D:\my\outputfolder’ -l c -n MySilAdapter</p>
                                        <p class="Table">Specify <span class="bold">c</span> as the target language.</p>
                                        <p class="StartList">The following flags have default values and can be omitted:</p>
                                        <ul>
                                            <li><span class="SourceCode">--output-dir / -o</span> (default: current working dir)</li>
                                            <li><span class="SourceCode">--name / -n</span> (default: SilAdapter)</li>
                                            <li><span class="SourceCode">--verbosity-level / -v</span> (default: 2 for Info)</li>
                                        </ul>
                                    </td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                    <p>The SIL Adapter is only generated for distributed objects with the <span class="bold">HwDebugger</span> binding.</p>
                </div>
                <h2 class="SectionMain"><a targets="TOGIntegrationInBuildSystem" href="javascript:void(0)" class="MCToggler MCTogglerHead MCTogglerHotSpot MCToggler_Open toggler MCTogglerHotSpot_ MCHotSpotImage" data-mc-targets="TOGIntegrationInBuildSystem"><img class="MCToggler_Image_Icon" src="../../../../../Skins/Default/Stylesheets/Images/transparent.gif" height="11" width="16" alt="Closed" data-mc-alt2="Open" />Integration into the Build System</a>
                </h2>
                <div style="display: none;" data-mc-target-name="TOGIntegrationInBuildSystem">
                    <p>The SIL Adapter is generated completely as C source code and must then be integrated into the build system of the SUT. The procedure depends on the development environment used. A CMake project file is included to simplify the integration.</p>
                    <div>
                        <table style="width: 100%;margin-left: 0;margin-right: auto;mc-table-style: url('../../../../Resources/Stylesheets/vTableSymbol.css');" class="TableStyle-vTableSymbol" cellspacing="0">
                            <col class="TableStyle-vTableSymbol-Column-Column1" />
                            <col class="TableStyle-vTableSymbol-Column-Column2" />
                            <tbody>
                                <tr>
                                    <td class="TableStyle-vTableSymbol-BodyB-Column1-">
                                        <p class="Table">
                                            <img src="../../../../Resources/vImages/vInfo.png" style="width: 48px;height: 45px;" title="Note" alt="Note" />
                                        </p>
                                    </td>
                                    <td class="TableStyle-vTableSymbol-BodyA-Column2-">
                                        <p class="TableSymbolHead">Note</p>
                                        <p>Ensure that the SIL Adapter source code is built with debug symbols and that the symbol information is available to the hardware debugger used at execution time. It is also recommended to disable compiler optimizations for the SIL Adapter.</p>
                                    </td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                    <h3 class="SectionSub">CMake Integration</h3>
                    <p>A <a href="https://cmake.org/" class="ExternalLink">CMake</a> project is included with the generated SIL Adapter. If CMake is also used for the SUT, the SIL Adapter can be included as a subdirectory. CMake 3.10 or higher is required.</p>
                    <p>The CMake project of the SIL Adapter is platform independent, i.e. the required toolchain with the compiler and compiler options to be used must be provided externally. This can be done using a CMake toolchain file, for example.</p>
                    <p>The CMake target against which the SUT must be built is the name of the SIL Adapter that was specified during generation. By default, this is <span class="bold">SilAdapter </span>.</p>
                    <h3 class="SectionSub">Integration Into Any Development Environments (without CMake)</h3>
                    <p class="StartList">The generated SIL Adapter consists of several subfolders containing the subcomponents, e.g. <span class="bold">TypeLib</span> or <span class="bold">HwDebugger</span>:</p>
                    <ul>
                        <li>
                            <p class="ListItem">Each component contains a <span class="bold">include</span> folder. Add each of these folders to the include search path of your compiler.</p>
                        </li>
                        <li>
                            <p class="ListItem">Some components contains a <span class="bold">src</span> folder. Add each of the C files in these folders to the list of files  to be built.</p>
                        </li>
                    </ul>
                    <p>Preferably use wildcards to collect the C files (e.g. *.c in Make), as these depend on the vCDL files used to generate the SIL Adapter and may change.</p>
                </div>
                <h2 class="SectionMain"><a targets="TOGCAPI" href="javascript:void(0)" class="MCToggler MCTogglerHead MCTogglerHotSpot MCToggler_Open toggler MCTogglerHotSpot_ MCHotSpotImage" data-mc-targets="TOGCAPI"><img class="MCToggler_Image_Icon" src="../../../../../Skins/Default/Stylesheets/Images/transparent.gif" height="11" width="16" alt="Closed" data-mc-alt2="Open" /> C API</a>
                </h2>
                <div style="display: none;" data-mc-target-name="TOGCAPI">
                    <p>The API of the generated SIL Adapter is generally based on the interface description in the vCDL files and on the name of the SIL Adapter specified when calling the <span class="Product">sil-adapter-builder</span> command line tool.</p>
                    <h3 class="SectionSub"> Header and Naming</h3>
                    <p>The entire SIL Adapter is included by the header<span class="bold"> SilAdapter/siladapter.h</span>, where the folder name depends on the name of the SIL Adapter. By including them, all user-defined data types and distributed objects selected for the SIL Adapter are made available.</p>
                    <p>The naming of all user-defined data types and distributed objects in the SIL Adapter results from the full path of the corresponding element in the vCDL file. See the following example:</p>
                    <div>
                        <table style="width: 100%;margin-left: 0;margin-right: auto;mc-table-style: url('../../../../Resources/Stylesheets/vTableSymbol.css');" class="TableStyle-vTableSymbol" cellspacing="0">
                            <col class="TableStyle-vTableSymbol-Column-Column1" />
                            <col class="TableStyle-vTableSymbol-Column-Column2" />
                            <tbody>
                                <tr>
                                    <td class="TableStyle-vTableSymbol-BodyB-Column1-">
                                        <p class="Table">
                                            <img src="../../../../Resources/vImages/vExample.png" style="width: 48px;height: 45px;" title="Example" alt="Example" />
                                        </p>
                                    </td>
                                    <td class="TableStyle-vTableSymbol-BodyA-Column2-">
                                        <p class="TableSymbolHead">Example: vCDL to SIL Adapter API Naming</p>
                                        <p class="SourceCode"><span class="CodeKeyword">namespace</span> MyNamespace<br />{<br />&#160;&#160;<span class="CodeKeyword">struct</span> MyStruct { … }<br /><br />&#160;&#160;<span class="CodeKeyword">interface</span> MyInterface { … }<br /><br />&#160;&#160;MyInterface MyObject;<br />}<br /></p>
                                    </td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                    <p>The name of the type <span class="bold">MyStruct</span> has the name <span class="bold">MyNamespace_MyStruct</span> in the SIL Adapter API. Also, the distributed object <span class="bold">MyObject</span> is accessed with the prefix <span class="bold">MyNamespace_MyObject</span>.</p>
                    <h3 class="SectionSub"> Initialisierung and Usage</h3>
                    <p>The SIL Adapter must first be initialized before it is used for the first time and can be shut down before the SUT is terminated. This is done using the <span class="SourceCode">SilAdapter_connect</span> and <span class="SourceCode">SilAdapter_disconnect</span> functions. Additionally the function <span class="SourceCode">SilAdapter_poll</span> must be called cyclically. The function names depend on the name of the SIL Adapter.</p>
                    <div>
                        <table style="width: 100%;margin-left: 0;margin-right: auto;mc-table-style: url('../../../../Resources/Stylesheets/vTableSymbol.css');" class="TableStyle-vTableSymbol" cellspacing="0">
                            <col class="TableStyle-vTableSymbol-Column-Column1" />
                            <col class="TableStyle-vTableSymbol-Column-Column2" />
                            <tbody>
                                <tr>
                                    <td class="TableStyle-vTableSymbol-BodyB-Column1-">
                                        <p class="Table">
                                            <img src="../../../../Resources/vImages/vExample.png" style="width: 48px;height: 45px;" title="Example" alt="Example" />
                                        </p>
                                    </td>
                                    <td class="TableStyle-vTableSymbol-BodyA-Column2-">
                                        <p class="TableSymbolHead">Example: Initialization and Use of the SIL Adapter</p><pre xml:space="preserve"><code class="language-c">#include „SilAdapter/siladapter.h“

int gRunning = 1;

int main()
{
&#160;&#160;SilAdapter_connect();

&#160;&#160;while(gRunning)
&#160;&#160;{
&#160;&#160;&#160;&#160;SilAdapter_poll();

&#160;&#160;&#160;&#160;// remaining application
&#160;&#160;}

&#160;&#160;SilAdapter_disconnect();
&#160;&#160;return 0;
}</code></pre>
                                    </td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                    <h3 class="SectionSub">Method Member</h3>
                    <p>The C SIL Adapter supports both provided and consumed method members. Provided method members are methods that are called by the SUT and whose implementation is provided by <span class="Product">CANoe</span>. The implementation is done, for example, in an application model. Consumed method members are methods that are called by <span class="Product">CANoe</span> and implemented by the SUT. An interface description for method members with a vCDL file is given in the following example:</p>
                    <div>
                        <table style="width: 100%;margin-left: 0;margin-right: auto;mc-table-style: url('../../../../Resources/Stylesheets/vTableSymbol.css');" class="TableStyle-vTableSymbol" cellspacing="0">
                            <col class="TableStyle-vTableSymbol-Column-Column1" />
                            <col class="TableStyle-vTableSymbol-Column-Column2" />
                            <tbody>
                                <tr>
                                    <td class="TableStyle-vTableSymbol-BodyB-Column1-">
                                        <p class="Table">
                                            <img src="../../../../Resources/vImages/vExample.png" style="width: 48px;height: 45px;" title="Example" alt="Example" />
                                        </p>
                                    </td>
                                    <td class="TableStyle-vTableSymbol-BodyA-Column2-">
                                        <p class="TableSymbolHead">Example: Method Member</p>
                                        <p class="SourceCode"><span class="CodeKeyword">version</span> <span class="CodeNumericalLiteral">1.4</span>;<br /><br /><span class="CodeKeyword">namespace</span> Math<br />{<br />&#160;&#160;[<span class="CodeAttributeKey_Namespace">Binding</span>=<span class="CodeStringLiteral">"HwDebugger"</span>]<br />&#160;&#160;{<br />&#160;&#160;&#160;&#160;<span class="CodeKeyword">provided</span> <span class="CodeKeyword">method</span> int32 Add(<span class="CodeKeyword">in</span> int32 x, <span class="CodeKeyword">in</span> int32 y);<br />&#160;&#160;&#160;&#160;<span class="CodeKeyword">consumed</span> <span class="CodeKeyword">method</span> int32 Multiply(<span class="CodeKeyword">in</span> float x, <span class="CodeKeyword">in</span> float y);<br />&#160;&#160;}<br /><br />&#160;&#160;ICalculator Calculator;<br />}<br /></p>
                                    </td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                    <p>A provided method member of a distributed object can be called by the SUT via the SIL Adapter. The call is always asynchronous and non-blocking.</p>
                    <p>The method is called with the provided <span class="SourceCode">call_async</span> function. The arguments for all <span class="SourceCode">in</span> and <span class="SourceCode">inout</span> parameters must be passed to this function.</p>
                    <p>To return of the method, the callback function <span class="SourceCode">on_return_handler</span> must be implemented by the SUT. The return value and all arguments for <span class="SourceCode">out</span> and <span class="SourceCode">inout</span> parameters are passed to this function. A corresponding external function is provided by the SIL Adapter. In the case of a one-way method, the signature and implementation of the return function is omitted.</p>
                    <p>Optionally, a context pointer can be passed, which is passed unchanged when the method returns.</p>
                    <div>
                        <table style="width: 100%;margin-left: 0;margin-right: auto;mc-table-style: url('../../../../Resources/Stylesheets/vTableSymbol.css');" class="TableStyle-vTableSymbol" cellspacing="0">
                            <col class="TableStyle-vTableSymbol-Column-Column1" />
                            <col class="TableStyle-vTableSymbol-Column-Column2" />
                            <tbody>
                                <tr>
                                    <td class="TableStyle-vTableSymbol-BodyB-Column1-">
                                        <p class="Table">
                                            <img src="../../../../Resources/vImages/vExample.png" style="width: 48px;height: 45px;" title="Example" alt="Example" />
                                        </p>
                                    </td>
                                    <td class="TableStyle-vTableSymbol-BodyA-Column2-">
                                        <p class="TableSymbolHead">Example: Call of Provided Methods via the SIL Adapter</p><pre xml:space="preserve"><code class="language-c">// Provided by SIL Adapter
int32_t Math_Calculator_Add_call_async(int32_t x, int32_t y, void* user_context);
extern int32_t Math_Calculator_Add_on_return_handler(int32_t return_value, void* user_context);

// SUT – Implementing the return handler
int32_t Math_Calculator_Add_on_return_handler(int32_t return_value, void* user_context) 
{
&#160;&#160;// Do something with the return value
}
// SUT – Calling the provided method
Math_Calculator_Add_call_async(1, 2, 0);</code></pre>
                                    </td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                    <p>Currently, the SIL Adapter can only handle two asynchronous method calls at a time. Any further call is discarded until one of the two pending calls has returned. This restriction applies globally to all methods of the SIL Adapter, but only to methods that are called by the SUT (provided method member).</p>
                    <p>In the case of a consumed method member, the SUT must provide the implementation of the method. For this purpose, the SUT must implement the <span class="SourceCode">on_call_handler</span> function. The SIL Adapter provides a corresponding external function.</p>
                    <div>
                        <table style="width: 100%;margin-left: 0;margin-right: auto;mc-table-style: url('../../../../Resources/Stylesheets/vTableSymbol.css');" class="TableStyle-vTableSymbol" cellspacing="0">
                            <col class="TableStyle-vTableSymbol-Column-Column1" />
                            <col class="TableStyle-vTableSymbol-Column-Column2" />
                            <tbody>
                                <tr>
                                    <td class="TableStyle-vTableSymbol-BodyB-Column1-">
                                        <p class="Table">
                                            <img src="../../../../Resources/vImages/vExample.png" style="width: 48px;height: 45px;" title="Example" alt="Example" />
                                        </p>
                                    </td>
                                    <td class="TableStyle-vTableSymbol-BodyA-Column2-">
                                        <p class="TableSymbolHead">Example: Implementation of Consumed Methods</p><pre xml:space="preserve"><code class="language-c">// Provided by SIL Adapter
extern int32_t Math_Calculator_Multiply_on_call_handler(int32_t x, int32_t y);

// SUT – Implementing the call handler
int32_t Math_Calculator_Multiply_on_call_handler(int32_t x, int32_t y)
{
&#160;&#160;return x * y;
}</code></pre>
                                    </td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                    <p>The <span class="SourceCode">on_return_handler</span> and <span class="SourceCode">on_call_handler</span> functions are always called within the <span class="SourceCode">SilAdapter_poll</span> call.</p>
                </div>
                <h3 class="SectionMain"><a targets="TOGTechnicalDetails" href="javascript:void(0)" class="MCToggler MCTogglerHead MCTogglerHotSpot MCToggler_Open toggler MCTogglerHotSpot_ MCHotSpotImage" data-mc-targets="TOGTechnicalDetails"><img class="MCToggler_Image_Icon" src="../../../../../Skins/Default/Stylesheets/Images/transparent.gif" height="11" width="16" alt="Closed" data-mc-alt2="Open" />Technical Details</a>
                </h3>
                <div style="display: none;" data-mc-target-name="TOGTechnicalDetails">
                    <h3 class="SectionSub">Concurrency</h3>
                    <p>The SIL Adapter is not thread-safe. If access is required from different contexts, access to the SIL Adapter API must be synchronized by the SUT.</p>
                    <p>The SIL Adapter does not have its own context. Callback functions are always executed in the context of the caller of the <span class="SourceCode">SilAdapter_poll</span> function.</p>
                    <h3 class="SectionSub">Performance</h3>
                    <p class="StartList">The performance depends on the test setup as follows:</p>
                    <ul>
                        <li>
                            <p class="ListItem">The type of the hardware debugger connection (Ethernet, USB).</p>
                        </li>
                        <li>
                            <p class="ListItem">The distance between the hardware debugger and the computer running <span class="Product">CANoe</span>.</p>
                        </li>
                        <li>
                            <p class="ListItem">The debugging interface used (JTAG, DAP).</p>
                        </li>
                        <li>
                            <p>Manufacturer of the hardware debugger.</p>
                        </li>
                    </ul>
                    <p>The time from call to return of a method in a completely local test setup is in the range of 1&#160;ms to 10&#160;ms.</p>
                </div>
                <p class="LinkList">&#160;</p>
            </div>
        </div>
        <div class="Footer">
            <div class="FooterWhite">
                <table class="FooterWhite" style="border-collapse: collapse;margin-left: auto;margin-right: auto;">
                    <col style="width: 70px;" data-mc-conditions="vConditions.HTML5Link" />
                    <col style="width: 16px;" data-mc-conditions="vConditions.HTML5Link" />
                    <col />
                    <tbody>
                        <tr>
                            <td>
                                <div class="buttons popup-container clearfix topicToolbarProxy topicToolbarProxyFooter _Skins_HTML5TopicToolbar mc-component nocontent">
                                    <div class="button-group-container-left">
                                        <button class="button needs-pie expand-all-button" data-state1-class="expand-all-button" data-state2-class="collapse-all-button" data-state2-title="Collapse all" title="Expand all" data-state1-title="Expand all">
                                            <div>
                                                <div role="img" class="button-icon-wrapper" aria-label="Expand all">
                                                    <div class="button-icon"> </div>
                                                </div>
                                            </div>
                                        </button>
                                        <button class="button needs-pie remove-highlight-button" title="Remove Highlights">
                                            <div>
                                                <div role="img" class="button-icon-wrapper">
                                                    <div class="button-icon"> </div>
                                                </div>
                                            </div>
                                        </button>
                                    </div>
                                </div>
                            </td>
                            <td>
                                <p class="vec_BuildInfo"><a href="../../../Shared/HowToUseOnlineHelp.htm" title="Tips for using the help" alt="Tips for using the help"><img src="../../../../Resources/vImages/vBackstage/vHelpInfo.png" /></a>
                                </p>
                            </td>
                            <td>
                                <p class="vec_BuildInfo" style="text-align: right;"><span class="mc-variable Vector.BuildTime variable">2023-09-26T19:49:32</span>
                                </p>
                            </td>
                        </tr>
                    </tbody>
                </table>
            </div>
            <table style="width: 100%;border-collapse: separate;border-spacing: 3px 0px;margin-left: auto;margin-right: auto;caption-side: top;">
                <col />
                <col />
                <col />
                <col data-mc-conditions="vConditions.HTML5Link" />
                <tbody>
                    <tr>
                        <td style="background-color: #b70032;padding-left: 5pt;padding-right: 5pt;padding-top: 5pt;padding-bottom: 5pt;">
                            <p class="vec_Footer">©&#160;Vector Informatik GmbH</p>
                        </td>
                        <td style="background-color: #b70032;padding-left: 5pt;padding-right: 5pt;padding-top: 5pt;padding-bottom: 5pt;text-align: right;">
                            <p class="vec_FooterBold">
                                <MadCap:conditionalText data-mc-conditions="vConditions.vTESTstudioExcluded,vConditions.TestDataEditorExcluded">CANoe</MadCap:conditionalText> Version <MadCap:conditionalText data-mc-conditions="vConditions.vTESTstudioExcluded">17 SP3</MadCap:conditionalText></p>
                        </td>
                        <td style="background-color: #b70032;padding-left: 5pt;padding-right: 5pt;padding-top: 5pt;padding-bottom: 0pt;text-align: right;">
                            <p class="vec_Footer"><a href="../../../Shared/ContactCopyrightLicense.htm" class="vec_Footer MCXref xref xrefvec_Footer">Contact/Copyright/License</a>
                            </p>
                        </td>
                        <td style="background-color: #b70032;padding-left: 5pt;padding-right: 5pt;padding-top: 5pt;padding-bottom: 0pt;text-align: right;">
                            <p class="vec_Footer"><a href="https://www.vector.com/int/en/company/get-info/privacy-policy/" target="_blank" class="vec_Footer">Data Privacy Notice</a>
                            </p>
                        </td>
                    </tr>
                </tbody>
            </table>
        </div>
    </body>
</html>