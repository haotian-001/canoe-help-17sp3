<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en-us" xml:lang="en-us" data-mc-search-type="Stem" data-mc-help-system-file-name="CANoeCANalyzer.xml" data-mc-path-to-help-system="../../../../../" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic" data-mc-preload-images="false" data-mc-in-preview-mode="false">
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta charset="utf-8" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
        <meta name="msapplication-config" content="../../../../../Skins/Favicons/browserconfig.xml" />
        <link rel="apple-touch-icon" sizes="180x180" href="../../../../../Skins/Favicons/apple-touch-icon.png" />
        <link rel="shortcut icon" href="../../../../../Skins/Favicons/favicon-32x32.png" />
        <link rel="icon" sizes="96x96" href="../../../../../Skins/Favicons/favicon-96x96.png" />
        <link rel="icon" sizes="32x32" href="../../../../../Skins/Favicons/favicon-32x32.png" />
        <link rel="icon" sizes="16x16" href="../../../../../Skins/Favicons/favicon-16x16.png" /><title>Differences to MOST25 (MOST150)</title>
        <link href="../../../../../Skins/Default/Stylesheets/Slideshow.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../../Skins/Default/Stylesheets/Components/Styles.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../../Skins/Default/Stylesheets/Components/Tablet.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../../Skins/Default/Stylesheets/Components/Mobile.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../../Skins/Default/Stylesheets/Components/Print.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../Resources/Stylesheets/vTableMasterPageHeader.css" rel="stylesheet" data-mc-stylesheet-type="table" />
        <link href="../../../../Resources/Stylesheets/vStylesheet.css" rel="stylesheet" type="text/css" />
        <style>/*&lt;meta /&gt;*/

.button.expand-all-button
{
	-pie-background: linear-gradient(#ffffff, #ffffff);
}

.button.remove-highlight-button
{
	-pie-background: linear-gradient(#ffffff, #ffffff);
}

.button.collapse-all-button
{
	-pie-background: linear-gradient(#ffffff, #ffffff);
}

.needs-pie
{
	behavior: url('../../../../../Resources/Scripts/PIE-no-motw.htc');
}

</style>
        <link href="../../../../Resources/Stylesheets/vTableSymbol.css" rel="stylesheet" data-mc-stylesheet-type="table" />
        <link rel="apple-touch-icon" sizes="180x180" href="../../../../../Skins/Favicons/apple-touch-icon.png" />
        <link rel="shortcut icon" href="../../../../../Skins/Favicons/favicon-32x32.png" />
        <link rel="icon" sizes="96x96" href="../../../../../Skins/Favicons/favicon-96x96.png" />
        <link rel="icon" sizes="32x32" href="../../../../../Skins/Favicons/favicon-32x32.png" />
        <link rel="icon" sizes="16x16" href="../../../../../Skins/Favicons/favicon-16x16.png" />
        <script src="../../../../../Resources/Scripts/jquery.min.js" type="text/javascript">
        </script>
        <script src="../../../../../Resources/Scripts/purify.min.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/require.min.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/require.config.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/foundation.min.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/plugins.min.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapGlobal.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapDom.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapUtilities.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapXhr.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapTextEffects.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapSlideshow.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapMessageBus.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapMessageBus.CrossFrame.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapDefault.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapMediaQueries.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapAccessibility.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapHelpSystem.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapAliasFile.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapTopicFeedback.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapFeedbackHelper.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapSkinHelper.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapToc.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapToc.Breadcrumbs.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapToc.MiniToc.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapToc.SideMenu.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapIndex.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapGlossary.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapParser.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapSearch.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapNavigateTopics.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapLms.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapELearning.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapTopic.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapFeedback.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapMicroContentComponent.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapSearchHelper.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapTopicElements.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapTriPane.js" type="text/javascript" defer="defer">
        </script>
        <script type="text/jscript" src="../../../../Resources/vScripts/SyntaxHighlighting.js">
        </script>
        <script type="text/jscript" src="../../../../Resources/vScripts/TabSwitch.js">
        </script>
        <script type="text/javascript" src="../../../../Resources/vScripts/Vector.js">
        </script>
    </head>
    <body>
        <p class="MCWebHelpFramesetLink MCWebHelpFramesetLinkTop"><a href="../../../../../CANoeCANalyzer.htm#Topics/CANoeCANalyzer/MOST/MOST150/MOST150DifferencesToMOST25.htm">Open topic with navigation</a>
        </p>
        <div class="Body">
            <div role="main" id="mc-main-content">
                <p class="StructurePath"><a href="../MOST.htm" class="StructurePath">MOST</a> » <a href="MOST150.htm" class="StructurePath">MOST150</a> » Differences to MOST25</p>
                <h1>Differences to MOST25</h1>
                <p class="MenuPath">&#160;</p>
                <p class="AutoSearchFilterConcepts"><a name="aanchor9754"></a>
                    <MadCap:concept term="SFCore" />
                </p>
                <p class="IndexConcept"><a name="kanchor7891"></a>
                </p>
                <div>
                    <h2>Setup: Node &amp; Spy</h2>
                    <p><span class="Product">VN2640</span> simultaneously supports the node and spy on the same channel with comparable time stamps and latencies for both event sources.</p>
                    <p>For technical reasons, even though the <span class="Product">OptoLyzer G2 3150o</span> supports node and spy at the same time, it is strongly recommended to assign these two event sources (node &amp; spy) to separate MOST channels of <span class="Product">CANoe</span>. Therefore two MOST channels can use the same OptoLyzer device.</p>
                </div>
                <blockquote>
                    <h2>Timing Mode</h2>
                    <p>Switching from Slave to non-static Master does not wake the network automatically. To start the network use action wake-up of <a href="../../Windows/MOSTStateWindow.htm">MOST State Window</a> or call CAPL function <a href="../../../CAPLFunctions/MOST/Functions/CAPLfunctionMOSTWakeup.htm">MostWakeup</a>.</p>
                </blockquote>
                <div>
                    <h2>Control channel</h2>
                    <ul>
                        <li class="Bold">Control Messages now can have up to 45 user data bytes</li>
                    </ul>
                    <p class="Result">When existing CAPL code evaluates the DLC of <a href="../../../CAPLFunctions/MOST/Selectors/CAPLfunctionMOSTSelectors.htm#mostMessageAMSmessage">mostMessages</a> unprecedented high values may occur. CAPL code working on <a href="../../../CAPLFunctions/MOST/Selectors/CAPLfunctionMOSTSelectors.htm#mostMessageAMSmessage">mostAmsMessages</a> is safe, as these messages have not changed.</p>
                    <p class="Result">Currently, sending on the control channel only supports messages with a value of TelLen in the data area which corresponds to the real length of the CMS message. Thus, sending erroneous CMS messages with invalid TelLen values is not possible.</p>
                    <ul>
                        <li class="Bold">No CMS acknowledgments for segmented AMS transmissions</li>
                    </ul>
                    <p class="Result">With MOST25 each CMS frame of a segmented AMS transmission is either received by the node or reported as Tx acknowledgment to the node; this also applies to the MOST150 Interface <span class="Product">VN2640</span>. With <span class="Product">VN2640</span>, both the node mode and spy mode supply a complete picture of the communication of this network node.</p>
                    <p class="Result">The <span class="Product">OptoLyzer G2 3150o</span> as node only reports the AMS messages. This leads to the lacking of CMS events in the <a href="../../Windows/Trace/TraceWindow.htm">Trace Window</a>, which might impair analysis nodes working on CMS and makes using the spy mode for logging purposes mandatory.</p>
                    <ul>
                        <li class="Bold">System messages are not supported by MOST150</li>
                    </ul>
                    <p class="Result">Existing CAPL code allocating synchronous channels via system messages either to stream data or to stress the system with a full allocation table do not work any more. The handling of the synchronous channels is completely different to that of MOST25.</p>
                    <p class="Result">Existing CAPL code remotely reading registers of a MOST transceiver for analysis purposes will not work any more. Access to the transceiver of a device can be gained by sending normal CMS or AMS messages to the INIC function block of the interesting device.</p>
                    <ul>
                        <li class="Bold">AMS – "size-prefixed transfer"</li>
                    </ul>
                    <p class="Result">For transmitting segmented AMS messages the MOST Specification 3V0 introduced the "size-prefixed-transfer". Thereby a segmented transmission is started by sending a telegram with TelID = 4 and two user data bytes. The user data contains the length of the whole AMS message. This allows the receiver to allocate the appropriate amount of buffer memory for the reception of the message. The size-prefixed transfer can be activated and deactivated in the hardware configuration dialog. The size-prefixed transfer is deactivated by default.</p>
                </div>
                <div>
                    <h2>Packet channel</h2>
                    <p>The throughput from the application to the asynchronous channel depends on the HW interface used. For this reason, the AIR parameter of the MOST High protocol must be configured in such a way that it will not overburden receiving nodes. <span class="Product">VN2640</span> allows a high throughput with low latency.</p>
                    <p>With the <span class="Product">OptoLyzer 3150o</span> the throughput is less. Thus, the parameter AIR of the MOST High Protocol has to be configured to keep bigger distances between single packets. The optimal value for AIR depends on the used packet size. <MadCap:conditionalText data-mc-conditions="vConditions.CANoeOnly">A sample implementation can be found in the MOST High Demo configuration delivered with CANoe.</MadCap:conditionalText></p>
                </div>
                <div>
                    <h2>Ethernet channel</h2>
                    <p>MOST150 offers the possibility to transmit Ethernet packets over the asynchronous channel. Therefore each MOST150 device has a 48-bit MAC address to send and receive those packets.</p>
                </div>
                <div>
                    <h2>Pre-emptive acknowledgment</h2>
                    <p>In order to reduce busload, the MOST150 transceiver terminates message transmission in early stage as soon as the message reception is foreseen to fail (= pre-emptive acknowledgment). When spying MOST150 traffic these aborted transmissions are reported as message fragments. The information a fragment carries depends on its position in the MOST frame. E.g. a very early abortion of a send attempt may lead to a fragment, where even the source address field has not been put on bus and therefore cannot be spied.</p>
                </div>
                <div>
                    <h2>Audio Routing</h2>
                    <p>In contrast to MOST25, where the synchronous channels are managed with the help of allocation and deallocation messages and where an allocation table indicating the occupation of each synchronous channel can be observed on the bus, this management is transparent on MOST150.</p>
                    <p>Here the MOST controller only delivers information on which labels exist and which bandwidth they offer. For synchronous sources, allocation and the subsequent routing to a label is combined in a single step.</p>
                    <p>With MOST150 the bypass of the interface must be inactive to listen to a certain audio channel.</p>
                    <p>Both differences are accounted for by an adapted view of the <a href="../../Windows/MOSTAudioRoutingWindow.htm">MOST Audio Routing Window</a>.</p>
                </div>
                <div>
                    <h2>System Lock Flag and Shutdown Flag</h2>
                    <p>The system lock flag of MOST150 indicates whether the timing master detected, that the MOST ring is closed. The corresponding mechanism with MOST25 is that the SBC value is set to a valid value only after a closed ring is detected.</p>
                    <p>With MOST150 the State Window additionally indicates whether the system lock flag is set. Only after the system lock flag is set, the same symbol <img src="../../../../Resources/Images/CANoeCANalyzer/MOST/MOSTStateWindowLockOn.png" /> for lock is shown as with MOST25 in order to indicate that the physical layer is ready. When stable lock is reached but the system lock flag is not set, the icon <img src="../../../../Resources/Images/CANoeCANalyzer/MOST/MOST150AudioRoutingWindowSystemNOTReady.png" /> indicates that the system is not completely ready, yet.</p>
                    <p>The shutdown flag precedes a proper shutdown of the MOST ring, before light is switched off. The icon <img src="../../../../Resources/Images/CANoeCANalyzer/MOST/MOST150AudioRoutingWindowLightOffWithoutShutdownFlag.png" /> in the state window indicates that the light was switched off without previously setting the shutdown flag.</p>
                    <p>Corresponding events for the system lock flag and the shutdown flag are shown in the Trace Window. Additionally a call back function in CAPL nodes is triggered on every change of these states.</p>
                </div>
                <div>
                    <h2>MOST IG</h2>
                    <p>CANoe is prepared to determine the speed grade of the configured MOST channel and allow either 17 Bytes or up to 45 user data bytes when sending via CMS.</p>
                    <p>However, when sending on MOST150 the value of TelLen determines the number of bytes sent. If TelLen exceeds the number of entered bytes in the hex dump view, the messages will be extended with zero bytes. If TelLen is smaller than the number of entered bytes in the hex dump view, only TelLen bytes will be sent, although the configured bytes will remain in the hex dump view.</p>
                </div>
                <div>
                    <h2 data-mc-conditions="vConditions.CANoeOnly">Application Socket</h2>
                    <p data-mc-conditions="vConditions.CANoeOnly">CANoe's Application Socket was enhanced for MOST150 according to the MOST Specification 3V0 (Errata Sheets 1 &amp; 2 inclusive).</p>
                    <ul>
                        <li class="Bold" data-mc-conditions="vConditions.CANoeOnly">NetBlock</li>
                    </ul>
                    <p class="Result" data-mc-conditions="vConditions.CANoeOnly">The function block NetBlock has the following new functions:</p>
                    <ul>
                        <li class="Indent" data-mc-conditions="vConditions.CANoeOnly">ShutdownReason (0x009)</li>
                        <li class="Indent" data-mc-conditions="vConditions.CANoeOnly">ImplFBlockIDs (0x012)</li>
                        <li class="Indent" data-mc-conditions="vConditions.CANoeOnly">EUI48 (0x013)</li>
                        <li class="Indent" data-mc-conditions="vConditions.CANoeOnly">RBDResult (0x405)</li>
                    </ul>
                    <p class="Result" data-mc-conditions="vConditions.CANoeOnly">As all these functions deliver device or manufacturer specific information, the CANoe NetBlock does not fully implement these functions. It is only prepared not to respond with ‘FktID not available’ error messages to the caller.</p>
                    <p class="Result" data-mc-conditions="vConditions.CANoeOnly">Responding with error messages, simulating the behavior or intentionally introducing erroneous behavior is easily done with the programming pattern in a CAPL node as shown below.</p>
                    <div class="Indent" data-mc-conditions="vConditions.CANoeOnly">
                        <table style="width: 100%;margin-left: 0;margin-right: auto;mc-table-style: url('../../../../Resources/Stylesheets/vTableSymbol.css');" class="TableStyle-vTableSymbol" cellspacing="0">
                            <col class="TableStyle-vTableSymbol-Column-Column1" />
                            <col class="TableStyle-vTableSymbol-Column-Column2" />
                            <tbody>
                                <tr>
                                    <td class="TableStyle-vTableSymbol-BodyB-Column1-">
                                        <p class="Table">
                                            <img src="../../../../Resources/vImages/vExample.png" style="width: 48px;height: 45px;" title="Example" alt="Example" />
                                        </p>
                                    </td>
                                    <td class="TableStyle-vTableSymbol-BodyA-Column2-">
                                        <p class="TableSymbolHead">Example CAPL</p>
                                        <p class="SourceCode">on mostAmsMessage NetBlock.ShutdownReason.Get<br />{<br />&#160;&#160;&#160;// CANoe does not report an error (“FktID not available“)<br />&#160;&#160;&#160;// Report message variable<br />&#160;&#160;&#160;mostAMSMessage NetBlock.ShutdownReason.Status msg;<br /><br />&#160;&#160;&#160;// initialize report message<br />&#160;&#160;&#160;MostPrepareReport(this, msg);<br />&#160;&#160;&#160;// device specific evaluation of the last shutdown reason<br />&#160;&#160;&#160;// msg.SSOCUStatus = ...<br />&#160;&#160;&#160;// ...<br />&#160;&#160;&#160;// send report<br />&#160;&#160;&#160;msg.InstanceID = MostGetNPR(MostGetChannel());<br />&#160;&#160;&#160;output(msg);<br />}</p>
                                    </td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                    <ul>
                        <li class="Bold" data-mc-conditions="vConditions.CANoeOnly">MOST NetworkMaster</li>
                        <li class="Indent" data-mc-conditions="vConditions.CANoeOnly">New function: SystemAvail (0xA10)</li>
                    </ul>
                    <p class="ResultIndent" data-mc-conditions="vConditions.CANoeOnly">The function block MOST NetworkMaster contains one new function: SystemAvail (0xA10). This function is handled in the same way as the new functions of the NetBlock (see example in chapter 3.7.1).</p>
                    <ul>
                        <li class="Indent" data-mc-conditions="vConditions.CANoeOnly">Obsolete function: Boundary (0xA03)</li>
                    </ul>
                    <p class="ResultIndent" data-mc-conditions="vConditions.CANoeOnly">The function Boundary (0xA03) is no longer provided by the MOST NetworkMaster.</p>
                    <ul>
                        <li class="Indent" data-mc-conditions="vConditions.CANoeOnly">Number of retries to resolve a duplicate functional address</li>
                    </ul>
                    <p class="ResultIndent" data-mc-conditions="vConditions.CANoeOnly">When resolving duplicate functional addresses (FBlockID + InstID) the NetworkMas-ter tries to change the InstID of a function block. In case the first attempt to change the InstID fails, the MOST NetworkMaster attempts to change the InstID again using another value. The number of attempts can be configured in the CAN.INI file:</p>
                    <div class="IndentIndent">
                        <p class="SourceCode" data-mc-conditions="vConditions.CANoeOnly">[MOSTApplicationSocket]<br />; Default: 20 attempts<br />NMAttemptsChangeInstID=20</p>
                    </div>
                    <ul>
                        <li class="Bold" data-mc-conditions="vConditions.CANoeOnly">MOST PowerMaster</li>
                    </ul>
                    <p class="Result" data-mc-conditions="vConditions.CANoeOnly">The MOST PowerMaster uses the method Shutdown of the NetBlock of each device for the shutdown procedure. Since Errata-Sheet 2 of the MOST specification 3V0 the OpTypes without sender handle have to be used. Thus the MOST PowerMaster sends the following message to all devices during the shutdown procedure:</p>
                    <p class="SourceCodeIndent" data-mc-conditions="vConditions.CANoeOnly">NetBlock.Shutdown.Start(Control)</p>
                    <p class="Result" data-mc-conditions="vConditions.CANoeOnly">In case a device wants to suspend the shutdown procedure, it has to respond with the following message to the MOST PowerMaster:</p>
                    <p class="SourceCodeIndent" data-mc-conditions="vConditions.CANoeOnly">NetBlock.Shutdown.Result(Suspend)</p>
                </div>
                <div>
                    <h2>"InitReady" versus "NetOn"</h2>
                    <p>The NetOn event was renamed to InitReady. However, the meaning is still the same. The Trace Window displays this information in the <span class="bold">disassembly</span> column and the <span class="bold">detail</span> view. In CAPL there is an additional event procedure <span class="bold">OnMostInitReady</span>. To assure the correct operation of existing CAPL programs, the event handler <a href="../../../CAPLFunctions/MOST/EventProcedures/CAPLfunctionOnMOSTNetOn.htm" class="bold">OnMostNetOn</a> is still called.</p>
                    <div>
                        <table style="width: 100%;margin-left: 0;margin-right: auto;mc-table-style: url('../../../../Resources/Stylesheets/vTableSymbol.css');" class="TableStyle-vTableSymbol" cellspacing="0">
                            <col class="TableStyle-vTableSymbol-Column-Column1" />
                            <col class="TableStyle-vTableSymbol-Column-Column2" />
                            <tbody>
                                <tr>
                                    <td class="TableStyle-vTableSymbol-BodyB-Column1-">
                                        <p class="Table">
                                            <img src="../../../../Resources/vImages/vInfo.png" style="width: 48px;height: 45px;" title="Note" alt="Note" />
                                        </p>
                                    </td>
                                    <td class="TableStyle-vTableSymbol-BodyA-Column2-">
                                        <p class="TableSymbolHead">Important Note</p>
                                        <p>As soon as this event occurs, both event procedures are called, in case they are both implemented in CAPL.</p>
                                    </td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                </div>
                <p class="LinkList"><a href="../../../CAPLFunctions/MOST/CAPLfunctionsMOSTOverview.htm" class="LinkList">CAPL functions</a>
                </p>
            </div>
        </div>
        <div class="Footer">
            <div class="FooterWhite">
                <table class="FooterWhite" style="border-collapse: collapse;margin-left: auto;margin-right: auto;">
                    <col style="width: 70px;" data-mc-conditions="vConditions.HTML5Link" />
                    <col style="width: 16px;" data-mc-conditions="vConditions.HTML5Link" />
                    <col />
                    <tbody>
                        <tr>
                            <td>
                                <div class="buttons popup-container clearfix topicToolbarProxy topicToolbarProxyFooter _Skins_HTML5TopicToolbar mc-component nocontent">
                                    <div class="button-group-container-left">
                                        <button class="button needs-pie expand-all-button" data-state1-class="expand-all-button" data-state2-class="collapse-all-button" data-state2-title="Collapse all" title="Expand all" data-state1-title="Expand all">
                                            <div>
                                                <div role="img" class="button-icon-wrapper" aria-label="Expand all">
                                                    <div class="button-icon"> </div>
                                                </div>
                                            </div>
                                        </button>
                                        <button class="button needs-pie remove-highlight-button" title="Remove Highlights">
                                            <div>
                                                <div role="img" class="button-icon-wrapper">
                                                    <div class="button-icon"> </div>
                                                </div>
                                            </div>
                                        </button>
                                    </div>
                                </div>
                            </td>
                            <td>
                                <p class="vec_BuildInfo"><a href="../../../Shared/HowToUseOnlineHelp.htm" title="Tips for using the help" alt="Tips for using the help"><img src="../../../../Resources/vImages/vBackstage/vHelpInfo.png" /></a>
                                </p>
                            </td>
                            <td>
                                <p class="vec_BuildInfo" style="text-align: right;"><span class="mc-variable Vector.BuildTime variable">2023-09-26T19:49:32</span>
                                </p>
                            </td>
                        </tr>
                    </tbody>
                </table>
            </div>
            <table style="width: 100%;border-collapse: separate;border-spacing: 3px 0px;margin-left: auto;margin-right: auto;caption-side: top;">
                <col />
                <col />
                <col />
                <col data-mc-conditions="vConditions.HTML5Link" />
                <tbody>
                    <tr>
                        <td style="background-color: #b70032;padding-left: 5pt;padding-right: 5pt;padding-top: 5pt;padding-bottom: 5pt;">
                            <p class="vec_Footer">©&#160;Vector Informatik GmbH</p>
                        </td>
                        <td style="background-color: #b70032;padding-left: 5pt;padding-right: 5pt;padding-top: 5pt;padding-bottom: 5pt;text-align: right;">
                            <p class="vec_FooterBold">
                                <MadCap:conditionalText data-mc-conditions="vConditions.vTESTstudioExcluded,vConditions.TestDataEditorExcluded">CANoe</MadCap:conditionalText> Version <MadCap:conditionalText data-mc-conditions="vConditions.vTESTstudioExcluded">17 SP3</MadCap:conditionalText></p>
                        </td>
                        <td style="background-color: #b70032;padding-left: 5pt;padding-right: 5pt;padding-top: 5pt;padding-bottom: 0pt;text-align: right;">
                            <p class="vec_Footer"><a href="../../../Shared/ContactCopyrightLicense.htm" class="vec_Footer MCXref xref xrefvec_Footer">Contact/Copyright/License</a>
                            </p>
                        </td>
                        <td style="background-color: #b70032;padding-left: 5pt;padding-right: 5pt;padding-top: 5pt;padding-bottom: 0pt;text-align: right;">
                            <p class="vec_Footer"><a href="https://www.vector.com/int/en/company/get-info/privacy-policy/" target="_blank" class="vec_Footer">Data Privacy Notice</a>
                            </p>
                        </td>
                    </tr>
                </tbody>
            </table>
        </div>
    </body>
</html>