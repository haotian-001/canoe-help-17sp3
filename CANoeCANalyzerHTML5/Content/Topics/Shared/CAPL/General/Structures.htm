<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en-us" xml:lang="en-us" data-mc-search-type="Stem" data-mc-help-system-file-name="CANoeCANalyzer.xml" data-mc-path-to-help-system="../../../../../" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic" data-mc-preload-images="false" data-mc-in-preview-mode="false">
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta charset="utf-8" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
        <meta name="msapplication-config" content="../../../../../Skins/Favicons/browserconfig.xml" />
        <link rel="apple-touch-icon" sizes="180x180" href="../../../../../Skins/Favicons/apple-touch-icon.png" />
        <link rel="shortcut icon" href="../../../../../Skins/Favicons/favicon-32x32.png" />
        <link rel="icon" sizes="96x96" href="../../../../../Skins/Favicons/favicon-96x96.png" />
        <link rel="icon" sizes="32x32" href="../../../../../Skins/Favicons/favicon-32x32.png" />
        <link rel="icon" sizes="16x16" href="../../../../../Skins/Favicons/favicon-16x16.png" /><title>Structures</title>
        <link href="../../../../../Skins/Default/Stylesheets/Slideshow.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../../Skins/Default/Stylesheets/Components/Styles.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../../Skins/Default/Stylesheets/Components/Tablet.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../../Skins/Default/Stylesheets/Components/Mobile.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../../Skins/Default/Stylesheets/Components/Print.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../Resources/Stylesheets/vTableMasterPageHeader.css" rel="stylesheet" data-mc-stylesheet-type="table" />
        <link href="../../../../Resources/Stylesheets/vStylesheet.css" rel="stylesheet" type="text/css" />
        <style>/*&lt;meta /&gt;*/

.button.expand-all-button
{
	-pie-background: linear-gradient(#ffffff, #ffffff);
}

.button.remove-highlight-button
{
	-pie-background: linear-gradient(#ffffff, #ffffff);
}

.button.collapse-all-button
{
	-pie-background: linear-gradient(#ffffff, #ffffff);
}

.needs-pie
{
	behavior: url('../../../../../Resources/Scripts/PIE-no-motw.htc');
}

</style>
        <link href="../../../../Resources/Stylesheets/vTable.css" rel="stylesheet" data-mc-stylesheet-type="table" />
        <link href="../../../../Resources/Stylesheets/vTableSymbol.css" rel="stylesheet" data-mc-stylesheet-type="table" />
        <link rel="apple-touch-icon" sizes="180x180" href="../../../../../Skins/Favicons/apple-touch-icon.png" />
        <link rel="shortcut icon" href="../../../../../Skins/Favicons/favicon-32x32.png" />
        <link rel="icon" sizes="96x96" href="../../../../../Skins/Favicons/favicon-96x96.png" />
        <link rel="icon" sizes="32x32" href="../../../../../Skins/Favicons/favicon-32x32.png" />
        <link rel="icon" sizes="16x16" href="../../../../../Skins/Favicons/favicon-16x16.png" />
        <script src="../../../../../Resources/Scripts/jquery.min.js" type="text/javascript">
        </script>
        <script src="../../../../../Resources/Scripts/purify.min.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/require.min.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/require.config.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/foundation.min.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/plugins.min.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapGlobal.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapDom.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapUtilities.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapXhr.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapTextEffects.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapSlideshow.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapMessageBus.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapMessageBus.CrossFrame.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapDefault.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapMediaQueries.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapAccessibility.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapHelpSystem.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapAliasFile.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapTopicFeedback.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapFeedbackHelper.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapSkinHelper.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapToc.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapToc.Breadcrumbs.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapToc.MiniToc.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapToc.SideMenu.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapIndex.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapGlossary.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapParser.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapSearch.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapNavigateTopics.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapLms.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapELearning.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapTopic.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapFeedback.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapMicroContentComponent.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapSearchHelper.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapTopicElements.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapTriPane.js" type="text/javascript" defer="defer">
        </script>
        <script type="text/jscript" src="../../../../Resources/vScripts/SyntaxHighlighting.js">
        </script>
        <script type="text/jscript" src="../../../../Resources/vScripts/TabSwitch.js">
        </script>
        <script type="text/javascript" src="../../../../Resources/vScripts/Vector.js">
        </script>
    </head>
    <body>
        <p class="MCWebHelpFramesetLink MCWebHelpFramesetLinkTop"><a href="../../../../../CANoeCANalyzer.htm#Topics/Shared/CAPL/General/Structures.htm">Open topic with navigation</a>
        </p>
        <div class="Body">
            <div role="main" id="mc-main-content">
                <div>
                    <p class="StructurePath"><a href="../CAPLIntroduction.htm" class="StructurePath">CAPL Introduction</a> Â» <span class="mc-variable System.Title variable">Structures</span></p>
                    <h1><span class="mc-variable System.Title variable">Structures</span>
                    </h1>
                    <p class="MenuPath">&#160;</p>
                    <p class="AutoSearchFilterConcepts"><a name="aanchor11101"></a>
                        <MadCap:concept term="SFCore" />
                    </p>
                    <p><a name="kanchor8923"></a>
                    </p>
                </div>
                <p>Structs group elements (member). Structured types can be declared in CAPL in a similar way to C:</p>
                <p class="SourceCode">struct Data {<br />int type;<br />long l;<br />char name[50];<br />};</p>
                <p>The name of the structure must be unique in the program. Simple data types, enumeration data types, other structures and fields of these types can be used as elements (members) within the structure.</p>
                <p>Structure types can be defined wherever variables can also be declared.</p>
                <div data-mc-conditions="vConditions.vTESTstudioExcluded">
                    <table style="width: 100%;margin-left: 0;margin-right: auto;mc-table-style: url('../../../../Resources/Stylesheets/vTableSymbol.css');" class="TableStyle-vTableSymbol" cellspacing="0">
                        <col class="TableStyle-vTableSymbol-Column-Column1" />
                        <col class="TableStyle-vTableSymbol-Column-Column2" />
                        <tbody>
                            <tr>
                                <td class="TableStyle-vTableSymbol-BodyB-Column1-">
                                    <p class="Table">
                                        <img src="../../../../Resources/vImages/vInfo.png" style="width: 48px;height: 45px;" title="Note" alt="Note" />
                                    </p>
                                </td>
                                <td class="TableStyle-vTableSymbol-BodyA-Column2-">
                                    <p class="TableSymbolHead">Note</p>
                                    <p class="Table">The use of self-defined structures is not compatible with older versions of <span class="Product">CANoe</span>. For this reason they may only be used in CAPL programs with <span class="Product">CANoe</span> from version 7.0 Service Pack 3.</p>
                                </td>
                            </tr>
                        </tbody>
                    </table>
                </div>
                <div>
                    <h2 class="SectionSub">Variables</h2>
                    <p>You can declare variables of a structure type either directly during definition of the type (in this case the name of the type can also be omitted) or you can reference the type later using its name:</p>
                    <p class="SourceCode">variables<br />{<br />&#160;&#160;struct Point<br />&#160;&#160;{<br />&#160;&#160;&#160;&#160;int x;<br />&#160;&#160;&#160;&#160;int y;<br />&#160;&#160;};<br />&#160;&#160;struct Point myPoint;<br />}</p>
                    <div>
                        <h2>Code Alternative to the Definition of Structures (Structs)</h2>
                        <ul>
                            <li>
                                <p class="Bold">Code Alternative 1</p>
                            </li>
                            <p>It is possible to define an unnamed Struct and to simultaneously assign this Struct as a data type to a variable (<span class="bold">pair</span>).</p>
                            <p class="SourceCode">variables<br />{<br />&#160;&#160;struct { int first; int second; } pair;<br />}<br /><br />on start<br />{<br />&#160;&#160;pair.first = 1;<br />&#160;&#160;pair.second = 2;<br />}</p>
                            <li>
                                <p class="Bold">Code Alternative 2</p>
                            </li>
                            <p>It is possible to define a Struct and to simultaneously assign this Struct as a data type to a variable (<span class="bold">pair</span>). You can additionally assign this data type to another variable (<span class="bold">pair2</span>).</p>
                            <p class="SourceCode">variables<br />{<br />&#160;&#160;struct PairStructType  { int first; int second; } pair;<br />&#160;&#160;struct PairStructType  pair2;<br />}<br /><br />on start<br />{<br />&#160;&#160;pair.first = 1;<br />&#160;&#160;pair.second = 2;<br />}</p>
                        </ul>
                    </div>
                    <p>You can initialize the elements of the structure directly during variable declaration. You can â but need not to â name the single elements explicitly. If you don't name them, the order of the structure definition is used:</p>
                    <p class="SourceCode">variables<br />{<br />&#160;&#160;struct Point myPoint = { x = 0.5, y = 3.8 };<br />&#160;&#160;struct Point myPoint2 = { 0.5, 3.8 };<br />}</p>
                    <p>If you do not initialize one or more elements, they will be automatically given the value 0.</p>
                    <p>Structures can be used as parameters of functions, whereby a reference is transferred automatically. In this case the <a href="Keywords.htm">keyword</a> <span class="bold">struct </span>must be included:</p>
                    <p class="SourceCode">void process(struct Data data)</p>
                    <p>Structures are not allowed as return values of functions. However, you can also declare fields of structures:</p>
                    <p class="SourceCode">variables<br />{<br />&#160;&#160;struct Point<br />&#160;&#160;{<br />&#160;&#160;&#160;&#160;int x;<br />&#160;&#160;&#160;&#160;int y;<br />&#160;&#160;};<br />&#160;&#160;struct Point myPoint;<br />&#160;&#160;struct Point allPoints[50];<br />}</p>
                    <p>Elements of a structure are accessed with â.â as in C:</p>
                    <p class="SourceCode">on start<br />{<br />&#160;&#160;myPoint.x = 7;<br />&#160;&#160;myPoint.y = 2;<br /><br />&#160;&#160;allPoints[3].x = 1;<br />&#160;&#160;allPoints[3].y = 5;<br />}</p>
                </div>
                <div>
                    <h2 class="SectionSub">Byte access</h2>
                    <p>For self-defined structures there are no comparison or assignment operators. However, you can access the data bytes of a structure directly with a number of functions:</p>
                    <ul>
                        <li><a href="../../../CAPLFunctions/StructByteAccess/Functions/CAPLfunctionMemCpy.htm">memcpy</a>
                        </li>
                        <li><a href="../../../CAPLFunctions/StructByteAccess/Functions/CAPLfunctionMemCpyH2n.htm">memcpy_h2n</a>
                        </li>
                        <li><a href="../../../CAPLFunctions/StructByteAccess/Functions/CAPLfunctionMemCpyN2h.htm">memcpy_n2h</a>
                        </li>
                        <li><a href="../../../CAPLFunctions/StructByteAccess/Functions/CAPLfunctionMemCmp.htm">memcmp</a>
                        </li>
                    </ul>
                </div>
                <div>
                    <h2 class="SectionSub">Alignment</h2>
                    <p>For structures you can exactly specify the positions of the various elements in memory, or to be more accurate, their so-called alignment relative to specific limits. To do this, write the following before declaration of the structure type <span class="bold">_align</span>:</p>
                    <p class="SourceCode">_align(2) struct Point2 { // Struct with element alignment of 2 bytes</p>
                    <p>For alignment only the values 1, 2, 4, and 8 are allowed. If no alignment is specified, an alignment of 8 will be assumed. In addition, the following rules apply:</p>
                    <ul>
                        <li>The alignment of simple data types is their size (in bytes). The data type DWORD, for example, has an alignment of 4.</li>
                        <li>The alignment of a field is equal to the alignment of its elements.</li>
                        <li>The alignment of a structure element is the minimum of the alignment of its data type and the alignment specified for the structure.</li>
                        <li>The alignment of a structure itself is the maximum of the alignment of its elements.</li>
                    </ul>
                    <p>The first element of a structure is always at a distance (offset) of 0 bytes from the start of the structure. The following applies to further elements: Their offset is the smallest multiple of their alignment that is greater or equal to the offset of the previous element plus the size of the previous element.</p>
                    <p>The size of a structure is simply the offset of its last element plus its size.</p>
                    <div>
                        <table style="width: 100%;margin-left: 0;margin-right: auto;mc-table-style: url('../../../../Resources/Stylesheets/vTableSymbol.css');" class="TableStyle-vTableSymbol" cellspacing="0">
                            <col class="TableStyle-vTableSymbol-Column-Column1" />
                            <col class="TableStyle-vTableSymbol-Column-Column2" />
                            <tbody>
                                <tr>
                                    <td class="TableStyle-vTableSymbol-BodyB-Column1-">
                                        <p class="Table">
                                            <img src="../../../../Resources/vImages/vExample.png" style="width: 48px;height: 45px;" title="Example" alt="Example" />
                                        </p>
                                    </td>
                                    <td class="TableStyle-vTableSymbol-BodyA-Column2-">
                                        <p class="TableSymbolHead">Example</p>
                                        <p class="TableSourceCode">struct Point {&#160;&#160;&#160;<span class="CodeComment">// note: default _align(8)</span><br></br>byte x;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<span class="CodeComment">// offset 0, size 1</span><br></br>byte y;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<span class="CodeComment">// alignment 1, offset 1, size 1, padding before: 0</span><br></br>};&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<span class="CodeComment">// size 2, alignment (of the struct) 1</span></p>
                                        <p class="TableSourceCode">struct LongPoint {&#160;&#160;&#160;<span class="CodeComment">// note: default _align(8)</span><br />byte x;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<span class="CodeComment">// offset 0, size 1</span><br />qword y;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<span class="CodeComment">// alignment 8, offset 8, size 8, padding before: 7</span><br />};&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<span class="CodeComment">// size 16, alignment (of the struct) 8</span></p>
                                        <p class="TableSourceCode">_align(2) struct Point2 {<br />byte x;&#160;&#160;&#160;&#160;<span class="CodeComment">// offset 0, size 1, (alignment 1)</span><br />qword y;&#160;&#160;&#160;<span class="CodeComment">// alignment 2, offset 2, size 8, padding before: 1</span><br />};&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<span class="CodeComment">// size 10, alignment (of the struct) 2</span></p>
                                        <p class="TableSourceCode">struct Points {&#160;&#160;&#160;<span class="CodeComment">// note: _align(8) per default</span><br />struct Point p1;&#160;&#160;<span class="CodeComment">// offset 0, size 2, (alignment 1)</span><br />byte x;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<span class="CodeComment">// alignment 1, offset 2, size 1, padding before: 0</span><br />struct Point2 p2;&#160;<span class="CodeComment">// alignment 2, offset 4, size 10, padding before: 1</span><br />};&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<span class="CodeComment">// size 14, alignment (of the struct) 2</span></p>
                                    </td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                </div>
                <h2 class="SectionSub">Information about structures</h2>
                <p>The following functions return information about size and alignment of the structure as well as the offset of the element (member):</p>
                <div>
                    <table style="width: 100%;mc-table-style: url('../../../../Resources/Stylesheets/vTable.css');" class="TableStyle_vTable" cellspacing="0">
                        <col style="width: 268px;" />
                        <col />
                        <thead>
                            <tr>
                                <th class="TableStyle_vTable_Head_0_0_RowSep_ColSep">
                                    <p class="TableHead">Function</p>
                                </th>
                                <th class="TableStyle_vTable_Head_0_0_RowSep_ColEnd">
                                    <p class="TableHead">Description</p>
                                </th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">__size_of(aligned-type)</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd">
                                    <p class="Table">Returns the size of a structure</p>
                                </td>
                            </tr>
                            <tr>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">__alignment_of(aligned-type)</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd">
                                    <p class="Table">Returns the alignment of a structure.</p>
                                </td>
                            </tr>
                            <tr>
                                <td class="TableStyle_vTable_Body_0_0_RowEnd_ColSep">
                                    <p class="Table">__offset_of(struct-type, member)</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowEnd_ColEnd">
                                    <p class="Table">Returns the offset of a member within a structure.</p>
                                </td>
                            </tr>
                        </tbody>
                    </table>
                </div>
                <div>
                    <table style="width: 100%;margin-left: 0;margin-right: auto;mc-table-style: url('../../../../Resources/Stylesheets/vTableSymbol.css');" class="TableStyle-vTableSymbol" cellspacing="0">
                        <col class="TableStyle-vTableSymbol-Column-Column1" />
                        <col class="TableStyle-vTableSymbol-Column-Column2" />
                        <tbody>
                            <tr>
                                <td class="TableStyle-vTableSymbol-BodyB-Column1-">
                                    <p class="Table">
                                        <img src="../../../../Resources/vImages/vExample.png" style="width: 48px;height: 45px;" title="Example" alt="Example" />
                                    </p>
                                </td>
                                <td class="TableStyle-vTableSymbol-BodyA-Column2-">
                                    <p class="TableSymbolHead">Example</p>
                                    <p class="TableSourceCode">struct Points {&#160;&#160;&#160;<span class="CodeComment">// note: _align(8) per default</span><br></br>Point p1;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<span class="CodeComment">// offset 0, size 2, (alignment 1)</span><br></br>byte x;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<span class="CodeComment">// alignment 1, offset 2, size 1, padding before: 0</span><br></br>Point2 p2;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<span class="CodeComment">// alignment 2, offset 4, size 10, padding before: 1</span><br></br>};&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<span class="CodeComment">// size 14, alignment (of the struct) 2</span></p>
                                    <p class="TableSourceCode">__size_of(struct Points)&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<span class="CodeComment">// returns 14</span><br />__alignment_of(struct Points)&#160;&#160;&#160;&#160;<span class="CodeComment">// returns 2</span><br />__offset_of(struct Points, p1)&#160;&#160;&#160;<span class="CodeComment">// returns 0</span><br />__offset_of(struct Points, x)&#160;&#160;&#160;&#160;<span class="CodeComment">// returns 2</span><br />__offset_of(struct Points, p2)&#160;&#160;&#160;<span class="CodeComment">// returns 4</span></p>
                                </td>
                            </tr>
                        </tbody>
                    </table>
                </div>
                <p class="LinkList"><a href="DataTypesForVariables.htm" class="LinkList">Data types for Variables</a>&#160;&#160;â¢&#160;&#160;<a href="DataTypesForFunctionParameters.htm" class="LinkList">Data types for Function Parameters</a></p>
            </div>
        </div>
        <div class="Footer">
            <div class="FooterWhite">
                <table class="FooterWhite" style="border-collapse: collapse;margin-left: auto;margin-right: auto;">
                    <col style="width: 70px;" data-mc-conditions="vConditions.HTML5Link" />
                    <col style="width: 16px;" data-mc-conditions="vConditions.HTML5Link" />
                    <col />
                    <tbody>
                        <tr>
                            <td>
                                <div class="buttons popup-container clearfix topicToolbarProxy topicToolbarProxyFooter _Skins_HTML5TopicToolbar mc-component nocontent">
                                    <div class="button-group-container-left">
                                        <button class="button needs-pie expand-all-button" data-state1-class="expand-all-button" data-state2-class="collapse-all-button" data-state2-title="Collapse all" title="Expand all" data-state1-title="Expand all">
                                            <div>
                                                <div role="img" class="button-icon-wrapper" aria-label="Expand all">
                                                    <div class="button-icon"> </div>
                                                </div>
                                            </div>
                                        </button>
                                        <button class="button needs-pie remove-highlight-button" title="Remove Highlights">
                                            <div>
                                                <div role="img" class="button-icon-wrapper">
                                                    <div class="button-icon"> </div>
                                                </div>
                                            </div>
                                        </button>
                                    </div>
                                </div>
                            </td>
                            <td>
                                <p class="vec_BuildInfo"><a href="../../HowToUseOnlineHelp.htm" title="Tips for using the help" alt="Tips for using the help"><img src="../../../../Resources/vImages/vBackstage/vHelpInfo.png" /></a>
                                </p>
                            </td>
                            <td>
                                <p class="vec_BuildInfo" style="text-align: right;"><span class="mc-variable Vector.BuildTime variable">2023-09-26T19:49:32</span>
                                </p>
                            </td>
                        </tr>
                    </tbody>
                </table>
            </div>
            <table style="width: 100%;border-collapse: separate;border-spacing: 3px 0px;margin-left: auto;margin-right: auto;caption-side: top;">
                <col />
                <col />
                <col />
                <col data-mc-conditions="vConditions.HTML5Link" />
                <tbody>
                    <tr>
                        <td style="background-color: #b70032;padding-left: 5pt;padding-right: 5pt;padding-top: 5pt;padding-bottom: 5pt;">
                            <p class="vec_Footer">Â©&#160;Vector Informatik GmbH</p>
                        </td>
                        <td style="background-color: #b70032;padding-left: 5pt;padding-right: 5pt;padding-top: 5pt;padding-bottom: 5pt;text-align: right;">
                            <p class="vec_FooterBold">
                                <MadCap:conditionalText data-mc-conditions="vConditions.vTESTstudioExcluded,vConditions.TestDataEditorExcluded">CANoe</MadCap:conditionalText> Version <MadCap:conditionalText data-mc-conditions="vConditions.vTESTstudioExcluded">17 SP3</MadCap:conditionalText></p>
                        </td>
                        <td style="background-color: #b70032;padding-left: 5pt;padding-right: 5pt;padding-top: 5pt;padding-bottom: 0pt;text-align: right;">
                            <p class="vec_Footer"><a href="../../ContactCopyrightLicense.htm" class="vec_Footer MCXref xref xrefvec_Footer">Contact/Copyright/License</a>
                            </p>
                        </td>
                        <td style="background-color: #b70032;padding-left: 5pt;padding-right: 5pt;padding-top: 5pt;padding-bottom: 0pt;text-align: right;">
                            <p class="vec_Footer"><a href="https://www.vector.com/int/en/company/get-info/privacy-policy/" target="_blank" class="vec_Footer">Data Privacy Notice</a>
                            </p>
                        </td>
                    </tr>
                </tbody>
            </table>
        </div>
    </body>
</html>