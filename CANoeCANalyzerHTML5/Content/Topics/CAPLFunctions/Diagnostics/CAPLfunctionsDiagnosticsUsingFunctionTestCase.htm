<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en-us" xml:lang="en-us" data-mc-search-type="Stem" data-mc-help-system-file-name="CANoeCANalyzer.xml" data-mc-path-to-help-system="../../../../" data-mc-conditions="vConditions.CANoeOnly" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic" data-mc-preload-images="false" data-mc-in-preview-mode="false">
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta charset="utf-8" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
        <meta name="msapplication-config" content="../../../../Skins/Favicons/browserconfig.xml" />
        <link rel="apple-touch-icon" sizes="180x180" href="../../../../Skins/Favicons/apple-touch-icon.png" />
        <link rel="shortcut icon" href="../../../../Skins/Favicons/favicon-32x32.png" />
        <link rel="icon" sizes="96x96" href="../../../../Skins/Favicons/favicon-96x96.png" />
        <link rel="icon" sizes="32x32" href="../../../../Skins/Favicons/favicon-32x32.png" />
        <link rel="icon" sizes="16x16" href="../../../../Skins/Favicons/favicon-16x16.png" /><title>Diagnostics: Using Diagnostic Functions in Test Cases</title>
        <link href="../../../../Skins/Default/Stylesheets/Slideshow.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../Skins/Default/Stylesheets/Components/Styles.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../Skins/Default/Stylesheets/Components/Tablet.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../Skins/Default/Stylesheets/Components/Mobile.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../Skins/Default/Stylesheets/Components/Print.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../Resources/Stylesheets/vTableMasterPageHeader.css" rel="stylesheet" data-mc-stylesheet-type="table" />
        <link href="../../../Resources/Stylesheets/vStylesheet.css" rel="stylesheet" type="text/css" />
        <style>/*&lt;meta /&gt;*/

.button.expand-all-button
{
	-pie-background: linear-gradient(#ffffff, #ffffff);
}

.button.remove-highlight-button
{
	-pie-background: linear-gradient(#ffffff, #ffffff);
}

.button.collapse-all-button
{
	-pie-background: linear-gradient(#ffffff, #ffffff);
}

.needs-pie
{
	behavior: url('../../../../Resources/Scripts/PIE-no-motw.htc');
}

</style>
        <link href="../../../Resources/Stylesheets/vTableSymbol.css" rel="stylesheet" data-mc-stylesheet-type="table" />
        <link rel="apple-touch-icon" sizes="180x180" href="../../../../Skins/Favicons/apple-touch-icon.png" />
        <link rel="shortcut icon" href="../../../../Skins/Favicons/favicon-32x32.png" />
        <link rel="icon" sizes="96x96" href="../../../../Skins/Favicons/favicon-96x96.png" />
        <link rel="icon" sizes="32x32" href="../../../../Skins/Favicons/favicon-32x32.png" />
        <link rel="icon" sizes="16x16" href="../../../../Skins/Favicons/favicon-16x16.png" />
        <script src="../../../../Resources/Scripts/jquery.min.js" type="text/javascript">
        </script>
        <script src="../../../../Resources/Scripts/purify.min.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/require.min.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/require.config.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/foundation.min.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/plugins.min.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapGlobal.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapDom.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapUtilities.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapXhr.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapTextEffects.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapSlideshow.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapMessageBus.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapMessageBus.CrossFrame.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapDefault.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapMediaQueries.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapAccessibility.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapHelpSystem.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapAliasFile.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapTopicFeedback.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapFeedbackHelper.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapSkinHelper.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapToc.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapToc.Breadcrumbs.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapToc.MiniToc.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapToc.SideMenu.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapIndex.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapGlossary.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapParser.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapSearch.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapNavigateTopics.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapLms.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapELearning.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapTopic.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapFeedback.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapMicroContentComponent.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapSearchHelper.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapTopicElements.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapTriPane.js" type="text/javascript" defer="defer">
        </script>
        <script type="text/jscript" src="../../../Resources/vScripts/SyntaxHighlighting.js">
        </script>
        <script type="text/jscript" src="../../../Resources/vScripts/TabSwitch.js">
        </script>
        <script type="text/javascript" src="../../../Resources/vScripts/Vector.js">
        </script>
    </head>
    <body>
        <p class="MCWebHelpFramesetLink MCWebHelpFramesetLinkTop"><a href="../../../../CANoeCANalyzer.htm#Topics/CAPLFunctions/Diagnostics/CAPLfunctionsDiagnosticsUsingFunctionTestCase.htm">Open topic with navigation</a>
        </p>
        <div class="Body">
            <div role="main" id="mc-main-content">
                <p class="StructurePath"><a href="../CAPLfunctions.htm" class="StructurePath MCXref xref xrefStructurePath">CAPL Functions</a> » <a href="CAPLfunctionsDiagnosticsOverview.htm" class="StructurePath">Diagnostics</a> » Using Diagnostic Functions in Test Cases</p>
                <h1><a name="aanchor12449"></a>
                    <MadCap:concept term="CAPLDiagnostics" /><span class="mc-variable System.Title variable">Diagnostics: Using Diagnostic Functions in Test Cases</span>
                </h1>
                <p class="MenuPath">&#160;</p>
                <p class="AutoSearchFilterConcepts"><a name="aanchor12450"></a>
                    <MadCap:concept term="SFCAPLFunctions" />
                </p>
                <div>
                    <table style="width: 100%;mc-table-style: url('../../../Resources/Stylesheets/vTableSymbol.css');" class="TableStyle-vTableSymbol" cellspacing="0">
                        <col class="TableStyle-vTableSymbol-Column-Column1" style="width: 62px;" />
                        <col class="TableStyle-vTableSymbol-Column-Column2" />
                        <tbody>
                            <tr>
                                <td class="TableStyle-vTableSymbol-BodyB-Column1-">
                                    <p class="Table">
                                        <img src="../../../Resources/vImages/vInfo.png" style="width: 48px;height: 45px;" title="Note" alt="Note" />
                                    </p>
                                </td>
                                <td class="TableStyle-vTableSymbol-BodyA-Column2-">
                                    <p class="TableSymbolHead">Note</p>
                                    <p>Waiting for diagnostic events is only possible in test modules! Conventional CAPL nodes continue to operate, but only by the event-driven principle.</p>
                                </td>
                            </tr>
                        </tbody>
                    </table>
                </div>
                <p>After basic configuration of a diagnostic test module has been completed (the Target ECU can be selected in the MainTest function, for example), 
 waiting for diagnostic events may be executed within the test module.</p>
                <p>After a request has been sent the following phases are run through:</p>
                <ol>
                    <li value="1">The request is sent to the ECU. Execution of the TestCase can be synchronized to the entire sending of the request using the function <a href="../Test/Functions/CAPLfunctionTestWaitForDiagRequestSent.htm"><br />testWaitForDiagRequestSent( diagRequest request, dword timeout)</a>;</li>
                    <li value="2">The ECU begins to send a response to the tester, i.e. a "FirstFrame" (ISO TP) announces the arrival of the Response 
 Primitive. Waiting for this event is executed using the function<a href="../Test/Functions/CAPLfunctionTestWaitForDiagResponseStart.htm"><br />testWaitForDiagResponseStart(diagRequest request, dword timeout)</a>;<a href="../Test/Functions/CAPLfunctionTestWaitForDiagResponseStart.htm"><br />testWaitForDiagResponseStart( dword timeout)</a><br />This function is also called if the entire response has arrived at once, i.e. a "SingleFrame" (ISO TP) contains the entire response.</li>
                    <li value="3">The entire response has arrived at the tester, i.e. transmission of the entire response primitive has been completed. The function <a href="../Test/Functions/CAPLfunctionTestWaitForDiagResponse.htm"><br />testWaitForDiagResponse( diagRequest request, dword timeout)</a>;<a href="../Test/Functions/CAPLfunctionTestWaitForDiagResponse.htm"><br />testWaitForDiagResponse( dword timeout)</a>;<br />returns.</li>
                </ol>
                <div class="Indent">
                    <table style="width: 100%;mc-table-style: url('../../../Resources/Stylesheets/vTableSymbol.css');" class="TableStyle-vTableSymbol" cellspacing="0">
                        <col class="TableStyle-vTableSymbol-Column-Column1" />
                        <col class="TableStyle-vTableSymbol-Column-Column2" />
                        <tbody>
                            <tr>
                                <td class="TableStyle-vTableSymbol-BodyB-Column1-">
                                    <p class="Table">
                                        <img src="../../../Resources/vImages/vInfo.png" style="width: 48px;height: 45px;" title="Note" alt="Note" />
                                    </p>
                                </td>
                                <td class="TableStyle-vTableSymbol-BodyA-Column2-">
                                    <p class="TableSymbolHead">Note</p>
                                    <p>CANoe assumes the automatic handling of "Response Pending" (negative response with error code 0x78) responses of the ECU, i.e. this function does not return until another negative or positive response arrives, or until the timeout expires.</p>
                                </td>
                            </tr>
                        </tbody>
                    </table>
                </div>
                <p>The return values of these functions conform to the following pattern:</p>
                <ul>
                    <li>&lt;0: An internal error occurred, e.g. faulty configuration of the Diagnostic Layer.</li>
                    <li>0: The timeout was reached, i.e. the specific event did <span class="bold">not</span> occur within the specified time.</li>
                    <li>1: The event occurred. This may also be a negative response while waiting for a response from the ECU!</li>
                </ul>
                <p>To evaluate the ECU’s response the request can be used to access the last received response:</p>
                <ul>
                    <li>It is possible to determine whether a positive response was received, or else which negative response was received. The function <a href="Functions/CAPLfunctionDiagGetResponseCode.htm"><br />long diagGetLastResponseCode( diagRequest req)</a>;<a href="Functions/CAPLfunctionDiagGetResponseCode.htm"><br />long diagGetLastResponseCode()</a>;<br />returns the error code of the last response received (for the specified 
 request), whereby -1 stands for a positive response ("No error code").</li>
                    <li>The parameters of the response can be accessed indirectly via the request object; i.e. no additional response object is needed. The following functions are available for this purpose; their functionality is analogous to those access functions that do not have "Resp" in their names:<a href="Functions/CAPLfunctionDiagGetRespParameter.htm"><br />long diagGetRespParameter( diagRequest req, char parameterName[], double output[])</a>;<br /><a href="Functions/CAPLfunctionDiagGetRespParameter.htm#BMUseCase3">double diagGetRespParameter( diagRequest req, char parameterName[])</a>;<a href="Functions/CAPLfunctionDiagGetRespParameter.htm#BMUseCase2"><br />long diagGetRespParameter( diagRequest req, char parameterName[], byte buffer[], dword bufferLen)</a>;<a href="Functions/CAPLfunctionDiagGetRespParameterRaw.htm"><br />long diagGetRespParameterRaw( diagRequest req, char parameterName[], byte buffer[], dword bufferLen)</a>;<a href="Functions/CAPLfunctionDiagGetComplexRespParameter.htm"><br />long diagGetComplexRespParameter( diagRequest req, char parameterName[], dword iteration, char subParameter[], double output[])</a>;<a href="Functions/CAPLfunctionDiagGetComplexRespParameter.htm#BMUseCase3"><br />double diagGetComplexRespParameter( diagRequest req, char parameterName[], dword iteration, char subParameter[])</a>;<a href="Functions/CAPLfunctionDiagGetComplexRespParameter.htm#BMUseCase2"><br />long diagGetComplexRespParameter( diagRequest req, char parameterName[], dword iteration, char subParameter[], byte buffer[], dword bufferLen)</a>;<a href="Functions/CAPLfunctionDiagGetComplexRespParameterRaw.htm"><br />long diagGetComplexRespParameterRaw( diagRequest req, char parameterName[], dword iteration, char subParameter[], byte buffer[], dword bufferLen)</a>;<br />These functions return -98 ("Object not found") if no response 
 has been received for the request yet (since the last transmission).</li>
                </ul>
                <p>Finally, there are yet other functions that simplify the development of test cases for diagnostics:</p>
                <ul>
                    <li>It is possible to write a diagnostic object to the test report. This involves calling the function:<a href="../Test/Functions/CAPLfunctionTestReportWriteDiagObjectTestReportWriteDiagResponse.htm"><br />testReportWriteDiagObject( diagRequest req)</a>;<a href="../Test/Functions/CAPLfunctionTestReportWriteDiagObjectTestReportWriteDiagResponse.htm"><br />testReportWriteDiagObject( diagResponse resp)</a>;<a href="../Test/Functions/CAPLfunctionTestReportWriteDiagObjectTestReportWriteDiagResponse.htm"><br />testReportWriteDiagResponse( diagRequest req)</a>;<br />The object’s contents are written to the test report file if this was activated. The message then appears in the test report file in the form of a table.</li>
                    <li>The P2 timer that was defined in the Diagnostic 
 Description can be polled by the function:<a href="Functions/CAPLfunctionDiagGetP2Timeout.htm"><br />long diagGetP2Timeout()</a>;</li>
                    <li>Other communication parameters of the configured interface can be polled by the function:<a href="Functions/CAPLfunctionDiagGetCommParameter.htm"><br />long diagGetCommParameter( char paramName[])</a>;<br /><a href="Functions/CAPLfunctionDiagGetCommParameter.htm">long diagGetCommParameter( char paramName[], dword index, char buffer[], dword bufferLen)</a>;<br /><a href="Functions/CAPLfunctionDiagGetCommParameter.htm">long diagGetCommParameter( char ecuQualifier[], long isTester, char paramName[])</a>;<br /><a href="Functions/CAPLfunctionDiagGetCommParameter.htm">long diagGetCommParameter( char ecuQualifier[], long isTester, char paramName[] , dword index, char buffer[], dword bufferLen)</a>;<br />If no parameter is found with the specified qualifiers, then -98 ("Object 
 not found") is returned.</li>
                    <li>It is possible to copy the contents of the last received response (for a specific request) to a response object.<br /><span class="bold">Attention</span>:<br />This may result in a change to the "Type" of the object (its qualifier path) and the number of its parameters!<a href="Functions/CAPLfunctionDiagGetLastResponse.htm"><br />long diagGetLastResponse( diagRequest req, diagResponse respOut)</a>;<a href="Functions/CAPLfunctionDiagGetLastResponse.htm"><br />long diagGetLastResponse( diagResponse respOut)</a>;</li>
                </ul>
                <div>
                    <table style="width: 100%;mc-table-style: url('../../../Resources/Stylesheets/vTableSymbol.css');" class="TableStyle-vTableSymbol" cellspacing="0">
                        <col class="TableStyle-vTableSymbol-Column-Column1" />
                        <col class="TableStyle-vTableSymbol-Column-Column2" />
                        <tbody>
                            <tr>
                                <td class="TableStyle-vTableSymbol-BodyB-Column1-">
                                    <p class="Table">
                                        <img src="../../../Resources/vImages/vExample.png" style="width: 48px;height: 45px;" title="Example" alt="Example" />
                                    </p>
                                </td>
                                <td class="TableStyle-vTableSymbol-BodyA-Column2-">
                                    <p class="TableSymbolHead">Example Test Case</p>
                                    <p>The following test case shows the values of all possible states that may occur after a request is sent.</p>
                                    <p class="SourceCode">TestCase Test1()<br />{<br />&#160;&#160;&#160;// Send Request and react 
 to all possible cases.<br />&#160;&#160;&#160;diagRequest Door.EcuIdentification_Read 
 idReq;<br />&#160;&#160;&#160;diagSendRequest( idReq);<br />&#160;&#160;&#160;switch( TestWaitForDiagResponse( 
 idReq, 200))<br />&#160;&#160;&#160;{<br />&#160;&#160;&#160;case 0: // Timeout: The ECU did not respond within 200 ms.<br />&#160;&#160;&#160;&#160;&#160;&#160;write("No answer from ECU!");<br />&#160;&#160;&#160;&#160;&#160;&#160;TestStepFail("Read 
ID", "No answer from ECU!");<br />&#160;&#160;&#160;&#160;&#160;&#160;break;<br />&#160;&#160;&#160;case 1: // response received<br />&#160;&#160;&#160;&#160;&#160;&#160;TestReportWriteDiagResponse(idReq); // write response to report<br />&#160;&#160;&#160;&#160;&#160;&#160;if( diagGetLastResponseCode(idReq) == -1)<br />&#160;&#160;&#160;&#160;&#160;&#160;{<br />&#160;&#160;&#160;&#160;&#160;&#160;// A positive response 
 was received<br />&#160;&#160;&#160;&#160;&#160;&#160;write("ECU Diagnostics Identification: %d", (long)diagGetRespParameter(idReq,"Diagnostic_Identification"));<br />&#160;&#160;&#160;&#160;&#160;&#160;TestStepPass("Read ID", "Positiv response received!");<br />&#160;&#160;&#160;&#160;&#160;&#160;}<br />&#160;&#160;&#160;&#160;&#160;&#160;else // A negative response was received<br />&#160;&#160;&#160;&#160;&#160;&#160;{<br />&#160;&#160;&#160;&#160;&#160;&#160;write( "ECU Diagnostics 
 Identification failed: 0x%x", diagGetLastResponseCode( idReq));<br />&#160;&#160;&#160;&#160;&#160;&#160;TestStepFail("Read ID", "Negative response received");<br />&#160;&#160;&#160;&#160;&#160;&#160;}<br />&#160;&#160;&#160;&#160;&#160;&#160;break;<br />&#160;&#160;&#160;&#160;&#160;&#160;default: // internal or setup error<br />&#160;&#160;&#160;&#160;&#160;&#160;TestStepFail("Read ID", "Error in TestCase! Verdict unreliable.");<br />&#160;&#160;&#160;&#160;&#160;&#160;}<br />}</p>
                                </td>
                            </tr>
                        </tbody>
                    </table>
                </div>
                <p class="LinkList">&#160;</p>
            </div>
        </div>
        <div class="Footer">
            <div class="FooterWhite">
                <table class="FooterWhite" style="border-collapse: collapse;margin-left: auto;margin-right: auto;">
                    <col style="width: 70px;" data-mc-conditions="vConditions.HTML5Link" />
                    <col style="width: 16px;" data-mc-conditions="vConditions.HTML5Link" />
                    <col data-mc-conditions="" />
                    <col />
                    <tbody>
                        <tr>
                            <td>
                                <div class="buttons popup-container clearfix topicToolbarProxy topicToolbarProxyFooter _Skins_HTML5TopicToolbar mc-component nocontent">
                                    <div class="button-group-container-left">
                                        <button class="button needs-pie expand-all-button" data-state1-class="expand-all-button" data-state2-class="collapse-all-button" data-state2-title="Collapse all" title="Expand all" data-state1-title="Expand all">
                                            <div>
                                                <div role="img" class="button-icon-wrapper" aria-label="Expand all">
                                                    <div class="button-icon"> </div>
                                                </div>
                                            </div>
                                        </button>
                                        <button class="button needs-pie remove-highlight-button" title="Remove Highlights">
                                            <div>
                                                <div role="img" class="button-icon-wrapper">
                                                    <div class="button-icon"> </div>
                                                </div>
                                            </div>
                                        </button>
                                    </div>
                                </div>
                            </td>
                            <td>
                                <p class="vec_BuildInfo"><a href="../../Shared/HowToUseOnlineHelp.htm" title="Tips for using the help" alt="Tips for using the help"><img src="../../../Resources/vImages/vBackstage/vHelpInfo.png" /></a>
                                </p>
                            </td>
                            <td>
                                <p class="vec_BuildInfo">•&#160;&#160;Technical&#160;References are only&#160;available&#160;in&#160;English</p>
                            </td>
                            <td>
                                <p class="vec_BuildInfo" style="text-align: right;"><span class="mc-variable Vector.BuildTime variable">2023-09-26T19:49:32</span>
                                </p>
                            </td>
                        </tr>
                    </tbody>
                </table>
            </div>
            <table style="width: 100%;border-collapse: separate;border-spacing: 3px 0px;margin-left: auto;margin-right: auto;caption-side: top;">
                <col />
                <col />
                <col />
                <col data-mc-conditions="vConditions.HTML5Link" />
                <tbody>
                    <tr>
                        <td style="background-color: #b70032;padding-left: 5pt;padding-right: 5pt;padding-top: 5pt;padding-bottom: 5pt;">
                            <p class="vec_Footer">©&#160;Vector Informatik GmbH</p>
                        </td>
                        <td style="background-color: #b70032;padding-left: 5pt;padding-right: 5pt;padding-top: 5pt;padding-bottom: 5pt;text-align: right;">
                            <p class="vec_FooterBold">
                                <MadCap:conditionalText data-mc-conditions="vConditions.vTESTstudioExcluded,vConditions.TestDataEditorExcluded">CANoe</MadCap:conditionalText> Version <MadCap:conditionalText data-mc-conditions="vConditions.vTESTstudioExcluded">17 SP3</MadCap:conditionalText></p>
                        </td>
                        <td style="background-color: #b70032;padding-left: 5pt;padding-right: 5pt;padding-top: 5pt;padding-bottom: 0pt;text-align: right;">
                            <p class="vec_Footer"><a href="../../Shared/ContactCopyrightLicense.htm" class="vec_Footer MCXref xref xrefvec_Footer">Contact/Copyright/License</a>
                            </p>
                        </td>
                        <td style="background-color: #b70032;padding-left: 5pt;padding-right: 5pt;padding-top: 5pt;padding-bottom: 0pt;text-align: right;">
                            <p class="vec_Footer"><a href="https://www.vector.com/int/en/company/get-info/privacy-policy/" target="_blank" class="vec_Footer">Data Privacy Notice</a>
                            </p>
                        </td>
                    </tr>
                </tbody>
            </table>
        </div>
    </body>
</html>