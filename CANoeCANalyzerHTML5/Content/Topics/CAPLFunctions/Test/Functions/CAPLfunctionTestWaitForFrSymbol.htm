<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en-us" xml:lang="en-us" data-mc-search-type="Stem" data-mc-help-system-file-name="CANoeCANalyzer.xml" data-mc-path-to-help-system="../../../../../" data-mc-conditions="vConditions.CANoe4SWExcluded" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic" data-mc-preload-images="false" data-mc-in-preview-mode="false">
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta charset="utf-8" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
        <meta name="msapplication-config" content="../../../../../Skins/Favicons/browserconfig.xml" />
        <link rel="apple-touch-icon" sizes="180x180" href="../../../../../Skins/Favicons/apple-touch-icon.png" />
        <link rel="shortcut icon" href="../../../../../Skins/Favicons/favicon-32x32.png" />
        <link rel="icon" sizes="96x96" href="../../../../../Skins/Favicons/favicon-96x96.png" />
        <link rel="icon" sizes="32x32" href="../../../../../Skins/Favicons/favicon-32x32.png" />
        <link rel="icon" sizes="16x16" href="../../../../../Skins/Favicons/favicon-16x16.png" /><title>TestWaitForFrSymbol</title>
        <link href="../../../../../Skins/Default/Stylesheets/Slideshow.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../../Skins/Default/Stylesheets/Components/Styles.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../../Skins/Default/Stylesheets/Components/Tablet.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../../Skins/Default/Stylesheets/Components/Mobile.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../../Skins/Default/Stylesheets/Components/Print.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../Resources/Stylesheets/vTableMasterPageHeader.css" rel="stylesheet" data-mc-stylesheet-type="table" />
        <link href="../../../../Resources/Stylesheets/vStylesheet.css" rel="stylesheet" type="text/css" />
        <style>/*&lt;meta /&gt;*/

.button.expand-all-button
{
	-pie-background: linear-gradient(#ffffff, #ffffff);
}

.button.remove-highlight-button
{
	-pie-background: linear-gradient(#ffffff, #ffffff);
}

.button.collapse-all-button
{
	-pie-background: linear-gradient(#ffffff, #ffffff);
}

.needs-pie
{
	behavior: url('../../../../../Resources/Scripts/PIE-no-motw.htc');
}

</style>
        <link href="../../../../Resources/Stylesheets/vTableLight.css" rel="stylesheet" data-mc-stylesheet-type="table" />
        <link href="../../../../Resources/Stylesheets/vTableSymbol.css" rel="stylesheet" data-mc-stylesheet-type="table" />
        <link rel="apple-touch-icon" sizes="180x180" href="../../../../../Skins/Favicons/apple-touch-icon.png" />
        <link rel="shortcut icon" href="../../../../../Skins/Favicons/favicon-32x32.png" />
        <link rel="icon" sizes="96x96" href="../../../../../Skins/Favicons/favicon-96x96.png" />
        <link rel="icon" sizes="32x32" href="../../../../../Skins/Favicons/favicon-32x32.png" />
        <link rel="icon" sizes="16x16" href="../../../../../Skins/Favicons/favicon-16x16.png" />
        <script src="../../../../../Resources/Scripts/jquery.min.js" type="text/javascript">
        </script>
        <script src="../../../../../Resources/Scripts/purify.min.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/require.min.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/require.config.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/foundation.min.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/plugins.min.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapGlobal.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapDom.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapUtilities.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapXhr.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapTextEffects.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapSlideshow.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapMessageBus.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapMessageBus.CrossFrame.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapDefault.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapMediaQueries.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapAccessibility.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapHelpSystem.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapAliasFile.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapTopicFeedback.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapFeedbackHelper.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapSkinHelper.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapToc.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapToc.Breadcrumbs.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapToc.MiniToc.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapToc.SideMenu.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapIndex.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapGlossary.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapParser.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapSearch.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapNavigateTopics.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapLms.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapELearning.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapTopic.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapFeedback.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapMicroContentComponent.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapSearchHelper.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapTopicElements.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapTriPane.js" type="text/javascript" defer="defer">
        </script>
        <script type="text/jscript" src="../../../../Resources/vScripts/SyntaxHighlighting.js">
        </script>
        <script type="text/jscript" src="../../../../Resources/vScripts/TabSwitch.js">
        </script>
        <script type="text/javascript" src="../../../../Resources/vScripts/Vector.js">
        </script>
    </head>
    <body>
        <p class="MCWebHelpFramesetLink MCWebHelpFramesetLinkTop"><a href="../../../../../CANoeCANalyzer.htm#Topics/CAPLFunctions/Test/Functions/CAPLfunctionTestWaitForFrSymbol.htm">Open topic with navigation</a>
        </p>
        <div class="Body">
            <div role="main" id="mc-main-content">
                <p class="StructurePath"><a href="../../CAPLfunctions.htm" class="StructurePath MCXref xref xrefStructurePath">CAPL Functions</a> » <a href="../CAPLfunctionsTFSOverview.htm" class="StructurePath">Test Feature Set</a> » <span class="mc-variable System.Title variable">TestWaitForFrSymbol</span></p>
                <h1><a name="aanchor10720"></a>
                    <MadCap:concept term="CAPLTFS" /><a name="kanchor8639"></a><span class="mc-variable System.Title variable">TestWaitForFrSymbol</span>
                </h1>
                <p class="MenuPath">&#160;</p>
                <p class="AutoSearchFilterConcepts"><a name="aanchor10721"></a>
                    <MadCap:concept term="SFCAPLFunctions" />
                </p>
                <div data-mc-target-name="DIVCAPLFunctionSyntax">
                    <h2 class="CommandPage">Function Syntax</h2>
                    <p class="Syntax">long TestWaitForFrSymbol (dword aTimeout);</p>
                    <p class="Syntax">long TestWaitForFrSymbol (dword aSymbolType, dword aChannelMask, dword aTimeout);</p>
                </div>
                <div data-mc-target-name="DIVCAPLDescription">
                    <h2 class="CommandPage">Description</h2>
                    <p>Waits for the occurrence of a FlexRay symbol on the bus. Should the symbol not occur before the expiration of the time <span class="bold">aTimeout</span>, the wait condition is resolved nevertheless.</p>
                    <div>
                        <table style="width: 100%;mc-table-style: url('../../../../Resources/Stylesheets/vTableSymbol.css');" class="TableStyle-vTableSymbol" cellspacing="0">
                            <col class="TableStyle-vTableSymbol-Column-Column1" />
                            <col class="TableStyle-vTableSymbol-Column-Column2" />
                            <tbody>
                                <tr>
                                    <td class="TableStyle-vTableSymbol-BodyB-Column1-">
                                        <p class="Table">
                                            <img src="../../../../Resources/vImages/vInfo.png" style="width: 48px;height: 45px;" title="Note" alt="Note" />
                                        </p>
                                    </td>
                                    <td class="TableStyle-vTableSymbol-BodyA-Column2-">
                                        <p class="TableSymbolHead">Note</p>
                                        <p class="Table">Consider to set always the appropriate bus context in a multibus environment before the function is called.</p>
                                        <p class="Table">Further information on site <a href="../../../Shared/Test/TestMultiBusEnvironment.htm">MultiBus Environment</a>.</p>
                                    </td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                </div>
                <div data-mc-target-name="DIVCAPLParameters">
                    <h2 class="CommandPage">Parameters</h2>
                    <table style="margin-left: 0;margin-right: auto;width: 100%;mc-table-style: url('../../../../Resources/Stylesheets/vTableLight.css');" class="TableStyle-vTableLight" cellspacing="0">
                        <col style="width: 80px;" class="TableStyle-vTableLight-Column-Column1" />
                        <col class="TableStyle-vTableLight-Column-Column1" />
                        <tbody>
                            <tr class="TableStyle-vTableLight-Body-Body1">
                                <td id="name" class="TableStyle-vTableLight-BodyE-Column1-Body1">
                                    <p class="TableBold">aTimeout</p>
                                </td>
                                <td id="descr" class="TableStyle-vTableLight-BodyD-Column1-Body1">
                                    <p class="Table">Maximum time that should be waited [ms]</p>
                                    <p class="Table">(Transmission of 0: no timeout controlling)</p>
                                </td>
                            </tr>
                            <tr class="TableStyle-vTableLight-Body-Body1">
                                <td id="name" class="TableStyle-vTableLight-BodyE-Column1-Body1">
                                    <p class="TableBold">aSymbolType</p>
                                </td>
                                <td id="descr" class="TableStyle-vTableLight-BodyD-Column1-Body1">
                                    <p class="Table">Identifies the type of symbol the function will wait for.</p>
                                    <table style="width: 100%;caption-side: top;mc-table-style: url('../../../../Resources/Stylesheets/vTableLight.css');" class="TableStyle-vTableLight" cellspacing="0">
                                        <col style="width: 49px;" class="TableStyle-vTableLight-Column-Column1" />
                                        <col class="TableStyle-vTableLight-Column-Column1" />
                                        <tbody>
                                            <tr class="TableStyle-vTableLight-Body-Body1">
                                                <td class="TableStyle-vTableLight-BodyE-Column1-Body1">
                                                    <p class="Table">0</p>
                                                </td>
                                                <td class="TableStyle-vTableLight-BodyD-Column1-Body1">
                                                    <p class="Table">unknown</p>
                                                </td>
                                            </tr>
                                            <tr class="TableStyle-vTableLight-Body-Body1">
                                                <td class="TableStyle-vTableLight-BodyE-Column1-Body1">
                                                    <p class="Table">1</p>
                                                </td>
                                                <td class="TableStyle-vTableLight-BodyD-Column1-Body1">
                                                    <p class="Table">CAS</p>
                                                </td>
                                            </tr>
                                            <tr class="TableStyle-vTableLight-Body-Body1">
                                                <td class="TableStyle-vTableLight-BodyE-Column1-Body1">
                                                    <p class="Table">2</p>
                                                </td>
                                                <td class="TableStyle-vTableLight-BodyD-Column1-Body1">
                                                    <p class="Table">MTS</p>
                                                </td>
                                            </tr>
                                            <tr class="TableStyle-vTableLight-Body-Body1">
                                                <td class="TableStyle-vTableLight-BodyB-Column1-Body1">
                                                    <p class="Table">3</p>
                                                </td>
                                                <td class="TableStyle-vTableLight-BodyA-Column1-Body1">
                                                    <p class="Table">Wakeup</p>
                                                </td>
                                            </tr>
                                        </tbody>
                                    </table>
                                </td>
                            </tr>
                            <tr class="TableStyle-vTableLight-Body-Body1">
                                <td id="name" class="TableStyle-vTableLight-BodyB-Column1-Body1">
                                    <p class="TableBold">aChannelMask</p>
                                </td>
                                <td id="descr" class="TableStyle-vTableLight-BodyA-Column1-Body1">
                                    <p class="Table">Identifies the FlexRay channel of the communication controller. A value of 1 will wait for the symbol on channel A, 2 will wait for it on channel B and 3 on any channel (A/B).</p>
                                </td>
                            </tr>
                        </tbody>
                    </table>
                </div>
                <div data-mc-target-name="DIVCAPLReturnValues">
                    <h2 class="CommandPage">Return&#160;Values</h2>
                    <table style="margin-left: 0;margin-right: auto;width: 100%;mc-table-style: url('../../../../Resources/Stylesheets/vTableLight.css');" class="TableStyle-vTableLight" cellspacing="0">
                        <col style="width: 80px;" class="TableStyle-vTableLight-Column-Column1" />
                        <col class="TableStyle-vTableLight-Column-Column1" />
                        <tbody>
                            <tr class="TableStyle-vTableLight-Body-Body1">
                                <td id="name" class="TableStyle-vTableLight-BodyE-Column1-Body1">
                                    <p class="TableBold">-2</p>
                                </td>
                                <td id="descr" class="TableStyle-vTableLight-BodyD-Column1-Body1">
                                    <p class="Table">Resume due to constraint violation</p>
                                </td>
                            </tr>
                            <tr class="TableStyle-vTableLight-Body-Body1">
                                <td id="name" class="TableStyle-vTableLight-BodyE-Column1-Body1">
                                    <p class="TableBold">-1</p>
                                </td>
                                <td id="descr" class="TableStyle-vTableLight-BodyD-Column1-Body1">
                                    <p class="Table">General error, for example, functionality is not available</p>
                                </td>
                            </tr>
                            <tr class="TableStyle-vTableLight-Body-Body1">
                                <td id="name" class="TableStyle-vTableLight-BodyE-Column1-Body1">
                                    <p class="TableBold">0</p>
                                </td>
                                <td id="descr" class="TableStyle-vTableLight-BodyD-Column1-Body1">
                                    <p class="Table">Resume due to timeout</p>
                                </td>
                            </tr>
                            <tr class="TableStyle-vTableLight-Body-Body1">
                                <td id="name" class="TableStyle-vTableLight-BodyB-Column1-Body1">
                                    <p class="TableBold">1</p>
                                </td>
                                <td id="descr" class="TableStyle-vTableLight-BodyA-Column1-Body1">
                                    <p class="Table">Resume due to event occurred</p>
                                </td>
                            </tr>
                        </tbody>
                    </table>
                </div>
                <div data-mc-target-name="DIVCAPLExample">
                    <h2 class="CommandPage">Example</h2>
                    <div>
                        <table style="width: 100%;margin-left: 0;margin-right: auto;mc-table-style: url('../../../../Resources/Stylesheets/vTableSymbol.css');" class="TableStyle-vTableSymbol" cellspacing="0">
                            <col class="TableStyle-vTableSymbol-Column-Column1" />
                            <col class="TableStyle-vTableSymbol-Column-Column2" />
                            <tbody>
                                <tr>
                                    <td class="TableStyle-vTableSymbol-BodyB-Column1-">
                                        <p class="Table">
                                            <img src="../../../../Resources/vImages/vInfo.png" style="width: 48px;height: 45px;" title="Note" alt="Note" />
                                        </p>
                                    </td>
                                    <td class="TableStyle-vTableSymbol-BodyA-Column2-">
                                        <p class="TableSymbolHead">Note</p>
                                        <p class="Table">If you want to wait for the reception or transmission of a <span class="bold">wake-up pattern</span> you have to use <a href="CAPLfunctionTestWaitForFrPOCState.htm">TestWaitForFrPOCState</a>.</p>
                                    </td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                    <table style="width: 100%;margin-left: 0;margin-right: auto;mc-table-style: url('../../../../Resources/Stylesheets/vTableSymbol.css');" class="TableStyle-vTableSymbol" cellspacing="0">
                        <col class="TableStyle-vTableSymbol-Column-Column1" />
                        <col class="TableStyle-vTableSymbol-Column-Column2" />
                        <tbody>
                            <tr>
                                <td class="TableStyle-vTableSymbol-BodyB-Column1-">
                                    <p class="Table">
                                        <img src="../../../../Resources/vImages/vExample.png" style="width: 48px;height: 45px;" title="Example" alt="Example" />
                                    </p>
                                </td>
                                <td id="content" class="TableStyle-vTableSymbol-BodyA-Column2-">
                                    <p class="Table">The following test program waits for the occurrence of different POC state events and symbols on one FlexRay bus.</p>
                                    <p class="Table">&#160;</p>
                                    <p class="TableSourceCode">variables<br />{<br />&#160;&#160;char bus1[20] = "FlexRay_1";<br />&#160;&#160;char bus2[20] = "FlexRay_2";<br />&#160;&#160;msTimer actionTimer;<br />&#160;&#160;int  gAction = 0;<br />&#160;&#160;const int gActionDelay = 52;   // [ms]<br />&#160;&#160;const int gTimeout     = 300;  // [ms]<br />&#160;&#160;const int gExtTimeout  = 2700; // [ms] to be waited additionally after cluster wake-up<br />&#160;&#160;const int cPossibleWakeupDelay = 1500; // [ms] to be waited after possible cluster wake-up<br />&#160;&#160;const int cWakeupDelay = 1500; // [ms] to be waited after cluster wake-up<br />&#160;&#160;BYTE gSta1Id      = 5;  // slot ID for frame to send<br />&#160;&#160;BYTE gSta1Flags   = 16; // event-triggered<br />&#160;&#160;BYTE gSta1Dlc     = 4;  // bytes<br />&#160;&#160;BYTE gSta1Chan    = 3;  // send on channel A+B<br />&#160;&#160;BYTE gSta1Base    = 0;  // base cycle<br />&#160;&#160;BYTE gSta1Rep     = 1;  // cycle repetition<br />}<br /><br />testcase GoodCheckFlexRayWaitForSymbol_1 ()<br />{<br />&#160;&#160;long result;<br />&#160;&#160;FrSymbol frSymbolData;<br /><br />&#160;&#160;TestStepPass("Library: FrTFS_Wait_Symbol_POC.can", "Testcase: WaitForSymbol_Any");<br />&#160;&#160;InitBusContext();<br />&#160;&#160;_wakeupCluster(1);<br />&#160;&#160;TestStep("Wait","waiting to assure running cluster...");<br />&#160;&#160;TestWaitForTimeout(cPossibleWakeupDelay);<br />&#160;&#160;TestStep("Prepare","Defining 'FlexRay symbol to be sent' action and triggering timer...");<br />&#160;&#160;gAction = 1;<br />&#160;&#160;actionTimer.set(gActionDelay);<br />&#160;&#160;TestStep("Wait","Waiting for any FlexRay symbol...");<br />&#160;&#160;TestStepPass("Call TFS function", "TestWaitForFrSymbol(timeout=%d)", gTimeout+1000);<br /><br />&#160;&#160;// The real test to be checked:<br />&#160;&#160;result = TestWaitForFrSymbol(gTimeout+1000);<br />&#160;&#160;if (result == 0)<br />&#160;&#160;{<br />&#160;&#160;&#160;&#160;TestStepFail("Timeout Occurred");<br />&#160;&#160;}<br />&#160;&#160;else if (result == -1)<br />&#160;&#160;{<br />&#160;&#160;&#160;&#160;TestStepFail("General Error");<br />&#160;&#160;}<br />&#160;&#160;else if (result == -2)<br />&#160;&#160;{<br />&#160;&#160;&#160;&#160;TestStepFail("Constraint Violation");<br />&#160;&#160;}<br />&#160;&#160;else<br />&#160;&#160;{<br />&#160;&#160;&#160;&#160;TestStepPass("Any FlexRay symbol successfully received!");<br />&#160;&#160;&#160;&#160;TestStepPass("Call TFS function", "TestGetWaitFrSymbolData(frSymbolData)");<br />&#160;&#160;&#160;&#160;// Test for data extraction:<br />&#160;&#160;&#160;&#160;result = TestGetWaitFrSymbolData(frSymbolData);<br />&#160;&#160;&#160;&#160;if (0 != result)<br />&#160;&#160;&#160;&#160;{<br />&#160;&#160;&#160;&#160;&#160;&#160;TestStepFail("Data extraction", "result = %d, Data access could not be executed.", result);<br />&#160;&#160;&#160;&#160;}<br />&#160;&#160;&#160;&#160;else<br />&#160;&#160;&#160; {<br />&#160;&#160;&#160;&#160;&#160;&#160;TestStepPass("Data extraction", "Data extraction works fine. Symbol=%d", frSymbolData.FR_Symbol);<br />&#160;&#160;&#160;&#160;}<br />&#160;&#160;}<br />}<br /><br />testcase GoodCheckFlexRayWaitForPOC_1 ()<br />{<br />&#160;&#160;long result;<br />&#160;&#160;FrPOCState frPOCStateData;<br /><br />&#160;&#160;TestStepPass("Library: FrTFS_Wait_Symbol_POC.can", "Testcase: WaitForPOCState_Specific");<br />&#160;&#160;InitBusContext();<br />&#160;&#160;_wakeupCluster(1);<br />&#160;&#160;TestStep("Wait","waiting to assure running cluster...");<br />&#160;&#160;TestWaitForTimeout(cPossibleWakeupDelay);<br />&#160;&#160;TestStep("Prepare","Defining 'Cluster to sleep mode' action and triggering timer...");<br />&#160;&#160;gAction = 2;<br />&#160;&#160;actionTimer.set(gActionDelay);<br />&#160;&#160;TestStep("Wait","Waiting for POC state 'Halt (4)'...");<br />&#160;&#160;TestStepPass("Call TFS function", "TestWaitForFrPOCState(4, timeout=%d)", gTimeout);<br /><br />&#160;&#160;// The real test to be checked:<br />&#160;&#160;result = TestWaitForFrPOCState(4, gTimeout);<br />&#160;&#160;if (result == 0)<br />&#160;&#160;{<br />&#160;&#160;&#160;&#160;TestStepFail("Timeout Occurred");<br />&#160;&#160;}<br />&#160;&#160;else if (result == -1)<br />&#160;&#160;{<br />&#160;&#160;&#160;&#160;TestStepFail("General Error");<br />&#160;&#160;}<br />&#160;&#160;else if (result == -2)<br />&#160;&#160;{<br />&#160;&#160;&#160;&#160;TestStepFail("Constraint Violation");<br />&#160;&#160;}<br />&#160;&#160;else<br />&#160;&#160;{<br />&#160;&#160;&#160;&#160;TestStepPass("FlexRay Interface is offline (asynchronous)!");<br />&#160;&#160;&#160;&#160;TestStepPass("Call TFS function", "TestGetWaitFrPOCStateData(frPOCStateData)");<br />&#160;&#160;&#160;&#160;result = TestGetWaitFrPOCStateData(frPOCStateData);<br />&#160;&#160;&#160;&#160;if (0 != result)<br />&#160;&#160;&#160;&#160;{<br />&#160;&#160;&#160;&#160;&#160;&#160;TestStepFail("Data extraction", "result = %d, Data access could not be executed.", result);<br />&#160;&#160;&#160;&#160;}<br />&#160;&#160;&#160;&#160;else<br />&#160;&#160;&#160; {<br />&#160;&#160;&#160;&#160;&#160;&#160;TestStepPass("Data extraction", "Data extraction works fine. StateCode=%d", frPOCStateData.FR_POCState);<br />&#160;&#160;&#160;&#160;}<br />&#160;&#160;}<br />&#160;&#160;TestStep("Wait","Waiting to assure sleeping cluster to be ready for wakeup...");<br />&#160;&#160;TestWaitForTimeout(cWakeupDelay); // wait minimum time that cluster should sleep before wake-up<br />&#160;&#160;TestStep("Prepare","Defining 'Wakeup Cluster' action and triggering timer...");<br />&#160;&#160;gAction = 3;<br />&#160;&#160;actionTimer.set(gActionDelay);<br />&#160;&#160;TestStep("Wait","Waiting for POC state 'Normal Active (2)'...");<br />&#160;&#160;TestStepPass("Call TFS function", "TestWaitForFrPOCState(2, timeout=%d)", gTimeout+gExtTimeout);<br /><br />&#160;&#160;// The real test to be checked:<br />&#160;&#160;result = TestWaitForFrPOCState(2, gTimeout+gExtTimeout);<br />&#160;&#160;if (result == 0)<br />&#160;&#160;{<br />&#160;&#160;&#160;&#160;TestStepFail("Timeout Occurred");<br />&#160;&#160;}<br />&#160;&#160;else if (result == -1)<br />&#160;&#160;{<br />&#160;&#160;&#160;&#160;TestStepFail("General Error");<br />&#160;&#160;}<br />&#160;&#160;else if (result == -2)<br />&#160;&#160;{<br />&#160;&#160;&#160;&#160;TestStepFail("Constraint Violation");<br />&#160;&#160;}<br />&#160;&#160; else<br />&#160;&#160;{<br />&#160;&#160;&#160;&#160;TestStepPass("FlexRay Interface is online (synced)!");<br />&#160;&#160;&#160;&#160;TestStepPass("Call TFS function", "TestGetWaitFrPOCStateData(frPOCStateData)");<br />&#160;&#160;&#160;&#160;// Test for data extraction:<br />&#160;&#160;&#160;&#160;result = TestGetWaitFrPOCStateData(frPOCStateData);<br />&#160;&#160;&#160;&#160;if (0 != result)<br />&#160;&#160;&#160;&#160;{<br />&#160;&#160;&#160;&#160;&#160;&#160;TestStepFail("Data extraction", "result = %d, Data access could not be executed.", result);<br />&#160;&#160;&#160;&#160;}<br />&#160;&#160;&#160;&#160;else<br />&#160;&#160;&#160; {<br />&#160;&#160;&#160;&#160;&#160;&#160;TestStepPass("Data extraction", "Data extraction works fine. StateCode=%d", frPOCStateData.FR_POCState);<br />&#160;&#160;&#160;&#160;}<br />&#160;&#160;}<br />}<br /><br />testcase GoodCheckFlexRayWaitForWUS_1 ()<br />{<br />&#160;&#160;long result;<br />&#160;&#160;FrPOCState frPOCStateData;<br /><br />&#160;&#160;TestStepPass("Library: FrTFS_Wait_Symbol_POC.can", "Testcase: WaitForWakeupState_Any");<br />&#160;&#160;InitBusContext();<br />&#160;&#160;_wakeupCluster(1);<br />&#160;&#160;TestStep("Wait","waiting to assure running cluster...");<br />&#160;&#160;TestWaitForTimeout(cPossibleWakeupDelay);<br />&#160;&#160;TestStep("Prepare","Defining 'Cluster to sleep mode' action and triggering timer...");<br />&#160;&#160;gAction = 2;<br />&#160;&#160;actionTimer.set(gActionDelay);<br /><br />&#160;&#160;TestStep("Wait","Waiting for POC state 'Halt (4)'...");<br />&#160;&#160;result = TestWaitForFrPOCState(4, gTimeout);<br />&#160;&#160;if (result == 0)<br />&#160;&#160;{<br />&#160;&#160;&#160;&#160;TestStepFail("Timeout Occurred");<br />&#160;&#160;}<br />&#160;&#160;else if (result == -1)<br />&#160;&#160;{<br />&#160;&#160;&#160;&#160;TestStepFail("General Error");<br />&#160;&#160;}<br />&#160;&#160;else if (result == -2)<br />&#160;&#160;{<br />&#160;&#160;&#160;&#160;TestStepFail("Constraint Violation");<br />&#160;&#160;}<br />&#160;&#160;else<br />&#160;&#160;{<br />&#160;&#160;&#160;&#160;TestStepPass("FlexRay Interface is offline (asynchronous)!");<br />&#160;&#160;}<br /><br />&#160;&#160;TestStep("Wait","Waiting to assure sleeping cluster to be ready for wakeup...");<br />&#160;&#160;TestWaitForTimeout(cWakeupDelay); // wait minimum time that cluster should sleep before wake-up<br />&#160;&#160;TestStep("Prepare","Defining 'Wakeup Cluster' action and triggering timer...");<br />&#160;&#160;gAction = 3;<br />&#160;&#160;actionTimer.set(gActionDelay);<br /><br />&#160;&#160;TestStep("Wait","Waiting for any Wakeup state...");<br />&#160;&#160;TestStepPass("Call TFS function", "TestWaitForFrPOCState(-1, 0, timeout=%d)", gTimeout+gExtTimeout);<br /><br />&#160;&#160;// The real test to be checked:<br />&#160;&#160;result = TestWaitForFrPOCState(-1, 0, gTimeout+gExtTimeout);<br />&#160;&#160;if (result == 0)<br />&#160;&#160;{<br />&#160;&#160;&#160;&#160;TestStepFail("Timeout Occurred");<br />&#160;&#160;}<br />&#160;&#160;else if (result == -1)<br />&#160;&#160;{<br />&#160;&#160;&#160;&#160;TestStepFail("General Error");<br />&#160;&#160;}<br />&#160;&#160;else if (result == -2)<br />&#160;&#160;{<br />&#160;&#160;&#160;&#160;TestStepFail("Constraint Violation");<br />&#160;&#160;}<br />&#160;&#160;else<br />&#160;&#160;{<br />&#160;&#160;&#160;&#160;TestStepPass("Any Wakeup state received!");<br />&#160;&#160;&#160;&#160;TestStepPass("Call TFS function", "TestGetWaitFrPOCStateData(frPOCStateData)");<br />&#160;&#160;&#160;&#160;// Test for data extraction:<br />&#160;&#160;&#160;&#160;result = TestGetWaitFrPOCStateData(frPOCStateData);<br />&#160;&#160;&#160;&#160;if (0 != result)<br />&#160;&#160;&#160;&#160;{<br />&#160;&#160;&#160;&#160;&#160;&#160;TestStepFail("Data extraction", "result = %d, Data access could not be executed.", result);<br />&#160;&#160;&#160;&#160;}<br />&#160;&#160;&#160;&#160;else<br />&#160;&#160;&#160; {<br />&#160;&#160;&#160;&#160;&#160;&#160;TestStepPass("Data extraction", "Data extraction works fine. WUSCode=%d", frPOCStateData.FR_Info2);<br />&#160;&#160;&#160;&#160;}<br />&#160;&#160;}<br />}<br /><br />on timer actionTimer<br />{<br />&#160;&#160;if (gAction == 1)<br />&#160;&#160;{<br />&#160;&#160;&#160;&#160;FrSendSymbol(0,0,1);<br />&#160;&#160;&#160;&#160;TestStepPass("FlexRay MTS Symbol sent!");<br />&#160;&#160;}<br />&#160;&#160;else if (gAction == 2)<br />&#160;&#160;{<br />&#160;&#160;&#160;&#160;_cmdClusterToSleep(1);<br />&#160;&#160;&#160;&#160;TestStepPass("Cmd 'Cluster to sleep mode' sent!");<br />&#160;&#160;}<br />&#160;&#160;else if (gAction == 3)<br />&#160;&#160;{<br />&#160;&#160;&#160;&#160;_wakeupCluster(1);<br />&#160;&#160;&#160;TestStepPass("Wakeup pattern sent!");<br />&#160;&#160;}<br />&#160;&#160;gAction = 0;<br />}<br /><br />void _cmdClusterToSleep (int channel)<br />{<br />&#160;&#160;// ATTENTION:&#160;The command is sent via a FlexRay frame. The cluster's nodes must implement this feature!<br /><br />&#160;&#160;BYTE gSta1Msg[254]; // message buffer<br />&#160;&#160;gSta1Msg[0] = 0x95;<br />&#160;&#160;gSta1Msg[1] = 0x95;<br />&#160;&#160;gSta1Msg[2] = 0x0b;<br />&#160;&#160;gSta1Msg[3] = 0xb8;<br />&#160;&#160;FRSendFrame(gSta1Id /*frameId*/, gSta1Chan /*channelMask*/, gSta1Dlc /*len*/, gSta1Base /*cycleStart*/, gSta1Rep /*cycleRepetition*/, gSta1Flags /*flags*/, gSta1Msg /*dataBytes*/, channel);<br />}<br /><br />void _wakeupCluster (int channel)<br />{<br />&#160;&#160;int wuChMask = 1;    // send wake-up on channel A<br />&#160;&#160;int wuCount  = 4;    // send symbol 4 times (range 2-63)<br />&#160;&#160;int wuTxIdle = 180;  // idle time of symbol in bit (range 0-255)<br />&#160;&#160;int wuTxLow  = 60;   // low time of symbol in bit (range 0-63)<br />&#160;&#160;char cfg[200];<br /><br />&#160;&#160;ResetFlexRayCCEx(channel,wuChMask,wuCount,wuTxIdle,wuTxLow,cfg);<br />}<br /><br />void InitBusContext ()<br />{<br />&#160;&#160;dword context;<br />&#160;&#160;TestStep("Prepare","Setting bus context..");<br />&#160;&#160;context = GetBusNameContext(bus2);<br />&#160;&#160;if (context &gt; 0)<br />&#160;&#160;&#160;&#160;setBusContext(context);<br />&#160;&#160;else<br />&#160;&#160;{<br />&#160;&#160;&#160;&#160;TestStepFail("Bus context cannot be set");<br />&#160;&#160;}<br />}</p>
                                </td>
                            </tr>
                        </tbody>
                    </table>
                </div>
                <div data-mc-target-name="DIVCAPLAvailability">
                    <h2 class="CommandPage">Availability</h2>
                    <table style="margin-left: 0;margin-right: auto;mc-table-style: url('../../../../Resources/Stylesheets/vTableLight.css');" class="TableStyle-vTableLight" cellspacing="0">
                        <col class="TableStyle-vTableLight-Column-Column1" />
                        <col class="TableStyle-vTableLight-Column-Column1" />
                        <col class="TableStyle-vTableLight-Column-Column1" />
                        <col class="TableStyle-vTableLight-Column-Column1" />
                        <col class="TableStyle-vTableLight-Column-Column1" />
                        <col class="TableStyle-vTableLight-Column-Column1" />
                        <col class="TableStyle-vTableLight-Column-Column1" />
                        <thead>
                            <tr class="TableStyle-vTableLight-Head-Header1">
                                <th class="TableStyle-vTableLight-HeadE-Column1-Header1">
                                    <p class="TableHead">&#160;</p>
                                </th>
                                <th class="TableStyle-vTableLight-HeadE-Column1-Header1">
                                    <p class="TableHead">CANalyzer</p>
                                </th>
                                <th class="TableStyle-vTableLight-HeadE-Column1-Header1">
                                    <p class="TableHead">CANoe</p>
                                </th>
                                <th class="TableStyle-vTableLight-HeadE-Column1-Header1">
                                    <p class="TableHead">CANoe4SW</p>
                                </th>
                                <th class="TableStyle-vTableLight-HeadE-Column1-Header1">
                                    <p class="TableHead">CANoe4SW Server Edition (Windows)</p>
                                </th>
                                <th class="TableStyle-vTableLight-HeadE-Column1-Header1">
                                    <p class="TableHead">CANoe4SW Server Edition (Linux)</p>
                                </th>
                                <th class="TableStyle-vTableLight-HeadD-Column1-Header1">
                                    <p class="TableHead">vTESTstudio</p>
                                </th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr class="TableStyle-vTableLight-Body-Body1">
                                <td class="TableStyle-vTableLight-BodyE-Column1-Body1">
                                    <p class="TableBold">Since&#160;Version</p>
                                </td>
                                <td class="TableStyle-vTableLight-BodyE-Column1-Body1">
                                    <p class="Table">—</p>
                                </td>
                                <td class="TableStyle-vTableLight-BodyE-Column1-Body1">
                                    <p class="Table">7.2</p>
                                </td>
                                <td class="TableStyle-vTableLight-BodyE-Column1-Body1">
                                    <p class="Table">—</p>
                                </td>
                                <td class="TableStyle-vTableLight-BodyE-Column1-Body1">
                                    <p class="Table">13.0</p>
                                </td>
                                <td class="TableStyle-vTableLight-BodyE-Column1-Body1">
                                    <p class="Table">—</p>
                                </td>
                                <td class="TableStyle-vTableLight-BodyD-Column1-Body1">
                                    <p class="Table">1.0</p>
                                </td>
                            </tr>
                            <tr class="TableStyle-vTableLight-Body-Body1">
                                <td class="TableStyle-vTableLight-BodyE-Column1-Body1">
                                    <p class="TableBold">Restricted&#160;To</p>
                                </td>
                                <td class="TableStyle-vTableLight-BodyE-Column1-Body1">
                                    <p class="Table">—</p>
                                </td>
                                <td class="TableStyle-vTableLight-BodyE-Column1-Body1">
                                    <p class="Table">FlexRay</p>
                                </td>
                                <td class="TableStyle-vTableLight-BodyE-Column1-Body1">
                                    <p class="Table">—</p>
                                </td>
                                <td class="TableStyle-vTableLight-BodyE-Column1-Body1">
                                    <p class="Table">FlexRay</p>
                                </td>
                                <td class="TableStyle-vTableLight-BodyE-Column1-Body1">
                                    <p class="Table">—</p>
                                </td>
                                <td class="TableStyle-vTableLight-BodyD-Column1-Body1">
                                    <p class="Table">FlexRay</p>
                                </td>
                            </tr>
                            <tr class="TableStyle-vTableLight-Body-Body1">
                                <td class="TableStyle-vTableLight-BodyE-Column1-Body1">
                                    <p class="TableBold">CANalyzer Measurement&#160;Setup (Transmit Branch)</p>
                                </td>
                                <td class="TableStyle-vTableLight-BodyE-Column1-Body1">
                                    <p class="Table">—</p>
                                </td>
                                <td class="TableStyle-vTableLight-BodyE-Column1-Body1" style="background-color: #dadee1">
                                    <p class="Table">N/A</p>
                                </td>
                                <td class="TableStyle-vTableLight-BodyE-Column1-Body1" style="background-color: #dadee1">
                                    <p class="Table">N/A</p>
                                </td>
                                <td class="TableStyle-vTableLight-BodyE-Column1-Body1" style="background-color: #dadee1">
                                    <p class="Table">N/A</p>
                                </td>
                                <td class="TableStyle-vTableLight-BodyE-Column1-Body1" style="background-color: #dadee1">
                                    <p class="Table">N/A</p>
                                </td>
                                <td class="TableStyle-vTableLight-BodyD-Column1-Body1" style="background-color: #dadee1">
                                    <p class="Table">N/A</p>
                                </td>
                            </tr>
                            <tr class="TableStyle-vTableLight-Body-Body1">
                                <td class="TableStyle-vTableLight-BodyE-Column1-Body1">
                                    <p class="TableBold"><span class="Product">CANoe</span> Measurement&#160;Setup / CANalyzer Analysis Branch</p>
                                </td>
                                <td class="TableStyle-vTableLight-BodyE-Column1-Body1">
                                    <p class="Table">—</p>
                                </td>
                                <td class="TableStyle-vTableLight-BodyE-Column1-Body1">
                                    <p class="Table">—</p>
                                </td>
                                <td class="TableStyle-vTableLight-BodyE-Column1-Body1" style="background-color: #dadee1">
                                    <p class="Table">N/A</p>
                                </td>
                                <td class="TableStyle-vTableLight-BodyE-Column1-Body1" style="background-color: #dadee1">
                                    <p class="Table">N/A</p>
                                </td>
                                <td class="TableStyle-vTableLight-BodyE-Column1-Body1" style="background-color: #dadee1">
                                    <p class="Table">N/A</p>
                                </td>
                                <td class="TableStyle-vTableLight-BodyD-Column1-Body1" style="background-color: #dadee1">
                                    <p class="Table">N/A</p>
                                </td>
                            </tr>
                            <tr class="TableStyle-vTableLight-Body-Body1">
                                <td class="TableStyle-vTableLight-BodyE-Column1-Body1">
                                    <p class="TableBold"><span class="Product">CANoe</span> Simulation Setup</p>
                                </td>
                                <td class="TableStyle-vTableLight-BodyE-Column1-Body1" style="background-color: #dadee1">
                                    <p class="Table">N/A</p>
                                </td>
                                <td class="TableStyle-vTableLight-BodyE-Column1-Body1">
                                    <p class="Table">—</p>
                                </td>
                                <td class="TableStyle-vTableLight-BodyE-Column1-Body1" style="background-color: #dadee1">
                                    <p class="Table">N/A</p>
                                </td>
                                <td class="TableStyle-vTableLight-BodyE-Column1-Body1">
                                    <p class="Table">—</p>
                                </td>
                                <td class="TableStyle-vTableLight-BodyE-Column1-Body1">
                                    <p class="Table">—</p>
                                </td>
                                <td class="TableStyle-vTableLight-BodyD-Column1-Body1" style="background-color: #dadee1">
                                    <p class="Table">N/A</p>
                                </td>
                            </tr>
                            <tr class="TableStyle-vTableLight-Body-Body1">
                                <td class="TableStyle-vTableLight-BodyE-Column1-Body1">
                                    <p class="TableBold"><span class="Product">CANoe</span> Communication Setup</p>
                                </td>
                                <td class="TableStyle-vTableLight-BodyE-Column1-Body1" style="background-color: #dadee1">
                                    <p class="Table">N/A</p>
                                </td>
                                <td class="TableStyle-vTableLight-BodyE-Column1-Body1">
                                    <p class="Table">—</p>
                                </td>
                                <td class="TableStyle-vTableLight-BodyE-Column1-Body1">
                                    <p class="Table">—</p>
                                </td>
                                <td class="TableStyle-vTableLight-BodyE-Column1-Body1">
                                    <p class="Table">—</p>
                                </td>
                                <td class="TableStyle-vTableLight-BodyE-Column1-Body1">
                                    <p class="Table">—</p>
                                </td>
                                <td class="TableStyle-vTableLight-BodyD-Column1-Body1" style="background-color: #dadee1">
                                    <p class="Table">N/A</p>
                                </td>
                            </tr>
                            <tr class="TableStyle-vTableLight-Body-Body1">
                                <td class="TableStyle-vTableLight-BodyE-Column1-Body1">
                                    <p class="TableBold"><span class="Product">CANoe</span> Test Setup for Test Modules</p>
                                </td>
                                <td class="TableStyle-vTableLight-BodyE-Column1-Body1" style="background-color: #dadee1">
                                    <p class="Table">N/A</p>
                                </td>
                                <td class="TableStyle-vTableLight-BodyE-Column1-Body1">
                                    <p class="Table">✔</p>
                                </td>
                                <td class="TableStyle-vTableLight-BodyE-Column1-Body1" style="background-color: #dadee1">
                                    <p class="Table">N/A</p>
                                </td>
                                <td class="TableStyle-vTableLight-BodyE-Column1-Body1">
                                    <p class="Table">✔</p>
                                </td>
                                <td class="TableStyle-vTableLight-BodyE-Column1-Body1">
                                    <p class="Table">—</p>
                                </td>
                                <td class="TableStyle-vTableLight-BodyD-Column1-Body1" style="background-color: #dadee1">
                                    <p class="Table">N/A</p>
                                </td>
                            </tr>
                            <tr class="TableStyle-vTableLight-Body-Body1">
                                <td class="TableStyle-vTableLight-BodyE-Column1-Body1">
                                    <p class="TableBold"><span class="Product">CANoe</span> Test Setup for Test Units</p>
                                </td>
                                <td class="TableStyle-vTableLight-BodyE-Column1-Body1" style="background-color: #dadee1">
                                    <p class="Table">N/A</p>
                                </td>
                                <td class="TableStyle-vTableLight-BodyE-Column1-Body1">
                                    <p class="Table">✔</p>
                                </td>
                                <td class="TableStyle-vTableLight-BodyE-Column1-Body1">
                                    <p class="Table">—</p>
                                </td>
                                <td class="TableStyle-vTableLight-BodyE-Column1-Body1">
                                    <p class="Table">✔</p>
                                </td>
                                <td class="TableStyle-vTableLight-BodyE-Column1-Body1">
                                    <p class="Table">—</p>
                                </td>
                                <td class="TableStyle-vTableLight-BodyD-Column1-Body1" style="background-color: #dadee1">
                                    <p class="Table">N/A</p>
                                </td>
                            </tr>
                            <tr class="TableStyle-vTableLight-Body-Body1">
                                <td class="TableStyle-vTableLight-BodyE-Column1-Body1">
                                    <p class="TableBold">32-Bit</p>
                                </td>
                                <td class="TableStyle-vTableLight-BodyE-Column1-Body1">
                                    <p class="Table">—</p>
                                </td>
                                <td class="TableStyle-vTableLight-BodyE-Column1-Body1">
                                    <p class="Table">✔</p>
                                </td>
                                <td class="TableStyle-vTableLight-BodyE-Column1-Body1">
                                    <p class="Table">—</p>
                                </td>
                                <td class="TableStyle-vTableLight-BodyE-Column1-Body1">
                                    <p class="Table">✔</p>
                                </td>
                                <td class="TableStyle-vTableLight-BodyE-Column1-Body1" style="background-color: #dadee1">
                                    <p class="Table">N/A</p>
                                </td>
                                <td class="TableStyle-vTableLight-BodyD-Column1-Body1" style="background-color: #dadee1">
                                    <p class="Table">N/A</p>
                                </td>
                            </tr>
                            <tr class="TableStyle-vTableLight-Body-Body1">
                                <td class="TableStyle-vTableLight-BodyB-Column1-Body1">
                                    <p class="TableBold">64-Bit</p>
                                </td>
                                <td class="TableStyle-vTableLight-BodyB-Column1-Body1">
                                    <p class="Table">—</p>
                                </td>
                                <td class="TableStyle-vTableLight-BodyB-Column1-Body1">
                                    <p class="Table">✔</p>
                                </td>
                                <td class="TableStyle-vTableLight-BodyB-Column1-Body1">
                                    <p class="Table">—</p>
                                </td>
                                <td class="TableStyle-vTableLight-BodyB-Column1-Body1">
                                    <p class="Table">✔</p>
                                </td>
                                <td class="TableStyle-vTableLight-BodyB-Column1-Body1">
                                    <p class="Table">—</p>
                                </td>
                                <td class="TableStyle-vTableLight-BodyA-Column1-Body1" style="background-color: #dadee1">
                                    <p class="Table">N/A</p>
                                </td>
                            </tr>
                        </tbody>
                    </table>
                </div>
                <p class="LinkList"><a href="CAPLfunctionTestGetWaitFrSymbolData.htm" class="LinkList">TestGetWaitFrSymbolData</a>&#160;&#160;•&#160;&#160;<a href="CAPLfunctionTestJoinFrSymbolEvent.htm" class="LinkList">TestJoinFrSymbolEvent</a></p>
            </div>
        </div>
        <div class="Footer">
            <div class="FooterWhite">
                <table class="FooterWhite" style="border-collapse: collapse;margin-left: auto;margin-right: auto;">
                    <col style="width: 70px;" data-mc-conditions="vConditions.HTML5Link" />
                    <col style="width: 16px;" data-mc-conditions="vConditions.HTML5Link" />
                    <col data-mc-conditions="" />
                    <col />
                    <tbody>
                        <tr>
                            <td>
                                <div class="buttons popup-container clearfix topicToolbarProxy topicToolbarProxyFooter _Skins_HTML5TopicToolbar mc-component nocontent">
                                    <div class="button-group-container-left">
                                        <button class="button needs-pie expand-all-button" data-state1-class="expand-all-button" data-state2-class="collapse-all-button" data-state2-title="Collapse all" title="Expand all" data-state1-title="Expand all">
                                            <div>
                                                <div role="img" class="button-icon-wrapper" aria-label="Expand all">
                                                    <div class="button-icon"> </div>
                                                </div>
                                            </div>
                                        </button>
                                        <button class="button needs-pie remove-highlight-button" title="Remove Highlights">
                                            <div>
                                                <div role="img" class="button-icon-wrapper">
                                                    <div class="button-icon"> </div>
                                                </div>
                                            </div>
                                        </button>
                                    </div>
                                </div>
                            </td>
                            <td>
                                <p class="vec_BuildInfo"><a href="../../../Shared/HowToUseOnlineHelp.htm" title="Tips for using the help" alt="Tips for using the help"><img src="../../../../Resources/vImages/vBackstage/vHelpInfo.png" /></a>
                                </p>
                            </td>
                            <td>
                                <p class="vec_BuildInfo">•&#160;&#160;Technical&#160;References are only&#160;available&#160;in&#160;English</p>
                            </td>
                            <td>
                                <p class="vec_BuildInfo" style="text-align: right;"><span class="mc-variable Vector.BuildTime variable">2023-09-26T19:49:32</span>
                                </p>
                            </td>
                        </tr>
                    </tbody>
                </table>
            </div>
            <table style="width: 100%;border-collapse: separate;border-spacing: 3px 0px;margin-left: auto;margin-right: auto;caption-side: top;">
                <col />
                <col />
                <col />
                <col data-mc-conditions="vConditions.HTML5Link" />
                <tbody>
                    <tr>
                        <td style="background-color: #b70032;padding-left: 5pt;padding-right: 5pt;padding-top: 5pt;padding-bottom: 5pt;">
                            <p class="vec_Footer">©&#160;Vector Informatik GmbH</p>
                        </td>
                        <td style="background-color: #b70032;padding-left: 5pt;padding-right: 5pt;padding-top: 5pt;padding-bottom: 5pt;text-align: right;">
                            <p class="vec_FooterBold">
                                <MadCap:conditionalText data-mc-conditions="vConditions.vTESTstudioExcluded,vConditions.TestDataEditorExcluded">CANoe</MadCap:conditionalText> Version <MadCap:conditionalText data-mc-conditions="vConditions.vTESTstudioExcluded">17 SP3</MadCap:conditionalText></p>
                        </td>
                        <td style="background-color: #b70032;padding-left: 5pt;padding-right: 5pt;padding-top: 5pt;padding-bottom: 0pt;text-align: right;">
                            <p class="vec_Footer"><a href="../../../Shared/ContactCopyrightLicense.htm" class="vec_Footer MCXref xref xrefvec_Footer">Contact/Copyright/License</a>
                            </p>
                        </td>
                        <td style="background-color: #b70032;padding-left: 5pt;padding-right: 5pt;padding-top: 5pt;padding-bottom: 0pt;text-align: right;">
                            <p class="vec_Footer"><a href="https://www.vector.com/int/en/company/get-info/privacy-policy/" target="_blank" class="vec_Footer">Data Privacy Notice</a>
                            </p>
                        </td>
                    </tr>
                </tbody>
            </table>
        </div>
    </body>
</html>