<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en-us" xml:lang="en-us" data-mc-search-type="Stem" data-mc-help-system-file-name="CANoeCANalyzer.xml" data-mc-path-to-help-system="../../../../" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic" data-mc-preload-images="false" data-mc-in-preview-mode="false">
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta charset="utf-8" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
        <meta name="msapplication-config" content="../../../../Skins/Favicons/browserconfig.xml" />
        <link rel="apple-touch-icon" sizes="180x180" href="../../../../Skins/Favicons/apple-touch-icon.png" />
        <link rel="shortcut icon" href="../../../../Skins/Favicons/favicon-32x32.png" />
        <link rel="icon" sizes="96x96" href="../../../../Skins/Favicons/favicon-96x96.png" />
        <link rel="icon" sizes="32x32" href="../../../../Skins/Favicons/favicon-32x32.png" />
        <link rel="icon" sizes="16x16" href="../../../../Skins/Favicons/favicon-16x16.png" /><title>Abstract Binding (vCDL)</title>
        <link href="../../../../Skins/Default/Stylesheets/Slideshow.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../Skins/Default/Stylesheets/Components/Styles.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../Skins/Default/Stylesheets/Components/Tablet.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../Skins/Default/Stylesheets/Components/Mobile.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../Skins/Default/Stylesheets/Components/Print.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../Resources/Stylesheets/vTableMasterPageHeader.css" rel="stylesheet" data-mc-stylesheet-type="table" />
        <link href="../../../Resources/Stylesheets/vStylesheet.css" rel="stylesheet" type="text/css" />
        <style>/*&lt;meta /&gt;*/

.button.expand-all-button
{
	-pie-background: linear-gradient(#ffffff, #ffffff);
}

.button.remove-highlight-button
{
	-pie-background: linear-gradient(#ffffff, #ffffff);
}

.button.collapse-all-button
{
	-pie-background: linear-gradient(#ffffff, #ffffff);
}

.needs-pie
{
	behavior: url('../../../../Resources/Scripts/PIE-no-motw.htc');
}

</style>
        <link href="../../../Resources/Stylesheets/vTable.css" rel="stylesheet" data-mc-stylesheet-type="table" />
        <link href="../../../Resources/Stylesheets/vTableSymbol.css" rel="stylesheet" data-mc-stylesheet-type="table" />
        <link rel="apple-touch-icon" sizes="180x180" href="../../../../Skins/Favicons/apple-touch-icon.png" />
        <link rel="shortcut icon" href="../../../../Skins/Favicons/favicon-32x32.png" />
        <link rel="icon" sizes="96x96" href="../../../../Skins/Favicons/favicon-96x96.png" />
        <link rel="icon" sizes="32x32" href="../../../../Skins/Favicons/favicon-32x32.png" />
        <link rel="icon" sizes="16x16" href="../../../../Skins/Favicons/favicon-16x16.png" />
        <script src="../../../../Resources/Scripts/jquery.min.js" type="text/javascript">
        </script>
        <script src="../../../../Resources/Scripts/purify.min.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/require.min.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/require.config.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/foundation.min.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/plugins.min.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapGlobal.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapDom.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapUtilities.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapXhr.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapTextEffects.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapSlideshow.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapMessageBus.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapMessageBus.CrossFrame.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapDefault.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapMediaQueries.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapAccessibility.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapHelpSystem.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapAliasFile.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapTopicFeedback.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapFeedbackHelper.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapSkinHelper.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapToc.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapToc.Breadcrumbs.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapToc.MiniToc.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapToc.SideMenu.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapIndex.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapGlossary.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapParser.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapSearch.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapNavigateTopics.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapLms.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapELearning.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapTopic.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapFeedback.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapMicroContentComponent.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapSearchHelper.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapTopicElements.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapTriPane.js" type="text/javascript" defer="defer">
        </script>
        <script type="text/jscript" src="../../../Resources/vScripts/SyntaxHighlighting.js">
        </script>
        <script type="text/jscript" src="../../../Resources/vScripts/TabSwitch.js">
        </script>
        <script type="text/javascript" src="../../../Resources/vScripts/Vector.js">
        </script>
    </head>
    <body>
        <p class="MCWebHelpFramesetLink MCWebHelpFramesetLinkTop"><a href="../../../../CANoeCANalyzer.htm#Topics/vCDL/Language/vCDLAbstractBinding.htm">Open topic with navigation</a>
        </p>
        <div class="Body">
            <div role="main" id="mc-main-content">
                <div>
                    <p class="StructurePath"><a href="../../CANoeCANalyzer/CANoeCANalyzer.htm" class="StructurePath" data-mc-conditions="vConditions.CANalyzerExclude,vConditions.CANoe4ServerExcluded,vConditions.CANoe4SWExcluded,vConditions.TestDataEditorExcluded,vConditions.vTESTstudioExcluded,vConditions.TestUnitRunnerExcluded,vConditions.CANoeNMExcluded"><img src="../../../Resources/vImages/vToolIcons/CANoe_Icon16.png" alt="" />&#160;CANoe</a> » <a href="../vCDLStartpage.htm" class="StructurePath">vCDL</a> » <a href="../Concept/vCDLConcept.htm" class="StructurePath">vCDL 1.4</a> » <a href="vCDLLanguage.htm" class="StructurePath">Language</a> » Abstract Binding</p>
                    <h1>Abstract Binding</h1>
                    <p class="MenuPath">&#160;</p>
                    <p class="AutoSearchFilterConcepts"><a name="aanchor1408"></a>
                        <MadCap:concept term="SFvCDL" />
                    </p>
                    <p class="IndexConcept"><a name="kanchor1113"></a>
                    </p>
                </div>
                <p>Abstract binding allows to use defined objects in simulation-only scenarios, i.e. without binding objects to concrete network hardware. All properties of the simulation model are defined through attributes on language elements. Some attributes are shared with other bindings. Attributes specific to the abstract binding generally use the namespace <span class="CodeAttributeKey_Namespace">Abstract</span>.<MadCap:conditionalText data-mc-conditions="vConditions.CANoe4SWExcluded"> The abstract binding is available for communication objects and distributed objects.</MadCap:conditionalText></p>
                <div data-mc-conditions="vConditions.CANoe4SWExcluded">
                    <h2 class="SectionMain">Communication Objects</h2>
                    <p>A binding statement is started with the keyword <span class="CodeKeyword">binding</span> followed by the binding name. With this the communication object uses the declared binding and will accept corresponding attributes. These attributes then do not need to be qualified with the binding namespace.</p>
                    <div>
                        <table style="width: 100%;margin-left: 0;margin-right: auto;mc-table-style: url('../../../Resources/Stylesheets/vTableSymbol.css');" class="TableStyle-vTableSymbol" cellspacing="0">
                            <col class="TableStyle-vTableSymbol-Column-Column1" />
                            <col class="TableStyle-vTableSymbol-Column-Column2" />
                            <tbody>
                                <tr>
                                    <td class="TableStyle-vTableSymbol-BodyB-Column1-">
                                        <p class="Table">
                                            <img src="../../../Resources/vImages/vExample.png" style="width: 48px;height: 45px;" title="Example" alt="Example" />
                                        </p>
                                    </td>
                                    <td class="TableStyle-vTableSymbol-BodyA-Column2-">
                                        <p class="TableSymbolHead">Example: Service with inline abstract binding.</p>
                                        <p class="TableSourceCode">[<span class="CodeAttributeKey_Namespace">delay</span>=<span class="CodeNumericalLiteral">100us</span>, <span class="CodeAttributeKey_Namespace">subscribedEvents</span>=(FuelInjectionFailure, OverTemperature)]<br /><span class="CodeKeyword">service</span> EngineWatchdog<br />{<br />&#160;&#160;<span class="CodeKeyword">binding</span> <span class="CodeAttributeKey_Namespace">Abstract</span>;<br /><br />&#160;&#160;<span class="CodeKeyword">field</span> <span class="CodeDataType">bool</span> OverTemperature { <span class="CodeKeyword">get</span>; <span class="CodeKeyword">notify</span>; }<br />&#160;&#160;<span class="CodeKeyword">field</span> <span class="CodeDataType">bool</span> OilPressureLow { <span class="CodeKeyword">get</span>; <span class="CodeKeyword">notify</span>; }<br />&#160;&#160;<span class="CodeKeyword">event</span> <span class="CodeDataType">bool</span> FuelInjectionFailure;<br />&#160;&#160;<span class="CodeKeyword">event</span> <span class="CodeDataType">bool</span> ElectricalFailure;<br />&#160;&#160;<span class="CodeKeyword">field</span> <span class="CodeDataType">bool</span> SingleWire { <span class="CodeKeyword">get</span>; <span class="CodeKeyword">notify</span>; }<br /><br />&#160;&#160;<span class="CodeKeyword">provider</span> Engine;<br />&#160;&#160;<span class="CodeKeyword">consumer</span> Dashboard, Logger;<br /><br />&#160;&#160;[<span class="CodeAttributeKey_Namespace">delay</span>=<span class="CodeNumericalLiteral">10ms</span>, <span class="CodeAttributeKey_Namespace">subscribedEvents</span>=ElectricalFailure]<br />&#160;&#160;<span class="CodeKeyword">refine</span> Dashboard.Engine;<br /><br />&#160;&#160;[<span class="CodeAttributeKey_Namespace">subscribedConsumers</span>=(Dashboard, Logger)]<br />&#160;&#160;<span class="CodeKeyword">refine</span> Engine.ElectricalFailure;<br />}</p>
                                    </td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                    <p>In this example the default transmission delay and static event subscription for all ports is defined at service level and overwritten by a refinement at a specific port. Further the statically subscribed clients are registered for a specific event at the server endpoint. Note that the order of endpoints or endpoint/member reference in a refinement statement is of no importance. The subscribed events and PDUs are implicitly associated with the client port of a connection.</p>
                    <h2 class="SectionSub">Supported Attributes of Communication Objects</h2>
                    <p>Abstract binding supports the following attributes:</p>
                    <p>The <span class="bold">Target</span> column identifies the language elements to which the attribute is applicable. This also determines where the attributes can be placed.</p>
                    <div>
                        <table style="mc-table-style: url('../../../Resources/Stylesheets/vTable.css');" class="TableStyle_vTable" cellspacing="0">
                            <col />
                            <col />
                            <col />
                            <col />
                            <col />
                            <thead>
                                <tr>
                                    <th class="TableStyle_vTable_Head_0_0_RowSep_ColSep">
                                        <p class="TableHead">Name</p>
                                    </th>
                                    <th class="TableStyle_vTable_Head_0_0_RowSep_ColSep">
                                        <p class="TableHead">Type</p>
                                    </th>
                                    <th class="TableStyle_vTable_Head_0_0_RowSep_ColSep">
                                        <p class="TableHead">Default</p>
                                    </th>
                                    <th class="TableStyle_vTable_Head_0_0_RowSep_ColSep">
                                        <p class="TableHead">Target</p>
                                    </th>
                                    <th class="TableStyle_vTable_Head_0_0_RowSep_ColEnd">
                                        <p class="TableHead">Semantics</p>
                                    </th>
                                </tr>
                            </thead>
                            <tbody>
                                <tr>
                                    <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                        <p class="Table"><span class="CodeAttributeKey_Namespace">delay</span>
                                        </p>
                                    </td>
                                    <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                        <p class="Table">Time</p>
                                    </td>
                                    <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                        <p class="Table"><span class="CodeNumericalLiteral">0s</span>
                                        </p>
                                    </td>
                                    <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                        <p class="Table">Service</p>
                                        <p class="Table">Service AP</p>
                                        <p class="Table">PDU</p>
                                        <p class="Table">PDU AP</p>
                                        <p class="Table">Signal</p>
                                        <p class="Table">Signal AP</p>
                                    </td>
                                    <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd">
                                        <p class="Table">Delay for communication on given communication object port. </p>
                                    </td>
                                </tr>
                                <tr>
                                    <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                        <p class="Table"><span class="CodeAttributeKey_Namespace">subscribedEvents</span>
                                        </p>
                                    </td>
                                    <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                        <p class="Table">{Reference}</p>
                                    </td>
                                    <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                        <p class="Table">Empty</p>
                                    </td>
                                    <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                        <p class="Table">Service</p>
                                        <p class="Table">Service AP</p>
                                    </td>
                                    <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd">
                                        <p class="Table">Identifies events which shall be subscribed at the start of measurement.</p>
                                    </td>
                                </tr>
                                <tr>
                                    <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                        <p class="Table"><span class="CodeAttributeKey_Namespace">subscribedFields</span>
                                        </p>
                                    </td>
                                    <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                        <p class="Table">{Reference}</p>
                                    </td>
                                    <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                        <p class="Table">Empty</p>
                                    </td>
                                    <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                        <p class="Table">Service</p>
                                        <p class="Table">Service AP</p>
                                    </td>
                                    <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd">
                                        <p class="Table">Identifies fields which shall be subscribed at the start of measurement.</p>
                                    </td>
                                </tr>
                                <tr>
                                    <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                        <p class="Table"><span class="CodeAttributeKey_Namespace">subscribedPDUs</span>
                                        </p>
                                    </td>
                                    <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                        <p class="Table">{Reference}</p>
                                    </td>
                                    <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                        <p class="Table">Empty</p>
                                    </td>
                                    <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                        <p class="Table">Service</p>
                                        <p class="Table">Service AP</p>
                                    </td>
                                    <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd">
                                        <p class="Table">Identifies service PDUs which shall be subscribed at the start of measurement.</p>
                                    </td>
                                </tr>
                                <tr>
                                    <td class="TableStyle_vTable_Body_0_0_RowEnd_ColSep">
                                        <p class="Table"><span class="CodeAttributeKey_Namespace">subscribedConsumers</span>
                                        </p>
                                    </td>
                                    <td class="TableStyle_vTable_Body_0_0_RowEnd_ColSep">
                                        <p class="Table">{Reference}</p>
                                    </td>
                                    <td class="TableStyle_vTable_Body_0_0_RowEnd_ColSep">
                                        <p class="Table">Empty</p>
                                    </td>
                                    <td class="TableStyle_vTable_Body_0_0_RowEnd_ColSep">
                                        <p class="Table">Service</p>
                                        <p class="Table">Service FEP</p>
                                        <p class="Table">Event</p>
                                        <p class="Table">Event FEP</p>
                                        <p class="Table">Service PDU</p>
                                        <p class="Table">Service PDU FEP</p>
                                    </td>
                                    <td class="TableStyle_vTable_Body_0_0_RowEnd_ColEnd">
                                        <p class="Table">Identifies event or service PDU consumer FEPs which are statically subscribed.</p>
                                    </td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                </div>
                <h2 class="SectionMain">Distributed Objects</h2>
                <p>The attribute <span class="CodeAttributeKey_Namespace">Binding</span> is used to declare the binding for a distributed object or one of its members. The value of the attribute is the binding name. Members with the attribute will use the declared binding and will accept corresponding attributes.</p>
                <div>
                    <table style="width: 100%;margin-left: 0;margin-right: auto;mc-table-style: url('../../../Resources/Stylesheets/vTableSymbol.css');" class="TableStyle-vTableSymbol" cellspacing="0">
                        <col class="TableStyle-vTableSymbol-Column-Column1">
                        </col>
                        <col class="TableStyle-vTableSymbol-Column-Column2">
                        </col>
                        <tbody>
                            <tr>
                                <td class="TableStyle-vTableSymbol-BodyB-Column1-">
                                    <p class="Table">
                                        <img src="../../../Resources/vImages/vExample.png" style="width: 48px;height: 45px;" title="Example" alt="Example">
                                        </img>
                                    </p>
                                </td>
                                <td class="TableStyle-vTableSymbol-BodyA-Column2-">
                                    <p class="TableSymbolHead">Example: Distributed object with inline abstract binding.</p>
                                    <p>In this example the binding is set at the distributed object for all its members. A default transmission delay is also set at the distributed object and overwritten by an attribute at one specific member.</p>
                                    <p class="TableSourceCode">[binding="Abstract", AbstractBinding::EndpointDelay=100ms]<br />Object Sensor<br />{<br />&#160;&#160;provided data float Temperature [unit = "°C", AbstractBinding::EndpointDelay=250ms];<br />&#160;&#160;provided data float Humidity [unit="%"];<br />&#160;&#160;internal void SetMode(SensorMode modeOfOperation);<br />}</p>
                                </td>
                            </tr>
                        </tbody>
                    </table>
                </div>
                <h2 class="SectionSub">Supported Attributes of Distributed Objects</h2>
                <p>Distributed objects share a common set of attributes to configure the communication layer, see <a href="vCDLDistributedObjects.htm" class="MCXref xref">Distributed Objects (vCDL)</a> for a thorough list. The abstract binding supports the following of them.</p>
                <div>
                    <table style="mc-table-style: url('../../../Resources/Stylesheets/vTable.css');" class="TableStyle_vTable" cellspacing="0">
                        <col>
                        </col>
                        <col>
                        </col>
                        <thead>
                            <tr>
                                <th class="TableStyle_vTable_Head_0_0_RowSep_ColSep">
                                    <p class="TableHead">Name</p>
                                </th>
                                <th class="TableStyle_vTable_Head_0_0_RowSep_ColEnd">
                                    <p class="TableHead">Abstract Binding Support</p>
                                </th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep"><span class="CodeAttributeKey_Namespace">Binding
</span><![CDATA[
]]></td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd">• (Set to Abstract to activate the binding)</td>
                            </tr>
                            <tr>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table"><span class="CodeAttributeKey_Namespace">CommunicationPattern
</span>
                                    </p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd">
                                    <p class="Table">•</p>
                                </td>
                            </tr>
                            <tr>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table"><span class="CodeAttributeKey_Namespace">Ownership
</span>
                                    </p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd">
                                    <p class="Table">•</p>
                                </td>
                            </tr>
                            <tr>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table"><span class="CodeAttributeKey_Namespace">AutoConnect
</span>
                                    </p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd">
                                    <p class="Table">•</p>
                                </td>
                            </tr>
                            <tr>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table"><span class="CodeAttributeKey_Namespace">HasAnnounceAPI
</span>
                                    </p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd">
                                    <p class="Table">•</p>
                                </td>
                            </tr>
                            <tr>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table"><span class="CodeAttributeKey_Namespace">AutoSubscribe
</span>
                                    </p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd">
                                    <p class="Table">•</p>
                                </td>
                            </tr>
                            <tr>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table"><span class="CodeAttributeKey_Namespace">AutoAnnounce
</span>
                                    </p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd">
                                    <p class="Table">•</p>
                                </td>
                            </tr>
                            <tr>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table"><span class="CodeAttributeKey_Namespace">TxTrigger
</span>
                                    </p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd">
                                    <p class="Table">•</p>
                                </td>
                            </tr>
                            <tr>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table"><span class="CodeAttributeKey_Namespace">TxCycleTime
</span>
                                    </p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd">
                                    <p class="Table">•</p>
                                </td>
                            </tr>
                            <tr>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table"><span class="CodeAttributeKey_Namespace">TxValueRepresentation
</span>
                                    </p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd">
                                    <p class="Table">•</p>
                                </td>
                            </tr>
                            <tr>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table"><span class="CodeAttributeKey_Namespace">ValueAssignmentEvents
</span>
                                    </p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd">
                                    <p class="Table">•</p>
                                </td>
                            </tr>
                            <tr>
                                <td class="TableStyle_vTable_Body_0_0_RowEnd_ColSep">
                                    <p class="Table"><span class="CodeAttributeKey_Namespace">DistributionType
</span>
                                    </p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowEnd_ColEnd">
                                    <p class="Table">•</p>
                                </td>
                            </tr>
                        </tbody>
                    </table>
                </div>
                <p>Additionally, the abstract binding supports the following attributes when used with distributed objects:</p>
                <p>The <span class="bold">Target</span> column identifies the language elements to which the attribute is applicable. This also determines where the attributes can be placed. Attributes are propagated: when an attribute can be applied to members of distributed object instances, it can be applied to its parent interfaces.</p>
                <div>
                    <table style="mc-table-style: url('../../../Resources/Stylesheets/vTable.css');" class="TableStyle_vTable" cellspacing="0">
                        <col>
                        </col>
                        <col>
                        </col>
                        <col>
                        </col>
                        <col>
                        </col>
                        <col>
                        </col>
                        <thead>
                            <tr>
                                <th class="TableStyle_vTable_Head_0_0_RowSep_ColSep">
                                    <p class="TableHead">Name</p>
                                </th>
                                <th class="TableStyle_vTable_Head_0_0_RowSep_ColSep">
                                    <p class="TableHead">Type</p>
                                </th>
                                <th class="TableStyle_vTable_Head_0_0_RowSep_ColSep">
                                    <p class="TableHead">Default</p>
                                </th>
                                <th class="TableStyle_vTable_Head_0_0_RowSep_ColSep">
                                    <p class="TableHead">Target</p>
                                </th>
                                <th class="TableStyle_vTable_Head_0_0_RowSep_ColEnd">
                                    <p class="TableHead">Semantics</p>
                                </th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table"><span class="CodeAttributeKey_Namespace">AbstractBinding::EndpointDelay</span>
                                    </p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">Time</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table"><span class="CodeNumericalLiteral">0s</span>
                                    </p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">Members of distributed object instances of kinds: data, method, event, field.</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd">
                                    <p class="Table">Transmission delay for communication arriving or leaving a given distributed object endpoint. This setting cannot be changed at runtime.</p>
                                    <p class="Table">See the <a href="#BMSimualtedDelay">dedicated section</a> below for a explanation of the mode of operation of the abstract binding delay.</p>
                                </td>
                            </tr>
                            <tr>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table"><span class="CodeAttributeKey_Namespace">AbstractBinding::NetworkDelay</span>
                                    </p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">Time</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table"><span class="CodeNumericalLiteral">0s</span>
                                    </p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">Virtual networks, including the default network.</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd">
                                    <p class="Table">Network delay for communication between distributed object endpoint. This setting cannot be changed at runtime.</p>
                                    <p class="Table">See the <a href="#BMSimualtedDelay">dedicated section</a> below for a explanation of the mode of operation of the abstract binding delay.</p>
                                </td>
                            </tr>
                            <tr>
                                <td class="TableStyle_vTable_Body_0_0_RowEnd_ColSep">
                                    <p class="Table"><span class="CodeAttributeKey_Namespace">AbstractBinding::ID</span>
                                    </p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowEnd_ColSep">
                                    <p class="Table">String</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowEnd_ColSep">
                                    <p class="Table">Empty</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowEnd_ColSep">
                                    <p class="Table">Members of distributed object instances: data, method, event, field, embedded.</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowEnd_ColEnd">
                                    <p class="Table">Enables the user to guide the auto-matching of distributed object members by specifying a particular identifier. This setting cannot be changed at runtime.</p>
                                </td>
                            </tr>
                        </tbody>
                    </table>
                </div>
                <h2 class="SectionSub">Auto Matching Heuristics for Distributed Objects</h2>
                <p>The matching between providers and consumers will be according to the following rules:</p>
                <ul>
                    <li>Candidates for a potential match must share the same communication pattern.</li>
                    <li>Candidates for a potential match must belong to the same virtual network. Note that members which are not assigned to a user-defined virtual network are assigned to the default virtual network.</li>
                    <li>If a member has <span class="CodeAttributeKey_Namespace">AbstractBinding::ID</span> defined, it will only match with members of the same ID.</li>
                    <li>If a member has no <span class="CodeAttributeKey_Namespace">AbstractBinding::ID</span> defined, it will participate in a name and type-based matching according to the following heuristics to consider structural properties (matching referenced types recursively, struct members by name, array length must be identical) and binary layout properties (when defined):</li>
                    <li class="Indent">They use identical definitions, or</li>
                    <li class="Indent">They share the same member name, and</li>
                    <li class="Indent">They share the same data type / method signature / event type:</li>
                    <li class="IndentIndent">Data and event type: Structurally recurse over the type: Type properties must be pairwise identical on both sides down to the binary layout of the types (if either side defines a binary layout).</li>
                    <li class="IndentIndent">Method signatures: Method signatures must declare the same parameters (direction, name, structurally the same type)</li>
                </ul>
                <div class="IndentIndent">
                    <table style="width: 100%;margin-left: 0;margin-right: auto;mc-table-style: url('../../../Resources/Stylesheets/vTableSymbol.css');" class="TableStyle-vTableSymbol" cellspacing="0">
                        <col class="TableStyle-vTableSymbol-Column-Column1" />
                        <col class="TableStyle-vTableSymbol-Column-Column2" />
                        <tbody>
                            <tr>
                                <td class="TableStyle-vTableSymbol-BodyB-Column1-">
                                    <p class="Table">
                                        <img src="../../../Resources/vImages/vInfo.png" style="width: 48px;height: 45px;" title="Note" alt="Note" />
                                    </p>
                                </td>
                                <td class="TableStyle-vTableSymbol-BodyA-Column2-">
                                    <p class="TableSymbolHead">Note</p>
                                    <p class="Table">Fields are not transmitted themselves, but their getter and setter method and their event type must match according to our previous definitions of match for method signature and event type.</p>
                                    <p class="Table">When there is no match, or an ambiguous match, an error or warning will be reported.</p>
                                </td>
                            </tr>
                        </tbody>
                    </table>
                </div>
                <p>This behavior is best illustrated by example.</p>
                <div>
                    <table style="width: 100%;margin-left: 0;margin-right: auto;mc-table-style: url('../../../Resources/Stylesheets/vTableSymbol.css');" class="TableStyle-vTableSymbol" cellspacing="0">
                        <col class="TableStyle-vTableSymbol-Column-Column1">
                        </col>
                        <col class="TableStyle-vTableSymbol-Column-Column2">
                        </col>
                        <tbody>
                            <tr>
                                <td class="TableStyle-vTableSymbol-BodyB-Column1-">
                                    <p class="Table">
                                        <img src="../../../Resources/vImages/vExample.png" style="width: 48px;height: 45px;" title="Example" alt="Example">
                                        </img>
                                    </p>
                                </td>
                                <td class="TableStyle-vTableSymbol-BodyA-Column2-">
                                    <p class="TableSymbolHead">Example: Objects that demonstrate matching heuristics.</p>
                                    <p>In this example the following members will match:</p>
                                    <ul>
                                        <li><span class="SourceCode">Object2.Member1</span> will receive data from <span class="SourceCode">Object1.Member1</span>, due to the same name and type.</li>
                                        <li><span class="SourceCode">Object2.Member2_OtherName</span> will receive data from <span class="SourceCode">Object1.Member2</span>, due to the same ID and type. Here, automatic matching would fail because of different member names.</li>
                                        <li><span class="SourceCode">Object2.Member3</span> will call into <span class="SourceCode">Object1.Member3</span>, due to the same name and identical type.</li>
                                        <li><span class="SourceCode">Object2.Member4</span> will call into <span class="SourceCode">Object1.Member4</span>, due to the same name and structurally equivalent type. Here, automatic matching would fail with different member names.</li>
                                        <li><span class="SourceCode">Object2.Member5</span> will not have a match: <span class="SourceCode">Object1.Member4</span> would fit type-wise, but has a different name.</li>
                                    </ul>
                                    <p class="TableSourceCode">struct Foo<br />{<br />&#160;&#160;uint8 y;<br />}<br />struct Bar<br />{<br />&#160;&#160;string x;<br />&#160;&#160;string y;<br />}<br />struct Baz<br />{<br />&#160;&#160;string x2;<br />&#160;&#160;string y2;<br />}<br />typedef Prototype1 = int32(Foo Param1);<br />typedef Prototype2 = int32(Bar Param1); // Structurally matches Prototype3<br />typedef Prototype3 = int32(Baz Param1); // Structurally matches Prototype2<br /><br />interface Interface1<br />{<br />&#160;&#160;provided data int32 Member1;<br />&#160;&#160;[AbstractBinding::ID="Member2"]<br />&#160;&#160;provided data int32 Member2;<br />&#160;&#160;provided method Prototype1 Member3;<br />&#160;&#160;provided method Prototype2 Member4;<br />}<br />interface Interface2<br />{<br />&#160;&#160;consumed data int32 Member1; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// matches Interface1::Member1<br />&#160;&#160;[AbstractBinding::ID="Member2"]<br />&#160;&#160;consumed data int32 Member2_OtherName; // matches Interface1::Member2<br />&#160;&#160;consumed method Prototype1 Member3; &#160;&#160;&#160;// matches Interface1::Member3<br />&#160;&#160;consumed method Prototype3 Member4; &#160;&#160;&#160;// matches Interface1::Member4<br />&#160;&#160;consumed method Prototype2 Member5; &#160;&#160;&#160;// has no match<br />}<br /><br />[Binding="Abstract"]<br />object Object1 : Interface1;<br />[Binding="Abstract"]<br />object Object2 : Interface2;</p>
                                </td>
                            </tr>
                        </tbody>
                    </table>
                </div>
                <h2 class="SectionSub"><a name="BMSimualtedDelay" id="BMSimualtedDelay"></a>Simulated Delay for Distributed Objects</h2>
                <p>The abstract binding can simulate a transmission delay for communication arriving or leaving a given endpoint. This artificial delay time is added whenever a Distributed Object receives or emits a value. This is independently of the communication pattern and member kind, it covers send/receive, publish/subscribe, and call/return, as well as data, method, event, and field members.</p>
                <div>
                    <table style="width: 100%;margin-left: 0;margin-right: auto;mc-table-style: url('../../../Resources/Stylesheets/vTableSymbol.css');" class="TableStyle-vTableSymbol" cellspacing="0">
                        <col class="TableStyle-vTableSymbol-Column-Column1">
                        </col>
                        <col class="TableStyle-vTableSymbol-Column-Column2">
                        </col>
                        <tbody>
                            <tr>
                                <td class="TableStyle-vTableSymbol-BodyB-Column1-">
                                    <p class="Table">
                                        <img src="../../../Resources/vImages/vExample.png" style="width: 48px;height: 45px;" title="Example" alt="Example">
                                        </img>
                                    </p>
                                </td>
                                <td class="TableStyle-vTableSymbol-BodyA-Column2-">
                                    <p class="TableSymbolHead">Example: Object that demonstrates transmission delay.</p>
                                    <p>Delays on provider-side and consumer-side are additive, so when a provider specifies a 9ms delay, and a consumer another 3ms delay, transmission delay will be 12ms. Delays are introduced in both directions, so when a method is invoked and returned, transmission will take up 2 x (consumer-side delay + provider-side delay).</p>
                                    <p class="TableSourceCode">typedef Prototype1 = int32(int32 Param1);<br /><br />[Binding="Abstract"]<br />interface Interface1<br />{<br />&#160;&#160;[AbstractBinding::Delay=9ms]<br />&#160;&#160;[AbstractBinding::ID="DataInt32"]<br />&#160;&#160;[Ownership="Shared"]<br />&#160;&#160;provided data int32 Member1;<br /><br />&#160;&#160;[AbstractBinding::ID="DataInt32"]<br />&#160;&#160;[AbstractBinding::Delay=3ms]<br />&#160;&#160;[Ownership="Shared"]<br />&#160;&#160;consumed data int32 ConsumedDataWith3msDelay;<br /><br />&#160;&#160;[AbstractBinding::ID="DataInt32"]<br />&#160;&#160;[Ownership="Shared"]<br />&#160;&#160;consumed data int32 ConsumedDataWithNoDelay;<br /><br />&#160;&#160;[AbstractBinding::ID="MethodPrototype1With9msDelay"]<br />&#160;&#160;[AbstractBinding::Delay=9ms]<br />&#160;&#160;provided method Prototype1 ProvidedMethodWith9msDelay;<br /><br />&#160;&#160;[AbstractBinding::ID="MethodPrototype1With9msDelay"]<br />&#160;&#160;[AbstractBinding::Delay=3ms]<br />&#160;&#160;consumed method Prototype1 ConsumedMethodWith9msPlus3msDelay;<br /><br />&#160;&#160;[AbstractBinding::ID="MethodPrototype1With9msDelay"]<br />&#160;&#160;consumed method Prototype1 ConsumedMethodWith9msPlusNoDelay;<br />}<br /><br />object Object1 : Interface1;</p>
                                </td>
                            </tr>
                        </tbody>
                    </table>
                </div>
                <p>Furthermore, the abstract binding can simulate network delay for communication on a virtual network. This artificial delay time is added whenever values are transmitted between members of distributed objects that are connected to the virtual network. In contrast to endpoint-specific delays, a network delay is applied once per transmission, and is configured for all members on a particular virtual network at once. Endpoint-specific and network-specific delays are independent concepts, and can be used both separately or in combination. In the latter case they add up to a total delay of the connection between the endpoints.</p>
                <div>
                    <table style="width: 100%;margin-left: 0;margin-right: auto;mc-table-style: url('../../../Resources/Stylesheets/vTableSymbol.css');" class="TableStyle-vTableSymbol" cellspacing="0">
                        <col class="TableStyle-vTableSymbol-Column-Column1">
                        </col>
                        <col class="TableStyle-vTableSymbol-Column-Column2">
                        </col>
                        <tbody>
                            <tr>
                                <td class="TableStyle-vTableSymbol-BodyB-Column1-">
                                    <p class="Table">
                                        <img src="../../../Resources/vImages/vExample.png" style="width: 48px;height: 45px;" title="Example" alt="Example">
                                        </img>
                                    </p>
                                </td>
                                <td class="TableStyle-vTableSymbol-BodyA-Column2-">
                                    <p class="TableSymbolHead">Example: Object that demonstrates network delay.</p>
                                    <p>Here, we extend the previous example by configuring a 100µs network delay for <span class="bold">Object1</span>, and a 300 µs network delay for another <span class="bold">Object2</span>. Note that, delays are introduced in both directions and add up, so when a method is invoked and returned, transmission will take up 2 x (consumer-side delay + network delay + provider-side delay).</p>
                                    <p class="TableSourceCode">[AbstractBinding::NetworkDelay=100us] refine defaultnetwork;<br />[AbstractBinding::NetworkDelay=300us] virtualnetwork SlowNetwork;<br /><br />[virtualNetwork=SlowNetwork] object Object2 : Interface1;</p>
                                </td>
                            </tr>
                        </tbody>
                    </table>
                </div>
                <p class="LinkList"><a href="vCDLConventions.htm" class="LinkList">Language Conventions</a>
                </p>
            </div>
        </div>
        <div class="Footer">
            <div class="FooterWhite">
                <table class="FooterWhite" style="border-collapse: collapse;margin-left: auto;margin-right: auto;">
                    <col style="width: 70px;" data-mc-conditions="vConditions.HTML5Link" />
                    <col style="width: 16px;" data-mc-conditions="vConditions.HTML5Link" />
                    <col data-mc-conditions="" />
                    <col />
                    <tbody>
                        <tr>
                            <td>
                                <div class="buttons popup-container clearfix topicToolbarProxy topicToolbarProxyFooter _Skins_HTML5TopicToolbar mc-component nocontent">
                                    <div class="button-group-container-left">
                                        <button class="button needs-pie expand-all-button" data-state1-class="expand-all-button" data-state2-class="collapse-all-button" data-state2-title="Collapse all" title="Expand all" data-state1-title="Expand all">
                                            <div>
                                                <div role="img" class="button-icon-wrapper" aria-label="Expand all">
                                                    <div class="button-icon"> </div>
                                                </div>
                                            </div>
                                        </button>
                                        <button class="button needs-pie remove-highlight-button" title="Remove Highlights">
                                            <div>
                                                <div role="img" class="button-icon-wrapper">
                                                    <div class="button-icon"> </div>
                                                </div>
                                            </div>
                                        </button>
                                    </div>
                                </div>
                            </td>
                            <td>
                                <p class="vec_BuildInfo"><a href="../../Shared/HowToUseOnlineHelp.htm" title="Tips for using the help" alt="Tips for using the help"><img src="../../../Resources/vImages/vBackstage/vHelpInfo.png" /></a>
                                </p>
                            </td>
                            <td>
                                <p class="vec_BuildInfo">•&#160;&#160;Technical&#160;References are only&#160;available&#160;in&#160;English</p>
                            </td>
                            <td>
                                <p class="vec_BuildInfo" style="text-align: right;"><span class="mc-variable Vector.BuildTime variable">2023-09-26T19:49:32</span>
                                </p>
                            </td>
                        </tr>
                    </tbody>
                </table>
            </div>
            <table style="width: 100%;border-collapse: separate;border-spacing: 3px 0px;margin-left: auto;margin-right: auto;caption-side: top;">
                <col />
                <col />
                <col />
                <col data-mc-conditions="vConditions.HTML5Link" />
                <tbody>
                    <tr>
                        <td style="background-color: #b70032;padding-left: 5pt;padding-right: 5pt;padding-top: 5pt;padding-bottom: 5pt;">
                            <p class="vec_Footer">©&#160;Vector Informatik GmbH</p>
                        </td>
                        <td style="background-color: #b70032;padding-left: 5pt;padding-right: 5pt;padding-top: 5pt;padding-bottom: 5pt;text-align: right;">
                            <p class="vec_FooterBold">
                                <MadCap:conditionalText data-mc-conditions="vConditions.vTESTstudioExcluded,vConditions.TestDataEditorExcluded">CANoe</MadCap:conditionalText> Version <MadCap:conditionalText data-mc-conditions="vConditions.vTESTstudioExcluded">17 SP3</MadCap:conditionalText></p>
                        </td>
                        <td style="background-color: #b70032;padding-left: 5pt;padding-right: 5pt;padding-top: 5pt;padding-bottom: 0pt;text-align: right;">
                            <p class="vec_Footer"><a href="../../Shared/ContactCopyrightLicense.htm" class="vec_Footer MCXref xref xrefvec_Footer">Contact/Copyright/License</a>
                            </p>
                        </td>
                        <td style="background-color: #b70032;padding-left: 5pt;padding-right: 5pt;padding-top: 5pt;padding-bottom: 0pt;text-align: right;">
                            <p class="vec_Footer"><a href="https://www.vector.com/int/en/company/get-info/privacy-policy/" target="_blank" class="vec_Footer">Data Privacy Notice</a>
                            </p>
                        </td>
                    </tr>
                </tbody>
            </table>
        </div>
    </body>
</html>