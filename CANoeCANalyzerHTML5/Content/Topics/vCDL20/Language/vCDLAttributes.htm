<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en-us" xml:lang="en-us" data-mc-search-type="Stem" data-mc-help-system-file-name="CANoeCANalyzer.xml" data-mc-path-to-help-system="../../../../" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic" data-mc-preload-images="false" data-mc-in-preview-mode="false">
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta charset="utf-8" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
        <meta name="msapplication-config" content="../../../../Skins/Favicons/browserconfig.xml" />
        <link rel="apple-touch-icon" sizes="180x180" href="../../../../Skins/Favicons/apple-touch-icon.png" />
        <link rel="shortcut icon" href="../../../../Skins/Favicons/favicon-32x32.png" />
        <link rel="icon" sizes="96x96" href="../../../../Skins/Favicons/favicon-96x96.png" />
        <link rel="icon" sizes="32x32" href="../../../../Skins/Favicons/favicon-32x32.png" />
        <link rel="icon" sizes="16x16" href="../../../../Skins/Favicons/favicon-16x16.png" /><title>Attributes (vCDL 2.0)</title>
        <link href="../../../../Skins/Default/Stylesheets/Slideshow.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../Skins/Default/Stylesheets/Components/Styles.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../Skins/Default/Stylesheets/Components/Tablet.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../Skins/Default/Stylesheets/Components/Mobile.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../Skins/Default/Stylesheets/Components/Print.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../Resources/Stylesheets/vTableMasterPageHeader.css" rel="stylesheet" data-mc-stylesheet-type="table" />
        <link href="../../../Resources/Stylesheets/vStylesheet.css" rel="stylesheet" type="text/css" />
        <style>/*&lt;meta /&gt;*/

.button.expand-all-button
{
	-pie-background: linear-gradient(#ffffff, #ffffff);
}

.button.remove-highlight-button
{
	-pie-background: linear-gradient(#ffffff, #ffffff);
}

.button.collapse-all-button
{
	-pie-background: linear-gradient(#ffffff, #ffffff);
}

.needs-pie
{
	behavior: url('../../../../Resources/Scripts/PIE-no-motw.htc');
}

</style>
        <link href="../../../Resources/Stylesheets/vTablePageTOC.css" rel="stylesheet" data-mc-stylesheet-type="table" />
        <link href="../../../Resources/Stylesheets/vTable.css" rel="stylesheet" data-mc-stylesheet-type="table" />
        <link href="../../../Resources/Stylesheets/vTableLight.css" rel="stylesheet" data-mc-stylesheet-type="table" />
        <link rel="apple-touch-icon" sizes="180x180" href="../../../../Skins/Favicons/apple-touch-icon.png" />
        <link rel="shortcut icon" href="../../../../Skins/Favicons/favicon-32x32.png" />
        <link rel="icon" sizes="96x96" href="../../../../Skins/Favicons/favicon-96x96.png" />
        <link rel="icon" sizes="32x32" href="../../../../Skins/Favicons/favicon-32x32.png" />
        <link rel="icon" sizes="16x16" href="../../../../Skins/Favicons/favicon-16x16.png" />
        <script src="../../../../Resources/Scripts/jquery.min.js" type="text/javascript">
        </script>
        <script src="../../../../Resources/Scripts/purify.min.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/require.min.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/require.config.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/foundation.min.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/plugins.min.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapGlobal.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapDom.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapUtilities.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapXhr.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapTextEffects.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapSlideshow.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapMessageBus.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapMessageBus.CrossFrame.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapDefault.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapMediaQueries.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapAccessibility.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapHelpSystem.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapAliasFile.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapTopicFeedback.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapFeedbackHelper.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapSkinHelper.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapToc.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapToc.Breadcrumbs.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapToc.MiniToc.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapToc.SideMenu.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapIndex.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapGlossary.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapParser.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapSearch.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapNavigateTopics.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapLms.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapELearning.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapTopic.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapFeedback.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapMicroContentComponent.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapSearchHelper.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapTopicElements.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapTriPane.js" type="text/javascript" defer="defer">
        </script>
        <script type="text/jscript" src="../../../Resources/vScripts/SyntaxHighlighting.js">
        </script>
        <script type="text/jscript" src="../../../Resources/vScripts/TabSwitch.js">
        </script>
        <script type="text/javascript" src="../../../Resources/vScripts/Vector.js">
        </script>
    </head>
    <body>
        <p class="MCWebHelpFramesetLink MCWebHelpFramesetLinkTop"><a href="../../../../CANoeCANalyzer.htm#Topics/vCDL20/Language/vCDLAttributes.htm">Open topic with navigation</a>
        </p>
        <div class="Body">
            <div role="main" id="mc-main-content">
                <div>
                    <p class="StructurePath"><a href="../../CANoeCANalyzer/CANoeCANalyzer.htm" class="StructurePath" data-mc-conditions="vConditions.CANalyzerExclude,vConditions.CANoe4ServerExcluded,vConditions.CANoe4SWExcluded,vConditions.TestDataEditorExcluded,vConditions.vTESTstudioExcluded,vConditions.TestUnitRunnerExcluded,vConditions.CANoeNMExcluded"><img src="../../../Resources/vImages/vToolIcons/CANoe_Icon16.png" alt="" />&#160;CANoe</a> » <a href="../../vCDL/vCDLStartpage.htm" class="StructurePath">vCDL</a> » <a href="../Concept/vCDL20.htm" class="StructurePath">vCDL 2.0</a> » Language » Attributes</p>
                    <h1>Attributes</h1>
                    <p class="MenuPath">Navigation: <a href="../Concept/vCDLConcept.htm" class="MenuPath">« Basic&#160;Concepts</a>&#160;&#160;•&#160;&#160;<a href="vCDLDataTypes.htm" class="MenuPath">Data Types »</a></p>
                    <p class="AutoSearchFilterConcepts"><a name="aanchor4453"></a>
                        <MadCap:concept term="SFvCDL" />
                    </p>
                    <p class="IndexConcept"><a name="kanchor3386"></a>
                    </p>
                </div>
                <p>Attributes allow attaching additional information to most vCDL artefacts. From a technical point of view, it allows extending the language’s capabilities in future versions without having to modify its grammar each time.</p>
                <div>
                    <p class="TableCOM"><a name="Shortcuts" id="Shortcuts"></a><span class="red">ON THIS&#160;PAGE:</span>
                    </p>
                    <table style="mc-table-style: url('../../../Resources/Stylesheets/vTablePageTOC.css');" class="TableStyle-vTablePageTOC" cellspacing="2">
                        <col class="TableStyle-vTablePageTOC-Column-Column1" />
                        <tbody>
                            <tr class="TableStyle-vTablePageTOC-Body-Body1">
                                <td class="TableStyle-vTablePageTOC-BodyA-Column1-Body1">
                                    <p class="PageTOC"><a href="#BMUsage" class="PageTOC">Usage</a>
                                    </p>
                                    <p class="PageTOC"><a href="#BMCustom" class="PageTOC">Custom Attributes (Attribute Definitions)</a>
                                    </p>
                                </td>
                            </tr>
                        </tbody>
                    </table>
                </div>
                <h2 class="SectionMain"><a name="BMUsage" id="BMUsage"></a>Usage <a href="#Shortcuts" class="TopOfPage">[▲ back]</a></h2>
                <p>Attributes are specified in square brackets, mostly before the actual object. The concrete position(s) are shown for each vCDL artefact within this technical reference. Multiple attributes may be grouped into attribute groups where each group is enclosed by square brackets. However, the grouping has only visual purpose and the order of attributes is irrelevant. Each attribute may be specified at most once.</p>
                <h2 class="SectionSub">Example</h2>
                <p class="SourceCode"><span class="CodeKeyword">struct</span> MyStruct<br />{<br />&#160;&#160;<span class="CodeComment">// Value and flag attributes in single group</span><br />&#160;&#160;[<span class="CodeAttributeKey_Namespace">RelOffset</span>=<span class="CodeNumericalLiteral">2</span>, <span class="CodeAttributeKey_Namespace">Optional</span>, <span class="CodeAttributeKey_Namespace">ByteOrder</span>=Intel]<br />&#160;&#160;<span class="CodeDataType">int32</span> Member1;<br /><br />&#160;&#160;<span class="CodeComment">// Value and inverted flag attributes in seperate groups</span><br />&#160;&#160;[<span class="CodeAttributeKey_Namespace">RelOffset</span>=<span class="CodeNumericalLiteral">4</span>]<br />&#160;&#160;[!<span class="CodeAttributeKey_Namespace">Optional</span>]<br />&#160;&#160;[<span class="CodeAttributeKey_Namespace">Intel</span>] <span class="CodeComment">// Enum attribute without attribute name</span><br />&#160;&#160;<span class="CodeDataType">int32</span> Member2;<br />}</p>
                <p>The example shows the usage of both value attributes and flag attributes (normal and inverted). You will find that some attributes are imported as such into CANoe and can be viewed there, while other attributes are compiled into the properties of the artefact the attributes are attached to.</p>
                <h2 class="SectionSub">Additional Information</h2>
                <p>Attributes may be defined within namespaces and thus must be referenced accordingly, meaning either qualify the full namespace path or include their namespace with a using directive. However, all predefined attributes shown in this technical reference are defined on root level and thus need no special qualifying.</p>
                <p>Attributes cannot always be placed at the exact location where they are meant to be. One example is the return type of a function prototype which accepts certain attributes like any other data type would do. However, there is no dedicated attribute section for the return type. Instead, its attributes are placed besides the function prototype’s attributes, but they are forwarded to the return type. These attributes may be put in separate groups, but as mentioned above, attribute groups are purely cosmetic.</p>
                <p>Some attributes exist twice where one of the attributes is used to define a single element and the other one to define multiple elements using a list literal, e.g., <span class="CodeAttributeKey_Namespace">VirtualNetwork</span> and <span class="CodeAttributeKey_Namespace">VirtualNetworks</span>.</p>
                <p>Since vCDL 2.0 it is possible to write enumeration-based attributes such as <span class="CodeAttributeKey_Namespace">ByteOrder</span> without the attribute name. For this to work there must be no other attribute with the same name. The example above only works if the user does not declare a custom attribute also named ‘Intel’. In this case the custom attribute would be used instead and to define the byte order the traditional notation would have to be used. Although this feature requires less writing and condenses attributes to the relevant information, it is recommended to also use the traditional notation if the value does not speak for itself.</p>
                <h2 class="SectionSub">Syntax</h2>
                <table style="width: 100%;mc-table-style: url('../../../Resources/Stylesheets/vTableLight.css');" class="TableStyle-vTableLight" cellspacing="0">
                    <col class="TableStyle-vTableLight-Column-Column1" style="width: 165px;" />
                    <col class="TableStyle-vTableLight-Column-Column1" />
                    <tbody>
                        <tr class="TableStyle-vTableLight-Body-Body1">
                            <td class="TableStyle-vTableLight-BodyE-Column1-Body1">
                                <p class="TableSyntax">attributes:</p>
                            </td>
                            <td class="TableStyle-vTableLight-BodyD-Column1-Body1">
                                <p class="TableSyntax">attribute-group*</p>
                            </td>
                        </tr>
                        <tr class="TableStyle-vTableLight-Body-Body1">
                            <td class="TableStyle-vTableLight-BodyE-Column1-Body1">
                                <p class="TableSyntax">attribute-group:</p>
                            </td>
                            <td class="TableStyle-vTableLight-BodyD-Column1-Body1">
                                <p class="TableSyntax"><span class="Keyword">[</span> single-attribute ( <span class="Keyword">,</span> single-attribute )* <span class="Keyword">]</span></p>
                            </td>
                        </tr>
                        <tr class="TableStyle-vTableLight-Body-Body1">
                            <td class="TableStyle-vTableLight-BodyE-Column1-Body1">
                                <p class="TableSyntax">single-attribute:</p>
                            </td>
                            <td class="TableStyle-vTableLight-BodyD-Column1-Body1">
                                <p class="TableSyntax">flag-attribute | value-attribute</p>
                            </td>
                        </tr>
                        <tr class="TableStyle-vTableLight-Body-Body1">
                            <td class="TableStyle-vTableLight-BodyE-Column1-Body1">
                                <p class="TableSyntax">flag-attribute:</p>
                            </td>
                            <td class="TableStyle-vTableLight-BodyD-Column1-Body1">
                                <p class="TableSyntax"><span class="Keyword">!</span>? reference[attribute-def]</p>
                            </td>
                        </tr>
                        <tr class="TableStyle-vTableLight-Body-Body1">
                            <td class="TableStyle-vTableLight-BodyB-Column1-Body1">
                                <p class="TableSyntax">value-attribute:</p>
                            </td>
                            <td class="TableStyle-vTableLight-BodyA-Column1-Body1">
                                <p class="TableSyntax">reference[attribute-def] <span class="Keyword">=</span> complex-expression</p>
                            </td>
                        </tr>
                    </tbody>
                </table>
                <h2 class="SectionMain"><a name="BMCustom" id="BMCustom"></a>Custom Attributes (Attribute Definitions) <a href="#Shortcuts" class="TopOfPage">[▲ back]</a></h2>
                <p>A user may define custom attributes, a.k.a. attribute definitions, which can then be used the same way as any other predefined attribute and will always be visible in CANoe. As any other artefact custom attributes as well must be defined within a namespace which must be specified when using this attribute.</p>
                <h2 class="SectionSub">Example</h2>
                <p class="SourceCode"><span class="CodeComment">// Attribute that takes integer values, but has no default value</span>
                    <br />[<span class="CodeAttributeKey_Namespace">Target</span>=distobj.instance]<br /><span class="CodeKeyword">attribute</span> <span class="CodeDataType">int32</span> ValueAttribute;<br /><br /><span class="CodeComment">// A typical flag attribute, whose value can be changed during measurement</span><br /><span class="CodeComment">// and which is allowed at both virtual networks and system variables</span><br />[<span class="CodeAttributeKey_Namespace">FlagValue</span>=<span class="CodeKeyword">true</span>, <span class="CodeAttributeKey_Namespace">InvertedFlagValue</span>=<span class="CodeKeyword">false</span>, <span class="CodeAttributeKey_Namespace">Mutable</span>, <span class="CodeAttributeKey_Namespace">Targets</span>={sv,do.nw}]<br /><span class="CodeKeyword">attribute</span> <span class="CodeDataType">bool</span> FlagAttribute = <span class="CodeKeyword">false</span>;<br /><br /><span class="CodeComment">// Usage</span><br />[!<span class="CodeAttributeKey_Namespace">FlagAttribute</span>]<br /><span class="CodeKeyword">sysvar</span> <span class="CodeDataType">float</span> MySystemVariable;</p>
                <p>Like built-in attributes custom attributes must have one or more targets where they are allowed to be used. Targets can be assigned a default value, which is used when the attribute is required on an artifact but not explicitly defined.</p>
                <h2 class="SectionSub">Attributes at Custom Attributes</h2>
                <div>
                    <table style="mc-table-style: url('../../../Resources/Stylesheets/vTable.css');margin-left: 0;margin-right: auto;" class="TableStyle_vTable" cellspacing="0">
                        <col />
                        <col />
                        <col />
                        <col />
                        <thead>
                            <tr>
                                <th class="TableStyle_vTable_Head_0_0_RowSep_ColSep">
                                    <p class="TableHead">Name</p>
                                </th>
                                <th class="TableStyle_vTable_Head_0_0_RowSep_ColSep">
                                    <p class="TableHead">Type</p>
                                </th>
                                <th class="TableStyle_vTable_Head_0_0_RowSep_ColSep">
                                    <p class="TableHead">Default</p>
                                </th>
                                <th class="TableStyle_vTable_Head_0_0_RowSep_ColEnd">
                                    <p class="TableHead">Semantics</p>
                                </th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table"><span class="CodeAttributeKey_Namespace">FlagValue</span>
                                    </p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="TableSyntax">any</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="TableSyntax">none</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd">
                                    <p class="Table">Value if the attribute is used as flag, if not specified, the attribute cannot be used as flag</p>
                                </td>
                            </tr>
                            <tr>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table"><span class="CodeAttributeKey_Namespace">InvertedFlagValue</span>
                                    </p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="TableSyntax">any</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="TableSyntax">none</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd">
                                    <p class="Table">Value if the attribute is used as inverted flag, if not specified, the attribute cannot be used as inverted flag</p>
                                </td>
                            </tr>
                            <tr>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table"><span class="CodeAttributeKey_Namespace">Mutable</span>
                                    </p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="TableSyntax"><span class="CodeDataType">bool</span>
                                    </p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="TableSyntax">false</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd">
                                    <p class="Table">Whether the attribute’s value can be changed during measurement</p>
                                </td>
                            </tr>
                            <tr>
                                <td class="TableStyle_vTable_Body_0_0_RowEnd_ColSep">
                                    <p class="Table"><span class="CodeAttributeKey_Namespace">Target(s)</span>
                                    </p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowEnd_ColSep">
                                    <p class="TableSyntax">target</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowEnd_ColSep">
                                    <p class="TableSyntax">none</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowEnd_ColEnd">
                                    <p class="Table">One or more vCDL artefacts where this attribute may be used</p>
                                </td>
                            </tr>
                        </tbody>
                    </table>
                </div>
                <h2 class="SectionSub">Attribute Targets</h2>
                <p>Attribute targets can often be written in different ways. The following table shows all allowed attribute targets, listing both the short name and long name for each target. Short and long name can be mixed at will, e.g., do.container.inst would be a valid target as well.</p>
                <div>
                    <table style="mc-table-style: url('../../../Resources/Stylesheets/vTable.css');margin-left: 0;margin-right: auto;" class="TableStyle_vTable" cellspacing="0">
                        <col />
                        <col />
                        <col />
                        <thead>
                            <tr>
                                <th class="TableStyle_vTable_Head_0_0_RowSep_ColSep">
                                    <p class="TableHead">Short Name</p>
                                </th>
                                <th class="TableStyle_vTable_Head_0_0_RowSep_ColSep">
                                    <p class="TableHead">Long Name</p>
                                </th>
                                <th class="TableStyle_vTable_Head_0_0_RowSep_ColEnd">
                                    <p class="TableHead">Semantics</p>
                                </th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="TableSyntax">do.cont.inst</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="TableSyntax">distobj.container.instance</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd">
                                    <p class="Table">DO containers (excluding embedded member containers)</p>
                                </td>
                            </tr>
                            <tr>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="TableSyntax">do.inst</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="TableSyntax">distobj.instance</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd">
                                    <p class="Table">DOs (excluding embedded members)</p>
                                </td>
                            </tr>
                            <tr>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="TableSyntax">do.inst</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="TableSyntax">distobj.instance.member</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd">
                                    <p class="Table">DO members (excluding DO interface members)</p>
                                </td>
                            </tr>
                            <tr>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="TableSyntax">do.member</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="TableSyntax">distobj.member</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd">
                                    <p class="Table">All members at DO interfaces and DOs</p>
                                </td>
                            </tr>
                            <tr>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="TableSyntax">do.nw</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="TableSyntax">distobj.network</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd">
                                    <p class="Table">Virtual networks</p>
                                </td>
                            </tr>
                            <tr>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="TableSyntax">do.type.cont</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="TableSyntax">distobj.type.container</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd">
                                    <p class="Table">All DO container types (array and list)</p>
                                </td>
                            </tr>
                            <tr>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="TableSyntax">do.type.cont.array</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="TableSyntax">distobj.type.container.array</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd">
                                    <p class="Table">DO array container types</p>
                                </td>
                            </tr>
                            <tr>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="TableSyntax">do.type.cont.list</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="TableSyntax">distobj.type.container.list</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd">
                                    <p class="Table">DO list container types</p>
                                </td>
                            </tr>
                            <tr>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="TableSyntax">do.type.if</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="TableSyntax">distobj.type.interface</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd">
                                    <p class="Table">DO interfaces</p>
                                </td>
                            </tr>
                            <tr>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="TableSyntax">do.type.if.member</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="TableSyntax">distobj.type.interface.member</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd">
                                    <p class="Table">DO interface members (excluding DO members)</p>
                                </td>
                            </tr>
                            <tr>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="TableSyntax">dt.struct.member	</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="TableSyntax">datatype.struct.member</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd">
                                    <p class="Table">Members of struct data types</p>
                                </td>
                            </tr>
                            <tr>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="TableSyntax">dt.union.member	</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="TableSyntax">datatype.union.member</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd">
                                    <p class="Table">Members of union data types</p>
                                </td>
                            </tr>
                            <tr>
                                <td class="TableStyle_vTable_Body_0_0_RowEnd_ColSep">
                                    <p class="TableSyntax">sv</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowEnd_ColSep">
                                    <p class="TableSyntax">sysvar</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowEnd_ColEnd">
                                    <p class="Table">System variables</p>
                                </td>
                            </tr>
                        </tbody>
                    </table>
                </div>
                <h2 class="SectionSub">Syntax</h2>
                <table style="width: 100%;mc-table-style: url('../../../Resources/Stylesheets/vTableLight.css');" class="TableStyle-vTableLight" cellspacing="0">
                    <col class="TableStyle-vTableLight-Column-Column1" style="width: 165px;" />
                    <col class="TableStyle-vTableLight-Column-Column1" />
                    <tbody>
                        <tr class="TableStyle-vTableLight-Body-Body1">
                            <td class="TableStyle-vTableLight-BodyE-Column1-Body1">
                                <p class="TableSyntax">attribute-def:</p>
                            </td>
                            <td class="TableStyle-vTableLight-BodyD-Column1-Body1">
                                <p class="TableSyntax">attributes <span class="Keyword">attribute</span> data-type identifier default-value <span class="Keyword">;</span></p>
                            </td>
                        </tr>
                        <tr class="TableStyle-vTableLight-Body-Body1">
                            <td class="TableStyle-vTableLight-BodyB-Column1-Body1">
                                <p class="TableSyntax">default-value:</p>
                            </td>
                            <td class="TableStyle-vTableLight-BodyA-Column1-Body1">
                                <p class="TableSyntax">( <span class="Keyword">=</span> complex-expression )?</p>
                            </td>
                        </tr>
                    </tbody>
                </table>
                <p class="LinkList">&#160;</p>
            </div>
        </div>
        <div class="Footer">
            <div class="FooterWhite">
                <table class="FooterWhite" style="border-collapse: collapse;margin-left: auto;margin-right: auto;">
                    <col style="width: 70px;" data-mc-conditions="vConditions.HTML5Link" />
                    <col style="width: 16px;" data-mc-conditions="vConditions.HTML5Link" />
                    <col data-mc-conditions="" />
                    <col />
                    <tbody>
                        <tr>
                            <td>
                                <div class="buttons popup-container clearfix topicToolbarProxy topicToolbarProxyFooter _Skins_HTML5TopicToolbar mc-component nocontent">
                                    <div class="button-group-container-left">
                                        <button class="button needs-pie expand-all-button" data-state1-class="expand-all-button" data-state2-class="collapse-all-button" data-state2-title="Collapse all" title="Expand all" data-state1-title="Expand all">
                                            <div>
                                                <div role="img" class="button-icon-wrapper" aria-label="Expand all">
                                                    <div class="button-icon"> </div>
                                                </div>
                                            </div>
                                        </button>
                                        <button class="button needs-pie remove-highlight-button" title="Remove Highlights">
                                            <div>
                                                <div role="img" class="button-icon-wrapper">
                                                    <div class="button-icon"> </div>
                                                </div>
                                            </div>
                                        </button>
                                    </div>
                                </div>
                            </td>
                            <td>
                                <p class="vec_BuildInfo"><a href="../../Shared/HowToUseOnlineHelp.htm" title="Tips for using the help" alt="Tips for using the help"><img src="../../../Resources/vImages/vBackstage/vHelpInfo.png" /></a>
                                </p>
                            </td>
                            <td>
                                <p class="vec_BuildInfo">•&#160;&#160;Technical&#160;References are only&#160;available&#160;in&#160;English</p>
                            </td>
                            <td>
                                <p class="vec_BuildInfo" style="text-align: right;"><span class="mc-variable Vector.BuildTime variable">2023-09-26T19:49:32</span>
                                </p>
                            </td>
                        </tr>
                    </tbody>
                </table>
            </div>
            <table style="width: 100%;border-collapse: separate;border-spacing: 3px 0px;margin-left: auto;margin-right: auto;caption-side: top;">
                <col />
                <col />
                <col />
                <col data-mc-conditions="vConditions.HTML5Link" />
                <tbody>
                    <tr>
                        <td style="background-color: #b70032;padding-left: 5pt;padding-right: 5pt;padding-top: 5pt;padding-bottom: 5pt;">
                            <p class="vec_Footer">©&#160;Vector Informatik GmbH</p>
                        </td>
                        <td style="background-color: #b70032;padding-left: 5pt;padding-right: 5pt;padding-top: 5pt;padding-bottom: 5pt;text-align: right;">
                            <p class="vec_FooterBold">
                                <MadCap:conditionalText data-mc-conditions="vConditions.vTESTstudioExcluded,vConditions.TestDataEditorExcluded">CANoe</MadCap:conditionalText> Version <MadCap:conditionalText data-mc-conditions="vConditions.vTESTstudioExcluded">17 SP3</MadCap:conditionalText></p>
                        </td>
                        <td style="background-color: #b70032;padding-left: 5pt;padding-right: 5pt;padding-top: 5pt;padding-bottom: 0pt;text-align: right;">
                            <p class="vec_Footer"><a href="../../Shared/ContactCopyrightLicense.htm" class="vec_Footer MCXref xref xrefvec_Footer">Contact/Copyright/License</a>
                            </p>
                        </td>
                        <td style="background-color: #b70032;padding-left: 5pt;padding-right: 5pt;padding-top: 5pt;padding-bottom: 0pt;text-align: right;">
                            <p class="vec_Footer"><a href="https://www.vector.com/int/en/company/get-info/privacy-policy/" target="_blank" class="vec_Footer">Data Privacy Notice</a>
                            </p>
                        </td>
                    </tr>
                </tbody>
            </table>
        </div>
    </body>
</html>