<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en-us" xml:lang="en-us" data-mc-search-type="Stem" data-mc-help-system-file-name="CANoeCANalyzer.xml" data-mc-path-to-help-system="../../../../" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic" data-mc-preload-images="false" data-mc-in-preview-mode="false">
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta charset="utf-8" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
        <meta name="msapplication-config" content="../../../../Skins/Favicons/browserconfig.xml" />
        <link rel="apple-touch-icon" sizes="180x180" href="../../../../Skins/Favicons/apple-touch-icon.png" />
        <link rel="shortcut icon" href="../../../../Skins/Favicons/favicon-32x32.png" />
        <link rel="icon" sizes="96x96" href="../../../../Skins/Favicons/favicon-96x96.png" />
        <link rel="icon" sizes="32x32" href="../../../../Skins/Favicons/favicon-32x32.png" />
        <link rel="icon" sizes="16x16" href="../../../../Skins/Favicons/favicon-16x16.png" /><title>Distributed Objects (vCDL 2.0)</title>
        <link href="../../../../Skins/Default/Stylesheets/Slideshow.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../Skins/Default/Stylesheets/Components/Styles.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../Skins/Default/Stylesheets/Components/Tablet.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../Skins/Default/Stylesheets/Components/Mobile.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../Skins/Default/Stylesheets/Components/Print.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../Resources/Stylesheets/vTableMasterPageHeader.css" rel="stylesheet" data-mc-stylesheet-type="table" />
        <link href="../../../Resources/Stylesheets/vStylesheet.css" rel="stylesheet" type="text/css" />
        <style>/*&lt;meta /&gt;*/

.button.expand-all-button
{
	-pie-background: linear-gradient(#ffffff, #ffffff);
}

.button.remove-highlight-button
{
	-pie-background: linear-gradient(#ffffff, #ffffff);
}

.button.collapse-all-button
{
	-pie-background: linear-gradient(#ffffff, #ffffff);
}

.needs-pie
{
	behavior: url('../../../../Resources/Scripts/PIE-no-motw.htc');
}

</style>
        <link href="../../../Resources/Stylesheets/vTableSymbol.css" rel="stylesheet" data-mc-stylesheet-type="table" />
        <link href="../../../Resources/Stylesheets/vTablePageTOC.css" rel="stylesheet" data-mc-stylesheet-type="table" />
        <link href="../../../Resources/Stylesheets/vTableLight.css" rel="stylesheet" data-mc-stylesheet-type="table" />
        <link href="../../../Resources/Stylesheets/vTable.css" rel="stylesheet" data-mc-stylesheet-type="table" />
        <link rel="apple-touch-icon" sizes="180x180" href="../../../../Skins/Favicons/apple-touch-icon.png" />
        <link rel="shortcut icon" href="../../../../Skins/Favicons/favicon-32x32.png" />
        <link rel="icon" sizes="96x96" href="../../../../Skins/Favicons/favicon-96x96.png" />
        <link rel="icon" sizes="32x32" href="../../../../Skins/Favicons/favicon-32x32.png" />
        <link rel="icon" sizes="16x16" href="../../../../Skins/Favicons/favicon-16x16.png" />
        <script src="../../../../Resources/Scripts/jquery.min.js" type="text/javascript">
        </script>
        <script src="../../../../Resources/Scripts/purify.min.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/require.min.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/require.config.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/foundation.min.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/plugins.min.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapGlobal.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapDom.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapUtilities.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapXhr.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapTextEffects.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapSlideshow.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapMessageBus.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapMessageBus.CrossFrame.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapDefault.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapMediaQueries.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapAccessibility.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapHelpSystem.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapAliasFile.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapTopicFeedback.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapFeedbackHelper.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapSkinHelper.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapToc.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapToc.Breadcrumbs.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapToc.MiniToc.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapToc.SideMenu.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapIndex.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapGlossary.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapParser.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapSearch.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapNavigateTopics.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapLms.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapELearning.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapTopic.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapFeedback.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapMicroContentComponent.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapSearchHelper.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapTopicElements.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapTriPane.js" type="text/javascript" defer="defer">
        </script>
        <script type="text/jscript" src="../../../Resources/vScripts/SyntaxHighlighting.js">
        </script>
        <script type="text/jscript" src="../../../Resources/vScripts/TabSwitch.js">
        </script>
        <script type="text/javascript" src="../../../Resources/vScripts/Vector.js">
        </script>
    </head>
    <body>
        <p class="MCWebHelpFramesetLink MCWebHelpFramesetLinkTop"><a href="../../../../CANoeCANalyzer.htm#Topics/vCDL20/Language/vCDLDistributedObjects.htm">Open topic with navigation</a>
        </p>
        <div class="Body">
            <div role="main" id="mc-main-content">
                <div>
                    <p class="StructurePath"><a href="../../CANoeCANalyzer/CANoeCANalyzer.htm" class="StructurePath" data-mc-conditions="vConditions.CANalyzerExclude,vConditions.CANoe4ServerExcluded,vConditions.CANoe4SWExcluded,vConditions.TestDataEditorExcluded,vConditions.vTESTstudioExcluded,vConditions.TestUnitRunnerExcluded,vConditions.CANoeNMExcluded"><img src="../../../Resources/vImages/vToolIcons/CANoe_Icon16.png" alt="" />&#160;CANoe</a> » <a href="../../vCDL/vCDLStartpage.htm" class="StructurePath">vCDL</a> » <a href="../Concept/vCDL20.htm" class="StructurePath">vCDL 2.0</a> » Language » Distributed Objects</p>
                    <h1>Distributed Objects</h1>
                    <p class="MenuPath">Navigation: <a href="vCDLDataTypes.htm" class="MenuPath">« Data Types</a>&#160;&#160;•&#160;&#160;<a href="vCDLSystemVariables.htm" class="MenuPath">System Variables »</a></p>
                    <p class="AutoSearchFilterConcepts"><a name="aanchor10249"></a>
                        <MadCap:concept term="SFvCDL" />
                    </p>
                    <p class="IndexConcept"><a name="kanchor8258"></a>
                    </p>
                </div>
                <p>Distributed objects (DOs) as a concept consists of interfaces along with instances based on these interfaces. It therefore shares many similarities with Object Oriented Programming (OOP): Interfaces can inherit from multiple other interfaces, and they can be declared abstract to express incompleteness and to prevent being instanced.</p>
                <div>
                    <p class="TableCOM"><a name="Shortcuts" id="Shortcuts"></a><span class="red">ON THIS&#160;PAGE:</span>
                    </p>
                    <table style="mc-table-style: url('../../../Resources/Stylesheets/vTablePageTOC.css');" class="TableStyle-vTablePageTOC" cellspacing="2">
                        <col class="TableStyle-vTablePageTOC-Column-Column1" />
                        <tbody>
                            <tr class="TableStyle-vTablePageTOC-Body-Body1">
                                <td class="TableStyle-vTablePageTOC-BodyA-Column1-Body1">
                                    <p class="PageTOC"><a href="#BMBasics" class="PageTOC">Basics</a>
                                    </p>
                                    <p class="PageTOC"><a href="#BMVirtualNetworks" class="PageTOC">Virtual Networks</a>
                                    </p>
                                    <p class="PageTOC"><a href="#BMDOInterface" class="PageTOC">DO Interfaces as Data Types</a>
                                    </p>
                                    <p class="PageTOC"><a href="#BMInlinedDO" class="PageTOC">Inlined DO Interface</a>
                                    </p>
                                </td>
                            </tr>
                        </tbody>
                    </table>
                </div>
                <h2 class="SectionMain"><a name="BMBasics" id="BMBasics"></a>Basics <a href="#Shortcuts" class="TopOfPage">[▲ back]</a></h2>
                <p>Apart from the similarities between DOs and OOP, DOs come with several different member types:</p>
                <ul>
                    <li>Data Members</li>
                    <li>Events</li>
                    <li>Fields</li>
                    <li>Methods</li>
                    <li>Embedded DOs</li>
                    <li>Embedded DO References</li>
                    <li>Embedded DO Member Containers</li>
                </ul>
                <p>In addition, data members, events, fields, and methods have a direction which is either consumed, provided, or internal. Any DO interface, “interface” for short, can be reversed resulting in a copy of the original interface, but all consumed members become provided and all provided members become consumed, respectively members of embedded objects. Internal members stay unchanged. Reversing an interface twice results in the original interface. Any non-abstract interface can be instanced as either a single DO or as a DO container of arbitrary dimension. Similarly, there exist DO references and DO reference containers of arbitrary dimension, but with the difference that they can reference DOs of abstract interfaces as well. Embedded DOs, DO references, and DO member containers have the same semantics. Note that DO reference containers cannot be used embedded. All DO (reference) containers have a blueprint which is a single DO (reference) and is used to initialize new dynamic DOs and DO references in the container during measurement.</p>
                <h2 class="SectionSub">Examples</h2>
                <p>The first example shows a single DO interface with several different member types of different direction. Some have an initial value which must match the member’s data type. Fields can have getters, setters, and notification events, either all of these or just some. Methods can declare a function prototype inline, or they can refer a named function prototype. Embedded members will be introduced in later examples.</p>
                <p class="SourceCode"><span class="CodeKeyword">interface</span> DOInterface<br />{<br />&#160;&#160;<span class="CodeComment">// Provided data member without initial value</span><br />&#160;&#160;<span class="CodeKeyword">provided data</span> <span class="CodeDataType">float</span> DataMember;<br /><br />&#160;&#160;<span class="CodeComment">// Consumed event with initial value</span><br />&#160;&#160;<span class="CodeKeyword">consumed event</span> <span class="CodeDataType">string</span> Event = <span class="CodeStringLiteral">"Value"</span>;<br /><br />&#160;&#160;<span class="CodeComment">// Internal fields with different accessors and optional initial values</span><br />&#160;&#160;<span class="CodeKeyword">internal field</span> <span class="CodeDataType">int32</span> Field1 = <span class="CodeNumericalLiteral">4</span>; <span class="CodeComment">// same as { get; set; notify; }</span><br />&#160;&#160;<span class="CodeKeyword">internal field</span> <span class="CodeDataType">int32</span> Field2 { <span class="CodeKeyword">get</span>; } = <span class="CodeNumericalLiteral">3</span>;<br />&#160;&#160;<span class="CodeKeyword">internal field</span> <span class="CodeDataType">int32</span> Field3 { <span class="CodeKeyword">set</span>; <span class="CodeKeyword">notify</span>; }<br /><br />&#160;&#160;<span class="CodeComment">// Inlined method with intial value for the parameter and the return value</span><br />&#160;&#160;<span class="CodeKeyword">provided method</span> <span class="CodeDataType">float</span> InlinedMethod(<span class="CodeKeyword">in</span> <span class="CodeDataType">float</span> param = <span class="CodeNumericalLiteral">6</span>.<span class="CodeNumericalLiteral">1</span>) = <span class="CodeNumericalLiteral">7</span>.<span class="CodeNumericalLiteral">3</span>;<br /><br />&#160;&#160;<span class="CodeComment">// Method referring a function prototype</span><br />&#160;&#160;<span class="CodeKeyword">consumed method</span> MyPrototype ReferredMethod;<br />}<br /><br /><span class="CodeComment">// DO interface is used to create multiple DOs</span><br />DOInterface DistObj1, DistObj2;</p>
                <p>The next example shows three DO interfaces inheriting from each other and declaring a data member each. Although there are only three data members many more initial values can be set. Each DO and DO interface may define its own initial values for inherited members (DO interface) or instanced members (DO). For visual purposes the initial values are all set via refinements although some of them could be set directly at the data member definition.</p>
                <p class="SourceCode"><span class="CodeKeyword">interface</span> InterfaceA &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;{ <span class="CodeKeyword">provided data</span> <span class="CodeDataType">int32</span> MemberA; }<br /><span class="CodeKeyword">interface</span> InterfaceB : InterfaceA { <span class="CodeKeyword">provided data</span> <span class="CodeDataType">int32</span> MemberB; }<br /><span class="CodeKeyword">interface</span> InterfaceC : InterfaceB { <span class="CodeKeyword">provided data</span> <span class="CodeDataType">int32</span> MemberC; }<br /><br />InterfaceC DO;<br /><br /><span class="CodeKeyword">refine</span> InterfaceA.MemberA = <span class="CodeNumericalLiteral">1</span>;<br /><br /><span class="CodeKeyword">refine</span> InterfaceB.MemberA = <span class="CodeNumericalLiteral">2</span>;<br /><span class="CodeKeyword">refine</span> InterfaceB.MemberB = <span class="CodeNumericalLiteral">3</span>;<br /><br /><span class="CodeKeyword">refine</span> InterfaceC.MemberA = <span class="CodeNumericalLiteral">4</span>;<br /><span class="CodeKeyword">refine</span> InterfaceC.MemberB = <span class="CodeNumericalLiteral">5</span>;<br /><span class="CodeKeyword">refine</span> InterfaceC.MemberC = <span class="CodeNumericalLiteral">6</span>;<br /><br /><span class="CodeKeyword">refine</span> DO.MemberA = <span class="CodeNumericalLiteral">7</span>;<br /><span class="CodeKeyword">refine</span> DO.MemberB = <span class="CodeNumericalLiteral">8</span>;<br /><span class="CodeKeyword">refine</span> DO.MemberC = <span class="CodeNumericalLiteral">9</span>;</p>
                <p>The next example shows different ways how to use DO interfaces to either create DOs or references to DOs. Both DOs and DO references can be bundled into containers of arbitrary dimension. Note that the DO list container also has an initial size and thus up to three size parameters compared to the normal list type which only has two size parameters at maximum.</p>
                <p class="SourceCode"><span class="CodeKeyword">interface</span> DOInterface<br />{<br />&#160;&#160;<span class="CodeKeyword">provided event</span> <span class="CodeDataType">string</span> Event;<br />}<br /><br /><span class="CodeComment">// A single distributed object</span><br />DOInterface DO;<br /><br /><span class="CodeComment">// A DO reference pointing to 'DO' as initial object</span><br /><span class="CodeKeyword">reference</span>&lt;DOInterface&gt; DORef = DO;<br /><br /><span class="CodeComment">// Several DO containers</span><br /><span class="CodeDataType">array</span>&lt;DOInterface, <span class="CodeNumericalLiteral">5</span>&gt; &#160;&#160;&#160;&#160;&#160;&#160;DOContainer1; <span class="CodeComment">// fixed size</span><br /><span class="CodeDataType">list</span>&lt;DOInterface&gt; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;DOContainer2; <span class="CodeComment">// unbounded</span><br /><span class="CodeDataType">list</span>&lt;DOInterface, <span class="CodeNumericalLiteral">10</span>&gt; &#160;&#160;&#160;&#160;&#160;&#160;DOContainer3; <span class="CodeComment">// max size</span><br /><span class="CodeDataType">list</span>&lt;DOInterface, <span class="CodeNumericalLiteral">4</span>, <span class="CodeNumericalLiteral">10</span>&gt; &#160;&#160;&#160;DOContainer4; <span class="CodeComment">// min and max size</span><br /><span class="CodeDataType">list</span>&lt;DOInterface, <span class="CodeNumericalLiteral">4</span>, <span class="CodeNumericalLiteral">10</span>, <span class="CodeNumericalLiteral">7</span>&gt; DOContainer5; <span class="CodeComment">// min, max, and initial size</span><br /><span class="CodeDataType">list</span>&lt;DOInterface, _, _, <span class="CodeNumericalLiteral">7</span>&gt; &#160;DOContainer6; <span class="CodeComment">// initial size only</span><br /><br /><span class="CodeComment">// A 2-dimensional DO reference container</span><br /><span class="CodeDataType">list</span>&lt;array&lt;<span class="CodeKeyword">reference</span>&lt;DOInterface&gt;, <span class="CodeNumericalLiteral">10</span>&gt;&gt; DORefContainer;</p>
                <p>The following example outlines more complex inheritance. The base interface is abstract meaning DOs cannot be created directly based on this interface but must use a non-abstract derived interface instead. However, abstract interfaces can be used with DO references as they do not create any DO. The example also shows how to use reversed interfaces. <span class="bold">InterfaceB</span> inherits from the reversed <span class="bold">InterfaceA</span>. As <span class="bold">InterfaceB</span> itself is used reversed by <span class="bold">InterfaceD</span>, <span class="bold">InterfaceA</span> is reversed twice and thus becomes non-reversed again. An interface must not inherit from the same interface both in its reversed and non-reversed form at the same time.</p>
                <p class="SourceCode"><span class="CodeKeyword">abstract</span> interface InterfaceA<br />{<br />&#160;&#160;<span class="CodeKeyword">provided data</span> <span class="CodeDataType">float</span> MemberA;<br />}<br /><br /><span class="CodeKeyword">interface</span> InterfaceB : reverse&lt;InterfaceA&gt;<br />{<br />&#160;&#160;<span class="CodeKeyword">provided data</span> <span class="CodeDataType">float</span> MemberB;<br />}<br /><br /><span class="CodeKeyword">interface</span> InterfaceC : InterfaceA<br />{<br />&#160;&#160;<span class="CodeKeyword">provided data</span> <span class="CodeDataType">float</span> MemberC;<br />}<br /><br /><span class="CodeComment">// Interface without scope, just aggregating other interfaces</span><br /><span class="CodeKeyword">interface</span> InterfaceD : <span class="CodeKeyword">reverse</span>&lt;InterfaceB&gt;, interfaceC;<br /><br /><span class="CodeComment">// 'DO' offers following interfaces:</span><br /><span class="CodeComment">// &#160;- InterfaceA</span><br /><span class="CodeComment">// &#160;- reverse&lt;InterfaceB&gt;</span><br /><span class="CodeComment">// &#160;- InterfaceC</span><br /><span class="CodeComment">// &#160;- InterfaceD</span><br />InterfaceD DO;<br /><br /><span class="CodeComment">// DO references can point to abstract DO interfaces</span><br /><span class="CodeKeyword">reference</span>&lt;InterfaceA&gt; DORef = DO;<br /><br /><span class="CodeComment">// ERROR: Abstract DO interfaces cannot be instanced</span><br />InterfaceA AbstractDO;</p>
                <p>DO interfaces can be used in typedefs which creates a new DO interface with the given name. In fact, the new interface inherits from the existing interface leading to some restrictions as demonstrated in the following example. Alternatively, an alias may be used which has no restrictions, but is only available in vCDL. I.e., no additional DO interface will be created within CANoe.</p>
                <p class="SourceCode"><span class="CodeKeyword">interface</span> OldInterface;<br /><br /><span class="CodeComment">// Typedef is equivalent to "interface NewInterface : OldInterface;"</span><br /><span class="CodeKeyword">typedef</span> NewInterface = OldInterface;<br /><br /><span class="CodeComment">// Not visible within CANoe</span><br /><span class="CodeKeyword">using</span> AliasedInterface = OldInterface;<br /><br /><span class="CodeComment">// Create a DO from every interface</span><br />OldInterface     OldDO;<br />NewInterface     NewDO;<br />AliasedInterface AliasedDO;<br /><br /><span class="CodeKeyword">reference</span>&lt;OldInterface&gt; OldDORef1 = OldDO;<br /><span class="CodeKeyword">reference</span>&lt;OldInterface&gt; OldDORef2 = NewDO;<br /><span class="CodeKeyword">reference</span>&lt;OldInterface&gt; OldDORef3 = AliasedDO;<br /><br /><span class="CodeKeyword">reference</span>&lt;NewInterface&gt; NewDORef1 = OldDO; &#160;&#160;&#160;&#160;<span class="CodeComment">// ERROR!</span><br /><span class="CodeKeyword">reference</span>&lt;NewInterface&gt; NewDORef2 = NewDO;<br /><span class="CodeKeyword">reference</span>&lt;NewInterface&gt; NewDORef3 = AliasedDO; <span class="CodeComment">// ERROR!</span><br /><br /><span class="CodeKeyword">reference</span>&lt;AliasedInterface&gt; AliasedDORef1 = OldDO;<br /><span class="CodeKeyword">reference</span>&lt;AliasedInterface&gt; AliasedDORef2 = NewDO;<br /><span class="CodeKeyword">reference</span>&lt;AliasedInterface&gt; AliasedDORef3 = AliasedDO;</p>
                <p>DOs, DO references and containers can be created not only on namespace level, but also be embedded into other DOs (except for DO reference containers). Despite the same terminology DO embedding is very different from struct type embedding. While the latter has no effect during measurement, embedded DOs are full DOs and offer nearly the same functionality as DOs on namespace level.</p>
                <p class="SourceCode"><span class="CodeKeyword">interface</span> DOInterface<br />{<br />&#160;&#160;<span class="CodeKeyword">embedded</span> OtherInterface                 EmbeddedDO;<br />&#160;&#160;<span class="CodeKeyword">embedded reference</span>&lt;OtherInterface&gt;      EmbeddedDORef;<br />&#160;&#160;<span class="CodeKeyword">embedded</span> <span class="CodeDataType">list</span>&lt;OtherInterface, <span class="CodeNumericalLiteral">5</span>, <span class="CodeNumericalLiteral">10</span>, _&gt; EmbeddedMemberContainer;<br />}<br /><br /><span class="CodeKeyword">interface</span> OtherInterface<br />{<br />&#160;&#160;<span class="CodeKeyword">provided data</span> <span class="CodeDataType">int32</span> Member;<br />}</p>
                <p>The <span class="CodeKeyword">embedded</span> keyword is optional for all members in the example above. However, we highly recommend keeping a consistent style throughout your system description. If a DO interface contains both members with a direction and embedded members, the <span class="CodeKeyword">embedded</span> keyword should be used. If a DO interface only aggregates embedded DOs, references, and containers, the <span class="CodeKeyword">embedded</span> keyword can as well be omitted.</p>
                <p>There are further examples regarding DO (reference) containers in the <a href="vCDLRefinements.htm">refinements</a> description. These will also cover how to attach data to a container’s blueprint.</p>
                <h2 class="SectionSub">Attributes</h2>
                <p>If not stated otherwise, the attributes cannot be changed during measurement.</p>
                <div>
                    <table style="width: 100%;margin-left: 0;margin-right: auto;mc-table-style: url('../../../Resources/Stylesheets/vTableSymbol.css');" class="TableStyle-vTableSymbol" cellspacing="0">
                        <col class="TableStyle-vTableSymbol-Column-Column1" />
                        <col class="TableStyle-vTableSymbol-Column-Column2" />
                        <tbody>
                            <tr>
                                <td class="TableStyle-vTableSymbol-BodyB-Column1-">
                                    <p class="Table">
                                        <img src="../../../Resources/vImages/vInfo.png" style="width: 48px;height: 45px;" title="Note" alt="Note" />
                                    </p>
                                </td>
                                <td class="TableStyle-vTableSymbol-BodyA-Column2-">
                                    <p class="TableSymbolHead">Note</p>
                                    <p class="Table">Please note that some attributes are integrated in namespaces and the call must be adapted accordingly.</p>
                                </td>
                            </tr>
                        </tbody>
                    </table>
                </div>
                <div>
                    <table style="width: 100%;margin-left: 0;margin-right: auto;mc-table-style: url('../../../Resources/Stylesheets/vTable.css');" class="TableStyle_vTable" cellspacing="0">
                        <col />
                        <col />
                        <col />
                        <col />
                        <col />
                        <col />
                        <col />
                        <col />
                        <col />
                        <col />
                        <col />
                        <col />
                        <col />
                        <col />
                        <thead>
                            <tr>
                                <th class="TableStyle_vTable_Head_0_0_RowSep_ColSep" rowspan="3">
                                    <p class="TableHead">Name</p>
                                </th>
                                <th class="TableStyle_vTable_Head_0_0_RowSep_ColSep" rowspan="3">
                                    <p class="TableHead">Type</p>
                                </th>
                                <th class="TableStyle_vTable_Head_0_0_RowSep_ColSep" rowspan="3">
                                    <p class="TableHead">Default</p>
                                </th>
                                <th class="TableStyle_vTable_Head_0_0_RowSep_ColSep" colspan="10">
                                    <p class="TableHead">Allowed At</p>
                                </th>
                                <th class="TableStyle_vTable_Head_0_0_RowSep_ColEnd" rowspan="3">
                                    <p class="TableHead">Description</p>
                                </th>
                            </tr>
                            <tr>
                                <th class="TableStyle_vTable_Head_0_0_RowSep_ColSep" rowspan="2">
                                    <p class="TableHead">DO<br />Interface</p>
                                </th>
                                <th class="TableStyle_vTable_Head_0_0_RowSep_ColSep" rowspan="2">
                                    <p class="TableHead">DO</p>
                                </th>
                                <th class="TableStyle_vTable_Head_0_0_RowSep_ColSep" rowspan="2">
                                    <p class="TableHead">DO<br />Container</p>
                                </th>
                                <th class="TableStyle_vTable_Head_0_0_RowSep_ColSep" colspan="4">
                                    <p class="TableHead">Member</p>
                                </th>
                                <th class="TableStyle_vTable_Head_0_0_RowSep_ColSep" colspan="3">
                                    <p class="TableHead">Direction</p>
                                </th>
                            </tr>
                            <tr>
                                <th class="TableStyle_vTable_Head_0_0_RowSep_ColSep">
                                    <p class="TableHead">D<a href="javascript:void(0)" class="MCTextPopup popup popupHead">…<span class="MCTextPopupBody MCTextPopupBody_Closed needs-pie popupBody" aria-hidden="true"><span class="MCTextPopupArrow"> </span>data member</span></a></p>
                                </th>
                                <th class="TableStyle_vTable_Head_0_0_RowSep_ColSep">
                                    <p class="TableHead">E<a href="javascript:void(0)" class="MCTextPopup popup popupHead">…<span class="MCTextPopupBody MCTextPopupBody_Closed needs-pie popupBody" aria-hidden="true"><span class="MCTextPopupArrow"> </span>event</span></a></p>
                                </th>
                                <th class="TableStyle_vTable_Head_0_0_RowSep_ColSep">
                                    <p class="TableHead">F<a href="javascript:void(0)" class="MCTextPopup popup popupHead">…<span class="MCTextPopupBody MCTextPopupBody_Closed needs-pie popupBody" aria-hidden="true"><span class="MCTextPopupArrow"> </span>field</span></a></p>
                                </th>
                                <th class="TableStyle_vTable_Head_0_0_RowSep_ColSep">
                                    <p class="TableHead">M<a href="javascript:void(0)" class="MCTextPopup popup popupHead">…<span class="MCTextPopupBody MCTextPopupBody_Closed needs-pie popupBody" aria-hidden="true"><span class="MCTextPopupArrow"> </span>method</span></a></p>
                                </th>
                                <th class="TableStyle_vTable_Head_0_0_RowSep_ColSep">
                                    <p class="TableHead">P<a href="javascript:void(0)" class="MCTextPopup popup popupHead">…<span class="MCTextPopupBody MCTextPopupBody_Closed needs-pie popupBody" aria-hidden="true"><span class="MCTextPopupArrow"> </span>provided</span></a></p>
                                </th>
                                <th class="TableStyle_vTable_Head_0_0_RowSep_ColSep">
                                    <p class="TableHead">C<a href="javascript:void(0)" class="MCTextPopup popup popupHead">…<span class="MCTextPopupBody MCTextPopupBody_Closed needs-pie popupBody" aria-hidden="true"><span class="MCTextPopupArrow"> </span>consumed</span></a></p>
                                </th>
                                <th class="TableStyle_vTable_Head_0_0_RowSep_ColSep">
                                    <p class="TableHead">I<a href="javascript:void(0)" class="MCTextPopup popup popupHead">…<span class="MCTextPopupBody MCTextPopupBody_Closed needs-pie popupBody" aria-hidden="true"><span class="MCTextPopupArrow"> </span>internal</span></a></p>
                                </th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table"><span class="CodeAttributeKey_Namespace">AutoAnnounce</span>
                                    </p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="TableSyntax">{Never, 

OnConnect, 

OnFirstTransmit}

</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="TableSyntax">OnConnect</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">✔</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">✔</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">✔</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">✔</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">✔</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">✔</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">—</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">✔</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">—</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">—</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd">
                                    <p class="Table">Whether the member shall be announced immediately when it is connected to the virtual network.</p>
                                </td>
                            </tr>
                            <tr>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table"><span class="CodeAttributeKey_Namespace">AutoConnect</span>
                                    </p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="TableSyntax"><span class="CodeDataType">bool</span>
                                    </p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="TableSyntax">true</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">✔</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">✔</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">✔</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">✔</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">✔</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">✔</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">✔</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">✔</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">✔</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">—</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd">
                                    <p class="Table">Whether the member shall be connected to its virtual network immediately.</p>
                                </td>
                            </tr>
                            <tr>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table"><span class="CodeAttributeKey_Namespace">AutoSubscribe</span>
                                    </p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="TableSyntax"><span class="CodeDataType">bool</span>
                                    </p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="TableSyntax">true</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">✔</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">✔</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">✔</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">✔</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">✔</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">✔</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">—</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">—</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">✔</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">—</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd">
                                    <p class="Table">Whether the consumed member shall be subscribed immediately when it is connected to the virtual network</p>
                                </td>
                            </tr>
                            <tr>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table"><span class="CodeAttributeKey_Namespace">Binding</span>
                                    </p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="TableSyntax"><span class="CodeDataType">string</span>
                                    </p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="TableSyntax">—</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">✔</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">✔</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">✔</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">✔</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">✔</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">✔</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">✔</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">✔</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">✔</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">—</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd">
                                    <p class="Table">The <a href="../../CANoeCANalyzer/CommunicationConcept/CCDistributedObjects.htm#BMBindings">binding</a> to be used by a member.</p>
                                </td>
                            </tr>
                            <tr>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table"><span class="CodeAttributeKey_Namespace">CommunicationPattern</span>
                                    </p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="TableSyntax">
{SharedMemory, 

PublishSubscribe, 

SendReceive}</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="TableSyntax">PublishSubscribe</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">✔</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">—</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">—</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">✔</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">✔</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">✔</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">—</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">✔</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">✔</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">—</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd">
                                    <p class="Table">The member’s communication pattern.</p>
                                </td>
                            </tr>
                            <tr>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table"><span class="SourceCode">Container::</span><span class="CodeAttributeKey_Namespace">Index{i}Values</span>
                                    </p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="TableSyntax"><span class="CodeDataType">string</span>
                                    </p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="TableSyntax">—</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">—</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">—</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">✔</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">—</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">—</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">—</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">—</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">—</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">—</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">—</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd">
                                    <p class="Table">Description for the index values of the i-th dimension of the container.</p>
                                </td>
                            </tr>
                            <tr>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table"><span class="CodeAttributeKey_Namespace">DispatchToAnalysis</span>
                                    </p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="TableSyntax">
{All,None,SimulatedOnly,MonitoredOnly}</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="TableSyntax">All</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">✔</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">✔</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">✔</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">—</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">—</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">—</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">—</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">—</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">—</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">—</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd">
                                    <p class="Table">The mode of how values are dispatched to analysis.</p>
                                </td>
                            </tr>
                            <tr>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table"><span class="CodeAttributeKey_Namespace">DistributionType</span>
                                    </p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="TableSyntax">

{Unicast,Multicast,Broadcast}</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="TableSyntax">Broadcast</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">✔</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">—</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">—</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">✔</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">✔</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">✔</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">—</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">✔</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">✔</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">—</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd">
                                    <p class="Table">If <span class="CodeAttributeKey_Namespace">CommunicationPattern</span> is <span class="SourceCode">SendReceive</span>: Specifies how data is distributed.</p>
                                </td>
                            </tr>
                            <tr>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table"><span class="CodeAttributeKey_Namespace">Getter</span>
                                    </p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="TableSyntax">Reference to function prototype</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">—</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">✔</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">—</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">—</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">—</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">—</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">✔</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">—</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">✔</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">✔</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">✔</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd">
                                    <p>An explicit function prototype to be used as getter for the field. If none is specified, a prototype is generated. Only allowed for field getters in a DO interface.</p>
                                </td>
                            </tr>
                            <tr>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table"><span class="CodeAttributeKey_Namespace">HasAnnounceAPI</span>
                                    </p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="TableSyntax"><span class="CodeDataType">bool</span>
                                    </p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="TableSyntax">false</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">✔</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">—</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">—</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">✔</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">✔</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">✔</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">—</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">✔</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">—</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">—</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd">
                                    <p class="Table">When <span class="CodeAttributeKey_Namespace">CommunicationPattern</span> is <span class="SourceCode">PublishSubscribe</span>: Whether the Announcement API shall be provided at the member.</p>
                                </td>
                            </tr>
                            <tr>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table"><span class="CodeAttributeKey_Namespace">MethodCallTimeout</span>
                                    </p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="TableSyntax"><span class="CodeDataType">time</span>
                                    </p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="TableSyntax">—</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">✔</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">✔</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">✔</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">—</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">—</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">—</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">✔</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">✔</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">✔</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">✔</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd">
                                    <p class="Table">Timeout for method calls after which resources are freed if no return has arrived.</p>
                                </td>
                            </tr>
                            <tr>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table"><span class="CodeAttributeKey_Namespace">Monitoring</span>
                                    </p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="TableSyntax"><span class="CodeDataType">bool</span>
                                    </p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="TableSyntax">—</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">✔</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">✔</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">✔</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">—</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">—</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">—</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">—</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">—</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">—</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">—</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd">
                                    <p class="Table">Whether the DO is used as monitoring DO.</p>
                                </td>
                            </tr>
                            <tr>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table"><span class="CodeAttributeKey_Namespace">MonitoringSupport</span>
                                    </p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="TableSyntax"><span class="CodeDataType">bool</span>
                                    </p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="TableSyntax">—</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">✔</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">—</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">—</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">—</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">—</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">—</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">—</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">—</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">—</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">—</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd">
                                    <p class="Table">Whether the DO interface supports the monitoring feature.</p>
                                </td>
                            </tr>
                            <tr>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table"><span class="CodeAttributeKey_Namespace">Ownership</span>
                                    </p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="TableSyntax">
{Exclusive,Shared}</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="TableSyntax">Exclusive</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">✔</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">✔</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">✔</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">✔</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">✔</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">✔</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">—</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">✔</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">✔</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">—</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd">
                                    <p class="Table">If <span class="CodeAttributeKey_Namespace">CommunicationPattern</span> is <span class="SourceCode">PublishSubscribe</span> or <span class="SourceCode">SharedMemory</span>: Whether the system data has exclusive ownership (only one provider) or shared ownership (multiple providers).</p>
                                </td>
                            </tr>
                            <tr>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table"><span class="CodeAttributeKey_Namespace">ReturnDelay</span>
                                    </p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table"><span class="CodeDataType">time</span>
                                    </p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table"><span class="CodeNumericalLiteral">0 ms</span>
                                    </p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">✔</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">✔</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">—</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">—</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">—</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">✔</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">✔</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">✔</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">✔</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">✔</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd">
                                    <p class="Table">Defines how much time should pass until the answer to a function call is sent back.</p>
                                </td>
                            </tr>
                            <tr>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table"><span class="SourceCode">SecurityManager::</span><span class="CodeAttributeKey_Namespace">SecurityProfile</span>
                                    </p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="TableSyntax"><span class="CodeDataType">string</span>
                                    </p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="TableSyntax">—</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">✔</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">✔</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">✔</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">✔</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">✔</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">✔</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">✔</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">✔</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">✔</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">✔</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd">
                                    <p class="Table">The member’s security profile.</p>
                                    <p class="Table">Import of namespace necessary:<span class="SourceCode"> import module "SecurityManager";</span></p>
                                </td>
                            </tr>
                            <tr>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table"><span class="CodeAttributeKey_Namespace">Serialization</span>
                                    </p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="TableSyntax">
{Default,JSON,GoogleProtobuf,Plain}

</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="TableSyntax">Default</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">✔</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">✔</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">✔</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">✔</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">✔</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">✔</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">✔</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">✔</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">✔</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">—</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd">
                                    <p class="Table">Serialization to be used for int and uint with the GPB serialization.</p>
                                </td>
                            </tr>
                            <tr>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table"><span class="CodeAttributeKey_Namespace">Setter</span>
                                    </p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="TableSyntax">Reference to function prototype</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">—</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">✔</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">—</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">—</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">—</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">—</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">✔</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">—</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">✔</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">✔</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">✔</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd">
                                    <p class="Table">An explicit function prototype to be used as setter for the field. If none is specified, a prototype is generated according to <span class="CodeAttributeKey_Namespace">SetterMode</span>. Only allowed for field setters in a DO interface.</p>
                                </td>
                            </tr>
                            <tr>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table"><span class="CodeAttributeKey_Namespace">ServerSimulatorMode</span>
                                    </p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="TableSyntax">{Auto,Suspended,Discard,AutoField}</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="TableSyntax">Auto</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">✔</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">✔</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">—</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">—</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">—</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">✔</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">✔</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">✔</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">✔</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">✔</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd">
                                    <p class="Table">Configures how the call answering machine of CANoe shall respond to a function call.</p>
                                </td>
                            </tr>
                            <tr>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table"><span class="CodeAttributeKey_Namespace">TxCycleTime</span>
                                    </p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="TableSyntax"><span class="CodeDataType">time</span>
                                    </p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="TableSyntax">—</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">✔</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">✔</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">✔</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">✔</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">✔</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">✔</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">—</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">✔</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">—</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">—</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd">
                                    <p class="Table">If <span class="CodeAttributeKey_Namespace">TxTrigger</span> is <span class="SourceCode">Cyclic</span>: The cycle time for the hight-level transmit</p>
                                </td>
                            </tr>
                            <tr>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table"><span class="CodeAttributeKey_Namespace">TxTrigger</span>
                                    </p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="TableSyntax">

{OnUpdate,OnChange,Cyclic}

</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="TableSyntax">OnChange (fields), 

OnUpdate(other members</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">✔</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">✔</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">✔</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">✔</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">✔</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">✔</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">—</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">✔</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">—</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">—</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd">
                                    <p class="Table">How a transmit of the data (on high-level) shall be triggered.</p>
                                </td>
                            </tr>
                            <tr>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table"><span class="CodeAttributeKey_Namespace">TxValueRepresentation</span>
                                    </p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="TableSyntax">{Impl,Raw}

</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="TableSyntax">Impl</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">✔</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">—</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">—</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">✔</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">✔</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">✔</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">✔</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">✔</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">✔</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">—</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd">
                                    <p class="Table">Whether the data for Tx values shall internally be stored in Impl or in Raw representation.</p>
                                </td>
                            </tr>
                            <tr>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table"><span class="CodeAttributeKey_Namespace">UsedForAnalysisResults</span>
                                    </p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="TableSyntax"><span class="CodeDataType">bool</span>
                                    </p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="TableSyntax">—</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">✔</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">—</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">—</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">—</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">—</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">—</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">—</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">—</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">—</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">—</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd">
                                    <p class="Table">Whether the values are used to store calculated analysis results.</p>
                                    <p class="Table">The interface must only contain internal members and no method members.</p>
                                </td>
                            </tr>
                            <tr>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table"><span class="CodeAttributeKey_Namespace">ValueAssignmentEvents</span>
                                    </p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="TableSyntax">

{Last,All}

</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="TableSyntax">Last</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">✔</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">✔</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">✔</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">✔</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">✔</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">✔</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">✔</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">✔</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">✔</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColSep">
                                    <p class="Table">✔</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowSep_ColEnd">
                                    <p class="Table">In case multiple values are assigned at the same point in time: Defines for which of these assignments an event is generated.</p>
                                </td>
                            </tr>
                            <tr>
                                <td class="TableStyle_vTable_Body_0_0_RowEnd_ColSep">
                                    <p class="Table"><span class="CodeAttributeKey_Namespace">VirtualNetwork(s)</span>
                                    </p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowEnd_ColSep">
                                    <p class="TableSyntax">Reference to virtual network(s)</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowEnd_ColSep">
                                    <p class="Table">—</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowEnd_ColSep">
                                    <p class="Table">✔</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowEnd_ColSep">
                                    <p class="Table">✔</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowEnd_ColSep">
                                    <p class="Table">—</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowEnd_ColSep">
                                    <p class="Table">✔</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowEnd_ColSep">
                                    <p class="Table">✔</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowEnd_ColSep">
                                    <p class="Table">✔</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowEnd_ColSep">
                                    <p class="Table">✔</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowEnd_ColSep">
                                    <p class="Table">✔</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowEnd_ColSep">
                                    <p class="Table">✔</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowEnd_ColSep">
                                    <p class="Table">✔</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowEnd_ColEnd">
                                    <p class="Table">Virtual Networks assigned to the DO (interface) or any of its members.</p>
                                </td>
                            </tr>
                        </tbody>
                    </table>
                </div>
                <h2 class="SectionSub">Syntax</h2>
                <table style="width: 100%;mc-table-style: url('../../../Resources/Stylesheets/vTableLight.css');" class="TableStyle-vTableLight" cellspacing="0">
                    <col class="TableStyle-vTableLight-Column-Column1" style="width: 165px;" />
                    <col class="TableStyle-vTableLight-Column-Column1" />
                    <tbody>
                        <tr class="TableStyle-vTableLight-Body-Body1">
                            <td class="TableStyle-vTableLight-BodyE-Column1-Body1">
                                <p class="TableSyntax">interface:</p>
                            </td>
                            <td class="TableStyle-vTableLight-BodyD-Column1-Body1">
                                <p class="TableSyntax">attributes <span class="Keyword">abstract</span>? <span class="Keyword">interface</span> identifier if-inheritance? ( <span class="Keyword">;</span> | <span class="Keyword">{</span> ( do-member | refinement )* <span class="Keyword">}</span> )</p>
                            </td>
                        </tr>
                        <tr class="TableStyle-vTableLight-Body-Body1">
                            <td class="TableStyle-vTableLight-BodyE-Column1-Body1">
                                <p class="TableSyntax">if-inheritance:</p>
                            </td>
                            <td class="TableStyle-vTableLight-BodyD-Column1-Body1">
                                <p class="TableSyntax"><span class="Keyword">:</span> do-inst-type-single ( <span class="Keyword">,</span> do-inst-type-single )*</p>
                            </td>
                        </tr>
                        <tr class="TableStyle-vTableLight-Body-Body1">
                            <td class="TableStyle-vTableLight-BodyE-Column1-Body1">
                                <p class="TableSyntax">do-member:</p>
                            </td>
                            <td class="TableStyle-vTableLight-BodyD-Column1-Body1">
                                <p class="TableSyntax">attributes ( directed-member | emb-do-inlined | emb-do-referred | emb-reference | emb-member-cont )</p>
                            </td>
                        </tr>
                        <tr class="TableStyle-vTableLight-Body-Body1">
                            <td class="TableStyle-vTableLight-BodyE-Column1-Body1">
                                <p class="TableSyntax">directed-member:</p>
                            </td>
                            <td class="TableStyle-vTableLight-BodyD-Column1-Body1">
                                <p class="TableSyntax">member-direction ( data-member | event | field | method-inline | method-ref )</p>
                            </td>
                        </tr>
                        <tr class="TableStyle-vTableLight-Body-Body1">
                            <td class="TableStyle-vTableLight-BodyE-Column1-Body1">
                                <p class="TableSyntax">member-direction:</p>
                            </td>
                            <td class="TableStyle-vTableLight-BodyD-Column1-Body1">
                                <p class="TableSyntax"><span class="Keyword">consumed</span> | <span class="Keyword">provided</span> | <span class="Keyword">internal</span></p>
                            </td>
                        </tr>
                        <tr class="TableStyle-vTableLight-Body-Body1">
                            <td class="TableStyle-vTableLight-BodyE-Column1-Body1">
                                <p class="TableSyntax">data-member:</p>
                            </td>
                            <td class="TableStyle-vTableLight-BodyD-Column1-Body1">
                                <p class="TableSyntax"><span class="Keyword">data</span> data-type identifier initial-value? <span class="Keyword">;</span></p>
                            </td>
                        </tr>
                        <tr class="TableStyle-vTableLight-Body-Body1">
                            <td class="TableStyle-vTableLight-BodyE-Column1-Body1">
                                <p class="TableSyntax">event:</p>
                            </td>
                            <td class="TableStyle-vTableLight-BodyD-Column1-Body1">
                                <p class="TableSyntax"><span class="Keyword">event</span> data-type identifier initial-value? <span class="Keyword">;</span></p>
                            </td>
                        </tr>
                        <tr class="TableStyle-vTableLight-Body-Body1">
                            <td class="TableStyle-vTableLight-BodyE-Column1-Body1">
                                <p class="TableSyntax">field:</p>
                            </td>
                            <td class="TableStyle-vTableLight-BodyD-Column1-Body1">
                                <p class="TableSyntax"><span class="Keyword">field</span> data-type identifier ( initial-value? <span class="Keyword">;</span> | field-accessors ( initial-value <span class="Keyword">;</span> )? )</p>
                            </td>
                        </tr>
                        <tr class="TableStyle-vTableLight-Body-Body1">
                            <td class="TableStyle-vTableLight-BodyE-Column1-Body1">
                                <p class="TableSyntax">field-accessors:</p>
                            </td>
                            <td class="TableStyle-vTableLight-BodyD-Column1-Body1">
                                <p class="TableSyntax"><span class="Keyword">{</span> <span class="Keyword">get;</span>? <span class="Keyword">set;</span>? <span class="Keyword">notify;</span>? <span class="Keyword">}</span></p>
                            </td>
                        </tr>
                        <tr class="TableStyle-vTableLight-Body-Body1">
                            <td class="TableStyle-vTableLight-BodyE-Column1-Body1">
                                <p class="TableSyntax">method-inline:</p>
                            </td>
                            <td class="TableStyle-vTableLight-BodyD-Column1-Body1">
                                <p class="TableSyntax"><span class="Keyword">   method</span>? data-type identifier func-params initial-value? <span class="Keyword">;</span></p>
                            </td>
                        </tr>
                        <tr class="TableStyle-vTableLight-Body-Body1">
                            <td class="TableStyle-vTableLight-BodyE-Column1-Body1">
                                <p class="TableSyntax">method-ref:</p>
                            </td>
                            <td class="TableStyle-vTableLight-BodyD-Column1-Body1">
                                <p class="TableSyntax"><span class="Keyword">method</span> reference[func-prototype] identifier initial-value? <span class="Keyword">;</span></p>
                            </td>
                        </tr>
                        <tr class="TableStyle-vTableLight-Body-Body1">
                            <td class="TableStyle-vTableLight-BodyE-Column1-Body1">
                                <p class="TableSyntax">emb-do-inlined:</p>
                            </td>
                            <td class="TableStyle-vTableLight-BodyD-Column1-Body1">
                                <p class="TableSyntax"><span class="Keyword">  embedded</span> identifier <span class="Keyword">{</span> do-member* <span class="Keyword">}</span></p>
                            </td>
                        </tr>
                        <tr class="TableStyle-vTableLight-Body-Body1">
                            <td class="TableStyle-vTableLight-BodyE-Column1-Body1">
                                <p class="TableSyntax">emb-do-referred:</p>
                            </td>
                            <td class="TableStyle-vTableLight-BodyD-Column1-Body1">
                                <p class="TableSyntax"><span class="Keyword">embedded</span>? do-inst-type-single identifier optional-refinements</p>
                            </td>
                        </tr>
                        <tr class="TableStyle-vTableLight-Body-Body1">
                            <td class="TableStyle-vTableLight-BodyE-Column1-Body1">
                                <p class="TableSyntax">emb-reference:</p>
                            </td>
                            <td class="TableStyle-vTableLight-BodyD-Column1-Body1">
                                <p class="TableSyntax"><span class="Keyword">embedded</span>? do-ref-type-single identifier ( <span class="Keyword">=</span> reference[dist-obj] )? ;</p>
                            </td>
                        </tr>
                        <tr class="TableStyle-vTableLight-Body-Body1">
                            <td class="TableStyle-vTableLight-BodyE-Column1-Body1">
                                <p class="TableSyntax">emb-member-cont:</p>
                            </td>
                            <td class="TableStyle-vTableLight-BodyD-Column1-Body1">
                                <p class="TableSyntax"><span class="Keyword">embedded</span>? do-inst-type-container identifier optional-refinements</p>
                            </td>
                        </tr>
                        <tr class="TableStyle-vTableLight-Body-Body1">
                            <td class="TableStyle-vTableLight-BodyE-Column1-Body1">
                                <p class="TableSyntax">dist-obj:</p>
                            </td>
                            <td class="TableStyle-vTableLight-BodyD-Column1-Body1">
                                <p class="TableSyntax">         dist-obj-inlined | dist-obj-referred</p>
                            </td>
                        </tr>
                        <tr class="TableStyle-vTableLight-Body-Body1">
                            <td class="TableStyle-vTableLight-BodyE-Column1-Body1">
                                <p class="TableSyntax">dist-obj-inlined:</p>
                            </td>
                            <td class="TableStyle-vTableLight-BodyD-Column1-Body1">
                                <p class="TableSyntax"><span class="Keyword">object</span> identifier <span class="Keyword">{</span> do-member* <span class="Keyword">}</span></p>
                            </td>
                        </tr>
                        <tr class="TableStyle-vTableLight-Body-Body1">
                            <td class="TableStyle-vTableLight-BodyE-Column1-Body1">
                                <p class="TableSyntax">dist-obj-referred:</p>
                            </td>
                            <td class="TableStyle-vTableLight-BodyD-Column1-Body1">
                                <p class="TableSyntax">do-inst-type-single identifier optional-refinements</p>
                            </td>
                        </tr>
                        <tr class="TableStyle-vTableLight-Body-Body1">
                            <td class="TableStyle-vTableLight-BodyE-Column1-Body1">
                                <p class="TableSyntax">do-reference:</p>
                            </td>
                            <td class="TableStyle-vTableLight-BodyD-Column1-Body1">
                                <p class="TableSyntax">     do-ref-type-single identifier ( <span class="Keyword">=</span> reference[dist-obj] )? <span class="Keyword">;</span></p>
                            </td>
                        </tr>
                        <tr class="TableStyle-vTableLight-Body-Body1">
                            <td class="TableStyle-vTableLight-BodyE-Column1-Body1">
                                <p class="TableSyntax">do-container:</p>
                            </td>
                            <td class="TableStyle-vTableLight-BodyD-Column1-Body1">
                                <p class="TableSyntax">     do-inst-type-container identifier optional-refinements</p>
                            </td>
                        </tr>
                        <tr class="TableStyle-vTableLight-Body-Body1">
                            <td class="TableStyle-vTableLight-BodyE-Column1-Body1">
                                <p class="TableSyntax">do-ref-container:</p>
                            </td>
                            <td class="TableStyle-vTableLight-BodyD-Column1-Body1">
                                <p class="TableSyntax"> do-ref-type-container identifier optional-refinements</p>
                            </td>
                        </tr>
                        <tr class="TableStyle-vTableLight-Body-Body1">
                            <td class="TableStyle-vTableLight-BodyE-Column1-Body1">
                                <p class="TableSyntax">optional-refinements:</p>
                            </td>
                            <td class="TableStyle-vTableLight-BodyD-Column1-Body1">
                                <p class="TableSyntax"><span class="Keyword">;</span> | scoped-rfmt</p>
                            </td>
                        </tr>
                        <tr class="TableStyle-vTableLight-Body-Body1">
                            <td class="TableStyle-vTableLight-BodyE-Column1-Body1">
                                <p class="TableSyntax">do-type:</p>
                            </td>
                            <td class="TableStyle-vTableLight-BodyD-Column1-Body1">
                                <p class="TableSyntax">do-instance-type | do-reference-type</p>
                            </td>
                        </tr>
                        <tr class="TableStyle-vTableLight-Body-Body1">
                            <td class="TableStyle-vTableLight-BodyE-Column1-Body1">
                                <p class="TableSyntax">do-instance-type:</p>
                            </td>
                            <td class="TableStyle-vTableLight-BodyD-Column1-Body1">
                                <p class="TableSyntax">do-inst-type-single | do-inst-type-container</p>
                            </td>
                        </tr>
                        <tr class="TableStyle-vTableLight-Body-Body1">
                            <td class="TableStyle-vTableLight-BodyE-Column1-Body1">
                                <p class="TableSyntax">do-inst-type-single:</p>
                            </td>
                            <td class="TableStyle-vTableLight-BodyD-Column1-Body1">
                                <p class="TableSyntax">reference[interface] | <span class="Keyword">reverse</span> <span class="Keyword">&lt;</span> reference[interface] <span class="Keyword">&gt;</span></p>
                            </td>
                        </tr>
                        <tr class="TableStyle-vTableLight-Body-Body1">
                            <td class="TableStyle-vTableLight-BodyE-Column1-Body1">
                                <p class="TableSyntax">do-inst-type-container:</p>
                            </td>
                            <td class="TableStyle-vTableLight-BodyD-Column1-Body1">
                                <p class="TableSyntax">do-inst-type-array | do-inst-type-list</p>
                            </td>
                        </tr>
                        <tr class="TableStyle-vTableLight-Body-Body1">
                            <td class="TableStyle-vTableLight-BodyE-Column1-Body1">
                                <p class="TableSyntax">do-inst-type-array:</p>
                            </td>
                            <td class="TableStyle-vTableLight-BodyD-Column1-Body1">
                                <p class="TableSyntax"><span class="Keyword">    array</span> <span class="Keyword">&lt;</span> do-instance-type <span class="Keyword">,</span> expression[uint-value] <span class="Keyword">&gt;</span></p>
                            </td>
                        </tr>
                        <tr class="TableStyle-vTableLight-Body-Body1">
                            <td class="TableStyle-vTableLight-BodyE-Column1-Body1">
                                <p class="TableSyntax">do-inst-type-list:</p>
                            </td>
                            <td class="TableStyle-vTableLight-BodyD-Column1-Body1">
                                <p class="TableSyntax"><span class="Keyword">list</span> <span class="Keyword">&lt;</span> do-instance-type do-list-type-params <span class="Keyword">&gt;</span></p>
                            </td>
                        </tr>
                        <tr class="TableStyle-vTableLight-Body-Body1">
                            <td class="TableStyle-vTableLight-BodyE-Column1-Body1">
                                <p class="TableSyntax">do-reference-type:</p>
                            </td>
                            <td class="TableStyle-vTableLight-BodyD-Column1-Body1">
                                <p class="TableSyntax">do-ref-type-single | do-ref-type-container</p>
                            </td>
                        </tr>
                        <tr class="TableStyle-vTableLight-Body-Body1">
                            <td class="TableStyle-vTableLight-BodyE-Column1-Body1">
                                <p class="TableSyntax">do-ref-type-single:</p>
                            </td>
                            <td class="TableStyle-vTableLight-BodyD-Column1-Body1">
                                <p class="TableSyntax"><span class="Keyword">reference</span> <span class="Keyword">&lt;</span> do-inst-type-single <span class="Keyword">&gt;</span></p>
                            </td>
                        </tr>
                        <tr class="TableStyle-vTableLight-Body-Body1">
                            <td class="TableStyle-vTableLight-BodyE-Column1-Body1">
                                <p class="TableSyntax">do-ref-type-container:</p>
                            </td>
                            <td class="TableStyle-vTableLight-BodyD-Column1-Body1">
                                <p class="TableSyntax"> do-ref-type-array | do-ref-type-list</p>
                            </td>
                        </tr>
                        <tr class="TableStyle-vTableLight-Body-Body1">
                            <td class="TableStyle-vTableLight-BodyE-Column1-Body1">
                                <p class="TableSyntax">do-ref-type-array:</p>
                            </td>
                            <td class="TableStyle-vTableLight-BodyD-Column1-Body1">
                                <p class="TableSyntax"><span class="Keyword">array</span> <span class="Keyword">&lt;</span> do-reference-type <span class="Keyword">,</span> expression[uint-value] <span class="Keyword">&gt;</span></p>
                            </td>
                        </tr>
                        <tr class="TableStyle-vTableLight-Body-Body1">
                            <td class="TableStyle-vTableLight-BodyE-Column1-Body1">
                                <p class="TableSyntax">do-ref-type-list:</p>
                            </td>
                            <td class="TableStyle-vTableLight-BodyD-Column1-Body1">
                                <p class="TableSyntax"><span class="Keyword">list</span> <span class="Keyword">&lt;</span> do-reference-type do-list-type-params <span class="Keyword">&gt;</span></p>
                            </td>
                        </tr>
                        <tr class="TableStyle-vTableLight-Body-Body1">
                            <td class="TableStyle-vTableLight-BodyE-Column1-Body1">
                                <p class="TableSyntax">do-list-type-params:</p>
                            </td>
                            <td class="TableStyle-vTableLight-BodyD-Column1-Body1">
                                <p class="TableSyntax">( <span class="Keyword">,</span> opt-container-size ( <span class="Keyword">,</span> opt-container-size ( <span class="Keyword">,</span> opt-container-size )? )? )?</p>
                            </td>
                        </tr>
                        <tr class="TableStyle-vTableLight-Body-Body1">
                            <td class="TableStyle-vTableLight-BodyB-Column1-Body1">
                                <p class="TableSyntax">opt-container-size:</p>
                            </td>
                            <td class="TableStyle-vTableLight-BodyA-Column1-Body1">
                                <p class="TableSyntax">expression[uint-value] | <span class="Keyword">_</span></p>
                            </td>
                        </tr>
                    </tbody>
                </table>
                <h2 class="SectionMain"><a name="BMVirtualNetworks" id="BMVirtualNetworks"></a>Virtual Networks <a href="#Shortcuts" class="TopOfPage">[▲ back]</a></h2>
                <p>A Virtual Networks (VN) can hold any attribute that is allowed at DO interfaces, DOs, and each’s members. A VN provides default values for all its attributes to all artefacts it is assigned to. Multiple VNs may be assigned to a single DO artefact in which case the order of the VNs matters. Artefacts without a VN are have the default network assigned. VNs may be specified only on namespace level.</p>
                <h3 class="SectionSub">Example</h3>
                <p class="SourceCode"><span class="CodeKeyword">virtualnetwork</span> VN1;<br /><br />[<span class="CodeAttributeKey_Namespace">CommunicationPattern</span>=PublishSubscribe]<br /><span class="CodeKeyword">virtualnetwork</span> VN2;<br /><br />[<span class="CodeAttributeKey_Namespace">AutoAnnounce</span>]<br /><span class="CodeKeyword">virtualnetwork</span> VN3;<br /><br />[<span class="CodeAttributeKey_Namespace">VirtualNetworks</span>={VN1,VN2}]<br /><span class="CodeKeyword">interface</span> DOInterface<br />{<br />&#160;&#160;[<span class="CodeAttributeKey_Namespace">VirtualNetwork</span>=VN3]<br />&#160;&#160;<span class="CodeKeyword">provided data</span> int32 Member1;<br />&#160;&#160;<span class="CodeKeyword">provided data</span> int32 Member2;<br />}<br /><br />[<span class="CodeAttributeKey_Namespace">SendReceive</span>]<br /><span class="CodeKeyword">refine</span> <span class="CodeFormulaVariable">defaultnetwork</span>;</p>
                <p>The default network is a predefined object and attributes can be attached only through refinements. This can be done in any namespace; all refinements will refer to the same default network. DO (interface) members inherit the first VN from their parent DO (interface) if it has any, meaning in the example above <span class="bold">Member2</span> inherits VN1 from <span class="bold">DOInterface</span> while <span class="bold">Member1</span> is attached to VN3.</p>
                <h2 class="SectionSub">Syntax</h2>
                <table style="width: 100%;mc-table-style: url('../../../Resources/Stylesheets/vTableLight.css');" class="TableStyle-vTableLight" cellspacing="0">
                    <col class="TableStyle-vTableLight-Column-Column1" style="width: 165px;" />
                    <col class="TableStyle-vTableLight-Column-Column1" />
                    <tbody>
                        <tr class="TableStyle-vTableLight-Body-Body1">
                            <td class="TableStyle-vTableLight-BodyE-Column1-Body1">
                                <p class="TableSyntax">virtual-network:</p>
                            </td>
                            <td class="TableStyle-vTableLight-BodyD-Column1-Body1">
                                <p class="TableSyntax">attributes <span class="Keyword">virtualnetwork</span> single-vn ( <span class="Keyword">,</span> single-vn )* <span class="Keyword">;</span></p>
                            </td>
                        </tr>
                        <tr class="TableStyle-vTableLight-Body-Body1">
                            <td class="TableStyle-vTableLight-BodyB-Column1-Body1">
                                <p class="TableSyntax">single-vn:</p>
                            </td>
                            <td class="TableStyle-vTableLight-BodyA-Column1-Body1">
                                <p class="TableSyntax">attributes identifier attributes</p>
                            </td>
                        </tr>
                    </tbody>
                </table>
                <h2 class="SectionMain"><a name="BMDOInterface" id="BMDOInterface"></a>DO Interfaces as Data Types <a href="#Shortcuts" class="TopOfPage">[▲ back]</a></h2>
                <p>DO interfaces can be used at any location where a "normal" data type is allowed such as in structs or as parameter of function prototypes. This allows for DOs being sent via the set binding.</p>
                <h2 class="SectionSub">Example</h2>
                <p class="SourceCode"><span class="CodeKeyword">interface</span> DOInterface<br />{<br />&#160;&#160;<span class="CodeKeyword">provided data</span> <span class="CodeDataType">int32</span> Member;<br />}<br /><br /><span class="CodeComment">// Using an interface to create a DO</span><br />DOInterface DO;<br /><br /><span class="CodeComment">// Using an interface as parameter in a function prototype</span><br /><span class="CodeKeyword">typedef</span> MyPrototype = <span class="CodeDataType">void</span>(DOInterface param);<br /><br /><span class="CodeComment">// Using an interface reversed as struct member which may also be null</span><br /><span class="CodeKeyword">struct</span> MyStruct<br />{<br />&#160;&#160;<span class="CodeDataType">int32</span> ScalarMember;<br />&#160;&#160;<span class="CodeKeyword">nullable</span>&lt;<span class="CodeKeyword">reverse</span>&lt;DOInterface&gt;&gt; InterfaceMember;<br />}<br /><br />[<span class="CodeAttributeKey_Namespace">Binding</span>=<span class="CodeStringLiteral">"MQTT"</span>]<br /><span class="CodeKeyword">interface</span> OtherInterface<br />{<br />&#160;&#160;<span class="CodeKeyword">provided data</span> &#160;&#160;MyStruct &#160;&#160;&#160;DataMember = { <span class="CodeNumericalLiteral">5</span>, <span class="CodeKeyword">null</span> };<br />&#160;&#160;<span class="CodeKeyword">provided method</span> MyPrototype Method;<br /><br />&#160;&#160;<span class="CodeKeyword">refine</span> Method.param = DO;<br />}</p>
                <p>When being used as a data type, DO interfaces may be nullable as shown in the example above. This allows for assigning <span class="CodeKeyword">null</span> as initial value within DOs and DO interfaces. Although DO interfaces can be used seamlessly both as pure interface and as data type in vCDL, there will be a distinct named data type in CANoe which will show up in the generated APIs for any application model. Even worse: If a DO interface is used in multiple variants (reversed and non-reversed, nullable and not nullable, etc.), many lengthy named data types will be created. However, vCDL offers a way to assign custom names to these data types:</p>
                <p class="SourceCode"><span class="CodeKeyword">interface</span> DOInterface<br />{<br />&#160;&#160;<span class="CodeKeyword">provided data</span> <span class="CodeDataType">int32</span> Member;<br />}<br /><br /><span class="CodeComment">// Assigning a custom name to a DO interface used as data type</span><br />[<span class="CodeAttributeKey_Namespace">DataType</span>]<br /><span class="CodeKeyword">typedef</span> MyInterfaceDataType = <span class="CodeKeyword">reverse</span>&lt;MyInterface&gt;;<br /><br /><span class="CodeComment">// Using the custom named interface data type</span><br /><span class="CodeKeyword">typedef</span> MyPrototype = <span class="CodeDataType">void</span>(MyInterfaceDataType param);</p>
                <p>Placing the <span class="bold">DataType</span> attribute at a typedef will alter its behavior such that no new interface is created that derives from interface specified on the typedef’s right hand side, but instead a custom named data type for the DO interface is created.</p>
                <h2 class="SectionSub">Attributes</h2>
                <div>
                    <table style="mc-table-style: url('../../../Resources/Stylesheets/vTable.css');margin-left: 0;margin-right: auto;" class="TableStyle_vTable" cellspacing="0">
                        <col />
                        <col />
                        <col />
                        <col />
                        <thead>
                            <tr>
                                <th class="TableStyle_vTable_Head_0_0_RowSep_ColSep">
                                    <p class="TableHead">Name</p>
                                </th>
                                <th class="TableStyle_vTable_Head_0_0_RowSep_ColSep">
                                    <p class="TableHead">Type</p>
                                </th>
                                <th class="TableStyle_vTable_Head_0_0_RowSep_ColSep">
                                    <p class="TableHead">Default</p>
                                </th>
                                <th class="TableStyle_vTable_Head_0_0_RowSep_ColEnd">
                                    <p class="TableHead">Semantics</p>
                                </th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr>
                                <td class="TableStyle_vTable_Body_0_0_RowEnd_ColSep">
                                    <p class="Table"><span class="CodeAttributeKey_Namespace">DataType</span>
                                    </p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowEnd_ColSep">
                                    <p class="TableSyntax"><span class="CodeDataType">bool</span>
                                    </p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowEnd_ColSep">
                                    <p class="TableSyntax">false</p>
                                </td>
                                <td class="TableStyle_vTable_Body_0_0_RowEnd_ColEnd">
                                    <p class="Table">When set will change the typedef's behavior such that a data type is created instead of a derived DO interface. Only allowed at typedefs with a DO interface.</p>
                                </td>
                            </tr>
                        </tbody>
                    </table>
                </div>
                <h2 class="SectionMain"><a name="BMInlinedDO" id="BMInlinedDO"></a>Inlined DO Interfaces <a href="#Shortcuts" class="TopOfPage">[▲ back]</a></h2>
                <p>Distributed objects, both on namespace level and embedded, can define the DO interface inline instead of referring an existing one. This is useful for quickly getting a DO with a unique interface, but its interface will have a generated name and thus be hard to handle later, e.g., in the application model. We therefore encourage user to declare interfaces separately from DOs.</p>
                <p class="SourceCode"><span class="CodeKeyword">object</span> DO<br />{<br />&#160;&#160;<span class="CodeKeyword">provided event</span> <span class="CodeDataType">int32</span> Event = <span class="CodeNumericalLiteral">7</span>;<br /><br />&#160;&#160;<span class="CodeKeyword">embedded</span> EmbeddedDO<br />&#160;&#160;{<br />&#160;&#160;&#160;&#160;<span class="CodeKeyword">consumed field</span> <span class="CodeDataType">float</span> Field = <span class="CodeNumericalLiteral">4</span>.<span class="CodeNumericalLiteral">5</span>;<br />&#160;&#160;}<br />}</p>
                <p>Note that the <span class="CodeKeyword">embedded</span> keyword is mandatory when inlining the DO interface whereas it is optional when referring an existing DO interface. Note also that with vCDL 2.0 the object syntax cannot be used in conjunction with an existing DO interface anymore.</p>
                <p class="LinkList">&#160;</p>
            </div>
        </div>
        <div class="Footer">
            <div class="FooterWhite">
                <table class="FooterWhite" style="border-collapse: collapse;margin-left: auto;margin-right: auto;">
                    <col style="width: 70px;" data-mc-conditions="vConditions.HTML5Link" />
                    <col style="width: 16px;" data-mc-conditions="vConditions.HTML5Link" />
                    <col data-mc-conditions="" />
                    <col />
                    <tbody>
                        <tr>
                            <td>
                                <div class="buttons popup-container clearfix topicToolbarProxy topicToolbarProxyFooter _Skins_HTML5TopicToolbar mc-component nocontent">
                                    <div class="button-group-container-left">
                                        <button class="button needs-pie expand-all-button" data-state1-class="expand-all-button" data-state2-class="collapse-all-button" data-state2-title="Collapse all" title="Expand all" data-state1-title="Expand all">
                                            <div>
                                                <div role="img" class="button-icon-wrapper" aria-label="Expand all">
                                                    <div class="button-icon"> </div>
                                                </div>
                                            </div>
                                        </button>
                                        <button class="button needs-pie remove-highlight-button" title="Remove Highlights">
                                            <div>
                                                <div role="img" class="button-icon-wrapper">
                                                    <div class="button-icon"> </div>
                                                </div>
                                            </div>
                                        </button>
                                    </div>
                                </div>
                            </td>
                            <td>
                                <p class="vec_BuildInfo"><a href="../../Shared/HowToUseOnlineHelp.htm" title="Tips for using the help" alt="Tips for using the help"><img src="../../../Resources/vImages/vBackstage/vHelpInfo.png" /></a>
                                </p>
                            </td>
                            <td>
                                <p class="vec_BuildInfo">•&#160;&#160;Technical&#160;References are only&#160;available&#160;in&#160;English</p>
                            </td>
                            <td>
                                <p class="vec_BuildInfo" style="text-align: right;"><span class="mc-variable Vector.BuildTime variable">2023-09-26T19:49:32</span>
                                </p>
                            </td>
                        </tr>
                    </tbody>
                </table>
            </div>
            <table style="width: 100%;border-collapse: separate;border-spacing: 3px 0px;margin-left: auto;margin-right: auto;caption-side: top;">
                <col />
                <col />
                <col />
                <col data-mc-conditions="vConditions.HTML5Link" />
                <tbody>
                    <tr>
                        <td style="background-color: #b70032;padding-left: 5pt;padding-right: 5pt;padding-top: 5pt;padding-bottom: 5pt;">
                            <p class="vec_Footer">©&#160;Vector Informatik GmbH</p>
                        </td>
                        <td style="background-color: #b70032;padding-left: 5pt;padding-right: 5pt;padding-top: 5pt;padding-bottom: 5pt;text-align: right;">
                            <p class="vec_FooterBold">
                                <MadCap:conditionalText data-mc-conditions="vConditions.vTESTstudioExcluded,vConditions.TestDataEditorExcluded">CANoe</MadCap:conditionalText> Version <MadCap:conditionalText data-mc-conditions="vConditions.vTESTstudioExcluded">17 SP3</MadCap:conditionalText></p>
                        </td>
                        <td style="background-color: #b70032;padding-left: 5pt;padding-right: 5pt;padding-top: 5pt;padding-bottom: 0pt;text-align: right;">
                            <p class="vec_Footer"><a href="../../Shared/ContactCopyrightLicense.htm" class="vec_Footer MCXref xref xrefvec_Footer">Contact/Copyright/License</a>
                            </p>
                        </td>
                        <td style="background-color: #b70032;padding-left: 5pt;padding-right: 5pt;padding-top: 5pt;padding-bottom: 0pt;text-align: right;">
                            <p class="vec_Footer"><a href="https://www.vector.com/int/en/company/get-info/privacy-policy/" target="_blank" class="vec_Footer">Data Privacy Notice</a>
                            </p>
                        </td>
                    </tr>
                </tbody>
            </table>
        </div>
    </body>
</html>