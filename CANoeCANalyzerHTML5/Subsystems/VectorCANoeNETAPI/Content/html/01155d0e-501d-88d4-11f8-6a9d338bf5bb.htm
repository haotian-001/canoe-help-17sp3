<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en-us" xml:lang="en-us" data-mc-search-type="Stem" data-mc-help-system-file-name="VectorCANoeNETAPI.xml" data-mc-path-to-help-system="../../" data-mc-toc-path="Vector.CANoe.Runtime|Binding Class|Binding Methods" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic" data-mc-preload-images="false" data-mc-in-preview-mode="false">
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta charset="utf-8" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
        <meta name="msapplication-config" content="../../Skins/Favicons/browserconfig.xml" />
        <meta name="Convert" content="Yes" />
        <meta name="Hierarchy" content="Sub" />
        <meta name="Language" content="DE,EN" />
        <meta name="Product" content="CANoe,CANoe4SW,vTESTstudio" />
        <meta name="VersionCANoeCANalyzerFamily" content="17 SP3" />
        <meta name="VersionvTESTstudio" content="8 SP3" />
        <meta name="Language" content="en-us" />
        <meta name="System.Keywords" content="Binding.CreateProviderCallContext(Of T%2C U) method" />
        <meta name="Microsoft.Help.F1" content="Vector.CANoe.Runtime.Binding.CreateProviderCallContext``2" />
        <meta name="Microsoft.Help.Id" content="M:Vector.CANoe.Runtime.Binding.CreateProviderCallContext``2(``0,System.Int64,``1@)" />
        <meta name="Description" content="Creates a call context for usage in CallReceived." />
        <meta name="Microsoft.Help.ContentType" content="Reference" />
        <meta name="BrandingAware" content="true" />
        <meta name="container" content="Vector.CANoe.Runtime" />
        <meta name="file" content="01155d0e-501d-88d4-11f8-6a9d338bf5bb" />
        <meta name="guid" content="01155d0e-501d-88d4-11f8-6a9d338bf5bb" />
        <link rel="apple-touch-icon" sizes="180x180" href="../../Skins/Favicons/apple-touch-icon.png" />
        <link rel="shortcut icon" href="../../Skins/Favicons/favicon-32x32.png" />
        <link rel="icon" sizes="96x96" href="../../Skins/Favicons/favicon-96x96.png" />
        <link rel="icon" sizes="32x32" href="../../Skins/Favicons/favicon-32x32.png" />
        <link rel="icon" sizes="16x16" href="../../Skins/Favicons/favicon-16x16.png" /><title>Binding.CreateProviderCallContext(T, U) Method </title>
        <link href="../../Skins/Default/Stylesheets/Slideshow.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../Skins/Default/Stylesheets/Components/Styles.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../Skins/Default/Stylesheets/Components/Tablet.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../Skins/Default/Stylesheets/Components/Mobile.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../Skins/Default/Stylesheets/Components/Print.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link rel="stylesheet" type="text/css" href="../styles/branding.css" />
        <link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" />
        <link type="text/css" rel="stylesheet" href="../styles/highlight.css" />
        <link rel="stylesheet" type="text/css" href="../styles/branding-Help1.css" />
        <link rel="apple-touch-icon" sizes="180x180" href="../../Skins/Favicons/apple-touch-icon.png" />
        <link rel="shortcut icon" href="../../Skins/Favicons/favicon-32x32.png" />
        <link rel="icon" sizes="96x96" href="../../Skins/Favicons/favicon-96x96.png" />
        <link rel="icon" sizes="32x32" href="../../Skins/Favicons/favicon-32x32.png" />
        <link rel="icon" sizes="16x16" href="../../Skins/Favicons/favicon-16x16.png" />
        <link rel="shortcut icon" href="..\icons\favicon.ico" />
        <script type="text/javascript" src="../scripts/branding.js">/*<![CDATA[*/
 
/*]]>*/</script>
        <script type="text/javascript" src="../scripts/highlight.js">/*<![CDATA[*/
 
/*]]>*/</script>
        <script src="../../Resources/Scripts/jquery.min.js" type="text/javascript">
        </script>
        <script src="../../Resources/Scripts/purify.min.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../Resources/Scripts/require.min.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../Resources/Scripts/require.config.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../Resources/Scripts/foundation.min.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../Resources/Scripts/plugins.min.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../Resources/Scripts/MadCapAll.js" type="text/javascript" defer="defer">
        </script>
    </head>
    <body onload="OnLoad('cs')">
        <p class="MCWebHelpFramesetLink MCWebHelpFramesetLinkTop"><a href="../../VectorCANoeNETAPI.htm#html/01155d0e-501d-88d4-11f8-6a9d338bf5bb.htm">Open topic with navigation</a>
        </p>
        <div role="main" id="mc-main-content">
            <input type="hidden" id="userDataCache" class="userDataStyle" />
            <div class="pageHeader" id="PageHeader"><a name="kanchor7428"></a><a name="aanchor7427"></a>
                <MadCap:concept term="SFApiVectorCANoeRuntime" />Vector CANoe .NET API</div>
            <div class="pageBody">
                <div class="topicContent" id="TopicContent">
                    <table class="titleTable">
                        <tr>
                            <td class="titleColumn">
                                <h1>Binding<span id="LST45992BD5_0"></span><script type="text/javascript">/*<![CDATA[*/
AddLanguageSpecificTextSet("LST45992BD5_0?cpp=::|nu=.");
/*]]>*/</script>CreateProviderCallContext<span id="LST45992BD5_1"></span><script type="text/javascript">/*<![CDATA[*/
AddLanguageSpecificTextSet("LST45992BD5_1?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");
/*]]>*/</script><span class="typeparameter">T</span>, <span class="typeparameter">U</span><span id="LST45992BD5_2"></span><script type="text/javascript">/*<![CDATA[*/
AddLanguageSpecificTextSet("LST45992BD5_2?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");
/*]]>*/</script> Method </h1>
                            </td>
                        </tr>
                    </table><span class="introStyle"></span>
                    <div class="summary">
            Creates a call context for usage in CallReceived.
            </div>
                    <p /><strong>Namespace:</strong>   
  &#160;<a href="c52a109e-d9a8-3382-973a-3e3fb60dda38.htm">Vector.CANoe.Runtime</a><br /><strong>Assembly:</strong>
  &#160;Vector.CANoe.Runtime.dll<div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID1RB')" onkeypress="SectionExpandCollapse_CheckKey('ID1RB', event)" tabindex="0"><img id="ID1RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Syntax</span></div><div id="ID1RBSection" class="collapsibleSection"><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0ECCA_tab1" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0ECCA','cs','1','3');return false;">C#</a></div><div id="ID0ECCA_tab2" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0ECCA','vb','2','3');return false;">VB</a></div><div id="ID0ECCA_tab3" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0ECCA','cpp','3','3');return false;">C++</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0ECCA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0ECCA');return false;" title="Copy">Copy</a></div></div><div id="ID0ECCA_code_Div1" class="codeSnippetContainerCode" style="display: block;"><pre xml:space="preserve"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="identifier">CreateProviderCallContext</span>&lt;T, U&gt;(
	T <span class="parameter">member</span>,
	<span class="identifier">long</span> <span class="parameter">requestID</span>,
	<span class="keyword">out</span> U <span class="parameter">callContext</span>
)
<span class="keyword">where</span> T : <span class="keyword">class</span>, <span class="identifier">Object</span>, <span class="identifier">IProviderBindingCallContextProvider</span>&lt;U&gt;, <span class="identifier">IDOMethodMember</span>
<span class="keyword">where</span> U : <span class="keyword">class</span>, <span class="identifier">ICallContext</span>
</pre></div><div id="ID0ECCA_code_Div2" class="codeSnippetContainerCode" style="display: none;"><pre xml:space="preserve"><span class="keyword">Public</span> <span class="keyword">Shared</span> <span class="keyword">Sub</span> <span class="identifier">CreateProviderCallContext</span>(<span class="keyword">Of</span> T <span class="keyword">As</span> {<span class="keyword">Class</span>, <span class="identifier">Object</span>, <span class="identifier">IProviderBindingCallContextProvider</span>(<span class="keyword">Of</span> U), <span class="identifier">IDOMethodMember</span>}, U <span class="keyword">As</span> {<span class="keyword">Class</span>, <span class="identifier">ICallContext</span>}) ( 
	<span class="parameter">member</span> <span class="keyword">As</span> T,
	<span class="parameter">requestID</span> <span class="keyword">As</span> <span class="identifier">Long</span>,
	&lt;<span class="identifier">OutAttribute</span>&gt; <span class="keyword">ByRef</span> <span class="parameter">callContext</span> <span class="keyword">As</span> U
)</pre></div><div id="ID0ECCA_code_Div3" class="codeSnippetContainerCode" style="display: none;"><pre xml:space="preserve"><span class="keyword">public</span>:
<span class="keyword">generic</span>&lt;<span class="keyword">typename</span> T, <span class="keyword">typename</span> U&gt;
<span class="keyword">where</span> T : <span class="keyword">ref class</span>, <span class="identifier">Object</span>, <span class="identifier">IProviderBindingCallContextProvider</span>&lt;U&gt;, <span class="identifier">IDOMethodMember</span>
<span class="keyword">where</span> U : <span class="keyword">ref class</span>, <span class="identifier">ICallContext</span>
<span class="keyword">static</span> <span class="keyword">void</span> <span class="identifier">CreateProviderCallContext</span>(
	T <span class="parameter">member</span>, 
	<span class="identifier">long long</span> <span class="parameter">requestID</span>, 
	[<span class="identifier">OutAttribute</span>] U% <span class="parameter">callContext</span>
)</pre></div></div></div><script type="text/javascript">/*<![CDATA[*/
AddLanguageTabSet("ID0ECCA");
/*]]>*/</script><h4 class="subHeading">Parameters</h4><dl><dt><span class="parameter">member</span></dt><dd>Type:&#160;<span class="selflink"><span class="typeparameter">T</span></span><br />the method member for which the return was received</dd><dt><span class="parameter">requestID</span></dt><dd>Type:&#160;<a href="https://docs.microsoft.com/dotnet/api/system.int64" target="_blank">System<span id="LST45992BD5_3"></span><script type="text/javascript">/*<![CDATA[*/
AddLanguageSpecificTextSet("LST45992BD5_3?cs=.|vb=.|cpp=::|nu=.|fs=.");
/*]]>*/</script>Int64</a><br />the request ID for the call</dd><dt><span class="parameter">callContext</span></dt><dd>Type:&#160;<span class="selflink"><span class="typeparameter">U</span></span><span id="LST45992BD5_4"></span><script type="text/javascript">/*<![CDATA[*/
AddLanguageSpecificTextSet("LST45992BD5_4?cpp=%");
/*]]>*/</script><br />the new call context</dd></dl><h4 class="subHeading">Type Parameters</h4><dl><dt><span class="parameter">T</span></dt><dd>the type of the method member for which the return was received</dd><dt><span class="parameter">U</span></dt><dd>the type of the new call context; this should be the BindingCallContext type from the interface types.</dd></dl></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID2RB')" onkeypress="SectionExpandCollapse_CheckKey('ID2RB', event)" tabindex="0"><img id="ID2RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Remarks</span></div><div id="ID2RBSection" class="collapsibleSection">Create a call context, fill it with the received parameters and then call CallReceived. Note that different to normal call contexts,
            binding call contexts allow to set the in parameters of the call.</div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID3RB')" onkeypress="SectionExpandCollapse_CheckKey('ID3RB', event)" tabindex="0"><img id="ID3RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Examples</span></div><div id="ID3RBSection" class="collapsibleSection"><div class="codeSnippetContainer"><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EAAABA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EAAABA');return false;" title="Copy">Copy</a></div></div><div id="ID0EAAABA_code_Div1" class="codeSnippetContainerCode" style="display: block;"><pre xml:space="preserve"><span class="highlight-lineno"> 1</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span><span class="highlight-comment">/*
<span class="highlight-lineno"> 2</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span> vCDL definition:
<span class="highlight-lineno"> 3</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>  namespace Calc
<span class="highlight-lineno"> 4</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>  {
<span class="highlight-lineno"> 5</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    interface ICalculator
<span class="highlight-lineno"> 6</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    {
<span class="highlight-lineno"> 7</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>      provided double Divide(double x, double y, out bool success);
<span class="highlight-lineno"> 8</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    }
<span class="highlight-lineno"> 9</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>
<span class="highlight-lineno">10</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    [Binding="C#"]
<span class="highlight-lineno">11</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    object CalculatorServer : ICalculator;
<span class="highlight-lineno">12</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>  }*/</span>
<span class="highlight-lineno">13</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>
<span class="highlight-lineno">14</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span><span class="highlight-comment">// Implementation class for a gRPC service</span>
<span class="highlight-lineno">15</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span><span class="highlight-keyword">class</span> CalculatorImpl : CalculatorService.CalculatorServiceBase
<span class="highlight-lineno">16</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>{
<span class="highlight-lineno">17</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>  <span class="highlight-comment">// generate unique request IDs</span>
<span class="highlight-lineno">18</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>  <span class="highlight-keyword">private</span> <span class="highlight-keyword">long</span> mNextRequestID = <span class="highlight-number">1</span>;
<span class="highlight-lineno">19</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>
<span class="highlight-lineno">20</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>  <span class="highlight-comment">// for each request, store a future into which the return values will be passed</span>
<span class="highlight-lineno">21</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>  <span class="highlight-comment">// the Future&lt;T&gt; is a simple wrapper for a Task</span>
<span class="highlight-lineno">22</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>  <span class="highlight-keyword">private</span> Dictionary&lt;<span class="highlight-keyword">long</span>, Future&lt;Result&gt;&gt; mFutures = <span class="highlight-keyword">new</span> Dictionary&lt;<span class="highlight-keyword">long</span>, Future&lt;Result&gt;&gt;();
<span class="highlight-lineno">23</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>
<span class="highlight-lineno">24</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>  <span class="highlight-comment">// protect the futures container from concurrent access</span>
<span class="highlight-lineno">25</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>  <span class="highlight-keyword">private</span> Object mLockObject = <span class="highlight-keyword">new</span> <span class="highlight-keyword">object</span>();
<span class="highlight-lineno">26</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>
<span class="highlight-lineno">27</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>  <span class="highlight-comment">// called when a gRPC request arrives</span>
<span class="highlight-lineno">28</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>  <span class="highlight-keyword">public</span> <span class="highlight-keyword">override</span> Task&lt;Result&gt; Divide(Input request, ServerCallContext context)
<span class="highlight-lineno">29</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>  {
<span class="highlight-lineno">30</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    <span class="highlight-comment">// allocate a future for the request</span>
<span class="highlight-lineno">31</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    <span class="highlight-keyword">var</span> future = <span class="highlight-keyword">new</span> Future&lt;Result&gt;();
<span class="highlight-lineno">32</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    <span class="highlight-keyword">lock</span> (mLockObject)
<span class="highlight-lineno">33</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    {
<span class="highlight-lineno">34</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>      mFutures[mNextRequestID] = future;
<span class="highlight-lineno">35</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    }
<span class="highlight-lineno">36</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    <span class="highlight-comment">// create a call context, set the input parameters and pass it to Binding.CallReceived</span>
<span class="highlight-lineno">37</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    Binding.CreateProviderCallContext(CalculatorServer.Divide, mNextRequestID, 
<span class="highlight-lineno">38</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>      <span class="highlight-keyword">out</span> Calc.ICalculator_Types.Divide.BindingCallContext callContext);
<span class="highlight-lineno">39</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    <span class="highlight-keyword">using</span> (callContext)
<span class="highlight-lineno">40</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    {
<span class="highlight-lineno">41</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>      callContext.x = request.X;
<span class="highlight-lineno">42</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>      callContext.y = request.Y;
<span class="highlight-lineno">43</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>      Binding.CallReceived(CalculatorServer.Divide, callContext);
<span class="highlight-lineno">44</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    }
<span class="highlight-lineno">45</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    ++mNextRequestID;
<span class="highlight-lineno">46</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    <span class="highlight-keyword">return</span> future.Task;
<span class="highlight-lineno">47</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>  }
<span class="highlight-lineno">48</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>
<span class="highlight-lineno">49</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>  <span class="highlight-comment">// called from [OnTransmitReturn]</span>
<span class="highlight-lineno">50</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>  <span class="highlight-keyword">public</span> <span class="highlight-keyword">void</span> ReturnResult(<span class="highlight-keyword">long</span> requestID, Result result)
<span class="highlight-lineno">51</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>  {
<span class="highlight-lineno">52</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    Future&lt;Result&gt; future;
<span class="highlight-lineno">53</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    <span class="highlight-keyword">lock</span> (mLockObject)
<span class="highlight-lineno">54</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    {
<span class="highlight-lineno">55</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>      <span class="highlight-keyword">if</span> (mFutures.TryGetValue(requestID, <span class="highlight-keyword">out</span> future))
<span class="highlight-lineno">56</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>      {
<span class="highlight-lineno">57</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>        mFutures.Remove(requestID);
<span class="highlight-lineno">58</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>      }
<span class="highlight-lineno">59</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    }
<span class="highlight-lineno">60</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    <span class="highlight-comment">// completes the Task in the future</span>
<span class="highlight-lineno">61</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    future?.Set(result);
<span class="highlight-lineno">62</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>  }
<span class="highlight-lineno">63</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>}
<span class="highlight-lineno">64</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>
<span class="highlight-lineno">65</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>[OnTransmitReturn(CalculatorServer.MemberIDs.Divide)]
<span class="highlight-lineno">66</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span><span class="highlight-keyword">public</span> <span class="highlight-keyword">void</span> TransmitDivide(Calc.ICalculator_Types.Divide.TransientCallContext callContext)
<span class="highlight-lineno">67</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>{
<span class="highlight-lineno">68</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>  mCalculator.ReturnResult(callContext.ReqID, 
<span class="highlight-lineno">69</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    <span class="highlight-keyword">new</span> Result { Success = callContext.success ? <span class="highlight-number">1</span> : <span class="highlight-number">0</span>, Value = callContext.Result });
<span class="highlight-lineno">70</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>}</pre></div></div></div><script type="text/javascript">/*<![CDATA[*/
AddLanguageTabSet("ID0EAAABA");
/*]]>*/</script></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID4RB')" onkeypress="SectionExpandCollapse_CheckKey('ID4RB', event)" tabindex="0"><img id="ID4RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Version Information</span></div><div id="ID4RBSection" class="collapsibleSection"><h4 class="subHeading" />Supported from: 15.0<br /></div><div class="collapsibleAreaRegion" id="seeAlsoSection"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID5RB')" onkeypress="SectionExpandCollapse_CheckKey('ID5RB', event)" tabindex="0"><img id="ID5RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />See Also</span></div><div id="ID5RBSection" class="collapsibleSection"><h4 class="subHeading">Reference</h4><div class="seeAlsoStyle"><a href="1cef98d4-54cd-9aa1-f3b0-bae9aa683223.htm">Binding Class</a></div><div class="seeAlsoStyle"><a href="c52a109e-d9a8-3382-973a-3e3fb60dda38.htm">Vector.CANoe.Runtime Namespace</a></div></div></div>
            </div>
        </div>
        <div id="pageFooter" class="pageFooter"> © Vector Informatik GmbH — <span class="mc-variable Vector.BuildTime variable">2023-09-26T19:08:13</span></div>
    </body>
</html>