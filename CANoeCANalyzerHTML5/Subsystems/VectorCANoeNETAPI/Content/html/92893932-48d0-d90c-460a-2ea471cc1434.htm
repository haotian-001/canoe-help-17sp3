<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en-us" xml:lang="en-us" data-mc-search-type="Stem" data-mc-help-system-file-name="VectorCANoeNETAPI.xml" data-mc-path-to-help-system="../../" data-mc-toc-path="Vector.CANoe.Runtime" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic" data-mc-preload-images="false" data-mc-in-preview-mode="false">
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta charset="utf-8" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
        <meta name="msapplication-config" content="../../Skins/Favicons/browserconfig.xml" />
        <meta name="Convert" content="Yes" />
        <meta name="Hierarchy" content="Sub" />
        <meta name="Language" content="DE,EN" />
        <meta name="Product" content="CANoe,CANoe4SW,vTESTstudio" />
        <meta name="VersionCANoeCANalyzerFamily" content="17 SP3" />
        <meta name="VersionvTESTstudio" content="8 SP3" />
        <meta name="Language" content="en-us" />
        <meta name="System.Keywords" content="Vector.CANoe.Runtime.EthernetPacket class" />
        <meta name="Microsoft.Help.F1" content="Vector.CANoe.Runtime.EthernetPacket" />
        <meta name="Microsoft.Help.Id" content="T:Vector.CANoe.Runtime.EthernetPacket" />
        <meta name="Description" content="Class which represents an ethernet frame." />
        <meta name="Microsoft.Help.ContentType" content="Reference" />
        <meta name="BrandingAware" content="true" />
        <meta name="container" content="Vector.CANoe.Runtime" />
        <meta name="file" content="92893932-48d0-d90c-460a-2ea471cc1434" />
        <meta name="guid" content="92893932-48d0-d90c-460a-2ea471cc1434" />
        <link rel="apple-touch-icon" sizes="180x180" href="../../Skins/Favicons/apple-touch-icon.png" />
        <link rel="shortcut icon" href="../../Skins/Favicons/favicon-32x32.png" />
        <link rel="icon" sizes="96x96" href="../../Skins/Favicons/favicon-96x96.png" />
        <link rel="icon" sizes="32x32" href="../../Skins/Favicons/favicon-32x32.png" />
        <link rel="icon" sizes="16x16" href="../../Skins/Favicons/favicon-16x16.png" /><title>EthernetPacket Class</title>
        <link href="../../Skins/Default/Stylesheets/Slideshow.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../Skins/Default/Stylesheets/Components/Styles.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../Skins/Default/Stylesheets/Components/Tablet.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../Skins/Default/Stylesheets/Components/Mobile.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../Skins/Default/Stylesheets/Components/Print.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link rel="stylesheet" type="text/css" href="../styles/branding.css" />
        <link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" />
        <link type="text/css" rel="stylesheet" href="../styles/highlight.css" />
        <link rel="stylesheet" type="text/css" href="../styles/branding-Help1.css" />
        <link rel="apple-touch-icon" sizes="180x180" href="../../Skins/Favicons/apple-touch-icon.png" />
        <link rel="shortcut icon" href="../../Skins/Favicons/favicon-32x32.png" />
        <link rel="icon" sizes="96x96" href="../../Skins/Favicons/favicon-96x96.png" />
        <link rel="icon" sizes="32x32" href="../../Skins/Favicons/favicon-32x32.png" />
        <link rel="icon" sizes="16x16" href="../../Skins/Favicons/favicon-16x16.png" />
        <link rel="shortcut icon" href="..\icons\favicon.ico" />
        <script type="text/javascript" src="../scripts/branding.js">/*<![CDATA[*/
 
/*]]>*/</script>
        <script type="text/javascript" src="../scripts/highlight.js">/*<![CDATA[*/
 
/*]]>*/</script>
        <script src="../../Resources/Scripts/jquery.min.js" type="text/javascript">
        </script>
        <script src="../../Resources/Scripts/purify.min.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../Resources/Scripts/require.min.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../Resources/Scripts/require.config.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../Resources/Scripts/foundation.min.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../Resources/Scripts/plugins.min.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../Resources/Scripts/MadCapAll.js" type="text/javascript" defer="defer">
        </script>
    </head>
    <body onload="OnLoad('cs')">
        <p class="MCWebHelpFramesetLink MCWebHelpFramesetLinkTop"><a href="../../VectorCANoeNETAPI.htm#html/92893932-48d0-d90c-460a-2ea471cc1434.htm">Open topic with navigation</a>
        </p>
        <div role="main" id="mc-main-content">
            <input type="hidden" id="userDataCache" class="userDataStyle" />
            <div class="pageHeader" id="PageHeader"><a name="kanchor4108"></a><a name="aanchor4107"></a>
                <MadCap:concept term="SFApiVectorCANoeRuntime" />Vector CANoe .NET API</div>
            <div class="pageBody">
                <div class="topicContent" id="TopicContent">
                    <table class="titleTable">
                        <tr>
                            <td class="titleColumn">
                                <h1>EthernetPacket Class</h1>
                            </td>
                        </tr>
                    </table><span class="introStyle"></span>
                    <div class="summary">
            Class which represents an ethernet frame.
            </div>
                    <div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID0RB')" onkeypress="SectionExpandCollapse_CheckKey('ID0RB', event)" tabindex="0"><img id="ID0RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Inheritance Hierarchy</span>
                    </div>
                    <div id="ID0RBSection" class="collapsibleSection"><a href="https://docs.microsoft.com/dotnet/api/system.object" target="_blank">System<span id="LST8BAC35A4_0"></span><script type="text/javascript">/*<![CDATA[*/
AddLanguageSpecificTextSet("LST8BAC35A4_0?cs=.|vb=.|cpp=::|nu=.|fs=.");
/*]]>*/</script>Object</a>
                        <br />&#160;&#160;<a href="https://docs.microsoft.com/dotnet/api/system.marshalbyrefobject" target="_blank">System<span id="LST8BAC35A4_1"></span><script type="text/javascript">/*<![CDATA[*/
AddLanguageSpecificTextSet("LST8BAC35A4_1?cs=.|vb=.|cpp=::|nu=.|fs=.");
/*]]>*/</script>MarshalByRefObject</a><br />&#160;&#160;&#160;&#160;<span class="nolink">EthernetPacket</span><br />&#160;&#160;&#160;&#160;&#160;&#160;<span class="selflink">Vector.CANoe.Runtime<span id="LST8BAC35A4_2"></span><script type="text/javascript">/*<![CDATA[*/
AddLanguageSpecificTextSet("LST8BAC35A4_2?cs=.|vb=.|cpp=::|nu=.|fs=.");
/*]]>*/</script>EthernetPacket</span><br /></div>
                    <p /><strong>Namespace:</strong>   
  &#160;<a href="c52a109e-d9a8-3382-973a-3e3fb60dda38.htm">Vector.CANoe.Runtime</a><br /><strong>Assembly:</strong>
  &#160;Vector.CANoe.Runtime.dll<div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID2RB')" onkeypress="SectionExpandCollapse_CheckKey('ID2RB', event)" tabindex="0"><img id="ID2RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Syntax</span></div><div id="ID2RBSection" class="collapsibleSection"><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID1ECCA_tab1" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID1ECCA','cs','1','3');return false;">C#</a></div><div id="ID1ECCA_tab2" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID1ECCA','vb','2','3');return false;">VB</a></div><div id="ID1ECCA_tab3" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID1ECCA','cpp','3','3');return false;">C++</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID1ECCA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID1ECCA');return false;" title="Copy">Copy</a></div></div><div id="ID1ECCA_code_Div1" class="codeSnippetContainerCode" style="display: block;"><pre xml:space="preserve"><span class="keyword">public</span> <span class="keyword">class</span> <span class="identifier">EthernetPacket</span> : <span class="identifier">EthernetPacket</span>, 
	<span class="identifier">IEnumerable</span>&lt;<span class="identifier">IProtocol</span>&gt;, <span class="identifier">IEnumerable</span>, <span class="identifier">IFrame</span></pre></div><div id="ID1ECCA_code_Div2" class="codeSnippetContainerCode" style="display: none;"><pre xml:space="preserve"><span class="keyword">Public</span> <span class="keyword">Class</span> <span class="identifier">EthernetPacket</span>
	<span class="keyword">Inherits</span> <span class="identifier">EthernetPacket</span>
	<span class="keyword">Implements</span> <span class="identifier">IEnumerable</span>(<span class="keyword">Of</span> <span class="identifier">IProtocol</span>), <span class="identifier">IEnumerable</span>, 
	<span class="identifier">IFrame</span></pre></div><div id="ID1ECCA_code_Div3" class="codeSnippetContainerCode" style="display: none;"><pre xml:space="preserve"><span class="keyword">public</span> <span class="keyword">ref class</span> <span class="identifier">EthernetPacket</span> : <span class="keyword">public</span> <span class="identifier">EthernetPacket</span>, 
	<span class="identifier">IEnumerable</span>&lt;<span class="identifier">IProtocol</span>^&gt;, <span class="identifier">IEnumerable</span>, <span class="identifier">IFrame</span></pre></div></div></div><script type="text/javascript">/*<![CDATA[*/
AddLanguageTabSet("ID1ECCA");
/*]]>*/</script></div><p>The <span class="selflink">EthernetPacket</span> type exposes the following members.</p><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID3RB')" onkeypress="SectionExpandCollapse_CheckKey('ID3RB', event)" tabindex="0"><img id="ID3RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Constructors</span></div><div id="ID3RBSection" class="collapsibleSection"><table class="members" id="constructorList"><tr><th class="iconColumn" /><th>Name</th><th>Description</th></tr><tr data="public;declared;notNetfw;SHFB_VBPI_Lbl_2D2816FE;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="594f2f29-42bc-c0d6-1110-3047d2964047.htm">EthernetPacket<span id="LST8BAC35A4_3"></span><script type="text/javascript">/*<![CDATA[*/
AddLanguageSpecificTextSet("LST8BAC35A4_3?cs=()|vb=|cpp=()|nu=()|fs=()");
/*]]>*/</script></a></td><td><div class="summary">
            Default constructor. This constructor is included for internal purposes.
            You should use the other constructors, giving channel, source, destination, ethertype and payload, 
            if you create an instance of EthernetPacket.
            </div></td></tr><tr data="public;declared;notNetfw;SHFB_VBPI_Lbl_2D2816FE;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="39eefc3d-d561-4cbb-ed77-ba8d77e029b3.htm">EthernetPacket(PhysicalAddress, PhysicalAddress)</a></td><td><div class="summary">
            Constructor.
            </div></td></tr><tr data="public;declared;notNetfw;SHFB_VBPI_Lbl_2D2816FE;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="9e5168f4-9d03-0db2-1c15-6360abf27002.htm">EthernetPacket(PhysicalAddress, PhysicalAddress, UInt16)</a></td><td><div class="summary">
            Constructor.
            </div></td></tr><tr data="public;declared;notNetfw;SHFB_VBPI_Lbl_2D2816FE;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="e7502e51-3aa1-68dd-bfec-cf3f93efa791.htm">EthernetPacket(PhysicalAddress, PhysicalAddress, UInt16, <span id="LST8BAC35A4_4"></span><script type="text/javascript">/*<![CDATA[*/
AddLanguageSpecificTextSet("LST8BAC35A4_4?cpp=array&lt;");
/*]]>*/</script>Byte<span id="LST8BAC35A4_5"></span><script type="text/javascript">/*<![CDATA[*/
AddLanguageSpecificTextSet("LST8BAC35A4_5?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");
/*]]>*/</script>)</a></td><td><div class="summary">
            Constructor.
            </div></td></tr><tr data="public;declared;notNetfw;SHFB_VBPI_Lbl_2D2816FE;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="a55a5385-7cc4-4c05-4f65-0923155cac45.htm">EthernetPacket(PhysicalAddress, PhysicalAddress, UInt16, UInt16, <span id="LST8BAC35A4_6"></span><script type="text/javascript">/*<![CDATA[*/
AddLanguageSpecificTextSet("LST8BAC35A4_6?cpp=array&lt;");
/*]]>*/</script>Byte<span id="LST8BAC35A4_7"></span><script type="text/javascript">/*<![CDATA[*/
AddLanguageSpecificTextSet("LST8BAC35A4_7?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");
/*]]>*/</script>)</a></td><td><div class="summary">
            Constructor.
            </div></td></tr><tr data="public;declared;notNetfw;SHFB_VBPI_Lbl_2D2816FE;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="adb028bf-c011-f174-d29d-4ef7e1690a71.htm">EthernetPacket(Byte, PhysicalAddress, PhysicalAddress, UInt16, UInt16, <span id="LST8BAC35A4_8"></span><script type="text/javascript">/*<![CDATA[*/
AddLanguageSpecificTextSet("LST8BAC35A4_8?cpp=array&lt;");
/*]]>*/</script>Byte<span id="LST8BAC35A4_9"></span><script type="text/javascript">/*<![CDATA[*/
AddLanguageSpecificTextSet("LST8BAC35A4_9?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");
/*]]>*/</script>)</a></td><td><div class="summary">
            Constructor.
            </div></td></tr></table><a href="#PageHeader">Top</a></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID4RB')" onkeypress="SectionExpandCollapse_CheckKey('ID4RB', event)" tabindex="0"><img id="ID4RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Properties</span></div><div id="ID4RBSection" class="collapsibleSection"><table class="members" id="propertyList"><tr><th class="iconColumn" /><th>Name</th><th>Description</th></tr><tr data="public;declared;notNetfw;SHFB_VBPI_Lbl_2D2816FE;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="37ac0570-71c0-a857-58c0-65c2338f787c.htm">AAF</a></td><td><div class="summary">
            Access to AVTP AAF protocol.
            </div></td></tr><tr data="public;declared;notNetfw;SHFB_VBPI_Lbl_2D2816FE;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="7bb6e9a4-7cf2-8021-0105-b1f0f05db2d2.htm">AAFPCM</a></td><td><div class="summary">
            Access to AVTP AAF PCM protocol.
            </div></td></tr><tr data="public;declared;notNetfw;SHFB_VBPI_Lbl_2D2816FE;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="72a8f2cc-04d4-5466-332c-b46f51c2bd3c.htm">AEF</a></td><td><div class="summary">
            Access to AVTP AEF protocol.
            </div></td></tr><tr data="public;declared;notNetfw;SHFB_VBPI_Lbl_2D2816FE;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="5d2e94a1-2e51-34e3-3917-a9020c9bf48c.htm">AH</a></td><td><div class="summary">
            Access to AH protocol.
            </div></td></tr><tr data="public;declared;notNetfw;SHFB_VBPI_Lbl_2D2816FE;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="d477c52a-18e9-0f4c-2c23-daa5e43ab4e5.htm">ARP</a></td><td><div class="summary">
            Access to ARP protocol.
            </div></td></tr><tr data="public;declared;notNetfw;SHFB_VBPI_Lbl_2D2816FE;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="b0533a83-fd8d-594e-2fb9-e16f6ec2bfa1.htm">AutosarPduMux</a></td><td><div class="summary">
            Access to AUTOSAR PDU Multiplexing protocol.
            </div></td></tr><tr data="public;declared;notNetfw;SHFB_VBPI_Lbl_2D2816FE;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="eb4011a5-0679-a8f6-ff6d-189e2fac86f9.htm">AVTP</a></td><td><div class="summary">
            Access to AVTP protocol.
            </div></td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><span class="nolink">Byte</span></td><td><div class="summary">
            Message data as Byte; Offset 0 is the Byte directly after the Ethertype.
            </div> (Inherited from <span class="nolink">EthernetPacket</span>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><span class="nolink">Channel</span></td><td><div class="summary">
            The channel on which the packet was sent.
            </div> (Inherited from <span class="nolink">EthernetPacket</span>.)</td></tr><tr data="public;declared;notNetfw;SHFB_VBPI_Lbl_2D2816FE;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="345cce33-01c1-b88f-5249-b90fb6c5940f.htm">CRF</a></td><td><div class="summary">
            Access to AVTP CRF protocol.
            </div></td></tr><tr data="public;declared;notNetfw;SHFB_VBPI_Lbl_2D2816FE;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="efe2cf06-8e06-55f9-98e0-6c4b0fbe18f6.htm">CVF</a></td><td><div class="summary">
            Access to AVTP CVF protocol.
            </div></td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><span class="nolink">DestinationAddress</span></td><td><div class="summary">
            The destination MAC address of the packet
            </div> (Inherited from <span class="nolink">EthernetPacket</span>.)</td></tr><tr data="public;declared;notNetfw;SHFB_VBPI_Lbl_2D2816FE;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="3fafe3b6-dbe7-b757-7c23-069ee90c8b69.htm">DHCPv4</a></td><td><div class="summary">
            Access to DHCPv4 protocol.
            </div></td></tr><tr data="public;declared;notNetfw;SHFB_VBPI_Lbl_2D2816FE;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="638907f0-cb50-7487-cf83-b54c09e3f568.htm">DHCPv6</a></td><td><div class="summary">
            Access to DHCPv6 protocol.
            </div></td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><span class="nolink">Direction</span></td><td><div class="summary">
            The direction of the packet.
            </div> (Inherited from <span class="nolink">EthernetPacket</span>.)</td></tr><tr data="public;declared;notNetfw;SHFB_VBPI_Lbl_2D2816FE;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="61a4a836-602e-7c74-8e42-a9151be12e3f.htm">DoIP</a></td><td><div class="summary">
            Access to DoIP protocol.
            </div></td></tr><tr data="public;declared;notNetfw;SHFB_VBPI_Lbl_2D2816FE;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="e413e53f-3123-cb48-229b-6ff4b8f2f903.htm">DTLS</a></td><td><div class="summary">
            Access to DTLS protocol.
            </div></td></tr><tr data="public;declared;notNetfw;SHFB_VBPI_Lbl_2D2816FE;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="3acae42f-4c4d-41fb-9cf5-9c1d68a0e7ee.htm">EAPOL</a></td><td><div class="summary">
            Access to EAPOL protocol.
            </div></td></tr><tr data="public;declared;notNetfw;SHFB_VBPI_Lbl_2D2816FE;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="d48700de-c753-9bf1-4c38-112e917de6ca.htm">EECF</a></td><td><div class="summary">
            Access to AVTP EECF protocol.
            </div></td></tr><tr data="public;declared;notNetfw;SHFB_VBPI_Lbl_2D2816FE;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="bdfd54cf-4ae1-156d-415e-6d562012a30b.htm">EFControl</a></td><td><div class="summary">
            Access to AVTP EF_CONTROL protocol.
            </div></td></tr><tr data="public;declared;notNetfw;SHFB_VBPI_Lbl_2D2816FE;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="d140fd99-df7e-a5c0-68a1-66e2fae12d4f.htm">EFStream</a></td><td><div class="summary">
            Access to AVTP EF_STREAM protocol.
            </div></td></tr><tr data="public;declared;notNetfw;SHFB_VBPI_Lbl_2D2816FE;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="3af4969a-dc16-08da-c920-1da92d4a7cd4.htm">ESCF</a></td><td><div class="summary">
            Access to AVTP ESCF protocol.
            </div></td></tr><tr data="public;declared;notNetfw;SHFB_VBPI_Lbl_2D2816FE;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="60869ac7-d4b4-6d6a-b887-d96d67ef28a5.htm">ESP</a></td><td><div class="summary">
            Access to ESP protocol.
            </div></td></tr><tr data="protected;inherited;notNetfw;"><td><img src="../icons/protproperty.gif" alt="Protected property" title="Protected property" /></td><td><span class="nolink">EthernetPacketRuntime</span></td><td><div class="summary">
            Internal Property. You should never need to use it.
            </div> (Inherited from <span class="nolink">EthernetPacket</span>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><span class="nolink">Ethertype</span></td><td><div class="summary">
            Represents the ethertype as a 16bit value (e.g. 0x800 for IP)
            </div> (Inherited from <span class="nolink">EthernetPacket</span>.)</td></tr><tr data="public;declared;notNetfw;SHFB_VBPI_Lbl_2D2816FE;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="636ed026-1fc1-f1ed-5f55-82f995f26dd4.htm">FSA</a></td><td><div class="summary">
            Access to FSA protocol.
            </div></td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><span class="nolink">HardwareChannel</span></td><td><div class="summary">
            The channel on which the packet was sent.
            </div> (Inherited from <span class="nolink">EthernetPacket</span>.)</td></tr><tr data="public;declared;notNetfw;SHFB_VBPI_Lbl_2D2816FE;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="33fc3d10-6666-f050-1f6e-a968bebc0e69.htm">HardwarePort</a></td><td><div class="summary">
            The EthernetPort on which the packet is sent.
            </div></td></tr><tr data="protected;inherited;notNetfw;"><td><img src="../icons/protproperty.gif" alt="Protected property" title="Protected property" /></td><td><span class="nolink">HasManagedPayload</span></td><td> (Inherited from <span class="nolink">EthernetPacket</span>.)</td></tr><tr data="public;declared;notNetfw;SHFB_VBPI_Lbl_2D2816FE;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="7b41d828-5ca1-1726-0231-f83dcd7f1527.htm">HasProtocolError</a></td><td><div class="summary">
            Returns whether the IP protocols of this <span class="selflink">EthernetPacket</span> contain protocol errors, like wrong checksum or wrong length field, etc.
            </div></td></tr><tr data="public;declared;notNetfw;SHFB_VBPI_Lbl_2D2816FE;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="b095b768-cffe-a50f-848f-8e398916444a.htm">HDCPAuth</a></td><td><div class="summary">
            Access to HDCP Authentication Protocol protocol.
            </div></td></tr><tr data="public;declared;notNetfw;SHFB_VBPI_Lbl_2D2816FE;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="a8833d2d-2bfc-771a-97ad-0d12f27fede0.htm">HSFZ</a></td><td><div class="summary">
            Access to HSFZ protocol.
            </div></td></tr><tr data="public;declared;notNetfw;SHFB_VBPI_Lbl_2D2816FE;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="ca91e4c4-ad04-3040-8968-44b63683ad37.htm">HTTP</a></td><td><div class="summary">
            Access to HTTP protocol.
            </div></td></tr><tr data="public;declared;notNetfw;SHFB_VBPI_Lbl_2D2816FE;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="0150a182-59bd-7872-3af4-1b44778a1d9b.htm">ICMPv4</a></td><td><div class="summary">
            Access to ICMPv4 protocol.
            </div></td></tr><tr data="public;declared;notNetfw;SHFB_VBPI_Lbl_2D2816FE;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="1cf59c9c-ecc5-e3dc-9631-84f44ec7f743.htm">ICMPv6</a></td><td><div class="summary">
            Access to ICMPv6 protocol.
            </div></td></tr><tr data="public;declared;notNetfw;SHFB_VBPI_Lbl_2D2816FE;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="56e1cbe2-d624-fd43-8ecd-c1e2692d38cc.htm">IGMP</a></td><td><div class="summary">
            Access to IGMP protocol.
            </div></td></tr><tr data="public;declared;notNetfw;SHFB_VBPI_Lbl_2D2816FE;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="7a4f6c29-6369-fdd3-4a70-5cc3014aeebe.htm">IKEv2</a></td><td><div class="summary">
            Access to IKEv2 protocol.
            </div></td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><span class="nolink">Int16</span></td><td><div class="summary">
            Message data as Int16; Offset 0 is the Int16 directly after the Ethertype.
            </div> (Inherited from <span class="nolink">EthernetPacket</span>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><span class="nolink">Int32</span></td><td><div class="summary">
            Message data as Int32; Offset 0 is the Int32 directly after the Ethertype.
            </div> (Inherited from <span class="nolink">EthernetPacket</span>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><span class="nolink">Int64</span></td><td><div class="summary">
            Message data as Int64; Offset 0 is the Int64 directly after the Ethertype.
            </div> (Inherited from <span class="nolink">EthernetPacket</span>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><span class="nolink">InternalDestinationAddress</span></td><td><div class="summary">
            Internal property. You should never use this type.
            </div> (Inherited from <span class="nolink">EthernetPacket</span>.)</td></tr><tr data="protected;inherited;notNetfw;"><td><img src="../icons/protproperty.gif" alt="Protected property" title="Protected property" /></td><td><span class="nolink">InternalHardwarePort</span></td><td><div class="summary">
            The EthernetPort on which the packet is sent.
            </div> (Inherited from <span class="nolink">EthernetPacket</span>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><span class="nolink">InternalIsDirty</span></td><td><div class="summary">
            Internal property. You should never use this type.
            </div> (Inherited from <span class="nolink">EthernetPacket</span>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><span class="nolink">InternalSourceAddress</span></td><td><div class="summary">
            Internal property. You should never use this type.
            </div> (Inherited from <span class="nolink">EthernetPacket</span>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><span class="nolink">InternalTimeNS</span></td><td><div class="summary">
            The time in ns the event occurred.
            </div> (Inherited from <span class="nolink">EthernetPacket</span>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><span class="nolink">InternalUnmanagedWrapper</span></td><td><div class="summary">
            Internal property. You should never use this type.
            </div> (Inherited from <span class="nolink">EthernetPacket</span>.)</td></tr><tr data="public;declared;notNetfw;SHFB_VBPI_Lbl_2D2816FE;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="e6b0233f-8895-aa7b-6992-563aa0f22a3b.htm">IPv4</a></td><td><div class="summary">
            Access to IPv4 protocol.
            </div></td></tr><tr data="public;declared;notNetfw;SHFB_VBPI_Lbl_2D2816FE;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="4cc9fb4d-bd99-fe45-94cc-e929153abe6f.htm">IPv6</a></td><td><div class="summary">
            Access to IPv6 protocol.
            </div></td></tr><tr data="public;declared;notNetfw;SHFB_VBPI_Lbl_2D2816FE;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="00713a9a-535a-521f-7a38-bcd36edfa7d7.htm">MACsec</a></td><td><div class="summary">
            Access to MACsec protocol.
            </div></td></tr><tr data="public;declared;notNetfw;SHFB_VBPI_Lbl_2D2816FE;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="7a5a9daf-a310-3ae4-c643-65904f4e332e.htm">MKA</a></td><td><div class="summary">
            Access to MACsec Key Agreement protocol.
            </div></td></tr><tr data="public;declared;notNetfw;SHFB_VBPI_Lbl_2D2816FE;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="bf099cab-827c-7c0e-7ceb-0fba6f682e4b.htm">MMAStream</a></td><td><div class="summary">
            Access to AVTP MMA Stream protocol.
            </div></td></tr><tr data="public;declared;notNetfw;SHFB_VBPI_Lbl_2D2816FE;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="05740e29-e68c-a086-135b-fa2905c4af16.htm">MP2T</a></td><td><div class="summary">
            Access to MP2T protocol.
            </div></td></tr><tr data="public;declared;notNetfw;SHFB_VBPI_Lbl_2D2816FE;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="abc04d2e-f0df-c7a6-7be7-f537ef3f7a37.htm">NDP</a></td><td><div class="summary">
            Access to NDP protocol.
            </div></td></tr><tr data="public;declared;notNetfw;SHFB_VBPI_Lbl_2D2816FE;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="2bfa3232-257e-1e6f-6628-1c0aa41b22e4.htm">NTP</a></td><td><div class="summary">
            Access to NTP protocol.
            </div></td></tr><tr data="public;declared;notNetfw;SHFB_VBPI_Lbl_2D2816FE;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="1a471329-92a2-9e43-5044-bb73e163112f.htm">NTSCF</a></td><td><div class="summary">
            Access to AVTP NTSCF protocol.
            </div></td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><span class="nolink">PacketLength</span></td><td><div class="summary">
            The length of the Ethernet packet.
            </div> (Inherited from <span class="nolink">EthernetPacket</span>.)</td></tr><tr data="protected;inherited;notNetfw;"><td><img src="../icons/protproperty.gif" alt="Protected property" title="Protected property" /></td><td><span class="nolink">PortNumber</span></td><td><div class="summary">
            The EthernetPort on which the packet is sent.
            </div> (Inherited from <span class="nolink">EthernetPacket</span>.)</td></tr><tr data="public;declared;notNetfw;SHFB_VBPI_Lbl_2D2816FE;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="e56787a0-017c-1b9c-5f71-7c67d776dcd4.htm">PTP</a></td><td><div class="summary">
            Access to PTP protocol.
            </div></td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><span class="nolink">RawDataLength</span></td><td><div class="summary">
            The length of the payload.
            </div> (Inherited from <span class="nolink">EthernetPacket</span>.)</td></tr><tr data="public;declared;notNetfw;SHFB_VBPI_Lbl_2D2816FE;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="71547674-4e21-929d-9e44-5aa0f7816273.htm">RTCP</a></td><td><div class="summary">
            Access to RTCP protocol.
            </div></td></tr><tr data="public;declared;notNetfw;SHFB_VBPI_Lbl_2D2816FE;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="f981c786-70a9-7f45-1c03-8db7f8971ea5.htm">RTP</a></td><td><div class="summary">
            Access to RTP protocol.
            </div></td></tr><tr data="public;declared;notNetfw;SHFB_VBPI_Lbl_2D2816FE;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="ec2875a3-de14-4d91-a7f1-4933ed7eb6af.htm">RVF</a></td><td><div class="summary">
            Access to AVTP RVF protocol.
            </div></td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><span class="nolink">SByte</span></td><td><div class="summary">
            Message data as SByte; Offset 0 is the SByte directly after the Ethertype.
            </div> (Inherited from <span class="nolink">EthernetPacket</span>.)</td></tr><tr data="public;declared;notNetfw;SHFB_VBPI_Lbl_2D2816FE;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="e04965a3-18fc-35aa-1b00-bc14b21493f3.htm">Simulated</a></td><td><div class="summary">
            Returns whether the packet was sent by a simulated node in the simulation setup.
            </div></td></tr><tr data="public;declared;notNetfw;SHFB_VBPI_Lbl_2D2816FE;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="2a156cd3-d388-a757-6516-fd437eeefdf1.htm">SNMP</a></td><td><div class="summary">
            Access to SNMP protocol.
            </div></td></tr><tr data="public;declared;notNetfw;SHFB_VBPI_Lbl_2D2816FE;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="b31d0b3a-fb09-006f-5ae1-f3742dc8d5ea.htm">SOMEIP</a></td><td><div class="summary">
            Access to SOME/IP protocol.
            </div></td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><span class="nolink">SourceAddress</span></td><td><div class="summary">
            The source MAC address of the packet.
            </div> (Inherited from <span class="nolink">EthernetPacket</span>.)</td></tr><tr data="public;declared;notNetfw;SHFB_VBPI_Lbl_2D2816FE;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="9dc55226-aeb5-a33f-7ca1-3d3946421991.htm">SVF</a></td><td><div class="summary">
            Access to AVTP SVF protocol.
            </div></td></tr><tr data="public;declared;notNetfw;SHFB_VBPI_Lbl_2D2816FE;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="2268b932-db0e-2111-4d73-e3cbb13eb1b4.htm">TCP</a></td><td><div class="summary">
            Access to TCP protocol.
            </div></td></tr><tr data="public;declared;notNetfw;SHFB_VBPI_Lbl_2D2816FE;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="f0bef384-f5ec-0436-5b83-70d2342e029b.htm">TFTP</a></td><td><div class="summary">
            Access to TFTP protocol.
            </div></td></tr><tr data="public;declared;notNetfw;SHFB_VBPI_Lbl_2D2816FE;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="59b94989-8b86-0890-a590-15761e67aafe.htm">TimeNS</a></td><td><div class="summary">Returns the time stamp of the frame, in nanoseconds as int64.</div></td></tr><tr data="public;declared;notNetfw;SHFB_VBPI_Lbl_2D2816FE;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="2a941c92-069b-3b9d-6d72-8e4cf3db65ec.htm">TLS</a></td><td><div class="summary">
            Access to TLS protocol.
            </div></td></tr><tr data="public;declared;notNetfw;SHFB_VBPI_Lbl_2D2816FE;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="328733bf-730d-7949-29ba-89b1f5e415be.htm">TSCF</a></td><td><div class="summary">
            Access to AVTP TSCF protocol.
            </div></td></tr><tr data="public;declared;notNetfw;SHFB_VBPI_Lbl_2D2816FE;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="7d4727ed-898f-130e-3413-f48f5511f087.htm">UDP</a></td><td><div class="summary">
            Access to UDP protocol.
            </div></td></tr><tr data="public;declared;notNetfw;SHFB_VBPI_Lbl_2D2816FE;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="8dfd28a7-6125-5974-389f-1c4d328f80d8.htm">UDPNM</a></td><td><div class="summary">
            Access to UDP NM protocol.
            </div></td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><span class="nolink">UInt16</span></td><td><div class="summary">
            Message data as UInt16; Offset 0 is the UInt16 directly after the Ethertype.
            </div> (Inherited from <span class="nolink">EthernetPacket</span>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><span class="nolink">UInt32</span></td><td><div class="summary">
            Message data as UInt32; Offset 0 is the UInt32 directly after the Ethertype.
            </div> (Inherited from <span class="nolink">EthernetPacket</span>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><span class="nolink">UInt64</span></td><td><div class="summary">
            Message data as UInt64; Offset 0 is the UInt64 directly after the Ethertype.
            </div> (Inherited from <span class="nolink">EthernetPacket</span>.)</td></tr><tr data="public;declared;notNetfw;SHFB_VBPI_Lbl_2D2816FE;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /><img src="../icons/CodeExample.png" alt="Code example" title="Code example" /></td><td><a href="1c9685c5-a030-76c8-941f-8f76a1481699.htm">VlanTags</a></td><td><div class="summary">
            Access to the <span class="selflink">EthernetPacket</span>s <a href="715fe528-4386-0643-a070-05273389ba85.htm">VlanTag</a>(s).
            </div></td></tr><tr data="public;declared;notNetfw;SHFB_VBPI_Lbl_2D2816FE;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="979bfa85-5a28-5c61-263b-e1fdf6ec19cc.htm">VLANTCI</a></td><td><strong>Obsolete. </strong><div class="summary">
            Stores the first VLAN tag of the Ethernet packet.
            </div> (Overrides <span class="nolink">EthernetPacket.VLANTCI</span>.)</td></tr><tr data="public;declared;notNetfw;SHFB_VBPI_Lbl_2D2816FE;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="31dfd7b2-3855-5e5d-e9da-9ef17a697b80.htm">VSF</a></td><td><div class="summary">
            Access to AVTP VSF protocol.
            </div></td></tr><tr data="public;declared;notNetfw;SHFB_VBPI_Lbl_2D2816FE;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="0b9c9a2c-f7a8-4afe-221c-86a7283ca018.htm">XCP</a></td><td><div class="summary">
            Access to XCP protocol.
            </div></td></tr></table><a href="#PageHeader">Top</a></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID5RB')" onkeypress="SectionExpandCollapse_CheckKey('ID5RB', event)" tabindex="0"><img id="ID5RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Methods</span></div><div id="ID5RBSection" class="collapsibleSection"><table class="members" id="methodList"><tr><th class="iconColumn" /><th>Name</th><th>Description</th></tr><tr data="public;declared;notNetfw;SHFB_VBPI_Lbl_2D2816FE;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="a249b29e-84d5-d548-14b7-89e27a7d4c4a.htm">Block</a></td><td><div class="summary">
            For nodes in the measurement setup, specifies that the received frame
            shall not be transmitted further through the current measurement 
            setup branch. Thus, the node can be used as a frame filter.
            </div></td></tr><tr data="public;declared;notNetfw;SHFB_VBPI_Lbl_2D2816FE;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="173db398-b053-b1e3-601e-56e736349815.htm">Clear</a></td><td><div class="summary">
            Clears packet data and resets length.
            </div></td></tr><tr data="public;declared;notNetfw;SHFB_VBPI_Lbl_2D2816FE;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="34811cb3-3d4e-d642-e236-51196ecbbea6.htm">CompletePacket</a></td><td><div class="summary">
            Calculates the checksum and length fields for all protocols contained in the packet.
            </div></td></tr><tr data="public;declared;notNetfw;SHFB_VBPI_Lbl_2D2816FE;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="0157625c-e371-229a-133d-d92b01cac69f.htm">CreateNewInstance</a></td><td><div class="summary">
            Internal method. You should never need to call or override this method.
            </div> (Overrides <span class="nolink">EthernetPacket.CreateNewInstance(Int64)</span>.)</td></tr><tr data="protected;inherited;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected method" title="Protected method" /></td><td><span class="nolink">DoBlock</span></td><td><div class="summary">
            Internal method. You should never use this type.
            </div> (Inherited from <span class="nolink">EthernetPacket</span>.)</td></tr><tr data="protected;inherited;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected method" title="Protected method" /></td><td><span class="nolink">DoInject</span></td><td><div class="summary">
            Internal method. You should never use this type.
            </div> (Inherited from <span class="nolink">EthernetPacket</span>.)</td></tr><tr data="protected;inherited;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected method" title="Protected method" /></td><td><span class="nolink">DoSend</span></td><td><div class="summary">
            Internal method. You should never use this type.
            </div> (Inherited from <span class="nolink">EthernetPacket</span>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="https://docs.microsoft.com/dotnet/api/system.object.equals#System_Object_Equals_System_Object_" target="_blank">Equals</a></td><td><div class="summary">Determines whether the specified <a href="https://docs.microsoft.com/dotnet/api/system.object" target="_blank">Object</a> is equal to the current <a href="https://docs.microsoft.com/dotnet/api/system.object" target="_blank">Object</a>.</div> (Inherited from <a href="https://docs.microsoft.com/dotnet/api/system.object" target="_blank">Object</a>.)</td></tr><tr data="protected;inherited;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected method" title="Protected method" /></td><td><a href="https://docs.microsoft.com/dotnet/api/system.object.finalize#System_Object_Finalize" target="_blank">Finalize</a></td><td><div class="summary">Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection.</div> (Inherited from <a href="https://docs.microsoft.com/dotnet/api/system.object" target="_blank">Object</a>.)</td></tr><tr data="public;declared;notNetfw;SHFB_VBPI_Lbl_2D2816FE;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="b52fb829-eba9-7d8b-5199-7e9da275fc45.htm">GetEnumerator</a></td><td><div class="summary">
            Returns an enumerator that iterates through all built-in protocols that are available in this <span class="selflink">EthernetPacket</span>.
            </div></td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="https://docs.microsoft.com/dotnet/api/system.object.gethashcode#System_Object_GetHashCode" target="_blank">GetHashCode</a></td><td><div class="summary">Serves as a hash function for a particular type. </div> (Inherited from <a href="https://docs.microsoft.com/dotnet/api/system.object" target="_blank">Object</a>.)</td></tr><tr data="protected;inherited;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected method" title="Protected method" /></td><td><span class="nolink">GetNumVlanTags</span></td><td> (Inherited from <span class="nolink">EthernetPacket</span>.)</td></tr><tr data="public;declared;notNetfw;SHFB_VBPI_Lbl_2D2816FE;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="a712fece-811d-4e01-5ad4-4007ab3905c6.htm">GetProtocolErrorText</a></td><td><div class="summary">
            Returns a string containing protocol error information for an invalid <span class="selflink">EthernetPacket</span>.
            </div></td></tr><tr data="public;declared;notNetfw;SHFB_VBPI_Lbl_2D2816FE;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/CodeExample.png" alt="Code example" title="Code example" /></td><td><a href="0469d54e-2001-fc2c-af26-ba8c513f81c3.htm">GetProtocolField</a></td><td><div class="summary">
            Returns a protocol field specified by its name.
            </div></td></tr><tr data="public;declared;notNetfw;SHFB_VBPI_Lbl_2D2816FE;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="bef31f63-ce2b-98e1-c878-66d1a39b21bb.htm">GetProtocols</a></td><td><div class="summary">
            Returns an enumerable collection of all built-in protocols that are available in this <span class="selflink">EthernetPacket</span>.
            </div></td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><span class="nolink">GetRawData</span></td><td><strong>Obsolete. </strong><div class="summary">
            Returns the raw data as byte array.
            </div> (Inherited from <span class="nolink">EthernetPacket</span>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><span class="nolink">GetRawDataCopy<span id="LST8BAC35A4_10"></span><script type="text/javascript">/*<![CDATA[*/
AddLanguageSpecificTextSet("LST8BAC35A4_10?cs=()|vb=|cpp=()|nu=()|fs=()");
/*]]>*/</script></span></td><td><div class="summary">
            Returns a copy of the raw data as byte array.
            </div> (Inherited from <span class="nolink">EthernetPacket</span>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><span class="nolink">GetRawDataCopy(Int32)</span></td><td><div class="summary">
            Returns a copy of the raw data as byte array.
            </div> (Inherited from <span class="nolink">EthernetPacket</span>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><span class="nolink">GetRawDataCopy(Int32, Int32)</span></td><td><div class="summary">
            Returns a copy of the raw data as byte array.
            </div> (Inherited from <span class="nolink">EthernetPacket</span>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="https://docs.microsoft.com/dotnet/api/system.object.gettype#System_Object_GetType" target="_blank">GetType</a></td><td><div class="summary">Gets the <a href="https://docs.microsoft.com/dotnet/api/system.type" target="_blank">Type</a> of the current instance.</div> (Inherited from <a href="https://docs.microsoft.com/dotnet/api/system.object" target="_blank">Object</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><span class="nolink">HasVLANTag</span></td><td><div class="summary">
            Returns <span class="keyword"><span id="LST8BAC35A4_11"></span><script type="text/javascript">/*<![CDATA[*/
AddLanguageSpecificTextSet("LST8BAC35A4_11?vb=True|nu=true");
/*]]>*/</script></span> if the VLAN Tag is set at this packet.
            </div> (Inherited from <span class="nolink">EthernetPacket</span>.)</td></tr><tr data="public;declared;notNetfw;SHFB_VBPI_Lbl_2D2816FE;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="5498a072-2361-2f83-d31b-59f2a77f36b0.htm">Inject</a></td><td><div class="summary">
            Transmits an <span class="selflink">EthernetPacket</span> by a specific <a href="688c41ae-b328-cdd9-4f7f-359a1bc45fce.htm">EthernetPort</a> defined in <a href="33fc3d10-6666-f050-1f6e-a968bebc0e69.htm">HardwarePort</a>.
            Unlike <a href="c2b390b2-35f4-4357-2be5-df4351febd8f.htm">Send<span id="LST8BAC35A4_12"></span><script type="text/javascript">/*<![CDATA[*/
AddLanguageSpecificTextSet("LST8BAC35A4_12?cs=()|vb=|cpp=()|nu=()|fs=()");
/*]]>*/</script></a>, this method allows to send a frame not only on a simulation port, but on a physical port as well e.g. for error injection.
            </div></td></tr><tr data="protected;inherited;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected method" title="Protected method" /></td><td><a href="https://docs.microsoft.com/dotnet/api/system.object.memberwiseclone#System_Object_MemberwiseClone" target="_blank">MemberwiseClone</a></td><td><div class="summary">Creates a shallow copy of the current <a href="https://docs.microsoft.com/dotnet/api/system.object" target="_blank">Object</a>.</div> (Inherited from <a href="https://docs.microsoft.com/dotnet/api/system.object" target="_blank">Object</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><span class="nolink">RemoveVLANTag</span></td><td><div class="summary">
            Removes the VLAN tag of the packet.
            </div> (Inherited from <span class="nolink">EthernetPacket</span>.)</td></tr><tr data="public;declared;notNetfw;SHFB_VBPI_Lbl_2D2816FE;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="c2b390b2-35f4-4357-2be5-df4351febd8f.htm">Send</a></td><td><div class="summary">
            Sends the ethernet packet.
            </div></td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><span class="nolink">SetRawData(<span id="LST8BAC35A4_13"></span><script type="text/javascript">/*<![CDATA[*/
AddLanguageSpecificTextSet("LST8BAC35A4_13?cpp=array&lt;");
/*]]>*/</script>Byte<span id="LST8BAC35A4_14"></span><script type="text/javascript">/*<![CDATA[*/
AddLanguageSpecificTextSet("LST8BAC35A4_14?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");
/*]]>*/</script>)</span></td><td><div class="summary">
            Stores the raw data for the <span class="nolink">EthernetPacket</span>.
            The length of the <span class="nolink">EthernetPacket</span> is resized to the given length of the new data.
            </div> (Inherited from <span class="nolink">EthernetPacket</span>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><span class="nolink">SetRawData(Int32, <span id="LST8BAC35A4_15"></span><script type="text/javascript">/*<![CDATA[*/
AddLanguageSpecificTextSet("LST8BAC35A4_15?cpp=array&lt;");
/*]]>*/</script>Byte<span id="LST8BAC35A4_16"></span><script type="text/javascript">/*<![CDATA[*/
AddLanguageSpecificTextSet("LST8BAC35A4_16?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");
/*]]>*/</script>, Int32)</span></td><td><div class="summary">
            Copies bytes from an array to the data of this <span class="nolink">EthernetPacket</span>.
            If data is greater than the current length of the <span class="nolink">EthernetPacket</span>'s payload, the <span class="nolink">EthernetPacket</span> is enlarged;
            if data is smaller, the length is not changed.
            </div> (Inherited from <span class="nolink">EthernetPacket</span>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="https://docs.microsoft.com/dotnet/api/system.object.tostring#System_Object_ToString" target="_blank">ToString</a></td><td><div class="summary">Returns a string that represents the current object.</div> (Inherited from <a href="https://docs.microsoft.com/dotnet/api/system.object" target="_blank">Object</a>.)</td></tr></table><a href="#PageHeader">Top</a></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID6RB')" onkeypress="SectionExpandCollapse_CheckKey('ID6RB', event)" tabindex="0"><img id="ID6RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Examples</span></div><div id="ID6RBSection" class="collapsibleSection"><div class="codeSnippetContainer"><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID1EAAABA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID1EAAABA');return false;" title="Copy">Copy</a></div></div><div id="ID1EAAABA_code_Div1" class="codeSnippetContainerCode" style="display: block;"><pre xml:space="preserve"><span class="highlight-lineno"> 1</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>[OnEthernetPacket(<span class="highlight-keyword">typeof</span>(Networks.Ethernet1.HardwarePorts.ECU_1))]
<span class="highlight-lineno"> 2</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span><span class="highlight-keyword">public</span> <span class="highlight-keyword">void</span> ForwardVlan4(EthernetPacket packet)
<span class="highlight-lineno"> 3</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>{
<span class="highlight-lineno"> 4</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>  <span class="highlight-comment">// forward all traffic in VLAN 4 of network "Ethernet1"</span>
<span class="highlight-lineno"> 5</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>  <span class="highlight-comment">// to network "VLAN4" (without a VLAN tag)</span>
<span class="highlight-lineno"> 6</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>  <span class="highlight-keyword">if</span> (packet.HasVLANTag() &amp;&amp; packet.VlanTags[packet.VlanTags.Count - <span class="highlight-number">1</span>].VlanId == <span class="highlight-number">4</span>)
<span class="highlight-lineno"> 7</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>  {
<span class="highlight-lineno"> 8</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    packet.VlanTags.Remove(packet.VlanTags.Count - <span class="highlight-number">1</span>);
<span class="highlight-lineno"> 9</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>
<span class="highlight-lineno">10</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    packet.Channel      = Networks.VLAN4.Channel;
<span class="highlight-lineno">11</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    packet.HardwarePort = Networks.VLAN4.HardwarePorts.ECU_1.Instance;
<span class="highlight-lineno">12</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    packet.Send();
<span class="highlight-lineno">13</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>  }
<span class="highlight-lineno">14</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>}
<span class="highlight-lineno">15</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>
<span class="highlight-lineno">16</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>[OnEthernetPacket(<span class="highlight-keyword">typeof</span>(Networks.Ethernet1.HardwarePorts.ECU_1))]
<span class="highlight-lineno">17</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span><span class="highlight-keyword">public</span> <span class="highlight-keyword">void</span> Tunneling(EthernetPacket packet)
<span class="highlight-lineno">18</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>{
<span class="highlight-lineno">19</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>  <span class="highlight-comment">// tunnel all traffic in network "Ethernet1"</span>
<span class="highlight-lineno">20</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>  <span class="highlight-comment">// through VLAN 100 of network "Backbone"</span>
<span class="highlight-lineno">21</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>  <span class="highlight-keyword">if</span> (packet.VlanTags.Count &lt; VlanTags.MaxNumVlanTags)
<span class="highlight-lineno">22</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>  {
<span class="highlight-lineno">23</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    <span class="highlight-comment">// setting the VlanId initializes the VlanTag</span>
<span class="highlight-lineno">24</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    packet.VlanTags[packet.VlanTags.Count].VlanId = <span class="highlight-number">100</span>;
<span class="highlight-lineno">25</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>
<span class="highlight-lineno">26</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    packet.Channel      = Networks.EthBackbone.Channel;
<span class="highlight-lineno">27</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    packet.HardwarePort = Networks.EthBackbone.HardwarePorts.ECU_1.Instance;
<span class="highlight-lineno">28</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    packet.Send();
<span class="highlight-lineno">29</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>  }
<span class="highlight-lineno">30</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>}
<span class="highlight-lineno">31</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>
<span class="highlight-lineno">32</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>[OnIpSendPrepare]
<span class="highlight-lineno">33</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span><span class="highlight-keyword">public</span> <span class="highlight-keyword">bool</span> RemoveInnerVlan(Socket socket, EthernetPacket packet)
<span class="highlight-lineno">34</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>{
<span class="highlight-lineno">35</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>  <span class="highlight-keyword">if</span> (packet.HasVLANTag())
<span class="highlight-lineno">36</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>  {
<span class="highlight-lineno">37</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    <span class="highlight-comment">// after this operation, all remaining VlanTags (if any)</span>
<span class="highlight-lineno">38</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    <span class="highlight-comment">// of the EthernetPacket will be accessible via the decremented index</span>
<span class="highlight-lineno">39</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    packet.VlanTags.Remove(<span class="highlight-number">0</span>);
<span class="highlight-lineno">40</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>  }
<span class="highlight-lineno">41</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>
<span class="highlight-lineno">42</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>  <span class="highlight-keyword">return</span> <span class="highlight-keyword">true</span>;
<span class="highlight-lineno">43</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>}</pre></div></div></div><script type="text/javascript">/*<![CDATA[*/
AddLanguageTabSet("ID1EAAABA");
/*]]>*/</script></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID7RB')" onkeypress="SectionExpandCollapse_CheckKey('ID7RB', event)" tabindex="0"><img id="ID7RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Version Information</span></div><div id="ID7RBSection" class="collapsibleSection"><h4 class="subHeading" />Supported from: 7.6<br /></div><div class="collapsibleAreaRegion" id="seeAlsoSection"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID8RB')" onkeypress="SectionExpandCollapse_CheckKey('ID8RB', event)" tabindex="0"><img id="ID8RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />See Also</span></div><div id="ID8RBSection" class="collapsibleSection"><h4 class="subHeading">Reference</h4><div class="seeAlsoStyle"><a href="c52a109e-d9a8-3382-973a-3e3fb60dda38.htm">Vector.CANoe.Runtime Namespace</a></div></div></div>
            </div>
        </div>
        <div id="pageFooter" class="pageFooter"> © Vector Informatik GmbH — <span class="mc-variable Vector.BuildTime variable">2023-09-26T19:08:13</span></div>
    </body>
</html>