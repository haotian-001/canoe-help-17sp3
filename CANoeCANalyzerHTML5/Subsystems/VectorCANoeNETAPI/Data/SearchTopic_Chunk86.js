define({"6229":{y:0,u:"../Content/html/3fddc972-acce-73c6-2a53-aa1a054edb31.htm",l:-1,t:"TcpListener.AllowNatTraversal Method ",i:5.14217551813106E-05,a:"Vector CANoe .NET API \n            Enables or disables Network Address Translation (NAT) traversal on a  TcpListener  instance.\n            This method is not supported and will always throw a  NotImplementedException .\n             Namespace:   \n    Vector.CANoe.Sockets Assembly:\n  ..."},"6230":{y:0,u:"../Content/html/d7138eb6-ea7e-d4ee-8449-9fa88f08a8f3.htm",l:-1,t:"TcpListener.BeginAcceptTcpClient Method ",i:6.23496547909716E-05,a:"Vector CANoe .NET API  Begins an asynchronous operation to accept an incoming connection attempt. Namespace:   \n    Vector.CANoe.Sockets Assembly:\n   Vector.CANoe.Sockets.dll Syntax C# VB C++ Copy public IAsyncResult BeginAcceptTcpClient(\n\tAsyncCallback callback,\n\tObject state\n) Public Function ..."},"6231":{y:0,u:"../Content/html/e6aec561-77b2-230d-ada1-c1e48b79bce2.htm",l:-1,t:"TcpListener.EndAcceptTcpClient Method ",i:5.14217551813106E-05,a:"Vector CANoe .NET API \n            Asynchronously accepts an incoming connection attempt and creates a new  TcpClient  to handle remote host communication.\n             Namespace:   \n    Vector.CANoe.Sockets Assembly:\n   Vector.CANoe.Sockets.dll Syntax C# VB C++ Copy public TcpClient ..."},"6232":{y:0,u:"../Content/html/dbf9f0ca-933c-556c-36c1-5edfee046fa9.htm",l:-1,t:"TcpListener.Pending Method ",i:5.14217551813106E-05,a:"Vector CANoe .NET API \n            Determines if there are pending connection requests.\n             Namespace:   \n    Vector.CANoe.Sockets Assembly:\n   Vector.CANoe.Sockets.dll Syntax C# VB C++ Copy public bool Pending() Public Function Pending As Boolean public:\nbool Pending() /* */ Return Value ..."},"6233":{y:0,u:"../Content/html/c09fd21a-f649-26e6-8073-6a0f68c5580c.htm",l:-1,t:"TcpListener.Start Method ",i:6.5943995817629E-05,a:"Vector CANoe .NET API Overload List Top See Also Reference TcpListener Class Vector.CANoe.Sockets Namespace"},"6234":{y:0,u:"../Content/html/f6230709-326c-9885-f92b-2066e3a9038b.htm",l:-1,t:"TcpListener.Start Method ",i:7.72034202667281E-05,a:"Vector CANoe .NET API \n            Starts listening for incoming connection requests.\n             Namespace:   \n    Vector.CANoe.Sockets Assembly:\n   Vector.CANoe.Sockets.dll Syntax C# VB C++ Copy public void Start() Public Sub Start public:\nvoid Start() /* */ Exceptions Version Information ..."},"6235":{y:0,u:"../Content/html/409835d2-ac0d-19db-18a9-c53c115408e2.htm",l:-1,t:"TcpListener.Start Method (Int32)",i:6.26328874538467E-05,a:"Vector CANoe .NET API \n            Starts listening for incoming connection requests with a maximum number of pending connection.\n             Namespace:   \n    Vector.CANoe.Sockets Assembly:\n   Vector.CANoe.Sockets.dll Syntax C# VB C++ Copy public void Start(\n\tint backlog\n) Public Sub Start ( ..."},"6236":{y:0,u:"../Content/html/e12c7ed3-9cce-c9a1-8d90-acbbeed7e246.htm",l:-1,t:"TcpListener.Stop Method ",i:6.24956022354551E-05,a:"Vector CANoe .NET API \n            Closes the listener.\n             Namespace:   \n    Vector.CANoe.Sockets Assembly:\n   Vector.CANoe.Sockets.dll Syntax C# VB C++ Copy public void Stop() Public Sub Stop public:\nvoid Stop() /* */ Exceptions Version Information Supported from: 8.2 See Also Reference ..."},"6237":{y:0,u:"../Content/html/ef01597a-4f8a-05fb-11c3-e3f2fdbb2903.htm",l:-1,t:"UdpClient Class",i:0.00086162665596109,a:"Vector CANoe .NET API \n            Provides User Datagram Protocol (UDP) network services.\n             Inheritance Hierarchy System /* */ Object   Vector.CANoe.Sockets /* */ UdpClient Namespace:   \n    Vector.CANoe.Sockets Assembly:\n   Vector.CANoe.Sockets.dll Syntax C# VB C++ Copy public class ..."},"6238":{y:0,u:"../Content/html/96b7ad78-d386-308d-4355-509516a54939.htm",l:-1,t:"UdpClient Constructor ",i:0.000105870973878551,a:"Vector CANoe .NET API Overload List Top See Also Reference UdpClient Class Vector.CANoe.Sockets Namespace"},"6239":{y:0,u:"../Content/html/a9aa4d5e-950f-4fa9-6fca-a6115d10b1ab.htm",l:-1,t:"UdpClient Constructor ",i:5.29911931280115E-05,a:"Vector CANoe .NET API \n            Initializes a new instance of the  UdpClient  class. This constructor only initializes a connection based on IPv4!\n             Namespace:   \n    Vector.CANoe.Sockets Assembly:\n   Vector.CANoe.Sockets.dll Syntax C# VB C++ Copy public UdpClient() Public Sub New ..."},"6240":{y:0,u:"../Content/html/78044c52-a9e1-eed9-e00d-75e1b9c6570d.htm",l:-1,t:"UdpClient Constructor (Int32)",i:5.29911931280115E-05,a:"Vector CANoe .NET API \n             Initializes a new instance of the  UdpClient  class and\n             binds it to the local port number provided.\n             This constructor only initializes a connection based on IPv4!\n              Namespace:   \n    Vector.CANoe.Sockets Assembly:\n  ..."},"6241":{y:0,u:"../Content/html/7582fc02-8615-a94f-de40-2e36f9d84a9a.htm",l:-1,t:"UdpClient Constructor (IPEndPoint)",i:5.29911931280115E-05,a:"Vector CANoe .NET API \n            Initializes a new instance of the  UdpClient  class and binds it to the specified local endpoint.\n             Namespace:   \n    Vector.CANoe.Sockets Assembly:\n   Vector.CANoe.Sockets.dll Syntax C# VB C++ Copy public UdpClient(\n\tIPEndPoint localEP\n) Public Sub New ..."},"6242":{y:0,u:"../Content/html/b4880112-2065-0609-aa33-8b45a0d2a18b.htm",l:-1,t:"UdpClient Constructor (AddressFamily)",i:5.29911931280115E-05,a:"Vector CANoe .NET API \n            Initializes a new instance of the  UdpClient  class.\n             Namespace:   \n    Vector.CANoe.Sockets Assembly:\n   Vector.CANoe.Sockets.dll Syntax C# VB C++ Copy public UdpClient(\n\tAddressFamily family\n) Public Sub New ( \n\tfamily As AddressFamily\n) ..."},"6243":{y:0,u:"../Content/html/7ddc72be-c254-86f9-1fcf-ab31da168cff.htm",l:-1,t:"UdpClient Constructor (Int32, AddressFamily)",i:5.29911931280115E-05,a:"Vector CANoe .NET API \n            Initializes a new instance of the  UdpClient  class and binds it to the local port number provided.\n             Namespace:   \n    Vector.CANoe.Sockets Assembly:\n   Vector.CANoe.Sockets.dll Syntax C# VB C++ Copy public UdpClient(\n\tint port,\n\tAddressFamily family\n) ..."},"6244":{y:0,u:"../Content/html/7e83a879-5f3d-3577-db03-d1a83d0a5c91.htm",l:-1,t:"UdpClient Properties",i:2.10366142270615E-05,a:"Vector CANoe .NET API The  UdpClient  type exposes the following members. Properties Top See Also Reference UdpClient Class Vector.CANoe.Sockets Namespace"},"6245":{y:0,u:"../Content/html/9201d995-0552-bd86-5f4f-33e30c972108.htm",l:-1,t:"UdpClient.Available Property ",i:4.32318831498566E-05,a:"Vector CANoe .NET API \n            Gets the amount of data received from the network that is available to read.\n             Namespace:   \n    Vector.CANoe.Sockets Assembly:\n   Vector.CANoe.Sockets.dll Syntax C# VB C++ Copy public int Available { get; } Public ReadOnly Property Available As Integer ..."},"6246":{y:0,u:"../Content/html/ed6c69c7-e277-4dbb-c906-b5d530185a95.htm",l:-1,t:"UdpClient.Client Property ",i:4.32318831498566E-05,a:"Vector CANoe .NET API \n            Gets the underlying network  Socket .\n             Namespace:   \n    Vector.CANoe.Sockets Assembly:\n   Vector.CANoe.Sockets.dll Syntax C# VB C++ Copy public Socket Client { get; } Public ReadOnly Property Client As Socket Get public:\nproperty Socket^ Client ..."},"6247":{y:0,u:"../Content/html/389a4a14-e563-d271-9d81-8f6ba8449aca.htm",l:-1,t:"UdpClient.DontFragment Property ",i:4.32318831498566E-05,a:"Vector CANoe .NET API \n            Gets or sets a  Boolean  value that specifies whether the  UdpClient  allows Internet Protocol (IP) datagrams to be fragmented.\n             Namespace:   \n    Vector.CANoe.Sockets Assembly:\n   Vector.CANoe.Sockets.dll Syntax C# VB C++ Copy public bool DontFragment ..."},"6248":{y:0,u:"../Content/html/196b980b-d520-ac9e-634e-b865cc2f9e73.htm",l:-1,t:"UdpClient.EnableBroadcast Property ",i:4.32318831498566E-05,a:"Vector CANoe .NET API \n            Gets or sets a  Boolean  value that specifies whether the  UdpClient \n            may send or receive broadcast packets.\n             Namespace:   \n    Vector.CANoe.Sockets Assembly:\n   Vector.CANoe.Sockets.dll Syntax C# VB C++ Copy public bool EnableBroadcast { ..."},"6249":{y:0,u:"../Content/html/42a08483-27ea-51ad-5da6-d7eed58f1eb5.htm",l:-1,t:"UdpClient.ExclusiveAddressUse Property ",i:4.32318831498566E-05,a:"Vector CANoe .NET API \n            Gets or sets a  Boolean  value that specifies whether the  UdpClient  allows only one client to use a port.\n             Namespace:   \n    Vector.CANoe.Sockets Assembly:\n   Vector.CANoe.Sockets.dll Syntax C# VB C++ Copy public bool ExclusiveAddressUse { get; set; } ..."},"6250":{y:0,u:"../Content/html/df4ad5b7-35eb-cc50-b5f6-9b803c40f793.htm",l:-1,t:"UdpClient.LocalEndpoint Property ",i:4.32318831498566E-05,a:"Vector CANoe .NET API The local endpoint Namespace:   \n    Vector.CANoe.Sockets Assembly:\n   Vector.CANoe.Sockets.dll Syntax C# VB C++ Copy public IPEndPoint LocalEndpoint { get; } Public ReadOnly Property LocalEndpoint As IPEndPoint Get public:\nproperty IPEndPoint^ LocalEndpoint {\n\tIPEndPoint^ get ..."},"6251":{y:0,u:"../Content/html/91de9544-56a2-a11a-6899-e5f20d43fe7e.htm",l:-1,t:"UdpClient.MulticastLoopback Property ",i:4.32318831498566E-05,a:"Vector CANoe .NET API \n            Gets or sets a  Boolean  value that specifies whether outgoing multicast packets are delivered to the sending application.\n             Namespace:   \n    Vector.CANoe.Sockets Assembly:\n   Vector.CANoe.Sockets.dll Syntax C# VB C++ Copy public bool MulticastLoopback ..."},"6252":{y:0,u:"../Content/html/9f015e6a-244a-f8d3-e93a-a3baa91e75f3.htm",l:-1,t:"UdpClient.Ttl Property ",i:4.32318831498566E-05,a:"Vector CANoe .NET API \n            Gets or sets a value that specifies the Time to Live (TTL) value of Internet\n            Protocol (IP) packets sent by the  UdpClient .\n             Namespace:   \n    Vector.CANoe.Sockets Assembly:\n   Vector.CANoe.Sockets.dll Syntax C# VB C++ Copy public short Ttl ..."},"6253":{y:0,u:"../Content/html/16772b60-ea89-6624-0380-a16668a4d404.htm",l:-1,t:"UdpClient Methods",i:2.04141208556776E-05,a:"Vector CANoe .NET API The  UdpClient  type exposes the following members. Methods Top See Also Reference UdpClient Class Vector.CANoe.Sockets Namespace"},"6254":{y:0,u:"../Content/html/dd9af04c-2051-04d4-1af8-c4e86cd032a0.htm",l:-1,t:"UdpClient.BeginReceive Method ",i:5.16643578290002E-05,a:"Vector CANoe .NET API \n            Receives a datagram from a remote host asynchronously.\n             Namespace:   \n    Vector.CANoe.Sockets Assembly:\n   Vector.CANoe.Sockets.dll Syntax C# VB C++ Copy public IAsyncResult BeginReceive(\n\tAsyncCallback requestCallback,\n\tObject state\n) Public Function ..."},"6255":{y:0,u:"../Content/html/0df73659-f5a0-9b68-f997-7c2c04ced5f9.htm",l:-1,t:"UdpClient.BeginSend Method ",i:6.31025618873273E-05,a:"Vector CANoe .NET API Overload List Top See Also Reference UdpClient Class Vector.CANoe.Sockets Namespace"},"6256":{y:0,u:"../Content/html/91914ff0-fc7e-d6fd-2ec6-603139f7aa35.htm",l:-1,t:"UdpClient.BeginSend Method (Byte[], Int32, AsyncCallback, Object)",i:5.15492867027589E-05,a:"Vector CANoe .NET API \n            Sends a datagram to a remote host asynchronously. The destination was specified\n            previously by a call to  Connect Overload .\n             Namespace:   \n    Vector.CANoe.Sockets Assembly:\n   Vector.CANoe.Sockets.dll Syntax C# VB C++ Copy public ..."},"6257":{y:0,u:"../Content/html/5565ecd8-8846-1daa-ab59-104aa5a77044.htm",l:-1,t:"UdpClient.BeginSend Method (Byte[], Int32, IPEndPoint, AsyncCallback, Object)",i:5.15492867027589E-05,a:"Vector CANoe .NET API \n            Sends a datagram to a destination asynchronously. The destination is specified by a  EndPoint .\n             Namespace:   \n    Vector.CANoe.Sockets Assembly:\n   Vector.CANoe.Sockets.dll Syntax C# VB C++ Copy public IAsyncResult BeginSend(\n\tbyte[] datagram,\n\tint ..."},"6258":{y:0,u:"../Content/html/81d6c93c-dfec-363d-22aa-08b87489fed8.htm",l:-1,t:"UdpClient.Close Method ",i:4.26093897784727E-05,a:"Vector CANoe .NET API \n            Closes the UDP connection.\n             Namespace:   \n    Vector.CANoe.Sockets Assembly:\n   Vector.CANoe.Sockets.dll Syntax C# VB C++ Copy public void Close() Public Sub Close public:\nvoid Close() /* */ Exceptions Version Information Supported from: 8.2 See Also ..."},"6259":{y:0,u:"../Content/html/5628a2bc-1fea-6233-cbee-9808cf9198ef.htm",l:-1,t:"UdpClient.Connect Method ",i:0.0001181101498135,a:"Vector CANoe .NET API Overload List Top See Also Reference UdpClient Class Vector.CANoe.Sockets Namespace"},"6260":{y:0,u:"../Content/html/24c3556b-38e7-0d94-99bf-89448da2950a.htm",l:-1,t:"UdpClient.Connect Method (IPEndPoint)",i:6.26893713466268E-05,a:"Vector CANoe .NET API \n            Establishes a default remote host using the specified network endpoint.\n             Namespace:   \n    Vector.CANoe.Sockets Assembly:\n   Vector.CANoe.Sockets.dll Syntax C# VB C++ Copy public void Connect(\n\tIPEndPoint endPoint\n) Public Sub Connect ( \n\tendPoint As ..."},"6261":{y:0,u:"../Content/html/9b001fb0-35c3-4b10-4dd7-27f67a8c7a1e.htm",l:-1,t:"UdpClient.Connect Method (IPAddress, Int32)",i:6.26893713466268E-05,a:"Vector CANoe .NET API \n            Establishes a default remote host using the specified IP address and port number.\n             Namespace:   \n    Vector.CANoe.Sockets Assembly:\n   Vector.CANoe.Sockets.dll Syntax C# VB C++ Copy public void Connect(\n\tIPAddress addr,\n\tint port\n) Public Sub Connect ( ..."},"6262":{y:0,u:"../Content/html/0f4a73f9-9e7b-5e21-9c34-fdd9be53d75a.htm",l:-1,t:"UdpClient.Dispose Method ",i:5.95556302520026E-05,a:"Vector CANoe .NET API Overload List Top See Also Reference UdpClient Class Vector.CANoe.Sockets Namespace"},"6263":{y:0,u:"../Content/html/a4491119-a79f-f40c-6848-a76f1df6056e.htm",l:-1,t:"UdpClient.Dispose Method ",i:5.27342379733773E-05,a:"Vector CANoe .NET API \n            Releases all resources used by the current instance of the  UdpClient  class.\n             Namespace:   \n    Vector.CANoe.Sockets Assembly:\n   Vector.CANoe.Sockets.dll Syntax C# VB C++ Copy public void Dispose() Public Sub Dispose public:\nvirtual void Dispose() ..."},"6264":{y:0,u:"../Content/html/2c68359b-8200-85af-2001-8f6cc689e267.htm",l:-1,t:"UdpClient.Dispose Method (Boolean)",i:5.27342379733773E-05,a:"Vector CANoe .NET API \n            Releases the unmanaged resources used by the  UdpClient  and optionally releases the managed resources.\n             Namespace:   \n    Vector.CANoe.Sockets Assembly:\n   Vector.CANoe.Sockets.dll Syntax C# VB C++ Copy protected virtual void Dispose(\n\tbool disposing\n) ..."},"6265":{y:0,u:"../Content/html/d9e24775-48c7-9d8d-2946-f1122451d53b.htm",l:-1,t:"UdpClient.DropMulticastGroup Method ",i:4.96958044765801E-05,a:"Vector CANoe .NET API Overload List Top See Also Reference UdpClient Class Vector.CANoe.Sockets Namespace"},"6266":{y:0,u:"../Content/html/61cc465e-16d4-8a78-8e8f-af001744a8e7.htm",l:-1,t:"UdpClient.DropMulticastGroup Method (IPAddress)",i:5.10579551148173E-05,a:"Vector CANoe .NET API \n            Leaves a multicast group.\n             Namespace:   \n    Vector.CANoe.Sockets Assembly:\n   Vector.CANoe.Sockets.dll Syntax C# VB C++ Copy public void DropMulticastGroup(\n\tIPAddress multicastAddr\n) Public Sub DropMulticastGroup ( \n\tmulticastAddr As IPAddress\n) ..."},"6267":{y:0,u:"../Content/html/d20f5210-f335-0207-105f-77aff7154f36.htm",l:-1,t:"UdpClient.DropMulticastGroup Method (IPAddress, Int32)",i:5.10579551148173E-05,a:"Vector CANoe .NET API \n            Leaves a multicast group.\n             Namespace:   \n    Vector.CANoe.Sockets Assembly:\n   Vector.CANoe.Sockets.dll Syntax C# VB C++ Copy public void DropMulticastGroup(\n\tIPAddress multicastAddr,\n\tint ifindex\n) Public Sub DropMulticastGroup ( \n\tmulticastAddr As ..."},"6268":{y:0,u:"../Content/html/eab96150-1b13-7f28-51e7-b3e734dfe7e7.htm",l:-1,t:"UdpClient.EndReceive Method ",i:4.26093897784727E-05,a:"Vector CANoe .NET API \n            Ends a pending asynchronous receive.\n             Namespace:   \n    Vector.CANoe.Sockets Assembly:\n   Vector.CANoe.Sockets.dll Syntax C# VB C++ Copy public byte[] EndReceive(\n\tIAsyncResult asyncResult,\n\tref IPEndPoint remoteEP\n) Public Function EndReceive ( ..."},"6269":{y:0,u:"../Content/html/30271a75-5a03-9527-1245-e1480a77b857.htm",l:-1,t:"UdpClient.EndSend Method ",i:4.26093897784727E-05,a:"Vector CANoe .NET API \n            Ends a pending asynchronous send.\n             Namespace:   \n    Vector.CANoe.Sockets Assembly:\n   Vector.CANoe.Sockets.dll Syntax C# VB C++ Copy public int EndSend(\n\tIAsyncResult asyncResult\n) Public Function EndSend ( \n\tasyncResult As IAsyncResult\n) As Integer ..."},"6270":{y:0,u:"../Content/html/668b32f4-86ee-950e-b53f-70f3ae1cff13.htm",l:-1,t:"UdpClient.JoinMulticastGroup Method ",i:7.19249360170743E-05,a:"Vector CANoe .NET API Overload List Top See Also Reference UdpClient Class Vector.CANoe.Sockets Namespace"},"6271":{y:0,u:"../Content/html/1895f474-d492-980b-e1b5-5335f215d201.htm",l:-1,t:"UdpClient.JoinMulticastGroup Method (IPAddress)",i:5.13435222606302E-05,a:"Vector CANoe .NET API \n            Adds a  UdpClient  to a multicast group.\n             Namespace:   \n    Vector.CANoe.Sockets Assembly:\n   Vector.CANoe.Sockets.dll Syntax C# VB C++ Copy public void JoinMulticastGroup(\n\tIPAddress multicastAddr\n) Public Sub JoinMulticastGroup ( \n\tmulticastAddr As ..."},"6272":{y:0,u:"../Content/html/207bd53c-c831-6a67-019a-acd8c593073d.htm",l:-1,t:"UdpClient.JoinMulticastGroup Method (Int32, IPAddress)",i:5.13435222606302E-05,a:"Vector CANoe .NET API \n            Adds a  UdpClient  to a multicast group.\n             Namespace:   \n    Vector.CANoe.Sockets Assembly:\n   Vector.CANoe.Sockets.dll Syntax C# VB C++ Copy public void JoinMulticastGroup(\n\tint ifindex,\n\tIPAddress multicastAddr\n) Public Sub JoinMulticastGroup ( ..."},"6273":{y:0,u:"../Content/html/882b1b45-86bd-ec86-b9b1-9177dc122096.htm",l:-1,t:"UdpClient.JoinMulticastGroup Method (IPAddress, Int32)",i:5.13435222606302E-05,a:"Vector CANoe .NET API \n            Adds a  UdpClient  to a multicast group with the specified Time to Live (TTL).\n             Namespace:   \n    Vector.CANoe.Sockets Assembly:\n   Vector.CANoe.Sockets.dll Syntax C# VB C++ Copy public void JoinMulticastGroup(\n\tIPAddress multicastAddr,\n\tint ..."},"6274":{y:0,u:"../Content/html/8cad9fc1-0da8-1cc4-960a-8e915f3ec32c.htm",l:-1,t:"UdpClient.JoinMulticastGroup Method (IPAddress, IPAddress)",i:5.13435222606302E-05,a:"Vector CANoe .NET API \n            Adds a  UdpClient  to a multicast group.\n             Namespace:   \n    Vector.CANoe.Sockets Assembly:\n   Vector.CANoe.Sockets.dll Syntax C# VB C++ Copy public void JoinMulticastGroup(\n\tIPAddress multicastAddr,\n\tIPAddress localAddress\n) Public Sub ..."},"6275":{y:0,u:"../Content/html/bb138cdb-edb9-830d-3d0c-3b8afa90b786.htm",l:-1,t:"Vector.CANoe.Sockets.Security Namespace",i:0.00100934354639727,a:"Vector CANoe .NET API Contains the API for secured sockets communication services in CANoe. Classes"},"6276":{y:0,u:"../Content/html/678dcdb0-b75f-7521-c110-2edd0e0a797c.htm",l:-1,t:"DtlsClient Class",i:0.000713353497427408,a:"Vector CANoe .NET API \n            Provides access to datagram-based communication that uses the Datagram Transport Layer Security (DTLS) security protocol to authenticate the server and optionally the client.\n             Inheritance Hierarchy System /* */ Object   DtlsClient ..."},"6277":{y:0,u:"../Content/html/084a78dd-91e7-fe33-d94e-f44f63e92eb4.htm",l:-1,t:"DtlsClient Constructor ",i:5.74458612713677E-05,a:"Vector CANoe .NET API \n            Initializes a new instance of the  DtlsClient  class and binds it to the given local endpoint.\n             Namespace:   \n    Vector.CANoe.Sockets.Security Assembly:\n   Vector.CANoe.Sockets.dll Syntax C# VB C++ Copy public DtlsClient(\n\tIPEndPoint localEP\n) Public ..."},"6278":{y:0,u:"../Content/html/d5127185-5759-3772-d414-ede7ce546837.htm",l:-1,t:"DtlsClient Properties",i:2.18702329726561E-05,a:"Vector CANoe .NET API The  DtlsClient  type exposes the following members. Properties Top See Also Reference DtlsClient Class Vector.CANoe.Sockets.Security Namespace"},"6279":{y:0,u:"../Content/html/f4b7e762-4e62-72c2-8ee1-4215547303de.htm",l:-1,t:"DtlsClient.Available Property ",i:5.97695735247125E-05,a:"Vector CANoe .NET API \n            Gets the amount of data received from the network that is available to read.\n             Namespace:   \n    Vector.CANoe.Sockets.Security Assembly:\n   Vector.CANoe.Sockets.dll Syntax C# VB C++ Copy public int Available { get; } Public ReadOnly Property Available As ..."},"6280":{y:0,u:"../Content/html/c02775c4-b24c-95c6-7a3f-390fba9d3a82.htm",l:-1,t:"DtlsClient.DontFragment Property ",i:5.97695735247125E-05,a:"Vector CANoe .NET API \n            Gets or sets a  Boolean  value that specifies whether the  DtlsClient  allows Internet Protocol (IP) datagrams to be fragmented.\n             Namespace:   \n    Vector.CANoe.Sockets.Security Assembly:\n   Vector.CANoe.Sockets.dll Syntax C# VB C++ Copy public bool ..."},"6281":{y:0,u:"../Content/html/da2deba5-1d99-2c4f-71e9-bdb937345f83.htm",l:-1,t:"DtlsClient.LocalEndPoint Property ",i:5.97695735247125E-05,a:"Vector CANoe .NET API \n            The local endpoint to which the  DtlsClient  is bound.\n             Namespace:   \n    Vector.CANoe.Sockets.Security Assembly:\n   Vector.CANoe.Sockets.dll Syntax C# VB C++ Copy public EndPoint LocalEndPoint { get; } Public ReadOnly Property LocalEndPoint As EndPoint ..."},"6282":{y:0,u:"../Content/html/0dc16966-546d-a479-3a6c-f9bb50a61b9f.htm",l:-1,t:"DtlsClient.RemoteEndPoint Property ",i:5.97695735247125E-05,a:"Vector CANoe .NET API \n            The remote endpoint to which the  DtlsClient  is connected.\n             Namespace:   \n    Vector.CANoe.Sockets.Security Assembly:\n   Vector.CANoe.Sockets.dll Syntax C# VB C++ Copy public EndPoint RemoteEndPoint { get; } Public ReadOnly Property RemoteEndPoint As ..."},"6283":{y:0,u:"../Content/html/0629b140-1638-b3fd-4333-799d3fee4c7d.htm",l:-1,t:"DtlsClient.Ttl Property ",i:5.97695735247125E-05,a:"Vector CANoe .NET API \n            Gets or sets a value that specifies the Time to Live (TTL) value of Internet Protocol (IP) packets sent by the  DtlsClient .\n             Namespace:   \n    Vector.CANoe.Sockets.Security Assembly:\n   Vector.CANoe.Sockets.dll Syntax C# VB C++ Copy public short Ttl { ..."},"6284":{y:0,u:"../Content/html/bea3f9fd-369f-fc7f-e0cc-131c1e8c6419.htm",l:-1,t:"DtlsClient Methods",i:2.11834214692044E-05,a:"Vector CANoe .NET API The  DtlsClient  type exposes the following members. Methods Top See Also Reference DtlsClient Class Vector.CANoe.Sockets.Security Namespace"},"6285":{y:0,u:"../Content/html/85f05375-3af5-d3ba-27a0-15f7878f577e.htm",l:-1,t:"DtlsClient.BeginAuthenticateAsClient Method ",i:0.000102655932120017,a:"Vector CANoe .NET API Called by clients to begin an asynchronous operation to authenticate the server and optionally the client. Overload List Top See Also Reference DtlsClient Class Vector.CANoe.Sockets.Security Namespace"},"6286":{y:0,u:"../Content/html/1a901a22-93f4-50ba-1552-9d735c2a6793.htm",l:-1,t:"DtlsClient.BeginAuthenticateAsClient Method (IPEndPoint, String, X509Certificate, AsyncCallback, Object)",i:0.00010238285164437,a:"Vector CANoe .NET API \n            Called by clients to begin an asynchronous operation to authenticate the server and the client.\n             Namespace:   \n    Vector.CANoe.Sockets.Security Assembly:\n   Vector.CANoe.Sockets.dll Syntax C# VB C++ Copy public IAsyncResult ..."},"6287":{y:0,u:"../Content/html/196f5f2d-ffcf-c244-af81-aefcd5731816.htm",l:-1,t:"DtlsClient.BeginReceive Method ",i:7.582369760729E-05,a:"Vector CANoe .NET API \n            Receives a datagram from a remote host asynchronously.\n             Namespace:   \n    Vector.CANoe.Sockets.Security Assembly:\n   Vector.CANoe.Sockets.dll Syntax C# VB C++ Copy public IAsyncResult BeginReceive(\n\tAsyncCallback requestCallback,\n\tObject state\n) Public ..."},"6288":{y:0,u:"../Content/html/da1c1951-748f-7ec3-48d5-88e9424b3865.htm",l:-1,t:"DtlsClient.BeginSend Method ",i:7.582369760729E-05,a:"Vector CANoe .NET API \n            Sends a datagram to a remote host asynchronously.\n            The destination was specified previously by a call to  BeginAuthenticateAsClient(IPEndPoint, String, X509Certificate, AsyncCallback, Object)  and has been authenticated successfully.\n             ..."},"6289":{y:0,u:"../Content/html/00abec2a-09f3-7738-3fe6-56baf457ef69.htm",l:-1,t:"DtlsClient.Close Method ",i:5.90827620212608E-05,a:"Vector CANoe .NET API \n            Closes the DTLS connection and releases all resources.\n             Namespace:   \n    Vector.CANoe.Sockets.Security Assembly:\n   Vector.CANoe.Sockets.dll Syntax C# VB C++ Copy public override void Close() Public Overrides Sub Close public:\nvirtual void Close() ..."},"6290":{y:0,u:"../Content/html/647a8c46-9f41-f3c2-4922-2eec085f8515.htm",l:-1,t:"DtlsClient.Dispose Method ",i:4.98946481571556E-05,a:"Vector CANoe .NET API Overload List Top See Also Reference DtlsClient Class Vector.CANoe.Sockets.Security Namespace"},"6291":{y:0,u:"../Content/html/c3a72b81-d37c-cd05-073b-1c3d63eba5e9.htm",l:-1,t:"DtlsClient.Dispose Method (Boolean)",i:6.96856868433092E-05,a:"Vector CANoe .NET API Releases the unmanaged resources used by the  DtlsClient  and optionally releases the managed resources Namespace:   \n    Vector.CANoe.Sockets.Security Assembly:\n   Vector.CANoe.Sockets.dll Syntax C# VB C++ Copy protected override void Dispose(\n\tbool disposing\n) Protected ..."},"6292":{y:0,u:"../Content/html/e91e16d2-ad99-d527-76fa-f5dffed8c901.htm",l:-1,t:"DtlsClient.EndReceive Method ",i:5.90827620212608E-05,a:"Vector CANoe .NET API \n            Ends a pending asynchronous receive.\n             Namespace:   \n    Vector.CANoe.Sockets.Security Assembly:\n   Vector.CANoe.Sockets.dll Syntax C# VB C++ Copy public byte[] EndReceive(\n\tIAsyncResult asyncResult\n) Public Function EndReceive ( \n\tasyncResult As ..."},"6293":{y:0,u:"../Content/html/f827007d-8fb9-666c-182a-164e7388ba83.htm",l:-1,t:"DtlsClient.EndSend Method ",i:5.90827620212608E-05,a:"Vector CANoe .NET API \n            Ends a pending asynchronous send.\n             Namespace:   \n    Vector.CANoe.Sockets.Security Assembly:\n   Vector.CANoe.Sockets.dll Syntax C# VB C++ Copy public int EndSend(\n\tIAsyncResult asyncResult\n) Public Function EndSend ( \n\tasyncResult As IAsyncResult\n) As ..."},"6294":{y:0,u:"../Content/html/a4ffb2a9-f57d-1869-4609-c7344e968261.htm",l:-1,t:"DtlsClient Fields",i:2.72742149571787E-05,a:"Vector CANoe .NET API The  DtlsClient  type exposes the following members. Fields Top See Also Reference DtlsClient Class Vector.CANoe.Sockets.Security Namespace"},"6295":{y:0,u:"../Content/html/2380c99d-7d8a-71fe-8bad-dbfc1f029874.htm",l:-1,t:"DtlsListener Class",i:0.000345516877366301,a:"Vector CANoe .NET API \n            Listens for connections from DTLS network clients.\n             Inheritance Hierarchy System /* */ Object   Vector.CANoe.Sockets.Security /* */ DtlsListener Namespace:   \n    Vector.CANoe.Sockets.Security Assembly:\n   Vector.CANoe.Sockets.dll Syntax C# VB C++ Copy ..."},"6296":{y:0,u:"../Content/html/77c1e964-823e-1428-6d36-17d0f7ec2b0f.htm",l:-1,t:"DtlsListener Constructor ",i:6.84982272483707E-05,a:"Vector CANoe .NET API \n            Initializes a new instance of the  DtlsListener  class.\n             Namespace:   \n    Vector.CANoe.Sockets.Security Assembly:\n   Vector.CANoe.Sockets.dll Syntax C# VB C++ Copy public DtlsListener(\n\tX509Certificate serverCertificate,\n\tIPEndPoint localEP\n) Public ..."},"6297":{y:0,u:"../Content/html/dafae30d-0136-bb5f-7b1d-1ed59c7da3ed.htm",l:-1,t:"DtlsListener Methods",i:2.27726454982268E-05,a:"Vector CANoe .NET API The  DtlsListener  type exposes the following members. Methods Top See Also Reference DtlsListener Class Vector.CANoe.Sockets.Security Namespace"},"6298":{y:0,u:"../Content/html/40ffb92a-2062-ae0a-25d0-e91ef8f42bdb.htm",l:-1,t:"DtlsListener.BeginAcceptDtlsClient Method ",i:8.69666557125848E-05,a:"Vector CANoe .NET API \n            Begins an asynchronous operation to accept an incoming authentication attempt.\n             Namespace:   \n    Vector.CANoe.Sockets.Security Assembly:\n   Vector.CANoe.Sockets.dll Syntax C# VB C++ Copy public IAsyncResult BeginAcceptDtlsClient(\n\tAsyncCallback ..."},"6299":{y:0,u:"../Content/html/be04906e-59f3-2996-a044-c3c0ace4da05.htm",l:-1,t:"DtlsListener.EndAcceptDtlsClient Method ",i:7.17243520272861E-05,a:"Vector CANoe .NET API \n            Asynchronously accepts an incoming connection attempt and creates a new  DtlsClient  to handle remote host communication.\n             Namespace:   \n    Vector.CANoe.Sockets.Security Assembly:\n   Vector.CANoe.Sockets.dll Syntax C# VB C++ Copy public DtlsClient ..."},"6300":{y:0,u:"../Content/html/d01cfda3-5399-fb28-fdaa-91b3a6e28a7b.htm",l:-1,t:"SslStream Class",i:0.000492580132797119,a:"Vector CANoe .NET API \n            Provides a stream used for client-server communication that uses the Secure Socket Layer (SSL) security protocol to authenticate the server and optionally the client.\n             Inheritance Hierarchy System /* */ Object   SslStream ..."},});