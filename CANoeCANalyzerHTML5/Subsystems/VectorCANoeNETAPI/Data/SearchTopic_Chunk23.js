define({"1637":{y:0,u:"../Content/html/7b69b414-ae7a-b056-4469-56169f805224.htm",l:-1,t:"IReceiverReferenceEncoded Interface",i:0.000500146104438178,a:"Vector CANoe .NET API \n            Base interface for all communication object references providing classical receiver side access with encoded data types.\n             Namespace:   \n    Vector.CANoe.Runtime Assembly:\n   Vector.CANoe.Runtime.dll Syntax C# VB C++ Copy public interface ..."},"1638":{y:0,u:"../Content/html/fb17aabe-a006-63dc-1a6f-728462a1a050.htm",l:-1,t:"IReceiverReferenceEncoded Methods",i:2.4820978691189E-05,a:"Vector CANoe .NET API The  IReceiverReferenceEncoded  type exposes the following members. Methods Top See Also Reference IReceiverReferenceEncoded Interface Vector.CANoe.Runtime Namespace"},"1639":{y:0,u:"../Content/html/2dc42dfe-e191-5fb6-e8bc-e6d099d84163.htm",l:-1,t:"IReceiverReferenceEncoded.SetReceiver Method ",i:0.000202028433696692,a:"Vector CANoe .NET API \n            Switches the currently selected receiver and value representation.\n             Namespace:   \n    Vector.CANoe.Runtime Assembly:\n   Vector.CANoe.Runtime.dll Syntax C# VB C++ Copy void SetReceiver(\n\tstring receiverPath,\n\tValueRepresentation representation\n) Sub ..."},"1640":{y:0,u:"../Content/html/65a0fa10-053d-775e-79a7-1635353998ad.htm",l:-1,t:"IRuntimeValue Interface",i:0.000356669357816989,a:"Vector CANoe .NET API \n            Tagging interface which shows that a certain class represents a value in \n            the CANoe runtime. Runtime values are signals, environment variables and\n            system variables.\n             Namespace:   \n    Vector.CANoe.Runtime Assembly:\n  ..."},"1641":{y:0,u:"../Content/html/05cd04ec-9147-25b3-617d-6e0fde00ef10.htm",l:-1,t:"IRuntimeValueBuffer Interface",i:0.000668148612782601,a:"Vector CANoe .NET API \n            Interface for a temporary buffer for a value stored in the CANoe\n            Runtime. The buffered value can be stored or retrieved explicitly.\n             Namespace:   \n    Vector.CANoe.Runtime Assembly:\n   Vector.CANoe.Runtime.dll Syntax C# VB C++ Copy public ..."},"1642":{y:0,u:"../Content/html/c9cadb72-1857-015a-5e2b-f200b4d7b386.htm",l:-1,t:"IRuntimeValueBuffer Properties",i:2.27726454982268E-05,a:"Vector CANoe .NET API The  IRuntimeValueBuffer  type exposes the following members. Properties Top See Also Reference IRuntimeValueBuffer Interface Vector.CANoe.Runtime Namespace"},"1643":{y:0,u:"../Content/html/3746610a-d191-cd39-8197-aed7e57941b2.htm",l:-1,t:"IRuntimeValueBuffer.Handle Property ",i:0.0001210123733915,a:"Vector CANoe .NET API \n            Internal property. Do not use.\n             Namespace:   \n    Vector.CANoe.Runtime Assembly:\n   Vector.CANoe.Runtime.dll Syntax C# VB C++ Copy Object Handle { get; } ReadOnly Property Handle As Object Get property Object^ Handle {\n\tObject^ get ();\n} /* */ Property ..."},"1644":{y:0,u:"../Content/html/7c56adac-de56-0f61-30bb-dc960510e281.htm",l:-1,t:"IRuntimeValueBuffer.Name Property ",i:0.0001210123733915,a:"Vector CANoe .NET API \n            A short descriptive name of the object, e.g. the signal name.\n             Namespace:   \n    Vector.CANoe.Runtime Assembly:\n   Vector.CANoe.Runtime.dll Syntax C# VB C++ Copy string Name { get; } ReadOnly Property Name As String Get property String^ Name {\n\tString^ ..."},"1645":{y:0,u:"../Content/html/9ffc66bb-3d12-3add-4fbe-b1087f193a4c.htm",l:-1,t:"IRuntimeValueBuffer.Value Property ",i:0.0001210123733915,a:"Vector CANoe .NET API \n            The current buffered value.\n             Namespace:   \n    Vector.CANoe.Runtime Assembly:\n   Vector.CANoe.Runtime.dll Syntax C# VB C++ Copy double Value { get; set; } Property Value As Double Get Set property double Value {\n\tdouble get ();\n\tvoid set (double ..."},"1646":{y:0,u:"../Content/html/7cb44021-72a3-f292-d5e9-5bc618824c95.htm",l:-1,t:"IRuntimeValueBuffer Methods",i:2.35500249630257E-05,a:"Vector CANoe .NET API The  IRuntimeValueBuffer  type exposes the following members. Methods Top See Also Reference IRuntimeValueBuffer Interface Vector.CANoe.Runtime Namespace"},"1647":{y:0,u:"../Content/html/3625abf8-96ff-965a-4cdc-b799234bf97d.htm",l:-1,t:"IRuntimeValueBuffer.Retrieve Method ",i:0.000122010010371326,a:"Vector CANoe .NET API \n            Retrieves the current value from the CANoe runtime. After that, it can\n            be read through the Value property.\n             Namespace:   \n    Vector.CANoe.Runtime Assembly:\n   Vector.CANoe.Runtime.dll Syntax C# VB C++ Copy void Retrieve() Sub Retrieve void ..."},"1648":{y:0,u:"../Content/html/f23991f4-9bda-78b1-ee22-635295c01423.htm",l:-1,t:"IRuntimeValueBuffer.Store Method ",i:0.000122010010371326,a:"Vector CANoe .NET API \n            Stores the value in the CANoe runtime -- generates a value change in CANoe,\n            e.g. transmits the signal with the new value.\n             Namespace:   \n    Vector.CANoe.Runtime Assembly:\n   Vector.CANoe.Runtime.dll Syntax C# VB C++ Copy void Store() Sub ..."},"1649":{y:0,u:"../Content/html/97e487c6-e19c-3ea5-0463-792409f22d13.htm",l:-1,t:"IRxPDU Interface",i:0.000317649508078409,a:"Vector CANoe .NET API \n            Tagging interface for PDU receiver ports, used in context selection.\n             Namespace:   \n    Vector.CANoe.Runtime Assembly:\n   Vector.CANoe.Runtime.dll Syntax C# VB C++ Copy public interface IRxPDU : IPortBase, IPDUPort Public Interface IRxPDU Inherits ..."},"1650":{y:0,u:"../Content/html/d1aa6740-6566-5e52-035d-ecc8a52a3176.htm",l:-1,t:"IRxPDU Properties",i:2.27726454982268E-05,a:"Vector CANoe .NET API The  IRxPDU  type exposes the following members. Properties Top See Also Reference IRxPDU Interface Vector.CANoe.Runtime Namespace"},"1651":{y:0,u:"../Content/html/93928d97-053e-440d-8f90-f7aa402c9aa8.htm",l:-1,t:"IRxPDURef Interface",i:0.000318298816619317,a:"Vector CANoe .NET API \n            A reference to a receiver side PDU port.\n             Namespace:   \n    Vector.CANoe.Runtime Assembly:\n   Vector.CANoe.Runtime.dll Syntax C# VB C++ Copy public interface IRxPDURef : IRxPDU, \n\tIPortBase, IPDUPort, ICOReferenceBase, IDisposable, ISenderReferenceBase, ..."},"1652":{y:0,u:"../Content/html/6737da33-b0ca-d8a5-7f69-3695b8dfa37f.htm",l:-1,t:"IRxPDURef Properties",i:2.1585114904761E-05,a:"Vector CANoe .NET API The  IRxPDURef  type exposes the following members. Properties Top See Also Reference IRxPDURef Interface Vector.CANoe.Runtime Namespace"},"1653":{y:0,u:"../Content/html/91f57c2f-5d26-e9ff-90b4-55e065bbbacd.htm",l:-1,t:"IRxPDURef Methods",i:2.03710637769498E-05,a:"Vector CANoe .NET API The  IRxPDURef  type exposes the following members. Methods Top See Also Reference IRxPDURef Interface Vector.CANoe.Runtime Namespace"},"1654":{y:0,u:"../Content/html/b9c62255-3b12-1cd8-a0d6-49111b0a720f.htm",l:-1,t:"IRxPDURef.Clone Method ",i:3.11931161336987E-05,a:"Vector CANoe .NET API \n            Creates a copy of this object, which then selects the same port.\n             Namespace:   \n    Vector.CANoe.Runtime Assembly:\n   Vector.CANoe.Runtime.dll Syntax C# VB C++ Copy IRxPDURef Clone() Function Clone As IRxPDURef IRxPDURef^ Clone() /* */ Return Value ..."},"1655":{y:0,u:"../Content/html/1988e536-4889-ea5f-90ff-d37d07948329.htm",l:-1,t:"IRxPDURef.GetPDUReceiver Method ",i:3.11931161336987E-05,a:"Vector CANoe .NET API \n            Creates a copy of the currently selected receiver end-point reference.\n             Namespace:   \n    Vector.CANoe.Runtime Assembly:\n   Vector.CANoe.Runtime.dll Syntax C# VB C++ Copy IPDUReceiverRef GetPDUReceiver() Function GetPDUReceiver As IPDUReceiverRef ..."},"1656":{y:0,u:"../Content/html/a7e95518-d423-3ca5-b538-f5d265077e8d.htm",l:-1,t:"IRxPDURef.GetPDUSender Method ",i:3.11931161336987E-05,a:"Vector CANoe .NET API \n            Creates a copy of the currently selected sender end-point reference.\n             Namespace:   \n    Vector.CANoe.Runtime Assembly:\n   Vector.CANoe.Runtime.dll Syntax C# VB C++ Copy IPDUSenderRef GetPDUSender() Function GetPDUSender As IPDUSenderRef IPDUSenderRef^ ..."},"1657":{y:0,u:"../Content/html/585a7d74-acb3-3b58-d516-01b0240b81aa.htm",l:-1,t:"IRxPDURef.SetPDU Method ",i:3.11931161336987E-05,a:"Vector CANoe .NET API \n            Switches the currently selected PDU.\n             Namespace:   \n    Vector.CANoe.Runtime Assembly:\n   Vector.CANoe.Runtime.dll Syntax C# VB C++ Copy void SetPDU(\n\tstring pduPath\n) Sub SetPDU ( \n\tpduPath As String\n) void SetPDU(\n\tString^ pduPath\n) /* */ Parameters ..."},"1658":{y:0,u:"../Content/html/90754cf4-f0ff-e21a-90b9-9d08c5075858.htm",l:-1,t:"IRxSignal Interface",i:0.000317649508078409,a:"Vector CANoe .NET API \n            Tagging interface for signal receiver ports, used in context selection.\n             Namespace:   \n    Vector.CANoe.Runtime Assembly:\n   Vector.CANoe.Runtime.dll Syntax C# VB C++ Copy public interface IRxSignal : IPortBase, \n\tISignalPort Public Interface IRxSignal ..."},"1659":{y:0,u:"../Content/html/8a5b7d2c-8b7b-83f6-5de6-48247001fe05.htm",l:-1,t:"IRxSignal Properties",i:2.27726454982268E-05,a:"Vector CANoe .NET API The  IRxSignal  type exposes the following members. Properties Top See Also Reference IRxSignal Interface Vector.CANoe.Runtime Namespace"},"1660":{y:0,u:"../Content/html/7203b6cc-5272-b49c-54a9-4b723e524cf0.htm",l:-1,t:"IRxSignalRef Interface",i:0.000342740246158769,a:"Vector CANoe .NET API \n            A reference to a receiver side signal port.\n             Namespace:   \n    Vector.CANoe.Runtime Assembly:\n   Vector.CANoe.Runtime.dll Syntax C# VB C++ Copy public interface IRxSignalRef : IRxSignal, \n\tIPortBase, ISignalPort, ICOReferenceBase, IDisposable, ..."},"1661":{y:0,u:"../Content/html/6e2e9371-e6e6-378e-166f-ad5a17e040bd.htm",l:-1,t:"IRxSignalRef Properties",i:2.1585114904761E-05,a:"Vector CANoe .NET API The  IRxSignalRef  type exposes the following members. Properties Top See Also Reference IRxSignalRef Interface Vector.CANoe.Runtime Namespace"},"1662":{y:0,u:"../Content/html/19883d55-ec74-20af-7928-0f2beb8eb5fc.htm",l:-1,t:"IRxSignalRef Methods",i:2.03710637769498E-05,a:"Vector CANoe .NET API The  IRxSignalRef  type exposes the following members. Methods Top See Also Reference IRxSignalRef Interface Vector.CANoe.Runtime Namespace"},"1663":{y:0,u:"../Content/html/02d13749-ab89-4ac2-c810-00b46ee92e10.htm",l:-1,t:"IRxSignalRef.Clone Method ",i:3.20241162009419E-05,a:"Vector CANoe .NET API \n            Creates a copy of this object, which then selects the same port.\n             Namespace:   \n    Vector.CANoe.Runtime Assembly:\n   Vector.CANoe.Runtime.dll Syntax C# VB C++ Copy IRxSignalRef Clone() Function Clone As IRxSignalRef IRxSignalRef^ Clone() /* */ Return ..."},"1664":{y:0,u:"../Content/html/de658f7c-23c1-f4da-cf55-fe3c82b4d149.htm",l:-1,t:"IRxSignalRef.GetSignalReceiver Method ",i:4.01752628596627E-05,a:"Vector CANoe .NET API \n            Creates a copy of the currently selected receiver end-point reference.\n             Namespace:   \n    Vector.CANoe.Runtime Assembly:\n   Vector.CANoe.Runtime.dll Syntax C# VB C++ Copy ISignalReceiverRef GetSignalReceiver() Function GetSignalReceiver As ..."},"1665":{y:0,u:"../Content/html/902ce79f-dff8-c142-5c6f-61d57ce63b77.htm",l:-1,t:"IRxSignalRef.GetSignalSender Method ",i:4.01752628596627E-05,a:"Vector CANoe .NET API \n            Creates a copy of the currently selected sender end-point reference.\n             Namespace:   \n    Vector.CANoe.Runtime Assembly:\n   Vector.CANoe.Runtime.dll Syntax C# VB C++ Copy ISignalSenderRef GetSignalSender() Function GetSignalSender As ISignalSenderRef ..."},"1666":{y:0,u:"../Content/html/1413085f-94ca-8c0a-9f15-c9ec36404a37.htm",l:-1,t:"IRxSignalRef.SetSignal Method ",i:4.45253849486623E-05,a:"Vector CANoe .NET API \n            Switches the currently selected signal.\n             Namespace:   \n    Vector.CANoe.Runtime Assembly:\n   Vector.CANoe.Runtime.dll Syntax C# VB C++ Copy void SetSignal(\n\tstring signalPath\n) Sub SetSignal ( \n\tsignalPath As String\n) void SetSignal(\n\tString^ ..."},"1667":{y:0,u:"../Content/html/9d75a6e9-4d5f-9609-1eac-43824c4e0ac2.htm",l:-1,t:"IScalarValueEntityReadOnly(T, P) Interface",i:0.000415322149222728,a:"Vector CANoe .NET API \n            Typed interface for a scalar value entity in the CANoe runtime. The interface provides\n            type safe read-only access to the value. It is implemented by the concrete generated classes.\n             Namespace:   \n    Vector.CANoe.Runtime Assembly:\n  ..."},"1668":{y:0,u:"../Content/html/c0a5fb84-b3eb-ad62-7cfb-23c0183c2974.htm",l:-1,t:"IScalarValueEntityReadOnly(T, P) Properties",i:2.35500249630257E-05,a:"Vector CANoe .NET API The  IScalarValueEntityReadOnly /* */ T, P /* */  generic type exposes the following members. Properties Top See Also Reference IScalarValueEntityReadOnly /* */ T, P /* */  Interface Vector.CANoe.Runtime Namespace"},"1669":{y:0,u:"../Content/html/b63e980e-14e2-1184-dbb1-9548e4661b32.htm",l:-1,t:"IScalarValueEntityReadOnly(T, P).ImplValue Property ",i:0.00010359516756489,a:"Vector CANoe .NET API \n            The concrete implementation value in the CANoe runtime.\n             Namespace:   \n    Vector.CANoe.Runtime Assembly:\n   Vector.CANoe.Runtime.dll Syntax C# VB C++ Copy T ImplValue { get; } ReadOnly Property ImplValue As T\n\tGet property T ImplValue {\n\tT get ();\n} /* ..."},"1670":{y:0,u:"../Content/html/8b09742a-0adb-b3cf-d0a0-70c8fba19578.htm",l:-1,t:"IScalarValueEntityReadOnly(T, P).PhysValue Property ",i:0.00010359516756489,a:"Vector CANoe .NET API \n            The concrete physical value in the CANoe runtime.\n             Namespace:   \n    Vector.CANoe.Runtime Assembly:\n   Vector.CANoe.Runtime.dll Syntax C# VB C++ Copy P PhysValue { get; } ReadOnly Property PhysValue As P\n\tGet property P PhysValue {\n\tP get ();\n} /* */ ..."},"1671":{y:0,u:"../Content/html/189862ab-e911-b1fa-955c-419482e91728.htm",l:-1,t:"IScalarValueEntityReadOnly(T, P) Methods",i:2.35500249630257E-05,a:"Vector CANoe .NET API The  IScalarValueEntityReadOnly /* */ T, P /* */  generic type exposes the following members. Methods Top See Also Reference IScalarValueEntityReadOnly /* */ T, P /* */  Interface Vector.CANoe.Runtime Namespace"},"1672":{y:0,u:"../Content/html/650ad641-6ae3-2674-f0b3-a6029b5bdc8b.htm",l:-1,t:"IScalarValueEntityReadWrite(T, P) Interface",i:0.000362151909233509,a:"Vector CANoe .NET API \n            Typed interface for a scalar value entity in the CANoe runtime. The interface provides type\n            safe read/write access to the value. It is implemented by the concrete generated classes.\n             Namespace:   \n    Vector.CANoe.Runtime Assembly:\n  ..."},"1673":{y:0,u:"../Content/html/a1b2145b-577f-ac66-481a-cee69a5abf44.htm",l:-1,t:"IScalarValueEntityReadWrite(T, P) Properties",i:2.35500249630257E-05,a:"Vector CANoe .NET API The  IScalarValueEntityReadWrite /* */ T, P /* */  generic type exposes the following members. Properties Top See Also Reference IScalarValueEntityReadWrite /* */ T, P /* */  Interface Vector.CANoe.Runtime Namespace"},"1674":{y:0,u:"../Content/html/720a45ee-3387-a6a9-fa64-1230dd5c2c22.htm",l:-1,t:"IScalarValueEntityReadWrite(T, P).ImplValue Property ",i:7.4854312884498E-05,a:"Vector CANoe .NET API \n            The concrete implementation value in the CANoe runtime.\n             Namespace:   \n    Vector.CANoe.Runtime Assembly:\n   Vector.CANoe.Runtime.dll Syntax C# VB C++ Copy T ImplValue { get; set; } Property ImplValue As T\n\tGet Set property T ImplValue {\n\tT get ..."},"1675":{y:0,u:"../Content/html/07d026da-5b7e-31b2-4f9f-a1135b4b6bfd.htm",l:-1,t:"IScalarValueEntityReadWrite(T, P).PhysValue Property ",i:7.4854312884498E-05,a:"Vector CANoe .NET API \n            The concrete physical value in the CANoe runtime.\n             Namespace:   \n    Vector.CANoe.Runtime Assembly:\n   Vector.CANoe.Runtime.dll Syntax C# VB C++ Copy P PhysValue { get; set; } Property PhysValue As P\n\tGet Set property P PhysValue {\n\tP get ();\n\tvoid set ..."},"1676":{y:0,u:"../Content/html/5627d22c-39c6-ea9c-91d5-5e032522d270.htm",l:-1,t:"IScalarValueEntityReadWrite(T, P) Methods",i:2.35500249630257E-05,a:"Vector CANoe .NET API The  IScalarValueEntityReadWrite /* */ T, P /* */  generic type exposes the following members. Methods Top See Also Reference IScalarValueEntityReadWrite /* */ T, P /* */  Interface Vector.CANoe.Runtime Namespace"},"1677":{y:0,u:"../Content/html/24b378ee-fd3f-2b6e-11f0-fc504e679896.htm",l:-1,t:"ISenderReferenceBase Interface",i:0.00104840949331326,a:"Vector CANoe .NET API \n            Base interface for all communication object references providing classical sender side access.\n             Namespace:   \n    Vector.CANoe.Runtime Assembly:\n   Vector.CANoe.Runtime.dll Syntax C# VB C++ Copy public interface ISenderReferenceBase Public Interface ..."},"1678":{y:0,u:"../Content/html/b85759e2-c574-e090-8ec9-93c90e1643bf.htm",l:-1,t:"ISenderReferenceBase Methods",i:2.18702329726561E-05,a:"Vector CANoe .NET API The  ISenderReferenceBase  type exposes the following members. Methods Top See Also Reference ISenderReferenceBase Interface Vector.CANoe.Runtime Namespace"},"1679":{y:0,u:"../Content/html/7f20bb04-4908-c510-bb4c-a30022028d59.htm",l:-1,t:"ISenderReferenceBase.GetSender Method ",i:0.000291250076041542,a:"Vector CANoe .NET API \n            Returns the currently selected sender side participant.\n             Namespace:   \n    Vector.CANoe.Runtime Assembly:\n   Vector.CANoe.Runtime.dll Syntax C# VB C++ Copy IParticipant GetSender() Function GetSender As IParticipant IParticipant^ GetSender() /* */ ..."},"1680":{y:0,u:"../Content/html/50d2ab39-9d44-5263-4091-6456edad06dd.htm",l:-1,t:"ISenderReferenceBase.GetSenderIndex Method ",i:0.000291250076041542,a:"Vector CANoe .NET API \n            Returns the currently selected sender side end-point\u0027s index.\n             Namespace:   \n    Vector.CANoe.Runtime Assembly:\n   Vector.CANoe.Runtime.dll Syntax C# VB C++ Copy uint GetSenderIndex() Function GetSenderIndex As UInteger unsigned int GetSenderIndex() /* ..."},"1681":{y:0,u:"../Content/html/05295d10-6109-70f8-183f-843fc5b44288.htm",l:-1,t:"ISenderReferenceBase.SetSender Method ",i:0.000329529992958237,a:"Vector CANoe .NET API Overload List Top See Also Reference ISenderReferenceBase Interface Vector.CANoe.Runtime Namespace"},"1682":{y:0,u:"../Content/html/36b5e4ef-7f85-7b96-9b90-5dea154cb45f.htm",l:-1,t:"ISenderReferenceBase.SetSender Method (String)",i:0.000337932457209582,a:"Vector CANoe .NET API \n            Switches the currently selected sender.\n             Namespace:   \n    Vector.CANoe.Runtime Assembly:\n   Vector.CANoe.Runtime.dll Syntax C# VB C++ Copy void SetSender(\n\tstring senderPath\n) Sub SetSender ( \n\tsenderPath As String\n) void SetSender(\n\tString^ ..."},"1683":{y:0,u:"../Content/html/a9c9efab-7cac-3824-dea4-96ec24c06809.htm",l:-1,t:"ISenderReferenceBase.SetSender Method (UInt32)",i:0.000337932457209582,a:"Vector CANoe .NET API \n            Switches the currently selected sender.\n             Namespace:   \n    Vector.CANoe.Runtime Assembly:\n   Vector.CANoe.Runtime.dll Syntax C# VB C++ Copy void SetSender(\n\tuint senderIndex\n) Sub SetSender ( \n\tsenderIndex As UInteger\n) void SetSender(\n\tunsigned int ..."},"1684":{y:0,u:"../Content/html/9e0da9e6-874d-f8df-e9cd-0e09166ad196.htm",l:-1,t:"ISenderReferenceBase.SetSender Method (IParticipant)",i:0.000337932457209582,a:"Vector CANoe .NET API \n            Switches the currently selected sender.\n             Namespace:   \n    Vector.CANoe.Runtime Assembly:\n   Vector.CANoe.Runtime.dll Syntax C# VB C++ Copy void SetSender(\n\tIParticipant participant\n) Sub SetSender ( \n\tparticipant As IParticipant\n) void ..."},"1685":{y:0,u:"../Content/html/0c22db28-8ab3-e2be-1174-779181fe650d.htm",l:-1,t:"ISenderReferenceEncoded Interface",i:0.000500146104438178,a:"Vector CANoe .NET API \n            Base interface for all communication object references providing classical sender side access with encoded data types.\n             Namespace:   \n    Vector.CANoe.Runtime Assembly:\n   Vector.CANoe.Runtime.dll Syntax C# VB C++ Copy public interface ..."},"1686":{y:0,u:"../Content/html/a0a5f04c-11e5-0fd1-da27-37092e49bf5e.htm",l:-1,t:"ISenderReferenceEncoded Methods",i:2.4820978691189E-05,a:"Vector CANoe .NET API The  ISenderReferenceEncoded  type exposes the following members. Methods Top See Also Reference ISenderReferenceEncoded Interface Vector.CANoe.Runtime Namespace"},"1687":{y:0,u:"../Content/html/adc2b397-db1e-6076-4514-91612d068c43.htm",l:-1,t:"ISenderReferenceEncoded.SetSender Method ",i:0.000202028433696692,a:"Vector CANoe .NET API \n            Switches the currently selected sender and value representation.\n             Namespace:   \n    Vector.CANoe.Runtime Assembly:\n   Vector.CANoe.Runtime.dll Syntax C# VB C++ Copy void SetSender(\n\tstring senderPath,\n\tValueRepresentation representation\n) Sub SetSender ..."},"1688":{y:0,u:"../Content/html/338e41c2-fa55-b1ae-a116-400dde579fe2.htm",l:-1,t:"IServiceCO Interface",i:0.000474696136164231,a:"Vector CANoe .NET API \n            Tagging interface for service communication object classes. These classes can be used with\n            service discovery handler attributes OnServerDiscovered and OnClientDiscovered. Instances\n            of service classes can further be used in the low level API ..."},"1689":{y:0,u:"../Content/html/5afe6fd2-7d5d-f1e6-3003-4613afbcae07.htm",l:-1,t:"IServiceCO Properties",i:2.27726454982268E-05,a:"Vector CANoe .NET API The  IServiceCO  type exposes the following members. Properties Top See Also Reference IServiceCO Interface Vector.CANoe.Runtime Namespace"},"1690":{y:0,u:"../Content/html/7d9b4502-7be8-6f9d-b0f9-3e97b549b3e7.htm",l:-1,t:"IServiceConsumer Interface",i:0.000924405993116384,a:"Vector CANoe .NET API \n            Interface for consumer side end point classes. These classes can be used with service discovery\n            handler attributes OnServerDiscovered and OnServiceDiscovery. Instances of consumer\n            classes can further be used in the low level API to trigger ..."},"1691":{y:0,u:"../Content/html/b124151c-a522-3692-9291-c4d0ec7b19d6.htm",l:-1,t:"IServiceConsumer Properties",i:2.1585114904761E-05,a:"Vector CANoe .NET API The  IServiceConsumer  type exposes the following members. Properties Top See Also Reference IServiceConsumer Interface Vector.CANoe.Runtime Namespace"},"1692":{y:0,u:"../Content/html/cd90a137-e600-4d55-fb41-6afb501381f4.htm",l:-1,t:"IServiceConsumer.Id Property ",i:0.00016924567395857,a:"Vector CANoe .NET API \n            The consumer\u0027s binding specific identifier. This identifier can be used to get access to service\n            ports through GetPort functions.\n             Namespace:   \n    Vector.CANoe.Runtime Assembly:\n   Vector.CANoe.Runtime.dll Syntax C# VB C++ Copy long Id { ..."},"1693":{y:0,u:"../Content/html/574940db-8c18-d8dd-caf9-e08f2f3a3e04.htm",l:-1,t:"IServiceConsumerBase Interface",i:0.000329212909374823,a:"Vector CANoe .NET API \n            Tagging interface for consumer side end point classes. It identifies all end points,\n            no matter whether simulated or real. The derived interface IServiceConsumer is only implemented\n            by simulated end points.\n             Namespace:   \n    ..."},"1694":{y:0,u:"../Content/html/8a3c0240-1ef8-8cb6-3ca7-2d6195fa8cfb.htm",l:-1,t:"IServiceConsumerBase Properties",i:2.18702329726561E-05,a:"Vector CANoe .NET API The  IServiceConsumerBase  type exposes the following members. Properties Top See Also Reference IServiceConsumerBase Interface Vector.CANoe.Runtime Namespace"},"1695":{y:0,u:"../Content/html/af4a7c12-a2b3-fdbe-4f60-ed62612306d6.htm",l:-1,t:"IServiceConsumerRef Interface",i:0.000387414703348612,a:"Vector CANoe .NET API \n            A reference to a consumer side service end-point.\n             Namespace:   \n    Vector.CANoe.Runtime Assembly:\n   Vector.CANoe.Runtime.dll Syntax C# VB C++ Copy public interface IServiceConsumerRef : IServiceConsumer, \n\tIServiceConsumerBase, IEndPointBase, ..."},"1696":{y:0,u:"../Content/html/d2665daa-809f-a10a-106f-3e21aba9c371.htm",l:-1,t:"IServiceConsumerRef Properties",i:2.09139727860945E-05,a:"Vector CANoe .NET API The  IServiceConsumerRef  type exposes the following members. Properties Top See Also Reference IServiceConsumerRef Interface Vector.CANoe.Runtime Namespace"},"1697":{y:0,u:"../Content/html/11ac1d57-ea25-7e2a-0f14-40f22225c18d.htm",l:-1,t:"IServiceConsumerRef Methods",i:2.09139727860945E-05,a:"Vector CANoe .NET API The  IServiceConsumerRef  type exposes the following members. Methods Top See Also Reference IServiceConsumerRef Interface Vector.CANoe.Runtime Namespace"},"1698":{y:0,u:"../Content/html/4a343f4b-5acf-df60-c54d-cebed2851a98.htm",l:-1,t:"IServiceConsumerRef.Clone Method ",i:4.58073061147797E-05,a:"Vector CANoe .NET API \n            Creates a copy of this object, which then selects the same consumer.\n             Namespace:   \n    Vector.CANoe.Runtime Assembly:\n   Vector.CANoe.Runtime.dll Syntax C# VB C++ Copy IServiceConsumerRef Clone() Function Clone As IServiceConsumerRef ..."},"1699":{y:0,u:"../Content/html/446b3aea-9f55-835b-83db-5722fb740a3f.htm",l:-1,t:"IServiceConsumerRef.SetService Method ",i:4.7617532833416E-05,a:"Vector CANoe .NET API \n            Switches the currently selected service.\n             Namespace:   \n    Vector.CANoe.Runtime Assembly:\n   Vector.CANoe.Runtime.dll Syntax C# VB C++ Copy void SetService(\n\tstring servicePath\n) Sub SetService ( \n\tservicePath As String\n) void SetService(\n\tString^ ..."},"1700":{y:0,u:"../Content/html/b331f2b3-d325-0a54-5fd7-327b01951762.htm",l:-1,t:"IServiceEventPort Interface",i:0.000580485266869029,a:"Vector CANoe .NET API \n            Base interface for service port events providing the event state at the port. Instances of\n            these classes can be used in the low level API function for setting subscription state.\n             Namespace:   \n    Vector.CANoe.Runtime Assembly:\n  ..."},"1701":{y:0,u:"../Content/html/a7c4fa74-e6fb-7eaa-09fb-16ef00148725.htm",l:-1,t:"IServiceEventPort Properties",i:2.1585114904761E-05,a:"Vector CANoe .NET API The  IServiceEventPort  type exposes the following members. Properties Top See Also Reference IServiceEventPort Interface Vector.CANoe.Runtime Namespace"},"1702":{y:0,u:"../Content/html/4c68feed-4d48-1ba6-64dd-b3e87b2232a2.htm",l:-1,t:"IServiceEventPort.Consumer Property ",i:0.000185648989722125,a:"Vector CANoe .NET API \n            Provides access to the consumer of the event.\n             Namespace:   \n    Vector.CANoe.Runtime Assembly:\n   Vector.CANoe.Runtime.dll Syntax C# VB C++ Copy IServiceConsumer Consumer { get; } ReadOnly Property Consumer As IServiceConsumer Get property ..."},"1703":{y:0,u:"../Content/html/1a7a3ff2-eebf-cefc-689b-c20a31f56f4f.htm",l:-1,t:"IServiceEventPort.Provider Property ",i:0.000185648989722125,a:"Vector CANoe .NET API \n            Provides access to the provider of the event.\n             Namespace:   \n    Vector.CANoe.Runtime Assembly:\n   Vector.CANoe.Runtime.dll Syntax C# VB C++ Copy IServiceProvider Provider { get; } ReadOnly Property Provider As IServiceProvider Get property ..."},"1704":{y:0,u:"../Content/html/258186f7-7859-9cbb-5a27-b63f3f53a680.htm",l:-1,t:"IServiceEventPort.SubscriptionState Property ",i:0.000185648989722125,a:"Vector CANoe .NET API \n            Provides access to the subscription state of the event.\n             Namespace:   \n    Vector.CANoe.Runtime Assembly:\n   Vector.CANoe.Runtime.dll Syntax C# VB C++ Copy ITypedValueEntityReadOnly\u003cSubscriptionState\u003e SubscriptionState { get; } ReadOnly Property ..."},"1705":{y:0,u:"../Content/html/9bcff0bd-082b-6237-5d7c-d954934a551a.htm",l:-1,t:"IServiceFieldPort Interface",i:0.000576707180086588,a:"Vector CANoe .NET API \n            Base interface for service port fields providing the field state at the port. Instances of\n            these classes can be used in the low level API function for setting subscription state.\n             Namespace:   \n    Vector.CANoe.Runtime Assembly:\n  ..."},"1706":{y:0,u:"../Content/html/1f2196c9-be9a-efbf-e716-1c25a21a0dad.htm",l:-1,t:"IServiceFieldPort Properties",i:2.18702329726561E-05,a:"Vector CANoe .NET API The  IServiceFieldPort  type exposes the following members. Properties Top See Also Reference IServiceFieldPort Interface Vector.CANoe.Runtime Namespace"},"1707":{y:0,u:"../Content/html/69bd343f-f24d-5ed2-0a08-67193ae83066.htm",l:-1,t:"IServiceFieldPort.Consumer Property ",i:0.000218377867491229,a:"Vector CANoe .NET API \n            Provides access to the consumer of the field.\n             Namespace:   \n    Vector.CANoe.Runtime Assembly:\n   Vector.CANoe.Runtime.dll Syntax C# VB C++ Copy IServiceConsumer Consumer { get; } ReadOnly Property Consumer As IServiceConsumer Get property ..."},"1708":{y:0,u:"../Content/html/1aed6c90-e1d9-615c-2bb9-b1027a4f3bef.htm",l:-1,t:"IServiceFieldPort.Provider Property ",i:0.000218377867491229,a:"Vector CANoe .NET API \n            Provides access to the provider of the field.\n             Namespace:   \n    Vector.CANoe.Runtime Assembly:\n   Vector.CANoe.Runtime.dll Syntax C# VB C++ Copy IServiceProvider Provider { get; } ReadOnly Property Provider As IServiceProvider Get property ..."},"1709":{y:0,u:"../Content/html/71efa2b5-7e2b-fa62-07de-8062fb515db6.htm",l:-1,t:"IServicePDUCO Interface",i:0.000317649508078409,a:"Vector CANoe .NET API \n            Tagging interface for Service PDU communication object classes.\n             Namespace:   \n    Vector.CANoe.Runtime Assembly:\n   Vector.CANoe.Runtime.dll Syntax C# VB C++ Copy public interface IServicePDUCO : ICOBase, \n\tIServicePDUCO Public Interface IServicePDUCO ..."},});