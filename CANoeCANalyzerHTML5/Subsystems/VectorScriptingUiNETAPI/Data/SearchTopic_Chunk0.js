define({"0":{y:0,u:"../Content/html/fdc1dc9f-d0c0-3077-be65-ab624d904eb1.htm",l:-1,t:"Vector.Scripting Namespace",i:0.0302248820307108,a:"Vector Scripting UI API Contains the API for the CANoe scripting extensions. Classes"},"1":{y:0,u:"../Content/html/1a7f7320-5505-bfd1-974c-ed2841765b68.htm",l:-1,t:"Execution Class",i:0.0559160386402867,a:"Vector Scripting UI API \n            Provides access to execution control in CANoe.\n             Inheritance Hierarchy System /* */ Object   Vector.Scripting /* */ Execution Namespace:   \n    Vector.Scripting Assembly:\n   Vector.Scripting.dll Syntax C# VB C++ Copy public static class Execution ..."},"2":{y:0,u:"../Content/html/f4176183-0e26-103f-13b9-1f7c5d36b1b1.htm",l:-1,t:"Execution Methods",i:0.00359389038634375,a:"Vector Scripting UI API The  Execution  type exposes the following members. Methods Top See Also Reference Execution Class Vector.Scripting Namespace"},"3":{y:0,u:"../Content/html/0bde4ac0-894f-4e12-dacf-9b0e46a2147e.htm",l:-1,t:"Execution.Wait Method ",i:0.0130996145925444,a:"Vector Scripting UI API \n            Waits a certain timespan. During the wait, the measurement and simulation\n            are not blocked.\n             Namespace:   \n    Vector.Scripting Assembly:\n   Vector.Scripting.dll Syntax C# VB C++ Copy public static int Wait(\n\tint timeSpan\n) Public Shared ..."},"4":{y:0,u:"../Content/html/8abdef7d-85a5-b17b-be9f-a1ec18b6e6f9.htm",l:-1,t:"Execution Fields",i:0.00340986587860878,a:"Vector Scripting UI API The  Execution  type exposes the following members. Fields Top See Also Reference Execution Class Vector.Scripting Namespace"},"5":{y:0,u:"../Content/html/ddc81b83-b4a5-558f-d301-5936834a142f.htm",l:-1,t:"Execution.WAIT_ABORTED Field",i:0.0129155900848094,a:"Vector Scripting UI API \n            Result of a wait showing that the wait has been aborted.\n             Namespace:   \n    Vector.Scripting Assembly:\n   Vector.Scripting.dll Syntax C# VB C++ Copy public const int WAIT_ABORTED = -1 Public Const WAIT_ABORTED As Integer = -1 public:\nliteral int ..."},"6":{y:0,u:"../Content/html/783b8eb4-aaf4-a80f-83be-d6bcdd025688.htm",l:-1,t:"Execution.WAIT_TIMEOUT Field",i:0.0129155900848094,a:"Vector Scripting UI API \n            Result of a wait showing that the wait has timed out.\n             Namespace:   \n    Vector.Scripting Assembly:\n   Vector.Scripting.dll Syntax C# VB C++ Copy public const int WAIT_TIMEOUT = 0 Public Const WAIT_TIMEOUT As Integer = 0 public:\nliteral int ..."},"7":{y:0,u:"../Content/html/848685fd-c1d1-2da7-23fc-3276de069db4.htm",l:-1,t:"Vector.Scripting.UI Namespace",i:0.214625191935692,a:"Vector Scripting UI API Vector.Scripting.Ui provides user dialogs to be used in .NET snippets and .NET test modules. Classes Enumerations"},"8":{y:0,u:"../Content/html/24233839-4255-94b7-0e76-26a97e49f471.htm",l:-1,t:"ConfirmationDialog Class",i:0.0370641122065654,a:"Vector Scripting UI API \n            This class contains static methods for showing confirmation dialogs.\n             Inheritance Hierarchy System /* */ Object   Vector.Scripting.UI /* */ ConfirmationDialog Namespace:   \n    Vector.Scripting.UI Assembly:\n   Vector.Scripting.UI.dll Syntax C# VB C++ ..."},"9":{y:0,u:"../Content/html/c9581747-069e-35f1-5a42-149deda84be4.htm",l:-1,t:"ConfirmationDialog Methods",i:0.00329730719912072,a:"Vector Scripting UI API The  ConfirmationDialog  type exposes the following members. Methods Top See Also Reference ConfirmationDialog Class Vector.Scripting.UI Namespace"},"10":{y:0,u:"../Content/html/339e8546-395a-20cb-dc76-f189d9180626.htm",l:-1,t:"ConfirmationDialog.Show Method ",i:0.0100260985926642,a:"Vector Scripting UI API Overload List Top See Also Reference ConfirmationDialog Class Vector.Scripting.UI Namespace"},"11":{y:0,u:"../Content/html/622797a2-b83e-cd8e-bce4-c5caac538eaf.htm",l:-1,t:"ConfirmationDialog.Show Method (String, String)",i:0.0110186193521101,a:"Vector Scripting UI API \n            Displays a modal message box. Blocks the execution of the script until the user dismisses the dialog. \n            Default values: Buttons = Ok (-\u003e display a single Ok button); Icon = None (no icon is displayed);\n             Namespace:   \n    Vector.Scripting.UI ..."},"12":{y:0,u:"../Content/html/0cd05c42-6f05-fbbb-2f3a-67ec7ea6bc09.htm",l:-1,t:"ConfirmationDialog.Show Method (String, String, ConfirmationDialogButtons)",i:0.0110186193521101,a:"Vector Scripting UI API \n            Displays a modal message box. Blocks the execution of the script until the user dismisses the dialog. \n            Default values: Icon = None (no icon is displayed);\n             Namespace:   \n    Vector.Scripting.UI Assembly:\n   Vector.Scripting.UI.dll Syntax ..."},"13":{y:0,u:"../Content/html/2468fd3c-d277-31df-081c-91516560bb21.htm",l:-1,t:"ConfirmationDialog.Show Method (String, String, ConfirmationDialogButtons, ConfirmationDialogIcon)",i:0.0110186193521101,a:"Vector Scripting UI API \n            Displays a modal message box. Blocks the execution of the script until the user closes the dialog. \n             Namespace:   \n    Vector.Scripting.UI Assembly:\n   Vector.Scripting.UI.dll Syntax C# VB C++ Copy public static ConfirmationResult Show(\n\tstring ..."},"14":{y:0,u:"../Content/html/3480ba63-cd9c-9556-df74-7fae3a2ba193.htm",l:-1,t:"ConfirmationDialogButtons Enumeration",i:0.0265342454678058,a:"Vector Scripting UI API \n            Defines the combination of buttons shown in the dialog.\n             Namespace:   \n    Vector.Scripting.UI Assembly:\n   Vector.Scripting.UI.dll Syntax C# VB C++ Copy public enum ConfirmationDialogButtons Public Enumeration ConfirmationDialogButtons public enum ..."},"15":{y:0,u:"../Content/html/f5ad4c0d-8dc3-9212-18be-bdb15b5338e6.htm",l:-1,t:"ConfirmationDialogIcon Enumeration",i:0.0246610966150899,a:"Vector Scripting UI API \n            Specifies which icon is shown in the dialog.\n             Namespace:   \n    Vector.Scripting.UI Assembly:\n   Vector.Scripting.UI.dll Syntax C# VB C++ Copy public enum ConfirmationDialogIcon Public Enumeration ConfirmationDialogIcon public enum class ..."},"16":{y:0,u:"../Content/html/b9f20f3b-ebcd-0e07-4475-2b4a086c598c.htm",l:-1,t:"ConfirmationResult Enumeration",i:0.0288756815337006,a:"Vector Scripting UI API \n            The result of the confirmation dialog.\n             Namespace:   \n    Vector.Scripting.UI Assembly:\n   Vector.Scripting.UI.dll Syntax C# VB C++ Copy public enum ConfirmationResult Public Enumeration ConfirmationResult public enum class ConfirmationResult /* */ ..."},"17":{y:0,u:"../Content/html/606cd524-6002-0252-fc5b-a5f31422bf4b.htm",l:-1,t:"DataEntryDialog Class",i:0.0388118569305372,a:"Vector Scripting UI API \n            This class contains static methods that open dialogs for entering data.\n             Inheritance Hierarchy System /* */ Object   Vector.Scripting.UI /* */ DataEntryDialog Namespace:   \n    Vector.Scripting.UI Assembly:\n   Vector.Scripting.UI.dll Syntax C# VB C++ ..."},"18":{y:0,u:"../Content/html/3f5dcfd5-e87c-8663-1c3c-9958cbc268ce.htm",l:-1,t:"DataEntryDialog Methods",i:0.00309310238168883,a:"Vector Scripting UI API The  DataEntryDialog  type exposes the following members. Methods Top See Also Reference DataEntryDialog Class Vector.Scripting.UI Namespace"},"19":{y:0,u:"../Content/html/c8fa9ca5-5529-6533-d31d-ff761c5fa832.htm",l:-1,t:"DataEntryDialog.Show Method ",i:0.0146133989923549,a:"Vector Scripting UI API Overload List Top See Also Reference DataEntryDialog Class Vector.Scripting.UI Namespace"},"20":{y:0,u:"../Content/html/ed6de75d-e4de-1f7d-1b01-e0015fc6b330.htm",l:-1,t:"DataEntryDialog.Show Method (String, String, String, Byte[])",i:0.00800083651198554,a:"Vector Scripting UI API \n            Opens a dialog to enter a sequence of byte values. The \n            dialog can only be closed with \"OK\" if all byte values are valid. \n             Namespace:   \n    Vector.Scripting.UI Assembly:\n   Vector.Scripting.UI.dll Syntax C# VB C++ Copy public static ..."},"21":{y:0,u:"../Content/html/50a89e58-89af-72fe-2704-c6362ee24125.htm",l:-1,t:"DataEntryDialog.Show(T) Method (String, String, String, T)",i:0.00800083651198554,a:"Vector Scripting UI API \n            Opens a dialog to enter a value.\n             Namespace:   \n    Vector.Scripting.UI Assembly:\n   Vector.Scripting.UI.dll Syntax C# VB C++ Copy public static DataEntryResult Show\u003cT\u003e(\n\tstring message,\n\tstring caption,\n\tstring info,\n\tref T value\n)\n Public Shared ..."},"22":{y:0,u:"../Content/html/45ad0069-9206-5b20-ee13-37eeac0f8ec8.htm",l:-1,t:"DataEntryDialog.Show Method (String, String, String, Byte[], RangeCollection(Int32))",i:0.00800083651198554,a:"Vector Scripting UI API \n            Opens a dialog to enter a sequence of byte values. A RangeCollection specifies the number of bytes to be entered. The \n            dialog can only be closed with \"OK\" if all byte values and the number of entered bytes are valid. \n             Namespace:   \n    ..."},"23":{y:0,u:"../Content/html/c2fd1232-ddfe-2520-1c25-043733b717b2.htm",l:-1,t:"DataEntryDialog.Show Method (String, String, String, String, String)",i:0.00800083651198554,a:"Vector Scripting UI API \n            Opens a dialog to enter a value. A regular expression restricts the valid values. The \n            dialog can only be closed with \"OK\" if the entered value is valid. The provided \"value\" \n            is used as default value.\n             Namespace:   \n    ..."},"24":{y:0,u:"../Content/html/949e0d40-055f-1139-a07f-57635e299f03.htm",l:-1,t:"DataEntryDialog.Show Method (String, String, String, String, RangeCollection(Int32))",i:0.00800083651198554,a:"Vector Scripting UI API \n            Opens a dialog to enter a value. A RangeCollection restricts the valid lengths of the string. The \n            dialog can only be closed with \"OK\" if the entered value is valid. The provided \"value\" is used as \n            default value.\n             Namespace:   ..."},"25":{y:0,u:"../Content/html/2904c59a-13b8-2a85-df27-bda059cfa612.htm",l:-1,t:"DataEntryDialog.Show(T) Method (String, String, String, T, RangeCollection(T))",i:0.00800083651198554,a:"Vector Scripting UI API \n            Opens a dialog to enter a value. A Range (collection of Intervals) restricts the valid values. The \n            dialog can only be closed with \"OK\" if the entered value is valid. The provided \"value\" is used as \n            default value.\n             Namespace:  ..."},"26":{y:0,u:"../Content/html/f16c9c43-efc7-a9de-c4f7-06255b77c76d.htm",l:-1,t:"DataEntryDialog.Show(T) Method (String, String, String, T, Int32, ValueTable(T))",i:0.00800083651198554,a:"Vector Scripting UI API \n            Opens a dialog to enter a value. A ValueTable (discrete values) restricts the valid values. \n            An default value is selected that is initially displayed in the ComboBox.\n             Namespace:   \n    Vector.Scripting.UI Assembly:\n  ..."},"27":{y:0,u:"../Content/html/1418b17b-616f-0018-4ea9-94ef8636e139.htm",l:-1,t:"DataEntryResult Enumeration",i:0.0336412090977969,a:"Vector Scripting UI API \n            The result of a DataEntryDialog.\n             Namespace:   \n    Vector.Scripting.UI Assembly:\n   Vector.Scripting.UI.dll Syntax C# VB C++ Copy public enum DataEntryResult Public Enumeration DataEntryResult public enum class DataEntryResult /* */ Members Version ..."},"28":{y:0,u:"../Content/html/a6333edb-b57c-fcb5-d053-12580646674c.htm",l:-1,t:"Range(T) Class",i:0.0661515994255144,a:"Vector Scripting UI API \n            A range consists of an upper and lower boundary.\n             Inheritance Hierarchy System /* */ Object   Vector.Scripting.UI /* */ Range /* */ T /* */ Namespace:   \n    Vector.Scripting.UI Assembly:\n   Vector.Scripting.UI.dll Syntax C# VB C++ Copy public class ..."},"29":{y:0,u:"../Content/html/9e6e4cc4-2ea3-4e22-1488-0436cf9462c5.htm",l:-1,t:"Range(T) Constructor ",i:0.0108629077897112,a:"Vector Scripting UI API \n            Initializes a new instance of the  Range /* */ T /* */  class.\n             Namespace:   \n    Vector.Scripting.UI Assembly:\n   Vector.Scripting.UI.dll Syntax C# VB C++ Copy public Range(\n\tT lower,\n\tT upper\n) Public Sub New ( \n\tlower As T,\n\tupper As T\n) ..."},"30":{y:0,u:"../Content/html/2226fdb0-d3f4-dd82-4631-18f0c8c1c1b2.htm",l:-1,t:"Range(T) Properties",i:0.00340986587860878,a:"Vector Scripting UI API The  Range /* */ T /* */  generic type exposes the following members. Properties Top See Also Reference Range /* */ T /* */  Class Vector.Scripting.UI Namespace"},"31":{y:0,u:"../Content/html/4fd36b65-4fc6-af0b-c742-536182ca139a.htm",l:-1,t:"Range(T).Lower Property ",i:0.0114425849890747,a:"Vector Scripting UI API \n            Gets the lower value.\n             Namespace:   \n    Vector.Scripting.UI Assembly:\n   Vector.Scripting.UI.dll Syntax C# VB C++ Copy public T Lower { get; } Public ReadOnly Property Lower As T\n\tGet public:\nproperty T Lower {\n\tT get ();\n} /* */ Property Value ..."},"32":{y:0,u:"../Content/html/de63a061-2db5-f1a2-bc04-0cc239809ef7.htm",l:-1,t:"Range(T).Upper Property ",i:0.0114425849890747,a:"Vector Scripting UI API \n            Gets the upper value.\n             Namespace:   \n    Vector.Scripting.UI Assembly:\n   Vector.Scripting.UI.dll Syntax C# VB C++ Copy public T Upper { get; } Public ReadOnly Property Upper As T\n\tGet public:\nproperty T Upper {\n\tT get ();\n} /* */ Property Value ..."},"33":{y:0,u:"../Content/html/a5b3b3e7-614c-f946-add8-7f07828b9a0c.htm",l:-1,t:"Range(T) Methods",i:0.00340986587860878,a:"Vector Scripting UI API The  Range /* */ T /* */  generic type exposes the following members. Methods Top See Also Reference Range /* */ T /* */  Class Vector.Scripting.UI Namespace"},"34":{y:0,u:"../Content/html/89092d4b-9a52-8674-4a5e-b997e2aca0bf.htm",l:-1,t:"Range(T).IsValueInRange Method ",i:0.0114425849890747,a:"Vector Scripting UI API \n            Determines whether the specified value in the range.\n             Namespace:   \n    Vector.Scripting.UI Assembly:\n   Vector.Scripting.UI.dll Syntax C# VB C++ Copy public bool IsValueInRange(\n\tT value\n) Public Function IsValueInRange ( \n\tvalue As T\n) As Boolean ..."},"35":{y:0,u:"../Content/html/21a0c06b-c5d6-b672-9740-b1506f53a432.htm",l:-1,t:"Range(T).ToString Method ",i:0.0114425849890747,a:"Vector Scripting UI API \n            Returns a  String  that represents the current  Object .\n             Namespace:   \n    Vector.Scripting.UI Assembly:\n   Vector.Scripting.UI.dll Syntax C# VB C++ Copy public override string ToString() Public Overrides Function ToString As String public:\nvirtual ..."},"36":{y:0,u:"../Content/html/2e2a2a7d-fa8c-631f-3792-93e9a4af5eff.htm",l:-1,t:"RangeCollection(T) Class",i:0.0512760042541854,a:"Vector Scripting UI API \n            A RangeCollection is a collection of Intervals of a specific type T.\n             Inheritance Hierarchy System /* */ Object   Vector.Scripting.UI /* */ RangeCollection /* */ T /* */ Namespace:   \n    Vector.Scripting.UI Assembly:\n   Vector.Scripting.UI.dll Syntax ..."},"37":{y:0,u:"../Content/html/bc2dcb93-d46d-5539-04c0-e5dff4682236.htm",l:-1,t:"RangeCollection(T) Constructor ",i:0.00767294389457451,a:"Vector Scripting UI API \n            Initializes a new instance of the  RangeCollection /* */ T /* */  class.\n             Namespace:   \n    Vector.Scripting.UI Assembly:\n   Vector.Scripting.UI.dll Syntax C# VB C++ Copy public RangeCollection(\n\tIEnumerable\u003cRange\u003cT\u003e\u003e range\n) Public Sub New ( \n\trange ..."},"38":{y:0,u:"../Content/html/a9e7c8b3-385f-1a43-567c-7958029b66d4.htm",l:-1,t:"RangeCollection(T) Properties",i:0.00329730719912072,a:"Vector Scripting UI API The  RangeCollection /* */ T /* */  generic type exposes the following members. Properties Top See Also Reference RangeCollection /* */ T /* */  Class Vector.Scripting.UI Namespace"},"39":{y:0,u:"../Content/html/221a0733-78ae-cfdf-b83a-8ec42a70fd6a.htm",l:-1,t:"RangeCollection(T).Count Property ",i:0.00814006241444995,a:"Vector Scripting UI API \n            Gets the number of Intervals in the range.\n             Namespace:   \n    Vector.Scripting.UI Assembly:\n   Vector.Scripting.UI.dll Syntax C# VB C++ Copy public int Count { get; } Public ReadOnly Property Count As Integer Get public:\nproperty int Count {\n\tint get ..."},"40":{y:0,u:"../Content/html/0b124e28-b5b3-0e2d-c731-6a1b1f3370fd.htm",l:-1,t:"RangeCollection(T).Item Property ",i:0.00814006241444995,a:"Vector Scripting UI API \n            Gets the  Range /* */ T /* */  at the specified index.\n             Namespace:   \n    Vector.Scripting.UI Assembly:\n   Vector.Scripting.UI.dll Syntax C# VB C++ Copy public Range\u003cT\u003e this[\n\tint index\n] { get; } Public ReadOnly Default Property Item ( \n\tindex As ..."},"41":{y:0,u:"../Content/html/ed5a14e8-24a8-4889-8150-c951b581b6c2.htm",l:-1,t:"RangeCollection(T) Methods",i:0.00329730719912072,a:"Vector Scripting UI API The  RangeCollection /* */ T /* */  generic type exposes the following members. Methods Top See Also Reference RangeCollection /* */ T /* */  Class Vector.Scripting.UI Namespace"},"42":{y:0,u:"../Content/html/8d46cc6e-46ab-36e6-4cfe-094c8c1a291c.htm",l:-1,t:"RangeCollection(T).GetEnumerator Method ",i:0.00814006241444995,a:"Vector Scripting UI API \n            Get the RangeCollection enumerator\n             Namespace:   \n    Vector.Scripting.UI Assembly:\n   Vector.Scripting.UI.dll Syntax C# VB C++ Copy public IEnumerator GetEnumerator() Public Function GetEnumerator As IEnumerator public:\nIEnumerator^ GetEnumerator() ..."},"43":{y:0,u:"../Content/html/e369b2ab-2317-8512-6022-53bed4cee032.htm",l:-1,t:"RangeCollection(T).IsValueInRange Method ",i:0.00814006241444995,a:"Vector Scripting UI API \n            Determines whether the specified value in in the Range.\n             Namespace:   \n    Vector.Scripting.UI Assembly:\n   Vector.Scripting.UI.dll Syntax C# VB C++ Copy public bool IsValueInRange(\n\tT value\n) Public Function IsValueInRange ( \n\tvalue As T\n) As Boolean ..."},"44":{y:0,u:"../Content/html/dfe77b0c-8541-1d3d-ae98-9d06699ff9c4.htm",l:-1,t:"RangeCollection(T).ToString Method ",i:0.00814006241444995,a:"Vector Scripting UI API \n            Return a string indicating the valid ranges for this range collection.\n             Namespace:   \n    Vector.Scripting.UI Assembly:\n   Vector.Scripting.UI.dll Syntax C# VB C++ Copy public override string ToString() Public Overrides Function ToString As String ..."},"45":{y:0,u:"../Content/html/e5f8ae0a-4460-8e29-2771-aca123a15c15.htm",l:-1,t:"ValueTable(T) Class",i:0.0525663282672814,a:"Vector Scripting UI API \n            A ValueTable for the specific type T.\n             Inheritance Hierarchy System /* */ Object   Vector.Scripting.UI /* */ ValueTable /* */ T /* */ Namespace:   \n    Vector.Scripting.UI Assembly:\n   Vector.Scripting.UI.dll Syntax C# VB C++ Copy public class ..."},"46":{y:0,u:"../Content/html/cb78bb82-7661-08e3-b5ab-9645368d14c7.htm",l:-1,t:"ValueTable(T) Constructor ",i:0.00921325826773901,a:"Vector Scripting UI API \n            Initializes a new instance of the  ValueTable /* */ T /* */  class.\n             Namespace:   \n    Vector.Scripting.UI Assembly:\n   Vector.Scripting.UI.dll Syntax C# VB C++ Copy public ValueTable(\n\tIEnumerable\u003cT\u003e values\n) Public Sub New ( \n\tvalues As ..."},"47":{y:0,u:"../Content/html/6bc8fff9-ec49-e072-ca81-4112d156be5d.htm",l:-1,t:"ValueTable(T) Properties",i:0.00340986587860878,a:"Vector Scripting UI API The  ValueTable /* */ T /* */  generic type exposes the following members. Properties Top See Also Reference ValueTable /* */ T /* */  Class Vector.Scripting.UI Namespace"},"48":{y:0,u:"../Content/html/80e43f29-e16b-e33d-faac-2383ec5eaf19.htm",l:-1,t:"ValueTable(T).Count Property ",i:0.00979293546710251,a:"Vector Scripting UI API \n            Gets the number of elements in the ValueTable.\n             Namespace:   \n    Vector.Scripting.UI Assembly:\n   Vector.Scripting.UI.dll Syntax C# VB C++ Copy public int Count { get; } Public ReadOnly Property Count As Integer Get public:\nproperty int Count {\n\tint ..."},"49":{y:0,u:"../Content/html/344ea455-ceb9-139b-9556-f354b161341a.htm",l:-1,t:"ValueTable(T).Item Property ",i:0.00979293546710251,a:"Vector Scripting UI API \n            Gets the type at the specified index.\n             Namespace:   \n    Vector.Scripting.UI Assembly:\n   Vector.Scripting.UI.dll Syntax C# VB C++ Copy public T this[\n\tint index\n] { get; } Public ReadOnly Default Property Item ( \n\tindex As Integer\n) As T\n\tGet ..."},"50":{y:0,u:"../Content/html/3c9d572a-e27e-e66f-3b36-8b8e21a61217.htm",l:-1,t:"ValueTable(T) Methods",i:0.00340986587860878,a:"Vector Scripting UI API The  ValueTable /* */ T /* */  generic type exposes the following members. Methods Top See Also Reference ValueTable /* */ T /* */  Class Vector.Scripting.UI Namespace"},"51":{y:0,u:"../Content/html/db04a835-bebf-8b49-0418-768190a047fb.htm",l:-1,t:"ValueTable(T).Contains Method ",i:0.00979293546710251,a:"Vector Scripting UI API \n            Determines whether the specified value in in the ValueTable or not.\n             Namespace:   \n    Vector.Scripting.UI Assembly:\n   Vector.Scripting.UI.dll Syntax C# VB C++ Copy public bool Contains(\n\tT value\n) Public Function Contains ( \n\tvalue As T\n) As Boolean ..."},"52":{y:0,u:"../Content/html/071c3c52-2942-e289-2da9-3707613aa1c5.htm",l:-1,t:"ValueTable(T).GetEnumerator Method ",i:0.00979293546710251,a:"Vector Scripting UI API \n            Get the ValueTable enumerator\n             Namespace:   \n    Vector.Scripting.UI Assembly:\n   Vector.Scripting.UI.dll Syntax C# VB C++ Copy public IEnumerator GetEnumerator() Public Function GetEnumerator As IEnumerator public:\nIEnumerator^ GetEnumerator() /* */ ..."},});