<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en-us" xml:lang="en-us" data-mc-search-type="Stem" data-mc-help-system-file-name="VDSLibrary.xml" data-mc-path-to-help-system="../../" data-mc-toc-path="Vector.Diagnostics|Application Class|Application Methods" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic" data-mc-preload-images="false" data-mc-in-preview-mode="false">
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta charset="utf-8" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
        <meta name="msapplication-config" content="../../Skins/Favicons/browserconfig.xml" />
        <link rel="apple-touch-icon" sizes="180x180" href="../../Skins/Favicons/apple-touch-icon.png" />
        <link rel="shortcut icon" href="../../Skins/Favicons/favicon-32x32.png" />
        <link rel="icon" sizes="96x96" href="../../Skins/Favicons/favicon-96x96.png" />
        <link rel="icon" sizes="32x32" href="../../Skins/Favicons/favicon-32x32.png" />
        <link rel="icon" sizes="16x16" href="../../Skins/Favicons/favicon-16x16.png" /><title>Application.GenerateSecurityKey Method </title>
        <link href="../../Skins/Default/Stylesheets/Slideshow.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../Skins/Default/Stylesheets/Components/Styles.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../Skins/Default/Stylesheets/Components/Tablet.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../Skins/Default/Stylesheets/Components/Mobile.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../Skins/Default/Stylesheets/Components/Print.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link rel="stylesheet" type="text/css" href="../styles/branding.css" />
        <link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" />
        <link type="text/css" rel="stylesheet" href="../styles/highlight.css" />
        <link rel="stylesheet" type="text/css" href="../styles/branding-Help1.css" />
        <link rel="apple-touch-icon" sizes="180x180" href="../../Skins/Favicons/apple-touch-icon.png" />
        <link rel="shortcut icon" href="../../Skins/Favicons/favicon-32x32.png" />
        <link rel="icon" sizes="96x96" href="../../Skins/Favicons/favicon-96x96.png" />
        <link rel="icon" sizes="32x32" href="../../Skins/Favicons/favicon-32x32.png" />
        <link rel="icon" sizes="16x16" href="../../Skins/Favicons/favicon-16x16.png" />
        <link rel="shortcut icon" href="..\icons\favicon.ico" />
        <script type="text/javascript" src="../scripts/branding.js">/*<![CDATA[*/
 
/*]]>*/</script>
        <script type="text/javascript" src="../scripts/highlight.js">/*<![CDATA[*/
 
/*]]>*/</script>
        <script src="../../Resources/Scripts/jquery.min.js" type="text/javascript">
        </script>
        <script src="../../Resources/Scripts/purify.min.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../Resources/Scripts/require.min.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../Resources/Scripts/require.config.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../Resources/Scripts/foundation.min.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../Resources/Scripts/plugins.min.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../Resources/Scripts/MadCapAll.js" type="text/javascript" defer="defer">
        </script>
    </head>
    <body onload="OnLoad('cs')">
        <p class="MCWebHelpFramesetLink MCWebHelpFramesetLinkTop"><a href="../../VDSLibrary.htm#html/19ce527b-d5bf-020c-bd7b-4f809586dbf9.htm">Open topic with navigation</a>
        </p>
        <div role="main" id="mc-main-content">
            <input type="hidden" id="userDataCache" class="userDataStyle" />
            <div class="pageHeader" id="PageHeader"><a name="kanchor99"></a><a name="aanchor98"></a>
                <MadCap:concept term="SFApiVectorDiagnostics" />Vector Diagnostic Scripting Library</div>
            <div class="pageBody">
                <div class="topicContent" id="TopicContent">
                    <table class="titleTable">
                        <tr>
                            <td class="titleColumn">Application<span id="LSTB4385C6A_0"></span><script type="text/javascript">/*<![CDATA[*/
AddLanguageSpecificTextSet("LSTB4385C6A_0?cpp=::|nu=.");
/*]]>*/</script>GenerateSecurityKey Method </td>
                        </tr>
                    </table><span class="introStyle"></span>
                    <div class="summary">
            Generates the security key.
            </div>
                    <p /><strong>Namespace:</strong>  &#160;<a href="2884526b-fa44-c3fc-4112-a0bffa514949.htm">Vector.Diagnostics</a><br /><strong>Assembly:</strong>&#160;Vector.Diagnostics (in Vector.Diagnostics.dll) Version: 9.11.0<div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID1RB')" onkeypress="SectionExpandCollapse_CheckKey('ID1RB', event)" tabindex="0"><img id="ID1RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Syntax</span></div><div id="ID1RBSection" class="collapsibleSection"><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EBCA_tab1" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EBCA','cs','1','2');return false;">C#</a></div><div id="ID0EBCA_tab2" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EBCA','vb','2','2');return false;">VB</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EBCA_copyCode" href="#" onclick="javascript:CopyToClipboard('ID0EBCA');return false;" title="Copy">Copy</a></div></div><div id="ID0EBCA_code_Div1" class="codeSnippetContainerCode" style="display: block;"><pre xml:space="preserve"><span class="keyword">public</span> <span class="keyword">static</span> <span class="identifier">GenerateSecurityKeyResult</span> <span class="identifier">GenerateSecurityKey</span>(
	<span class="identifier">Ecu</span> <span class="parameter">ecu</span>,
	<span class="identifier">byte</span>[] <span class="parameter">seed</span>,
	<span class="identifier">byte</span> <span class="parameter">securityLevel</span>,
	<span class="identifier">string</span> <span class="parameter">option</span>,
	<span class="keyword">out</span> <span class="identifier">byte</span>[] <span class="parameter">key</span>
)</pre></div><div id="ID0EBCA_code_Div2" class="codeSnippetContainerCode" style="display: none;"><pre xml:space="preserve"><span class="keyword">Public</span> <span class="keyword">Shared</span> <span class="keyword">Function</span> <span class="identifier">GenerateSecurityKey</span> ( 
	<span class="parameter">ecu</span> <span class="keyword">As</span> <span class="identifier">Ecu</span>,
	<span class="parameter">seed</span> <span class="keyword">As</span> <span class="identifier">Byte</span>(),
	<span class="parameter">securityLevel</span> <span class="keyword">As</span> <span class="identifier">Byte</span>,
	<span class="parameter">option</span> <span class="keyword">As</span> <span class="identifier">String</span>,
	&lt;<span class="identifier">OutAttribute</span>&gt; <span class="keyword">ByRef</span> <span class="parameter">key</span> <span class="keyword">As</span> <span class="identifier">Byte</span>()
) <span class="keyword">As</span> <span class="identifier">GenerateSecurityKeyResult</span></pre></div></div></div><script type="text/javascript">/*<![CDATA[*/
AddLanguageTabSet("ID0EBCA");
/*]]>*/</script><h4 class="subHeading">Parameters</h4><dl><dt><span class="parameter">ecu</span></dt><dd>Type:&#160;<a href="344a1976-44d7-3668-da3b-1e544eee418b.htm">Vector.Diagnostics<span id="LSTB4385C6A_1"></span><script type="text/javascript">/*<![CDATA[*/
AddLanguageSpecificTextSet("LSTB4385C6A_1?cs=.|vb=.|cpp=::|nu=.|fs=.");
/*]]>*/</script>Ecu</a><br />The ECU where the seed and key dll is configured.</dd><dt><span class="parameter">seed</span></dt><dd>Type:&#160;<span id="LSTB4385C6A_2"></span><script type="text/javascript">/*<![CDATA[*/
AddLanguageSpecificTextSet("LSTB4385C6A_2?cpp=array&lt;");
/*]]>*/</script><span class="nolink">System<span id="LSTB4385C6A_3"></span><script type="text/javascript">/*<![CDATA[*/
AddLanguageSpecificTextSet("LSTB4385C6A_3?cs=.|vb=.|cpp=::|nu=.|fs=.");
/*]]>*/</script>Byte</span><span id="LSTB4385C6A_4"></span><script type="text/javascript">/*<![CDATA[*/
AddLanguageSpecificTextSet("LSTB4385C6A_4?cpp=&gt;|vb=()|nu=[]");
/*]]>*/</script><br />The seed from the ECU.</dd><dt><span class="parameter">securityLevel</span></dt><dd>Type:&#160;<span class="nolink">System<span id="LSTB4385C6A_5"></span><script type="text/javascript">/*<![CDATA[*/
AddLanguageSpecificTextSet("LSTB4385C6A_5?cs=.|vb=.|cpp=::|nu=.|fs=.");
/*]]>*/</script>Byte</span><br />The security level.</dd><dt><span class="parameter">option</span></dt><dd>Type:&#160;<span class="nolink">System<span id="LSTB4385C6A_6"></span><script type="text/javascript">/*<![CDATA[*/
AddLanguageSpecificTextSet("LSTB4385C6A_6?cs=.|vb=.|cpp=::|nu=.|fs=.");
/*]]>*/</script>String</span><br />The option string. Set <span class="nolink">Empty</span> if no option string is provided.</dd><dt><span class="parameter">key</span></dt><dd>Type:&#160;<span id="LSTB4385C6A_7"></span><script type="text/javascript">/*<![CDATA[*/
AddLanguageSpecificTextSet("LSTB4385C6A_7?cpp=array&lt;");
/*]]>*/</script><span class="nolink">System<span id="LSTB4385C6A_8"></span><script type="text/javascript">/*<![CDATA[*/
AddLanguageSpecificTextSet("LSTB4385C6A_8?cs=.|vb=.|cpp=::|nu=.|fs=.");
/*]]>*/</script>Byte</span><span id="LSTB4385C6A_9"></span><script type="text/javascript">/*<![CDATA[*/
AddLanguageSpecificTextSet("LSTB4385C6A_9?cpp=&gt;|vb=()|nu=[]");
/*]]>*/</script><span id="LSTB4385C6A_10"></span><script type="text/javascript">/*<![CDATA[*/
AddLanguageSpecificTextSet("LSTB4385C6A_10?cpp=%");
/*]]>*/</script><br />The generated key as output parameter.</dd></dl><h4 class="subHeading">Return Value</h4>Type:&#160;<a href="52d787e2-c082-066a-ee2b-2be91d00d4d5.htm">GenerateSecurityKeyResult</a><br /><a href="52d787e2-c082-066a-ee2b-2be91d00d4d5.htm">Success</a> if the key was generated without an error.</div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID2RB')" onkeypress="SectionExpandCollapse_CheckKey('ID2RB', event)" tabindex="0"><img id="ID2RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Remarks</span></div><div id="ID2RBSection" class="collapsibleSection">The ECU variant (<a href="425674a2-3992-09ce-3962-412e858fa2af.htm">Variant</a>) is passed to the seed and key dll.</div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID3RB')" onkeypress="SectionExpandCollapse_CheckKey('ID3RB', event)" tabindex="0"><img id="ID3RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Examples</span></div><div id="ID3RBSection" class="collapsibleSection">Unlocking an ECU using the <span class="selflink">GenerateSecurityKey(Ecu, <span id="LSTB4385C6A_11"></span><script type="text/javascript">/*<![CDATA[*/
AddLanguageSpecificTextSet("LSTB4385C6A_11?cpp=array&lt;");
/*]]>*/</script>Byte<span id="LSTB4385C6A_12"></span><script type="text/javascript">/*<![CDATA[*/
AddLanguageSpecificTextSet("LSTB4385C6A_12?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");
/*]]>*/</script>, Byte, String, <span id="LSTB4385C6A_13"></span><script type="text/javascript">/*<![CDATA[*/
AddLanguageSpecificTextSet("LSTB4385C6A_13?cpp=array&lt;");
/*]]>*/</script>Byte<span id="LSTB4385C6A_14"></span><script type="text/javascript">/*<![CDATA[*/
AddLanguageSpecificTextSet("LSTB4385C6A_14?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");
/*]]>*/</script><span id="LSTB4385C6A_15"></span><script type="text/javascript">/*<![CDATA[*/
AddLanguageSpecificTextSet("LSTB4385C6A_15?cpp=%");
/*]]>*/</script>)</span> method. If you do not have to provide additional parameters except the security level then use <a href="6635f7ab-491d-f119-c3a9-1bd14f6a46ec.htm">Unlock(Byte)</a> or <a href="352adddf-a6af-0bc8-0966-228ef9086e3a.htm">Unlock(Byte, String)</a> which provides a more convenient API.
            <div class="codeSnippetContainer"><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EAAABA_copyCode" href="#" onclick="javascript:CopyToClipboard('ID0EAAABA');return false;" title="Copy">Copy</a></div></div><div id="ID0EAAABA_code_Div1" class="codeSnippetContainerCode" style="display: block;"><pre xml:space="preserve"><span class="highlight-spacerShort"></span><span class="highlight-keyword">public</span> <span class="highlight-keyword">void</span> GeneratingKeyForEcuAndUnlockEcuInLevel1()
<span class="highlight-spacerShort"></span>{
<span class="highlight-spacerShort"></span>    <span class="highlight-comment">// Get the first ECU</span>
<span class="highlight-spacerShort"></span>    Ecu ecu = Application.GetEcu();
<span class="highlight-spacerShort"></span>
<span class="highlight-spacerShort"></span>    <span class="highlight-comment">// Create request for requesting the seed in level 0x01</span>
<span class="highlight-spacerShort"></span>    Request requestSeedRequest = ecu.CreateRequest(<span class="highlight-keyword">new</span> <span class="highlight-keyword">byte</span>[] { <span class="highlight-number">0x27</span>, <span class="highlight-number">0x01</span> });
<span class="highlight-spacerShort"></span>    SendResult sendResult = requestSeedRequest.Send();
<span class="highlight-spacerShort"></span>    <span class="highlight-keyword">if</span> (sendResult.Status != SendStatus.Ok)
<span class="highlight-spacerShort"></span>    {
<span class="highlight-spacerShort"></span>        Output.WriteLine(<span class="highlight-literal">"Error sending request seed: "</span> + sendResult.Status);
<span class="highlight-spacerShort"></span>        <span class="highlight-keyword">return</span>;
<span class="highlight-spacerShort"></span>    }
<span class="highlight-spacerShort"></span>
<span class="highlight-spacerShort"></span>    <span class="highlight-comment">// Extract the seed from the response of $27 01</span>
<span class="highlight-spacerShort"></span>    <span class="highlight-keyword">byte</span>[] requestSeedResponsePdu = sendResult.Response.Pdu;
<span class="highlight-spacerShort"></span>    <span class="highlight-keyword">byte</span>[] seed = <span class="highlight-keyword">new</span> <span class="highlight-keyword">byte</span>[requestSeedResponsePdu.Length - <span class="highlight-number">2</span>];
<span class="highlight-spacerShort"></span>    Array.Copy(requestSeedResponsePdu, <span class="highlight-number">2</span>, seed, <span class="highlight-number">0</span>, seed.Length);
<span class="highlight-spacerShort"></span>
<span class="highlight-spacerShort"></span>    <span class="highlight-comment">// Generate the key on the current using the extracted seed in level 1 without option strings</span>
<span class="highlight-spacerShort"></span>    <span class="highlight-keyword">byte</span>[] key;
<span class="highlight-spacerShort"></span>    GenerateSecurityKeyResult generateSecurityKeyResult = Application.GenerateSecurityKey(ecu, seed, <span class="highlight-number">1</span>, <span class="highlight-keyword">string</span>.Empty, <span class="highlight-keyword">out</span> key);
<span class="highlight-spacerShort"></span>    <span class="highlight-keyword">if</span> (generateSecurityKeyResult != GenerateSecurityKeyResult.Success)
<span class="highlight-spacerShort"></span>    {
<span class="highlight-spacerShort"></span>        Output.WriteLine(<span class="highlight-literal">"Error generating key from seed ("</span> + BitConverter.ToString(seed) + <span class="highlight-literal">"): "</span> + generateSecurityKeyResult);
<span class="highlight-spacerShort"></span>        <span class="highlight-keyword">return</span>;
<span class="highlight-spacerShort"></span>    }
<span class="highlight-spacerShort"></span>
<span class="highlight-spacerShort"></span>    <span class="highlight-comment">// Create request for sending the key</span>
<span class="highlight-spacerShort"></span>    <span class="highlight-keyword">byte</span>[] sendKeyPdu = <span class="highlight-keyword">new</span> <span class="highlight-keyword">byte</span>[key.Length + <span class="highlight-number">2</span>];
<span class="highlight-spacerShort"></span>    sendKeyPdu[<span class="highlight-number">0</span>] = <span class="highlight-number">0x27</span>;
<span class="highlight-spacerShort"></span>    sendKeyPdu[<span class="highlight-number">1</span>] = <span class="highlight-number">0x02</span>;
<span class="highlight-spacerShort"></span>    Array.Copy(key, <span class="highlight-number">0</span>, sendKeyPdu, <span class="highlight-number">2</span>, key.Length);
<span class="highlight-spacerShort"></span>
<span class="highlight-spacerShort"></span>    <span class="highlight-comment">// Try to unlock the ECU by sending the key</span>
<span class="highlight-spacerShort"></span>    Request requestSendKey = ecu.CreateRequest(sendKeyPdu);
<span class="highlight-spacerShort"></span>    SendResult sendKeySendResult = requestSendKey.Send();
<span class="highlight-spacerShort"></span>    <span class="highlight-keyword">if</span> (sendKeySendResult.Status != SendStatus.Ok)
<span class="highlight-spacerShort"></span>    {
<span class="highlight-spacerShort"></span>        Output.WriteLine(<span class="highlight-literal">"Error sending key ("</span> + BitConverter.ToString(key) + <span class="highlight-literal">"): "</span> + sendKeySendResult.Status);
<span class="highlight-spacerShort"></span>        <span class="highlight-keyword">return</span>;
<span class="highlight-spacerShort"></span>    }
<span class="highlight-spacerShort"></span>
<span class="highlight-spacerShort"></span>    <span class="highlight-comment">// Check for positive response (= successful) or negative response code</span>
<span class="highlight-spacerShort"></span>    <span class="highlight-keyword">if</span> (!sendKeySendResult.Response.IsPositive)
<span class="highlight-spacerShort"></span>    {
<span class="highlight-spacerShort"></span>        Output.WriteLine(<span class="highlight-literal">"Unlocking ECU with key failed with an NRC. Response: "</span> + BitConverter.ToString(sendKeySendResult.Response.Pdu));
<span class="highlight-spacerShort"></span>        <span class="highlight-keyword">return</span>;
<span class="highlight-spacerShort"></span>    }
<span class="highlight-spacerShort"></span>
<span class="highlight-spacerShort"></span>    <span class="highlight-comment">// Enter stuff to be executed on an unlocked ECU.</span>
<span class="highlight-spacerShort"></span>}</pre></div></div></div><script type="text/javascript">/*<![CDATA[*/
AddLanguageTabSet("ID0EAAABA");
/*]]>*/</script></div><div class="collapsibleAreaRegion" id="seeAlsoSection"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID4RB')" onkeypress="SectionExpandCollapse_CheckKey('ID4RB', event)" tabindex="0"><img id="ID4RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />See Also</span></div><div id="ID4RBSection" class="collapsibleSection"><h4 class="subHeading">Reference</h4><div class="seeAlsoStyle"><a href="cd8ce93b-359b-4474-4830-02b3ab55eb02.htm">Application Class</a></div><div class="seeAlsoStyle"><a href="2884526b-fa44-c3fc-4112-a0bffa514949.htm">Vector.Diagnostics Namespace</a></div><div class="seeAlsoStyle"><a href="6635f7ab-491d-f119-c3a9-1bd14f6a46ec.htm">Ecu<span id="LSTB4385C6A_16"></span><script type="text/javascript">/*<![CDATA[*/
AddLanguageSpecificTextSet("LSTB4385C6A_16?cs=.|vb=.|cpp=::|nu=.|fs=.");
/*]]>*/</script>Unlock(Byte)</a></div><div class="seeAlsoStyle"><a href="352adddf-a6af-0bc8-0966-228ef9086e3a.htm">Ecu<span id="LSTB4385C6A_17"></span><script type="text/javascript">/*<![CDATA[*/
AddLanguageSpecificTextSet("LSTB4385C6A_17?cs=.|vb=.|cpp=::|nu=.|fs=.");
/*]]>*/</script>Unlock(Byte, String)</a></div></div></div>
            </div>
        </div>
        <div id="pageFooter" class="pageFooter"> © Vector Informatik GmbH — <span class="mc-variable Vector.BuildTime variable">2023-09-26T19:07:36</span></div>
    </body>
</html>